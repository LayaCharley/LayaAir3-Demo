{"version":3,"file":"laya.html.js","sources":["../../src/layaAir/laya/html/utils/HTMLExtendStyle.ts","../../src/layaAir/laya/html/utils/HTMLStyle.ts","../../src/layaAir/laya/html/dom/HTMLDocument.ts","../../src/layaAir/laya/html/dom/HTMLHitRect.ts","../../src/layaAir/laya/html/utils/IHtml.ts","../../src/layaAir/laya/html/utils/LayoutLine.ts","../../src/layaAir/laya/html/utils/Layout.ts","../../src/layaAir/laya/html/dom/HTMLElement.ts","../../src/layaAir/laya/html/dom/HTMLBrElement.ts","../../src/layaAir/laya/html/dom/HTMLStyleElement.ts","../../src/layaAir/laya/html/dom/HTMLLinkElement.ts","../../src/layaAir/laya/html/dom/HTMLDivParser.ts","../../src/layaAir/laya/html/dom/HTMLImageElement.ts","../../src/layaAir/laya/html/utils/HTMLParse.ts","../../src/layaAir/laya/html/dom/HTMLDivElement.ts","../../src/layaAir/laya/html/dom/HTMLIframeElement.ts","../../src/layaAir/laya/html/ModuleDef.ts"],"sourcesContent":["import { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class HTMLExtendStyle {\r\n\r\n    static EMPTY: HTMLExtendStyle = new HTMLExtendStyle();\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @default 0\r\n     */\r\n    stroke: number;\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * @default \"#000000\";\r\n     */\r\n    strokeColor: string;\r\n    /**\r\n     * <p>垂直行间距（以像素为单位）</p>\r\n     */\r\n    leading: number;\r\n    /**行高。 */\r\n    lineHeight: number;\r\n    letterSpacing: number;\r\n    href: string;\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n    reset(): HTMLExtendStyle {\r\n        this.stroke = 0;\r\n        this.strokeColor = \"#000000\";\r\n        this.leading = 0;\r\n        this.lineHeight = 0;\r\n        this.letterSpacing = 0;\r\n        this.href = null;\r\n        return this;\r\n    }\r\n\r\n    recover(): void {\r\n        if (this == HTMLExtendStyle.EMPTY) return;\r\n        Pool.recover(\"HTMLExtendStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建\r\n     */\r\n    //TODO:coverage\r\n    static create(): HTMLExtendStyle {\r\n        return Pool.getItemByClass(\"HTMLExtendStyle\", HTMLExtendStyle);\r\n    }\r\n}\r\n\r\n\r\n","import { HTMLExtendStyle } from \"./HTMLExtendStyle\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { HTMLElement } from \"../dom/HTMLElement\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { Config } from \"../../../Config\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class HTMLStyle {\r\n\r\n    private static _CSSTOVALUE: any = { 'letter-spacing': 'letterSpacing', 'white-space': 'whiteSpace', 'line-height': 'lineHeight', 'font-family': 'family', 'vertical-align': 'valign', 'text-decoration': 'textDecoration', 'background-color': 'bgColor', 'border-color': 'borderColor' };\r\n    private static _parseCSSRegExp: RegExp = new RegExp(\"([\\.\\#]\\\\w+)\\\\s*{([\\\\s\\\\S]*?)}\", \"g\");\r\n    /**\r\n     * 需要继承的属性\r\n     */\r\n    private static _inheritProps: any[] = [\"italic\", \"align\", \"valign\", \"leading\", \"letterSpacing\", \"stroke\", \"strokeColor\", \"bold\", \"fontWeight\", \"fontSize\", \"lineHeight\", \"wordWrap\", \"color\"];\r\n\r\n    /**水平居左对齐方式。 */\r\n    static ALIGN_LEFT: string = \"left\";\r\n    /**水平居中对齐方式。 */\r\n    static ALIGN_CENTER: string = \"center\";\r\n    /**水平居右对齐方式。 */\r\n    static ALIGN_RIGHT: string = \"right\";\r\n    /**垂直居中对齐方式。 */\r\n    static VALIGN_TOP: string = \"top\";\r\n    /**垂直居中对齐方式。 */\r\n    static VALIGN_MIDDLE: string = \"middle\";\r\n    /**垂直居底部对齐方式。 */\r\n    static VALIGN_BOTTOM: string = \"bottom\";\r\n    /** 样式表信息。*/\r\n    static styleSheets: any = {};\r\n    /**添加布局。 */\r\n    static ADDLAYOUTED: number = 0x200;\r\n    private static _PADDING: any[] = [0, 0, 0, 0];\r\n\r\n    protected static _HEIGHT_SET: number = 0x2000;\r\n    protected static _LINE_ELEMENT: number = 0x10000;\r\n    protected static _NOWARP: number = 0x20000;\r\n    protected static _WIDTHAUTO: number = 0x40000;\r\n\r\n    protected static _BOLD: number = 0x400;\r\n    protected static _ITALIC: number = 0x800;\r\n\r\n    /**@private */\r\n    protected static _CSS_BLOCK: number = 0x1;\r\n    /**@private */\r\n    protected static _DISPLAY_NONE: number = 0x2;\r\n    /**@private */\r\n    protected static _ABSOLUTE: number = 0x4;\r\n    /**@private */\r\n    protected static _WIDTH_SET: number = 0x8;\r\n\r\n    protected static alignVDic: any = { \"left\": 0, \"center\": 0x10, \"right\": 0x20, \"top\": 0, \"middle\": 0x40, \"bottom\": 0x80 };\r\n    protected static align_Value: any = { 0: \"left\", 0x10: \"center\", 0x20: \"right\" };\r\n    protected static vAlign_Value: any = { 0: \"top\", 0x40: \"middle\", 0x80: \"bottom\" };\r\n    protected static _ALIGN: number = 0x30;// 0x10 & 0x20;\r\n    protected static _VALIGN: number = 0xc0;//0x40 & 0x80;\r\n\r\n    /**@internal */\r\n    _type: number;\r\n    fontSize: number;\r\n    family: string;\r\n    color: string;\r\n    ower: HTMLElement;\r\n    private _extendStyle: HTMLExtendStyle;\r\n    textDecoration: string;\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    bgColor: string;\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    borderColor: string;\r\n    /**\r\n     * 边距信息。\r\n     */\r\n    padding: any[] = HTMLStyle._PADDING;\r\n\r\n    ///**\r\n    //* <p>描边宽度（以像素为单位）。</p>\r\n    //* 默认值0，表示不描边。\r\n    //* @default 0\r\n    //*/\r\n    //public var stroke:Number;\r\n    ///**\r\n    //* <p>描边颜色，以字符串表示。</p>\r\n    //* @default \"#000000\";\r\n    //*/\r\n    //public var strokeColor:String;\r\n    ///**\r\n    //* <p>垂直行间距（以像素为单位）</p>\r\n    //*/\r\n    //public var leading:Number;\r\n    ///**行高。 */\r\n    //public var lineHeight:Number;\r\n    //protected var _letterSpacing:int;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _getExtendStyle(): HTMLExtendStyle {\r\n        if (this._extendStyle === HTMLExtendStyle.EMPTY) this._extendStyle = HTMLExtendStyle.create();\r\n        return this._extendStyle;\r\n    }\r\n\r\n    get href(): string {\r\n        return this._extendStyle.href;\r\n    }\r\n\r\n    set href(value: string) {\r\n        if (value === this._extendStyle.href) return;\r\n        this._getExtendStyle().href = value;\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @default 0\r\n     */\r\n    get stroke(): number {\r\n        return this._extendStyle.stroke;\r\n    }\r\n\r\n    set stroke(value: number) {\r\n        if (this._extendStyle.stroke === value) return;\r\n        this._getExtendStyle().stroke = value;\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * @default \"#000000\";\r\n     */\r\n    get strokeColor(): string {\r\n        return this._extendStyle.strokeColor;\r\n    }\r\n\r\n    set strokeColor(value: string) {\r\n        if (this._extendStyle.strokeColor === value) return;\r\n        this._getExtendStyle().strokeColor = value;\r\n    }\r\n\r\n    /**\r\n     * <p>垂直行间距（以像素为单位）</p>\r\n     */\r\n    get leading(): number {\r\n        return this._extendStyle.leading;\r\n    }\r\n\r\n    set leading(value: number) {\r\n        if (this._extendStyle.leading === value) return;\r\n        this._getExtendStyle().leading = value;\r\n    }\r\n\r\n    /**行高。 */\r\n    get lineHeight(): number {\r\n        return this._extendStyle.lineHeight;\r\n    }\r\n\r\n    set lineHeight(value: number) {\r\n        if (this._extendStyle.lineHeight === value) return;\r\n        this._getExtendStyle().lineHeight = value;\r\n    }\r\n\r\n    set align(v: string) {\r\n        if (!(v in HTMLStyle.alignVDic)) return;\r\n        this._type &= (~HTMLStyle._ALIGN);\r\n        this._type |= HTMLStyle.alignVDic[v];\r\n    }\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的水平对齐方式。</p>\r\n     * @default  \"left\"\r\n     */\r\n    get align(): string {\r\n        var v: number = this._type & HTMLStyle._ALIGN;\r\n        return HTMLStyle.align_Value[v];\r\n    }\r\n\r\n    set valign(v: string) {\r\n        if (!(v in HTMLStyle.alignVDic)) return;\r\n        this._type &= (~HTMLStyle._VALIGN);\r\n        this._type |= HTMLStyle.alignVDic[v];\r\n    }\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的水平对齐方式。</p>\r\n     * @default  \"left\"\r\n     */\r\n    get valign(): string {\r\n        var v: number = this._type & HTMLStyle._VALIGN;\r\n        return HTMLStyle.vAlign_Value[v];\r\n    }\r\n\r\n    /**\r\n     * 字体样式字符串。\r\n     */\r\n    set font(value: string) {\r\n        var strs: any[] = value.split(' ');\r\n        for (var i: number = 0, n: number = strs.length; i < n; i++) {\r\n            var str: string = strs[i];\r\n            switch (str) {\r\n                case 'italic':\r\n                    this.italic = true;\r\n                    continue;\r\n                case 'bold':\r\n                    this.bold = true;\r\n                    continue;\r\n            }\r\n            if (str.indexOf('px') > 0) {\r\n                this.fontSize = parseInt(str);\r\n                this.family = strs[i + 1];\r\n                i++;\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    get font(): string {\r\n        return (this.italic ? \"italic \" : \"\") + (this.bold ? \"bold \" : \"\") + this.fontSize + \"px \" + (ILaya.Browser.onIPhone ? (Config.fontFamilyMap[this.family] || this.family) : this.family);\r\n    }\r\n\r\n    /**\r\n     * 是否显示为块级元素。\r\n     */\r\n    set block(value: boolean) {\r\n        value ? (this._type |= HTMLStyle._CSS_BLOCK) : (this._type &= (~HTMLStyle._CSS_BLOCK));\r\n    }\r\n\r\n    /**表示元素是否显示为块级元素。*/\r\n    get block(): boolean {\r\n        return (this._type & HTMLStyle._CSS_BLOCK) != 0;\r\n    }\r\n\r\n    /**\r\n     * 重置，方便下次复用\r\n     */\r\n    reset(): HTMLStyle {\r\n        this.ower = null;\r\n        this._type = 0;\r\n        this.wordWrap = true;\r\n        this.fontSize = Config.defaultFontSize;\r\n        this.family = Config.defaultFont;\r\n        this.color = \"#000000\";\r\n        this.valign = HTMLStyle.VALIGN_TOP;\r\n\r\n        this.padding = HTMLStyle._PADDING;\r\n        this.bold = false;\r\n        this.italic = false;\r\n        this.align = HTMLStyle.ALIGN_LEFT;\r\n\r\n        this.textDecoration = null;\r\n        this.bgColor = null;\r\n        this.borderColor = null;\r\n\r\n        if (this._extendStyle) this._extendStyle.recover();\r\n        this._extendStyle = HTMLExtendStyle.EMPTY;\r\n\r\n        //stroke = 0;\r\n        //strokeColor = \"#000000\";\r\n        //leading = 0;\r\n        //lineHeight = 0;\r\n        //_letterSpacing = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    //TODO:coverage\r\n    recover(): void {\r\n        Pool.recover(\"HTMLStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建\r\n     */\r\n    static create(): HTMLStyle {\r\n        return Pool.getItemByClass(\"HTMLStyle\", HTMLStyle);\r\n    }\r\n\r\n    /**\r\n     * 复制传入的 CSSStyle 属性值。\r\n     * @param\tsrc 待复制的 CSSStyle 对象。\r\n     */\r\n    inherit(src: HTMLStyle): void {\r\n        var i: number, len: number;\r\n        var props: any[];\r\n        props = HTMLStyle._inheritProps;\r\n        len = props.length;\r\n        var key: string;\r\n        for (i = 0; i < len; i++) {\r\n            key = props[i];\r\n            (this as any)[key] = (src as any)[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示是否换行。\r\n     */\r\n    get wordWrap(): boolean {\r\n        return (this._type & HTMLStyle._NOWARP) === 0;\r\n    }\r\n\r\n    set wordWrap(value: boolean) {\r\n        value ? (this._type &= ~HTMLStyle._NOWARP) : (this._type |= HTMLStyle._NOWARP);\r\n    }\r\n\r\n    /**是否为粗体*/\r\n    get bold(): boolean {\r\n        return (this._type & HTMLStyle._BOLD) != 0;\r\n    }\r\n\r\n    set bold(value: boolean) {\r\n        value ? (this._type |= HTMLStyle._BOLD) : (this._type &= ~HTMLStyle._BOLD);\r\n    }\r\n\r\n    get fontWeight(): string {\r\n        return (this._type & HTMLStyle._BOLD) ? \"bold\" : \"none\";\r\n    }\r\n\r\n    set fontWeight(value: string) {\r\n        value == \"bold\" ? (this._type |= HTMLStyle._BOLD) : (this._type &= ~HTMLStyle._BOLD);\r\n    }\r\n\r\n    /**\r\n     * 表示使用此文本格式的文本是否为斜体。\r\n     * @default false\r\n     */\r\n    get italic(): boolean {\r\n        return (this._type & HTMLStyle._ITALIC) != 0;\r\n    }\r\n\r\n    set italic(value: boolean) {\r\n        value ? (this._type |= HTMLStyle._ITALIC) : (this._type &= ~HTMLStyle._ITALIC);\r\n    }\r\n\r\n    /**@internal */\r\n    _widthAuto(): boolean {\r\n        return (this._type & HTMLStyle._WIDTHAUTO) !== 0;// || (_type & _WIDTH_SET) === 0;\r\n    }\r\n\r\n    /**@inheritDoc\t */\r\n    widthed(sprite: any): boolean {\r\n        return (this._type & HTMLStyle._WIDTH_SET) != 0;\r\n    }\r\n\r\n    set whiteSpace(type: string) {\r\n        type === \"nowrap\" && (this._type |= HTMLStyle._NOWARP);\r\n        type === \"none\" && (this._type &= ~HTMLStyle._NOWARP);\r\n    }\r\n\r\n    /**\r\n     * 设置如何处理元素内的空白。\r\n     */\r\n    get whiteSpace(): string {\r\n        return (this._type & HTMLStyle._NOWARP) ? \"nowrap\" : \"\";\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    //TODO:coverage\r\n    _calculation(type: string, value: string): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 宽度。\r\n     */\r\n    set width(w: any) {\r\n        this._type |= HTMLStyle._WIDTH_SET;\r\n        if (typeof (w) == 'string') {\r\n            var offset: number = w.indexOf('auto');\r\n            if (offset >= 0) {\r\n                this._type |= HTMLStyle._WIDTHAUTO;\r\n                w = w.substr(0, offset);\r\n            }\r\n            if (this._calculation(\"width\", w)) return;\r\n            w = parseInt(w);\r\n        }\r\n\r\n        this.size(w, -1);\r\n    }\r\n\r\n    /**\r\n     * 高度。\r\n     */\r\n    set height(h: any) {\r\n        this._type |= HTMLStyle._HEIGHT_SET;\r\n        if (typeof (h) == 'string') {\r\n            if (this._calculation(\"height\", h)) return;\r\n            h = parseInt(h);\r\n        }\r\n        this.size(-1, h);\r\n    }\r\n\r\n    /**\r\n     * 是否已设置高度。\r\n     * @param\tsprite 显示对象 Sprite。\r\n     * @return 一个Boolean 表示是否已设置高度。\r\n     */\r\n    heighted(sprite: any): boolean {\r\n        return (this._type & HTMLStyle._HEIGHT_SET) != 0;\r\n    }\r\n\r\n    /**\r\n     * 设置宽高。\r\n     * @param\tw 宽度。\r\n     * @param\th 高度。\r\n     */\r\n    size(w: number, h: number): void {\r\n        var ower: HTMLElement = this.ower;\r\n        var resize: boolean = false;\r\n        if (w !== -1 && w != ower.width) {\r\n            this._type |= HTMLStyle._WIDTH_SET;\r\n            ower.width = w;\r\n            resize = true;\r\n        }\r\n        if (h !== -1 && h != ower.height) {\r\n            this._type |= HTMLStyle._HEIGHT_SET;\r\n            ower.height = h;\r\n            resize = true;\r\n        }\r\n        if (resize) {\r\n            ower._layoutLater();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否是行元素。\r\n     */\r\n    getLineElement(): boolean {\r\n        return (this._type & HTMLStyle._LINE_ELEMENT) != 0;\r\n    }\r\n\r\n    setLineElement(value: boolean): void {\r\n        value ? (this._type |= HTMLStyle._LINE_ELEMENT) : (this._type &= (~HTMLStyle._LINE_ELEMENT));\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _enableLayout(): boolean {\r\n        return (this._type & HTMLStyle._DISPLAY_NONE) === 0 && (this._type & HTMLStyle._ABSOLUTE) === 0;\r\n    }\r\n\r\n    /**\r\n     * 间距。\r\n     */\r\n    get letterSpacing(): number {\r\n        return this._extendStyle.letterSpacing;\r\n    }\r\n\r\n    set letterSpacing(d: number) {\r\n        (typeof (d) == 'string') && (d = parseInt(d + \"\"));\r\n        if (d == this._extendStyle.letterSpacing) return;\r\n        this._getExtendStyle().letterSpacing = d;\r\n    }\r\n\r\n    /**\r\n     * 设置 CSS 样式字符串。\r\n     * @param\ttext CSS样式字符串。\r\n     */\r\n    cssText(text: string): void {\r\n        this.attrs(HTMLStyle.parseOneCSS(text, ';'));\r\n    }\r\n\r\n    /**\r\n     * 根据传入的属性名、属性值列表，设置此对象的属性值。\r\n     * @param\tattrs 属性名与属性值列表。\r\n     */\r\n    attrs(attrs: any[]): void {\r\n        if (attrs) {\r\n            for (var i: number = 0, n: number = attrs.length; i < n; i++) {\r\n                var attr: any[] = attrs[i];\r\n                (this as any)[attr[0]] = attr[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    set position(value: string) {\r\n        value === \"absolute\" ? (this._type |= HTMLStyle._ABSOLUTE) : (this._type &= ~HTMLStyle._ABSOLUTE);\r\n    }\r\n\r\n    /**\r\n     * 元素的定位类型。\r\n     */\r\n    get position(): string {\r\n        return (this._type & HTMLStyle._ABSOLUTE) ? \"absolute\" : \"\";\r\n    }\r\n\r\n    /**@inheritDoc\t */\r\n    get absolute(): boolean {\r\n        return (this._type & HTMLStyle._ABSOLUTE) !== 0;\r\n    }\r\n\r\n    /**@inheritDoc\t */\r\n    get paddingLeft(): number {\r\n        return this.padding[3];\r\n    }\r\n\r\n    /**@inheritDoc\t */\r\n    get paddingTop(): number {\r\n        return this.padding[0];\r\n    }\r\n\r\n    /**\r\n     * 通过传入的分割符，分割解析CSS样式字符串，返回样式列表。\r\n     * @param\ttext CSS样式字符串。\r\n     * @param\tclipWord 分割符；\r\n     * @return 样式列表。\r\n     */\r\n    static parseOneCSS(text: string, clipWord: string): any[] {\r\n        var out: any[] = [];\r\n        var attrs: any[] = text.split(clipWord);\r\n        var valueArray: any[];\r\n\r\n        for (var i: number = 0, n: number = attrs.length; i < n; i++) {\r\n            var attr: string = attrs[i];\r\n            var ofs: number = attr.indexOf(':');\r\n            var name: string = attr.substr(0, ofs).replace(/^\\s+|\\s+$/g, '');\r\n\r\n            // 最后一个元素是空元素。\r\n            if (name.length === 0) continue;\r\n\r\n            var value: string = attr.substr(ofs + 1).replace(/^\\s+|\\s+$/g, '');//去掉前后空格和\\n\\t\r\n            var one: any[] = [name, value];\r\n            switch (name) {\r\n                case 'italic':\r\n                case 'bold':\r\n                    one[1] = value == \"true\";\r\n                    break;\r\n                case \"font-weight\":\r\n                    if (value == \"bold\") {\r\n                        one[1] = true;\r\n                        one[0] = \"bold\";\r\n                    }\r\n                    break;\r\n                case 'line-height':\r\n                    one[0] = 'lineHeight';\r\n                    one[1] = parseInt(value);\r\n                    break;\r\n                case 'font-size':\r\n                    one[0] = 'fontSize';\r\n                    one[1] = parseInt(value);\r\n                    break;\r\n                case 'stroke':\r\n                    one[0] = 'stroke';\r\n                    one[1] = parseInt(value);\r\n                    break;\r\n                case 'padding':\r\n                    valueArray = value.split(' ');\r\n                    valueArray.length > 1 || (valueArray[1] = valueArray[2] = valueArray[3] = valueArray[0]);\r\n                    one[1] = [parseInt(valueArray[0]), parseInt(valueArray[1]), parseInt(valueArray[2]), parseInt(valueArray[3])];\r\n                    break;\r\n                default:\r\n                    (one[0] = HTMLStyle._CSSTOVALUE[name]) || (one[0] = name);\r\n            }\r\n            out.push(one);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 解析 CSS 样式文本。\r\n     * @param\ttext CSS 样式文本。\r\n     * @param\turi URL对象。\r\n     */\r\n    //TODO:coverage\r\n    static parseCSS(text: string, uri: URL): void {\r\n        var one: any[];\r\n        while ((one = HTMLStyle._parseCSSRegExp.exec(text)) != null) {\r\n            HTMLStyle.styleSheets[one[1]] = HTMLStyle.parseOneCSS(one[2], ';');\r\n        }\r\n    }\r\n}\r\n","import { HTMLElement } from \"./HTMLElement\";\r\nimport { HTMLStyle } from \"../utils/HTMLStyle\"\r\n\r\n/**\r\n * @private\r\n */\r\nexport class HTMLDocument {\r\n    static document: HTMLDocument = new HTMLDocument();\r\n    all: {[key:string]:HTMLElement}= {};\r\n    styleSheets: any = HTMLStyle.styleSheets;\r\n\r\n    //TODO:coverage\r\n    getElementById(id: string): HTMLElement {\r\n        return this.all[id];\r\n    }\r\n\r\n    //TODO:coverage\r\n    setElementById(id: string, e: HTMLElement): void {\r\n        this.all[id] = e;\r\n    }\r\n}","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @private\r\n */\r\nexport class HTMLHitRect {\r\n\r\n    rec: Rectangle;\r\n    href: string;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        this.rec = new Rectangle();\r\n        this.reset();\r\n    }\r\n\r\n    reset(): HTMLHitRect {\r\n        this.rec.reset();\r\n        this.href = null;\r\n        return this;\r\n    }\r\n\r\n    recover(): void {\r\n        Pool.recover(\"HTMLHitRect\", this.reset());\r\n    }\r\n\r\n    static create(): HTMLHitRect {\r\n        return Pool.getItemByClass(\"HTMLHitRect\", HTMLHitRect);\r\n    }\r\n}","import { HTMLDivElement } from \"../../html/dom/HTMLDivElement\"\r\nimport { HTMLImageElement } from \"../dom/HTMLImageElement\";\r\nimport { HTMLBrElement } from \"../dom/HTMLBrElement\";\r\nimport { HTMLDivParser } from \"../dom/HTMLDivParser\";\r\nimport { HTMLParse } from \"./HTMLParse\";\r\nimport { HTMLElementType } from \"../dom/HTMLElement\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class IHtml {\r\n    static HTMLDivElement: typeof HTMLDivElement = null;\r\n    static HTMLImageElement: typeof HTMLImageElement = null;\r\n    static HTMLBrElement: typeof HTMLBrElement = null;\r\n    static HTMLDivParser: typeof HTMLDivParser = null;\r\n    static HTMLParse: typeof HTMLParse = null;\r\n    static HTMLElementType: typeof HTMLElementType = null;\r\n}","import { ILayout } from \"./ILayout\";\r\nimport { HTMLStyle } from \"./HTMLStyle\";\r\nimport { IHtml } from \"./IHtml\";\r\nimport { HTMLImageElement } from \"../dom/HTMLImageElement\"\r\nimport { HTMLElement, HTMLElementType } from \"../dom/HTMLElement\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class LayoutLine {\r\n    elements: ILayout[] = [];\r\n    x: number = 0;\r\n    y: number = 0;\r\n    w: number = 0;\r\n    h: number = 0;\r\n    wordStartIndex: number = 0;\r\n    minTextHeight: number = 99999;\r\n    mWidth: number = 0;\r\n\r\n    //注释：垂直居中对齐是以最小的文字单位为中心点对齐(如果没有文字，就以上对齐)\r\n    //如果计算的坐标小于高度，那么以高度为主\r\n    /**\r\n     * 底对齐（默认）\r\n     * @param\tleft\r\n     * @param\twidth\r\n     * @param\tdy\r\n     * @param\talign\t\t水平\r\n     * @param\tvalign\t\t垂直\r\n     * @param\tlineHeight\t行高\r\n     */\r\n    updatePos(left: number, width: number, lineNum: number, dy: number, align: string, valign: string, lineHeight: number): void {\r\n        var w: number = 0;\r\n        //重新计算宽度，因为上层的排序跟分段规则导致宽度计算不正确，把宽度计算放到这里，后面看情况再去优化\r\n        var one: ILayout\r\n        if (this.elements.length > 0) {\r\n            one = this.elements[this.elements.length - 1];\r\n            w = one.x + one.width - this.elements[0].x;\r\n        }\r\n        lineHeight = lineHeight || this.h;\r\n        var dx: number = 0, ddy: number;\r\n\r\n        if (align === HTMLStyle.ALIGN_CENTER) dx = (width - w) / 2;\r\n        if (align === HTMLStyle.ALIGN_RIGHT) dx = (width - w);\r\n\r\n        //lineHeight === 0 || valign != 0 || (valign = 1);\r\n        for (var i: number = 0, n: number = this.elements.length; i < n; i++) {\r\n            one = this.elements[i];\r\n            var tCSSStyle: HTMLStyle = one._getCSSStyle();\r\n            dx !== 0 && (one.x += dx);\r\n            switch (tCSSStyle.valign) {\r\n                case \"top\":\r\n                    one.y = dy;\r\n                    break;\r\n                case \"middle\":\r\n                    var tMinTextHeight: number = 0;\r\n                    if (this.minTextHeight != 99999) tMinTextHeight = this.minTextHeight;\r\n                    var tBottomLineY: number = (tMinTextHeight + lineHeight) / 2;\r\n                    tBottomLineY = Math.max(tBottomLineY, this.h);//如果实际行高大于一半行高，用实际行高对齐\r\n                    if ((one as any as HTMLElement).eletype == IHtml.HTMLElementType.IMAGE) ddy = dy + tBottomLineY - one.height;\r\n                    else ddy = dy + tBottomLineY - one.height;\r\n                    one.y = ddy;\r\n                    break;\r\n                case \"bottom\":\r\n                    one.y = dy + (lineHeight - one.height);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}","import { HTMLStyle } from \"./HTMLStyle\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { ILayout } from \"./ILayout\";\r\nimport { LayoutLine } from \"./LayoutLine\";\r\nimport { HTMLChar } from \"../../utils/HTMLChar\";\r\nimport { HTMLElement } from \"../dom/HTMLElement\";\r\nimport { IHtml } from \"./IHtml\";\r\n\r\n/**\r\n * @private\r\n * HTML的布局类\r\n * 对HTML的显示对象进行排版\r\n */\r\nexport class Layout {\r\n\r\n    private static DIV_ELEMENT_PADDING: number = 0;\r\n    private static _will: HTMLElement[];\r\n\r\n    //TODO:coverage\r\n    static later(element: HTMLElement): void {\r\n        if (Layout._will == null) {\r\n            Layout._will = [];\r\n            ILaya.stage.frameLoop(1, null, function (): void {\r\n                if (Layout._will.length < 1)\r\n                    return;\r\n                for (var i: number = 0; i < Layout._will.length; i++) {\r\n                    Layout.layout(Layout._will[i]);\r\n                }\r\n                Layout._will.length = 0;\r\n            });\r\n        }\r\n        Layout._will.push(element);\r\n    }\r\n\r\n    static layout(element: HTMLElement): any[] {\r\n        if (!element || !element._style) return null;\r\n        var style: HTMLStyle = (<HTMLStyle>element._style);\r\n        if ((style._type & HTMLStyle.ADDLAYOUTED) === 0)\r\n            return null;\r\n\r\n        element.style._type &= ~HTMLStyle.ADDLAYOUTED;\r\n        /*\r\n           if (element._children.length > 0)\r\n           return _multiLineLayout(element);\r\n           if (element is HTMLElement)\r\n           {\r\n           var htmlElement:HTMLElement = element as HTMLElement;\r\n           var style:CSSStyle = htmlElement.style;\r\n           var txt:String = htmlElement.text;\r\n           if (txt.length < 1)\r\n           return [0, 0];\r\n           if (!style.wordWrap)\r\n           return _singleLineTextLayout(htmlElement, -1, -1);\r\n           if (style.letterSpacing || txt.indexOf('\\n') >= 0)\r\n           return _multiLineLayout(htmlElement);\r\n           var sz:Object = Utils.measureText(txt, style.font);\r\n           if (sz.width > element.width)\r\n           return _multiLineLayout(htmlElement);\r\n           return _singleLineTextLayout(htmlElement, sz.width, sz.height);\r\n           }*/\r\n        var arr: any[] = Layout._multiLineLayout(element);\r\n        return arr;\r\n    }\r\n\r\n    /*\r\n       //针对单行文字，还可以优化\r\n       public static function _singleLineTextLayout(element:HTMLElement, txtWidth:int, txtHeight:int):Array\r\n       {\r\n       var style:CSSStyle = element._getCSSStyle();\r\n\t\r\n       if (txtWidth < 0)\r\n       {\r\n       var txt:String = element.text;\r\n       var sz:Object = Utils.measureText(txt, style.font);\r\n       txtWidth = sz.width;\r\n       txtHeight = sz.height;\r\n       }\r\n\t\r\n       if (style.italic)\r\n       txtWidth += txtHeight / 3;\r\n\t\r\n       var elements:Vector.<HTMLChar> = element._getWords() as Vector.<HTMLChar>;\r\n       var x:int = 0;\r\n       var y:int = 0;\r\n\t\r\n       var letterSpacing:Number = style.letterSpacing;\r\n       var align:int = style._getAlign();\r\n       var lineHeight:Number = style.lineHeight;\r\n       var valign:int = style._getValign();\r\n\t\r\n       (lineHeight > 0) && valign === 0 && (valign = CSSStyle.VALIGN_MIDDLE);\r\n\t\r\n       (align === CSSStyle.ALIGN_CENTER) && (x = (element.width - txtWidth) / 2);\r\n       (align === CSSStyle.ALIGN_RIGHT) && (x = (element.width - txtWidth));\r\n\t\r\n       (valign === CSSStyle.VALIGN_MIDDLE) && (y = (element.height - txtHeight) / 2);\r\n       (valign === CSSStyle.VALIGN_BOTTOM) && (y = (element.height - txtHeight));\r\n\t\r\n       for (var i:int = 0, n:int = elements.length; i < n; i++)\r\n       {\r\n       var one:ILayout = elements[i];\r\n       one.x = x;\r\n       one.y = y;\r\n       x += one.width + letterSpacing;\r\n       }\r\n       return [txtWidth, txtHeight];\r\n       }\r\n     */\r\n\r\n    static _multiLineLayout(element: HTMLElement): any[] {\r\n        var elements: ILayout[] = [];\r\n        element._addChildsToLayout(elements);\r\n        var i: number, n: number = elements.length, j: number;\r\n        var style: HTMLStyle = element._getCSSStyle();\r\n        var letterSpacing: number = style.letterSpacing;\r\n        var leading: number = style.leading;\r\n        var lineHeight: number = style.lineHeight;\r\n        var widthAuto: boolean = style._widthAuto() || !style.wordWrap;\r\n        var width: number = widthAuto ? 999999 : element.width;\r\n        var height: number = element.height;\r\n        var maxWidth: number = 0;\r\n        var exWidth: number = style.italic ? style.fontSize / 3 : 0;\r\n        var align: string = style.align;\r\n        var valign: string = style.valign;\r\n        var endAdjust: boolean = valign !== HTMLStyle.VALIGN_TOP || align !== HTMLStyle.ALIGN_LEFT || lineHeight != 0;\r\n\r\n        var oneLayout: ILayout;\r\n        var x: number = 0;\r\n        var y: number = 0;\r\n        var w: number = 0;\r\n        var h: number = 0;\r\n        var tBottom: number = 0;\r\n        var lines: LayoutLine[] = [];\r\n        var curStyle: HTMLStyle;\r\n        var curPadding: any[];\r\n        var curLine: LayoutLine = lines[0] = new LayoutLine();\r\n        var newLine: boolean, nextNewline: boolean = false;\r\n        var htmlWord: HTMLChar;\r\n        var sprite: HTMLElement;\r\n\r\n        curLine.h = 0;\r\n        if (style.italic)\r\n            width -= style.fontSize / 3;\r\n\r\n        var tWordWidth: number = 0;\r\n        var tLineFirstKey: boolean = true;\r\n        function addLine(): void {\r\n            curLine.y = y;\r\n            y += curLine.h + leading;\r\n            curLine.mWidth = tWordWidth;\r\n            tWordWidth = 0;\r\n            curLine = new LayoutLine();\r\n            lines.push(curLine);\r\n            curLine.h = 0;\r\n            x = 0;\r\n            tLineFirstKey = true;\r\n            newLine = false;\r\n        }\r\n\r\n        //生成排版的行\r\n        for (i = 0; i < n; i++) {\r\n            oneLayout = elements[i];\r\n            if (oneLayout == null) {\r\n                if (!tLineFirstKey) {\r\n                    x += Layout.DIV_ELEMENT_PADDING;\r\n                }\r\n                curLine.wordStartIndex = curLine.elements.length;\r\n                continue;\r\n            }\r\n            tLineFirstKey = false;\r\n            if (oneLayout instanceof IHtml.HTMLBrElement) {\r\n                addLine();\r\n                curLine.y = y;\r\n                curLine.h = lineHeight;\r\n                continue;\r\n            } else if (oneLayout._isChar()) {\r\n                htmlWord = <HTMLChar>oneLayout;\r\n                w = htmlWord.width + htmlWord.style.letterSpacing;\t// 下面要用到w，所以先计算（Bug:英文的宽度按照前面的汉字的宽度计算导致错误换行）\r\n                h = htmlWord.height;\r\n                if (!htmlWord.isWord) //如果是完整单词\r\n                {\r\n                    if (lines.length > 0 && (x + w) > width && curLine.wordStartIndex > 0) //如果完整单词超界，需要单词开始折到下一行\r\n                    {\r\n                        var tLineWord: number = 0;\r\n                        tLineWord = curLine.elements.length - curLine.wordStartIndex + 1;\r\n                        curLine.elements.length = curLine.wordStartIndex;\r\n                        i -= tLineWord;\r\n                        addLine();\r\n                        continue;\r\n                    }\r\n                    newLine = false;\r\n                    tWordWidth += htmlWord.width;\r\n                } else {\r\n                    newLine = nextNewline || (htmlWord.char === '\\n');\r\n                    curLine.wordStartIndex = curLine.elements.length;\r\n                }\r\n\r\n                nextNewline = false;\r\n\r\n                newLine = newLine || ((x + w) > width);\r\n                newLine && addLine();\r\n                curLine.minTextHeight = Math.min(curLine.minTextHeight, oneLayout.height);\r\n            } else {\r\n                curStyle = oneLayout._getCSSStyle();\r\n                sprite = (<HTMLElement>oneLayout);\r\n                curPadding = curStyle.padding;\r\n                //curStyle._getCssFloat() === 0 || (endAdjust = true);\r\n                newLine = nextNewline || curStyle.getLineElement();\r\n                w = sprite.width + curPadding[1] + curPadding[3] + curStyle.letterSpacing;\r\n                h = sprite.height + curPadding[0] + curPadding[2];\r\n                nextNewline = curStyle.getLineElement();\r\n                newLine = newLine || ((x + w) > width && curStyle.wordWrap);\r\n                newLine && addLine();\r\n            }\r\n\r\n            curLine.elements.push(oneLayout);\r\n            curLine.h = Math.max(curLine.h, h);//计算最大宽和高\r\n            oneLayout.x = x;\r\n            oneLayout.y = y;\r\n            x += w;\r\n            curLine.w = x - letterSpacing;\r\n            curLine.y = y;\r\n            maxWidth = Math.max(x + exWidth, maxWidth);\r\n        }\r\n        y = curLine.y + curLine.h;\r\n\r\n        //如果行信息需要调整，包括有浮动，有居中等\r\n        if (endAdjust) {\r\n            //var dy:Number = 0;\r\n            //valign === CSSStyle.VALIGN_MIDDLE && (dy = (height - y) / 2);\r\n            //valign === CSSStyle.VALIGN_BOTTOM && (dy = (height - y));\r\n            var tY: number = 0;\r\n            var tWidth: number = width;\r\n            if (widthAuto && element.width > 0) {\r\n                //如果使用单行，这里一定要根据单行的实际宽（element.width）来排版\r\n                tWidth = element.width;\r\n            }\r\n            for (i = 0, n = lines.length; i < n; i++) {\r\n                lines[i].updatePos(0, tWidth, i, tY, align, valign, lineHeight);\r\n                tY += Math.max(lineHeight, lines[i].h + leading);\r\n            }\r\n            y = tY;\r\n        }\r\n        widthAuto && (element.width = maxWidth);\r\n        (y > element.height) && (element.height = y);\r\n\r\n        return [maxWidth, y];\r\n    }\r\n}","import { HTMLDocument } from \"./HTMLDocument\";\r\nimport { HTMLHitRect } from \"./HTMLHitRect\";\r\nimport { Graphics } from \"../../display/Graphics\"\r\nimport { HTMLStyle } from \"../utils/HTMLStyle\"\r\nimport { ILayout } from \"../utils/ILayout\"\r\nimport { Layout } from \"../utils/Layout\"\r\nimport { URL } from \"../../net/URL\"\r\nimport { HTMLChar } from \"../../utils/HTMLChar\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { IHtml } from \"../utils/IHtml\";\r\n\r\n/**HTML元素类型 */\r\nexport enum HTMLElementType {\r\n    /**基础类型 */\r\n    BASE = 0,\r\n    /**图片类型 */\r\n    IMAGE = 1\r\n}\r\n/**\r\n * @private\r\n */\r\nexport class HTMLElement {\r\n\r\n    private static _EMPTYTEXT: any = { text: null, words: null };\r\n    eletype: HTMLElementType = HTMLElementType.BASE;      // 用type来避免 instance判断引起的import问题\r\n    URI: URL;\r\n    parent: HTMLElement;\r\n    _style: HTMLStyle;\r\n\r\n    protected _text: any;\r\n    protected _children: any[];\r\n    protected _x: number;\r\n    protected _y: number;\r\n    protected _width: number;\r\n    protected _height: number;\r\n\r\n    constructor() {\r\n        this._creates();\r\n        this.reset();\r\n    }\r\n\r\n    protected _creates(): void {\r\n        this._style = HTMLStyle.create();\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): HTMLElement {\r\n        this.URI = null;\r\n        this.parent = null;\r\n        this._style.reset();\r\n        this._style.ower = this;\r\n        this._style.valign = \"middle\";\r\n        if (this._text && this._text.words) {\r\n            var words: any[] = this._text.words;\r\n            var i: number, len: number;\r\n            len = words.length;\r\n            var tChar: HTMLChar;\r\n            for (i = 0; i < len; i++) {\r\n                tChar = words[i];\r\n                if (tChar) tChar.recover();\r\n            }\r\n        }\r\n        this._text = HTMLElement._EMPTYTEXT;\r\n        if (this._children) this._children.length = 0;\r\n        this._x = this._y = this._width = this._height = 0;\r\n        return this;\r\n    }\r\n\r\n    /**@internal */\r\n    _getCSSStyle(): HTMLStyle {\r\n        return (<HTMLStyle>this._style);\r\n    }\r\n\r\n    /**@internal */\r\n    _addChildsToLayout(out: ILayout[]): boolean {\r\n        var words: HTMLChar[] = this._getWords();\r\n        if (words == null && (!this._children || this._children.length == 0))\r\n            return false;\r\n        if (words) {\r\n            for (var i: number = 0, n: number = words.length; i < n; i++) {\r\n                out.push(words[i]);\r\n            }\r\n        }\r\n        if (this._children)\r\n            this._children.forEach(function (o: HTMLElement, index: number, array: any[]): void {\r\n                var _style: HTMLStyle = (<HTMLStyle>o._style);\r\n                _style._enableLayout && _style._enableLayout() && o._addToLayout(out);\r\n            });\r\n        return true;\r\n    }\r\n\r\n    /**@internal */\r\n    _addToLayout(out: ILayout[]): void {\r\n        if (!this._style) return;\r\n        var style: HTMLStyle = (<HTMLStyle>this._style);\r\n        if (style.absolute) return;\r\n        style.block ? out.push(this) : (this._addChildsToLayout(out) && (this.x = this.y = 0));\r\n    }\r\n\r\n    set id(value: string) {\r\n        HTMLDocument.document.setElementById(value, this);\r\n    }\r\n\r\n    repaint(recreate: boolean = false): void {\r\n        this.parentRepaint(recreate);\r\n    }\r\n\r\n    parentRepaint(recreate: boolean = false): void {\r\n        if (this.parent) this.parent.repaint(recreate);\r\n    }\r\n\r\n    set innerTEXT(value: string) {\r\n        if (this._text === HTMLElement._EMPTYTEXT) {\r\n            this._text = { text: value, words: null };\r\n        } else {\r\n            this._text.text = value;\r\n            this._text.words && (this._text.words.length = 0);\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    get innerTEXT(): string {\r\n        return this._text.text;\r\n    }\r\n\r\n    protected _setParent(value: HTMLElement): void {\r\n        if (value instanceof HTMLElement) {\r\n            var p: HTMLElement = (<HTMLElement>value);\r\n            this.URI || (this.URI = p.URI);\r\n            if (this.style)\r\n                this.style.inherit(p.style);\r\n        }\r\n    }\r\n\r\n    appendChild(c: HTMLElement): HTMLElement {\r\n        return (<HTMLElement>this.addChild(c));\r\n    }\r\n\r\n    addChild(c: HTMLElement): HTMLElement {\r\n        if (c.parent) c.parent.removeChild(c);\r\n        if (!this._children) this._children = [];\r\n        this._children.push(c);\r\n        c.parent = this;\r\n        c._setParent(this);\r\n        this.repaint();\r\n        return c;\r\n    }\r\n\r\n    removeChild(c: HTMLElement): HTMLElement {\r\n        if (!this._children) return null;\r\n        var i: number, len: number;\r\n        len = this._children.length;\r\n        for (i = 0; i < len; i++) {\r\n            if (this._children[i] == c) {\r\n                this._children.splice(i, 1);\r\n                return c;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getClassName(tar: any): string {\r\n        if (tar instanceof Function) return tar.name;\r\n        return tar[\"constructor\"].name;\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。destroy对象默认会把自己从父节点移除，并且清理自身引用关系，等待js自动垃圾回收机制回收。destroy后不能再使用。</p>\r\n     * <p>destroy时会移除自身的事情监听，自身的timer监听，移除子对象及从父节点移除自己。</p>\r\n     * @param destroyChild\t（可选）是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\r\n     */\r\n    destroy(): void {\r\n        //销毁子节点\r\n        if (this._children) {\r\n            this.destroyChildren();\r\n            this._children.length = 0;\r\n        }\r\n        Pool.recover(HTMLElement.getClassName(this), this.reset());\r\n    }\r\n\r\n    /**\r\n     * 销毁所有子对象，不销毁自己本身。\r\n     */\r\n    destroyChildren(): void {\r\n        //销毁子节点\r\n        if (this._children) {\r\n            for (var i: number = this._children.length - 1; i > -1; i--) {\r\n                this._children[i].destroy();\r\n            }\r\n            this._children.length = 0;\r\n        }\r\n    }\r\n\r\n    get style() {\r\n        return this._style;\r\n    }\r\n    /**@internal */\r\n    _getWords(): HTMLChar[] {\r\n        if (!this._text) return null;\r\n        var txt: string = this._text.text;\r\n        if (!txt || txt.length === 0)\r\n            return null;\r\n\r\n        var words: HTMLChar[] = this._text.words;\r\n        if (words && words.length === txt.length)\r\n            return words as HTMLChar[];\r\n        words === null && (this._text.words = words = []);\r\n        words.length = txt.length;\r\n        var size: any;\r\n        var style: HTMLStyle = this.style;\r\n        var fontStr: string = style.font;\r\n        for (var i: number = 0, n: number = txt.length; i < n; i++) {\r\n            size = ILaya.Browser.measureText(txt.charAt(i), fontStr);\r\n            words[i] = HTMLChar.create().setData(txt.charAt(i), size.width, size.height || style.fontSize, style);\r\n        }\r\n        return words;\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _isChar(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**@internal */\r\n    _layoutLater(): void {\r\n        var style: HTMLStyle = this.style;\r\n\r\n        if ((style._type & HTMLStyle.ADDLAYOUTED))\r\n            return;\r\n\r\n        if (style.widthed(this) && ((this._children && this._children.length > 0) || this._getWords() != null) && style.block) {\r\n            Layout.later(this);\r\n            style._type |= HTMLStyle.ADDLAYOUTED;\r\n        } else {\r\n            this.parent && this.parent._layoutLater();\r\n        }\r\n    }\r\n\r\n    set x(v: number) {\r\n        if (this._x != v) {\r\n            this._x = v;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set y(v: number) {\r\n        if (this._y != v) {\r\n            this._y = v;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        if (this._width !== value) {\r\n            this._width = value;\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n\r\n    }\r\n\r\n    set height(value: number) {\r\n        if (this._height !== value) {\r\n            this._height = value;\r\n            this.repaint();\r\n        }\r\n    }\r\n    /**@internal */\r\n    _setAttributes(name: string, value: string): void {\r\n        switch (name) {\r\n            case 'style':\r\n                this.style.cssText(value);\r\n                break;\r\n            case 'class':\r\n                this.className = value;\r\n                break;\r\n            case 'x':\r\n                this.x = parseFloat(value);\r\n                break;\r\n            case 'y':\r\n                this.y = parseFloat(value);\r\n                break;\r\n            case 'width':\r\n                this.width = parseFloat(value);\r\n                break;\r\n            case 'height':\r\n                this.height = parseFloat(value);\r\n                break;\r\n            default:\r\n                (this as any)[name] = value;\r\n        }\r\n    }\r\n\r\n    set href(url: string) {\r\n        if (!this._style) return;\r\n        if (url != this._style.href) {\r\n            this._style.href = url;\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    get href(): string {\r\n        if (!this._style) return null;\r\n        return this._style.href;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this.style.color = value;\r\n    }\r\n\r\n    set className(value: string) {\r\n        this.style.attrs(HTMLDocument.document.styleSheets['.' + value]);\r\n    }\r\n\r\n    drawToGraphic(graphic: Graphics, gX: number, gY: number, recList: any[]): void {\r\n        gX += this.x;\r\n        gY += this.y;\r\n        var cssStyle: HTMLStyle = this.style;\r\n        if (cssStyle.paddingLeft) {\r\n            gX += cssStyle.paddingLeft;\r\n        }\r\n        if (cssStyle.paddingTop) {\r\n            gY += cssStyle.paddingTop;\r\n        }\r\n        if (cssStyle.bgColor != null || cssStyle.borderColor) {\r\n            graphic.drawRect(gX, gY, this.width, this.height, cssStyle.bgColor, cssStyle.borderColor, 1);\r\n        }\r\n\r\n        this.renderSelfToGraphic(graphic, gX, gY, recList);\r\n        var i: number, len: number;\r\n        var tChild: HTMLElement;\r\n        if (this._children && this._children.length > 0) {\r\n            len = this._children.length;\r\n            for (i = 0; i < len; i++) {\r\n                tChild = this._children[i];\r\n                if (tChild.drawToGraphic != null)\r\n                    tChild.drawToGraphic(graphic, gX, gY, recList);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderSelfToGraphic(graphic: Graphics, gX: number, gY: number, recList: any[]): void {\r\n        var cssStyle: HTMLStyle = this.style;\r\n        var words: HTMLChar[] = this._getWords();\r\n        var i: number, len: number;\r\n\r\n        if (words) {\r\n            len = words.length;\r\n            var a: HTMLChar;\r\n            if (cssStyle) {\r\n                var font: string = cssStyle.font;\r\n                var color: string = cssStyle.color;\r\n                if (cssStyle.stroke) {\r\n                    var stroke: any = cssStyle.stroke;\r\n                    stroke = parseInt(stroke);\r\n                    var strokeColor: string = cssStyle.strokeColor;\r\n                    //for (i = 0; i < len; i++) {\r\n                    //a = words[i];\r\n                    //graphic.strokeText(a.char, a.x + gX, a.y + gY, font, strokeColor, stroke, 'left');\r\n                    //graphic.fillText(a.char, a.x + gX, a.y + gY, font, color, 'left');\r\n                    //}\r\n                    graphic.fillBorderWords((<any[]>words), gX, gY, font, color, strokeColor, stroke);\r\n                } else {\r\n                    //for (i = 0; i < len; i++) {\r\n                    //a = words[i];\r\n                    //graphic.fillText(a.char, a.x + gX, a.y + gY, font, color, 'left');\r\n                    //}\r\n                    graphic.fillWords((<any[]>words), gX, gY, font, color);\r\n                }\r\n                if (this.href) {\r\n                    var lastIndex: number = words.length - 1;\r\n                    var lastWords: HTMLChar = words[lastIndex];\r\n                    var lineY: number = lastWords.y + lastWords.height;\r\n\r\n                    if (lastWords.y == words[0].y) {\r\n                        if (cssStyle.textDecoration != \"none\")\r\n                            graphic.drawLine(words[0].x, lineY, lastWords.x + lastWords.width, lineY, color, 1);\r\n                        var hitRec: HTMLHitRect = HTMLHitRect.create();\r\n                        hitRec.rec.setTo(words[0].x, lastWords.y, lastWords.x + lastWords.width - words[0].x, lastWords.height);\r\n                        hitRec.href = this.href;\r\n                        recList.push(hitRec);\r\n                    } else {\r\n                        this.workLines((<any[]>words), graphic, recList);\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private workLines(wordList: any[], g: Graphics, recList: any[]): void {\r\n        var cssStyle: HTMLStyle = this.style;\r\n        var hasLine: boolean;\r\n        hasLine = cssStyle.textDecoration != \"none\";\r\n        var i: number = 0, len: number;\r\n        len = wordList.length;\r\n        var tStartWord: HTMLChar;\r\n        tStartWord = wordList[i];\r\n        var tEndWord: HTMLChar;\r\n        tEndWord = tStartWord;\r\n        if (!tStartWord) return;\r\n        var tword: HTMLChar;\r\n        for (i = 1; i < len; i++) {\r\n            tword = wordList[i];\r\n            if (tword.y != tStartWord.y) {\r\n                this.createOneLine(tStartWord, tEndWord, hasLine, g, recList);\r\n                tStartWord = tword;\r\n                tEndWord = tword;\r\n            } else {\r\n                tEndWord = tword;\r\n            }\r\n        }\r\n        this.createOneLine(tStartWord, tEndWord, hasLine, g, recList);\r\n    }\r\n    private createOneLine(startWord: HTMLChar, lastWords: HTMLChar, hasLine: boolean, graphic: Graphics, recList: any[]): void {\r\n        var lineY: number = lastWords.y + lastWords.height;\r\n        if (hasLine)\r\n            graphic.drawLine(startWord.x, lineY, lastWords.x + lastWords.width, lineY, this.style.color, 1);\r\n        var hitRec: HTMLHitRect = HTMLHitRect.create();\r\n        hitRec.rec.setTo(startWord.x, lastWords.y, lastWords.x + lastWords.width - startWord.x, lastWords.height);\r\n        hitRec.href = this.href;\r\n        recList.push(hitRec);\r\n    }\r\n}\r\n\r\nIHtml.HTMLElementType = HTMLElementType;\r\n","import { HTMLElement } from \"./HTMLElement\";\r\nimport { Graphics } from \"../../display/Graphics\"\r\nimport { HTMLStyle } from \"../utils/HTMLStyle\"\r\nimport { ILayout } from \"../utils/ILayout\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { IHtml } from \"../utils/IHtml\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class HTMLBrElement {\r\n    static brStyle: HTMLStyle;\r\n\r\n    /**@internal */\r\n    _addToLayout(out: ILayout[]): void {\r\n        out.push((<ILayout>(this as any)));\r\n    }\r\n\r\n    //TODO:coverage\r\n    reset(): HTMLBrElement {\r\n        return this;\r\n    }\r\n\r\n    destroy(): void {\r\n        Pool.recover(HTMLElement.getClassName(this), this.reset());\r\n    }\r\n\r\n    protected _setParent(value: HTMLElement): void {\r\n\r\n    }\r\n\r\n    set parent(value: any) {\r\n\r\n    }\r\n\r\n    set URI(value: any) {\r\n    }\r\n\r\n    set href(value: any) {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _getCSSStyle(): HTMLStyle {\r\n        if (!HTMLBrElement.brStyle) {\r\n            HTMLBrElement.brStyle = new HTMLStyle();\r\n            HTMLBrElement.brStyle.setLineElement(true);\r\n            HTMLBrElement.brStyle.block = true;\r\n        }\r\n        return HTMLBrElement.brStyle;\r\n    }\r\n\r\n    renderSelfToGraphic(graphic: Graphics, gX: number, gY: number, recList: any[]): void {\r\n\r\n    }\r\n}\r\n\r\nIHtml.HTMLBrElement = HTMLBrElement;","import { HTMLElement } from \"./HTMLElement\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { HTMLStyle } from \"../utils/HTMLStyle\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class HTMLStyleElement extends HTMLElement {\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected _creates(): void {\r\n    }\r\n    /**\r\n     * \r\n     * @param graphic \r\n     * @param gX \r\n     * @param gY \r\n     * @param recList \r\n     * @override\r\n     */\r\n    drawToGraphic(graphic: Graphics, gX: number, gY: number, recList: any[]): void {\r\n    }\r\n    //TODO:coverage\r\n    /**\r\n     * @override\r\n     */\r\n    reset(): HTMLElement {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 解析样式\r\n     * @override\r\n     */\r\n    set innerTEXT(value: string) {\r\n        HTMLStyle.parseCSS(value, null);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get innerTEXT() {\r\n        return super.innerTEXT;\r\n    }\r\n}\r\n","import { HTMLElement } from \"./HTMLElement\";\r\nimport { Loader } from \"../../net/Loader\";\r\nimport { Graphics } from \"../../display/Graphics\";\r\nimport { Event } from \"../../events/Event\";\r\nimport { HTMLStyle } from \"../utils/HTMLStyle\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class HTMLLinkElement extends HTMLElement {\r\n\r\n    static _cuttingStyle: RegExp = new RegExp(\"((@keyframes[\\\\s\\\\t]+|)(.+))[\\\\t\\\\n\\\\r\\\\\\s]*{\", \"g\");\r\n    type: string;\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected _creates(): void {\r\n    }\r\n    /**\r\n     * \r\n     * @param graphic \r\n     * @param gX \r\n     * @param gY \r\n     * @param recList \r\n     * @override\r\n     */\r\n    drawToGraphic(graphic: Graphics, gX: number, gY: number, recList: any[]): void {\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    reset(): HTMLElement {\r\n        // if (this._loader) this._loader.off(Event.COMPLETE, this, this._onload);\r\n        // this._loader = null;\r\n        return this;\r\n    }\r\n\r\n    /**@internal */\r\n    _onload(data: string): void {\r\n\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    set href(url: string) {\r\n        if (!url) return;\r\n        url = URL.formatURL(url);\r\n        this.URI = new URL(url);\r\n        ILaya.loader.fetch(url, \"text\").then(data => {\r\n            switch (this.type) {\r\n                case 'text/css':\r\n                    HTMLStyle.parseCSS(data, this.URI);\r\n                    break;\r\n            }\r\n            this.repaint(true);\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get href() {\r\n        return super.href;\r\n    }\r\n}\r\n","import { HTMLElement } from \"./HTMLElement\";\r\nimport { HTMLStyleElement } from \"./HTMLStyleElement\";\r\nimport { HTMLLinkElement } from \"./HTMLLinkElement\";\r\nimport { HTMLStyle } from \"../utils/HTMLStyle\"\r\nimport { ILayout } from \"../utils/ILayout\"\r\nimport { Layout } from \"../utils/Layout\"\r\nimport { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Handler } from \"../../utils/Handler\";\r\nimport { HTMLChar } from \"../../utils/HTMLChar\";\r\nimport { IHtml } from \"../utils/IHtml\";\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class HTMLDivParser extends HTMLElement {\r\n    /** 实际内容的高 */\r\n    contextHeight: number;\r\n    /** 实际内容的宽 */\r\n    contextWidth: number;\r\n    /** @private */\r\n    private _htmlBounds: Rectangle;\r\n    /** @private */\r\n    private _boundsRec: Rectangle;\r\n    /** 重绘回调 */\r\n    repaintHandler: Handler = null;\r\n    /**\r\n     * @override\r\n     */\r\n    reset(): HTMLElement {\r\n        HTMLStyleElement;\r\n        HTMLLinkElement;\r\n        super.reset();\r\n        this._style.block = true;\r\n        this._style.setLineElement(true);\r\n        this._style.width = 200;\r\n        this._style.height = 200;\r\n        this.repaintHandler = null;\r\n        this.contextHeight = 0;\r\n        this.contextWidth = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 设置标签内容\r\n     */\r\n    set innerHTML(text: string) {\r\n        this.destroyChildren();\r\n        this.appendHTML(text);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    set width(value: number) {\r\n        var changed: boolean;\r\n        if (value === 0) {\r\n            changed = value != this._width;\r\n        } else {\r\n            changed = value != this.width;\r\n        }\r\n        super.width = value;\r\n        if (changed) this.layout();\r\n    }\r\n\r\n    /**\r\n     * 追加内容，解析并对显示对象排版\r\n     * @param\ttext\r\n     */\r\n    appendHTML(text: string): void {\r\n        IHtml.HTMLParse.parse(this, text, this.URI);\r\n        this.layout();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param\tout\r\n     * @return\r\n     * @override\r\n     */\r\n    _addChildsToLayout(out: ILayout[]): boolean {\r\n        var words: HTMLChar[] = this._getWords();\r\n        if (words == null && (!this._children || this._children.length == 0)) return false;\r\n        words && words.forEach(function (o: any): void {\r\n            out.push(o);\r\n        });\r\n        var tFirstKey: boolean = true;\r\n\r\n        for (var i: number = 0, len: number = this._children.length; i < len; i++) {\r\n            var o: HTMLElement = this._children[i];\r\n            if (tFirstKey) {\r\n                tFirstKey = false;\r\n            } else {\r\n                out.push(null);\r\n            }\r\n            //o._style._enableLayout() && o._addToLayout(out);\r\n            o._addToLayout(out)\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param\tout\r\n     * @override\r\n     */\r\n    //TODO:coverage\r\n    _addToLayout(out: ILayout[]): void {\r\n        this.layout();\r\n        !this.style.absolute && out.push(this);\r\n    }\r\n\r\n    /**\r\n     * 获取bounds\r\n     * @return\r\n     */\r\n    getBounds(): Rectangle {\r\n        if (!this._htmlBounds) return null;\r\n        if (!this._boundsRec) this._boundsRec = Rectangle.create();\r\n        return this._boundsRec.copyFrom(this._htmlBounds);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    parentRepaint(recreate: boolean = false): void {\r\n        super.parentRepaint();\r\n        if (this.repaintHandler) this.repaintHandler.runWith(recreate);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对显示内容进行排版\r\n     */\r\n    layout(): void {\r\n        this.style._type |= HTMLStyle.ADDLAYOUTED;\r\n        var tArray: any[] = Layout.layout(this);\r\n        if (tArray) {\r\n            if (!this._htmlBounds) this._htmlBounds = Rectangle.create();\r\n            var tRectangle: Rectangle = this._htmlBounds;\r\n            tRectangle.x = tRectangle.y = 0;\r\n            tRectangle.width = this.contextWidth = tArray[0];\r\n            tRectangle.height = this.contextHeight = tArray[1];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取对象的高\r\n     * @override\r\n     */\r\n    get height(): number {\r\n        if (this._height) return this._height;\r\n        return this.contextHeight;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    set height(value: number) {\r\n        super.height = value;\r\n    }\r\n\r\n    /**\r\n     * 获取对象的宽\r\n     * @override\r\n     */\r\n    get width(): number {\r\n        if (this._width) return this._width;\r\n        return this.contextWidth;\r\n    }\r\n}\r\n\r\nIHtml.HTMLDivParser = HTMLDivParser;","import { HTMLElement, HTMLElementType } from \"./HTMLElement\";\r\nimport { Graphics } from \"../../display/Graphics\"\r\nimport { Event } from \"../../events/Event\"\r\nimport { HTMLStyle } from \"../utils/HTMLStyle\"\r\nimport { ILayout } from \"../utils/ILayout\"\r\nimport { Loader } from \"../../net/Loader\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { IHtml } from \"../utils/IHtml\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class HTMLImageElement extends HTMLElement {\r\n\r\n    private _tex: Texture;\r\n    private _url: string;\r\n    constructor() {\r\n        super();\r\n        this.eletype = HTMLElementType.IMAGE;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    reset(): HTMLElement {\r\n        super.reset();\r\n        this._tex = null;\r\n        this._url = null;\r\n        return this;\r\n    }\r\n\r\n    set src(url: string) {\r\n        url = URL.formatURL(url, this.URI ? this.URI.path : null);\r\n        if (this._url === url) return;\r\n        this._url = url;\r\n\r\n        ILaya.loader.load(url).then((tex: Texture) => {\r\n            this._tex = tex;\r\n            this.onloaded();\r\n        });\r\n    }\r\n\r\n    //TODO:coverage\r\n    private onloaded(): void {\r\n        if (!this._style) return;\r\n        var style: HTMLStyle = (<HTMLStyle>this._style);\r\n        var w: number = style.widthed(this) ? -1 : this._tex.width;\r\n        var h: number = style.heighted(this) ? -1 : this._tex.height;\r\n\r\n        if (!style.widthed(this) && this._width != this._tex.width) {\r\n            this.width = this._tex.width;\r\n            this.parent && this.parent._layoutLater();\r\n        }\r\n\r\n        if (!style.heighted(this) && this._height != this._tex.height) {\r\n            this.height = this._tex.height;\r\n            this.parent && this.parent._layoutLater();\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _addToLayout(out: ILayout[]): void {\r\n        var style: HTMLStyle = (<HTMLStyle>this._style);\r\n        !style.absolute && out.push(this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param graphic \r\n     * @param gX \r\n     * @param gY \r\n     * @param recList \r\n     * @override\r\n     */\r\n    renderSelfToGraphic(graphic: Graphics, gX: number, gY: number, recList: any[]): void {\r\n        if (!this._tex) return;\r\n        graphic.drawImage(this._tex, gX, gY, this.width || this._tex.width, this.height || this._tex.height);\r\n    }\r\n}\r\n\r\nIHtml.HTMLImageElement = HTMLImageElement;\r\n","import { HTMLDivParser } from \"../dom/HTMLDivParser\"\r\nimport { HTMLElement } from \"../dom/HTMLElement\"\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Utils } from \"../../utils/Utils\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { IHtml } from \"./IHtml\";\r\nimport { HTMLBrElement } from \"../dom/HTMLBrElement\";\r\nimport { HTMLStyleElement } from \"../dom/HTMLStyleElement\";\r\nimport { HTMLLinkElement } from \"../dom/HTMLLinkElement\";\r\nimport { HTMLImageElement } from \"../dom/HTMLImageElement\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\n/**\r\n * @private\r\n */\r\nexport class HTMLParse {\r\n    private static char255: string = String.fromCharCode(255);\r\n    private static spacePattern: RegExp = /&nbsp;|&#160;/g;\r\n    private static char255AndOneSpacePattern: RegExp = new RegExp(String.fromCharCode(255) + \"|(\\\\s+)\", \"g\");\r\n    private static _htmlClassMapShort: any = {\r\n        'div': HTMLDivParser,\r\n        'p': HTMLElement,\r\n        'img': HTMLImageElement,\r\n        'span': HTMLElement,\r\n        'br': HTMLBrElement,\r\n        'style': HTMLStyleElement,\r\n        'font': HTMLElement,\r\n        'a': HTMLElement,\r\n        '#text': HTMLElement,\r\n        'link': HTMLLinkElement\r\n    };\r\n\r\n    /**\r\n     * 根据类型获取对应的节点\r\n     * @param type\r\n     */\r\n    static getInstance(type: string): any {\r\n        var rst: any = Pool.getItem(HTMLParse._htmlClassMapShort[type]);\r\n        if (!rst) {\r\n            rst = ClassUtils.getInstance(type);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 解析HTML\r\n     * @param\tower\r\n     * @param\txmlString\r\n     * @param\turl\r\n     */\r\n    static parse(ower: HTMLDivParser, xmlString: string, url: URL): void {\r\n        xmlString = xmlString.replace(/<br>/g, \"<br/>\");\r\n        xmlString = \"<root>\" + xmlString + \"</root>\";\r\n        xmlString = xmlString.replace(HTMLParse.spacePattern, HTMLParse.char255);\r\n        try {\r\n            var xml: any = Utils.parseXMLFromString(xmlString);\r\n            /*if (xml.firstChild.innerHTML.indexOf(\"<parsererror \") == 0)\r\n            {\r\n            throw new Error(\"HTML parsererror:\" + xmlString);\r\n            return;\r\n            }*/\r\n            HTMLParse._parseXML(ower, xml.childNodes[0].childNodes, url);\r\n        }\r\n        catch (err: any) {\r\n            if (LayaEnv.isPlaying)\r\n                console.error(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 解析xml节点 该函数会被递归调用\r\n     * @param xml\r\n     */\r\n    private static _parseXML(parent: HTMLElement, xml: any, url: URL, href: string = null): void {\r\n        var i: number, n: number;\r\n        if (xml.join || xml.item)\t//判断xml是否是NodeList或AS中为Array\r\n        {\r\n            for (i = 0, n = xml.length; i < n; ++i) {\r\n                HTMLParse._parseXML(parent, xml[i], url, href);\r\n            }\r\n        } else {\r\n            var node: HTMLElement;\r\n            var nodeName: string;\r\n            if (xml.nodeType == 3)\t//文本节点\r\n            {\r\n                var txt: string;\r\n                if (parent instanceof IHtml.HTMLDivParser) {\r\n                    if (xml.nodeName == null) {\r\n                        xml.nodeName = \"#text\";\r\n                    }\r\n                    nodeName = xml.nodeName.toLowerCase();\r\n                    txt = xml.textContent.replace(/^\\s+|\\s+$/g, '');//去掉前后空格和\\n\\t\r\n                    if (txt.length > 0) {\r\n                        node = (<HTMLElement>HTMLParse.getInstance(nodeName));\r\n                        if (node) {\r\n                            parent.addChild(node);\r\n                            (((<HTMLElement>node)).innerTEXT = txt.replace(HTMLParse.char255AndOneSpacePattern, \" \"));// decodeFromEntities(txt));\r\n                        }\r\n                    }\r\n                } else {\r\n                    txt = xml.textContent.replace(/^\\s+|\\s+$/g, '');//去掉前后空格和\\n\\t\r\n                    if (txt.length > 0) {\r\n                        var containNode = parent;\r\n                        if (parent instanceof HTMLElement && parent.innerTEXT && parent.innerTEXT.length > 0) {\r\n                            // 如果已经有 innerText了，只能创建子节点，不能冲掉原来的\r\n                            let cnode = (<HTMLElement>HTMLParse.getInstance('p'));\r\n                            if (cnode) {\r\n                                parent.addChild(cnode);\r\n                                containNode = cnode;\r\n                            }\r\n\r\n                        }\r\n                        containNode.innerTEXT = txt.replace(HTMLParse.char255AndOneSpacePattern, \" \");// decodeFromEntities(txt));\r\n                    }\r\n                }\r\n                return;\r\n            } else {\r\n                nodeName = xml.nodeName.toLowerCase();\r\n\r\n                if (nodeName == \"#comment\") return;\r\n                node = (<HTMLElement>HTMLParse.getInstance(nodeName));\r\n                if (node) {\r\n                    if (nodeName == \"p\") {\r\n                        parent.addChild(HTMLParse.getInstance(\"br\"));\r\n                        node = (<HTMLElement>parent.addChild(node));\r\n                        parent.addChild(HTMLParse.getInstance(\"br\"));\r\n                    } else {\r\n                        node = (<HTMLElement>parent.addChild(node));\r\n                    }\r\n\r\n                    ((<any>node)).URI = url;\r\n                    ((<HTMLElement>node)).href = href;\r\n                    var attributes: any[] = xml.attributes;\r\n                    if (attributes && attributes.length > 0) {\r\n                        for (i = 0, n = attributes.length; i < n; ++i) {\r\n                            var attribute: any = attributes[i];\r\n                            var attrName: string = attribute.nodeName;\r\n                            var value: string = attribute.value;\r\n                            node._setAttributes(attrName, value);\r\n                        }\r\n                    }\r\n                    HTMLParse._parseXML(node, xml.childNodes, url, ((<HTMLElement>node)).href);\r\n                } else {\r\n                    HTMLParse._parseXML(parent, xml.childNodes, url, href);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /*\r\n       //实体字符替换\r\n       private static const Entities:Object =\r\n       {\r\n       \"&nbsp;\"  : \" \",\r\n       \"&#160;\"  : \" \",\r\n       \"&lt;\"    : \"<\",\r\n       \"&#60;\"   : \"<\",\r\n       \"&gt;\"    : \">\",\r\n       \"&#62;\"   : \">\",\r\n       \"&amp;\"   : \"&\",\r\n       \"&amp;\"   : \"&\",\r\n       \"&quot;\"  : \"\\\"\",\r\n       \"&#34;\"   : \"\\\"\",\r\n       \"&apos;\"  : \"'\",\r\n       \"&#39;\"   : \"'\",\r\n       \"&cent;\"  : \"￠\",\r\n       \"&#162;\"  : \"￠\",\r\n       \"&pound;\" : \"£\",\r\n       \"&#163;\"  : \"£\",\r\n       \"&yen;\"   : \"¥\",\r\n       \"&#165;\"  : \"¥\",\r\n       \"&euro;\"  : \"€\",\r\n       \"&#8364;\" : \"€\",\r\n       \"&sect;\"  : \"§\",\r\n       \"&#167;\"  : \"§\",\r\n       \"&copy;\"  : \"©\",\r\n       \"&#169;\"  : \"©\",\r\n       \"&reg;\"   : \"®\",\r\n       \"&#174;\"  : \"®\",\r\n       \"&trade;\" : \"™\",\r\n       \"&#8482;\" : \"™\",\r\n       \"&times;\" : \"×\",\r\n       \"&#215;\"  : \"×\",\r\n       \"&divide;\": \"÷\",\r\n       \"&#247;\"  : \"÷\"\r\n       };\r\n\t\r\n       public static function decodeFromEntities(str:String):String\r\n       {\r\n       return str.replace(/\\&#?\\w{2,6};/g, function(... args):String\r\n       {\r\n       return Entities[args[0]];\r\n       });\r\n       }*/\r\n}\r\n\r\nIHtml.HTMLParse = HTMLParse;\r\n","import { HTMLDivParser } from \"./HTMLDivParser\";\r\nimport { HTMLHitRect } from \"./HTMLHitRect\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Event } from \"../../events/Event\"\r\nimport { HTMLStyle } from \"../utils/HTMLStyle\"\r\nimport { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Handler } from \"../../utils/Handler\"\r\nimport { IHtml } from \"../utils/IHtml\";\r\nimport { HTMLParse } from \"../utils/HTMLParse\";\r\n\r\n/**\r\n * HTML图文类，用于显示html内容\r\n *\r\n * 支持的标签如下:\r\n * a:链接标签，点击后会派发\"link\"事件 比如:<a href='alink'>a</a>\r\n * div:div容器标签，比如:<div>abc</div>\r\n * span:行内元素标签，比如:<span style='color:#ff0000'>abc</span>\r\n * p:行元素标签，p标签会自动换行，div不会，比如:<p>abc</p>\r\n * img:图片标签，比如:<img src='res/boy.png'></img>\r\n * br:换行标签，比如:<div>abc<br/>def</div>\r\n * style:样式标签，比如:<div style='width:130px;height:50px;color:#ff0000'>abc</div>\r\n * link:外链样式标签，可以加载一个css文件来当style使用，比如:<link type='text/css' href='html/test.css'/>\r\n *\r\n * style支持的属性如下:\r\n * italic:true|false;\t\t\t\t\t是否是斜体\r\n * bold:true|false;\t\t\t\t\t\t是否是粗体\r\n * letter-spacing:10px;\t\t\t\t\t字间距\r\n * font-family:宋体; \t\t\t\t\t字体\r\n * font-size:20px;\t\t\t\t\t\t字体大小\r\n * font-weight:bold:none;\t\t\t\t字体是否是粗体，功能同bold\r\n * color:#ff0000;\t\t\t\t\t\t字体颜色\r\n * stroke:2px;\t\t\t\t\t\t\t字体描边宽度\r\n * strokeColor:#ff0000;\t\t\t\t\t字体描边颜色\r\n * padding:10px 10px 20px 20px;\t\t\t边缘的距离\r\n * vertical-align:top|bottom|middle;\t垂直对齐方式\r\n * align:left|right|center;\t\t\t\t水平对齐方式\r\n * line-height:20px;\t\t\t\t\t行高\r\n * background-color:#ff0000;\t\t\t背景颜色\r\n * border-color:#ff0000;\t\t\t\t边框颜色\r\n * width:100px;\t\t\t\t\t\t\t对象宽度\r\n * height:100px;\t\t\t\t\t\t对象高度\r\n *\r\n * 示例用法：\r\n * var div:HTMLDivElement=new HTMLDivElement();\r\n * div.innerHTML = \"<link type='text/css' href='html/test.css'/><a href='alink'>a</a><div style='width:130px;height:50px;color:#ff0000'>div</div><br/><span style='font-weight:bold;color:#ffffff;font-size:30px;stroke:2px;italic:true;'>span</span><span style='letter-spacing:5px'>span2</span><p>p</p><img src='res/boy.png'></img>\";\r\n */\r\nexport class HTMLDivElement extends Sprite {\r\n    /**@internal */\r\n    _element: HTMLDivParser;\r\n    /**@private */\r\n    private _recList: any[] = [];\r\n    /**@private */\r\n    private _innerHTML: string;\r\n    /**@private */\r\n    private _repaintState: number = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this._element = new HTMLDivParser();\r\n        this._element.repaintHandler = new Handler(this, this._htmlDivRepaint);\r\n        this.mouseEnabled = true;\r\n        this.on(Event.CLICK, this, this._onMouseClick);\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        if (this._element) this._element.reset();\r\n        this._element = null;\r\n        this._doClears();\r\n        super.destroy(destroyChild);\r\n    }\r\n\r\n    /**@private */\r\n    private _htmlDivRepaint(recreate: boolean = false): void {\r\n        if (recreate) {\r\n            if (this._repaintState < 2) this._repaintState = 2;\r\n        } else {\r\n            if (this._repaintState < 1) this._repaintState = 1;\r\n        }\r\n        if (this._repaintState > 0) this._setGraphicDirty();\r\n    }\r\n\r\n\r\n    private _updateGraphicWork(): void {\r\n        switch (this._repaintState) {\r\n            case 1:\r\n                this._updateGraphic();\r\n                break;\r\n            case 2:\r\n                this._refresh();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _setGraphicDirty(): void {\r\n        this.callLater(this._updateGraphicWork);\r\n    }\r\n\r\n    /**@private */\r\n    private _doClears(): void {\r\n        if (!this._recList) return;\r\n        var i: number, len: number = this._recList.length;\r\n        var tRec: HTMLHitRect;\r\n        for (i = 0; i < len; i++) {\r\n            tRec = this._recList[i];\r\n            tRec.recover();\r\n        }\r\n        this._recList.length = 0;\r\n    }\r\n\r\n    /**@private */\r\n    private _updateGraphic(): void {\r\n        this._doClears();\r\n        this.graphics.clear(true);\r\n        this._repaintState = 0;\r\n        this._element.drawToGraphic(this.graphics, -this._element.x, -this._element.y, this._recList);\r\n        var bounds: Rectangle = this._element.getBounds();\r\n        if (bounds) this.setSelfBounds(bounds);\r\n        //this.hitArea = bounds;\r\n        this.size(bounds.width, bounds.height);\r\n    }\r\n\r\n    /**\r\n     * 获取HTML样式\r\n     */\r\n    get style(): HTMLStyle {\r\n        return this._element.style;\r\n    }\r\n\r\n    get innerHTML() {\r\n        return this._innerHTML;\r\n    }\r\n\r\n    /**\r\n     * 设置标签内容\r\n     */\r\n    set innerHTML(text: string) {\r\n        if (this._innerHTML == text) return;\r\n        this._repaintState = 1;\r\n        this._innerHTML = text;\r\n        this._element.innerHTML = text;\r\n        this._setGraphicDirty();\r\n    }\r\n\r\n    private _refresh(): void {\r\n        this._repaintState = 1;\r\n        if (this._innerHTML) this._element.innerHTML = this._innerHTML;\r\n        this._setGraphicDirty();\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._element.width = value;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._element.width;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._element.height = value;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._element.height;\r\n    }\r\n\r\n    /**\r\n     * 获取內容宽度\r\n     */\r\n    get contextWidth(): number {\r\n        return this._element.contextWidth;\r\n    }\r\n\r\n    /**\r\n     * 获取內容高度\r\n     */\r\n    get contextHeight(): number {\r\n        return this._element.contextHeight;\r\n    }\r\n\r\n    /**@private */\r\n    private _onMouseClick(): void {\r\n        var tX: number = this.mouseX;\r\n        var tY: number = this.mouseY;\r\n        var i: number, len: number;\r\n        var tHit: HTMLHitRect;\r\n        len = this._recList.length;\r\n        for (i = 0; i < len; i++) {\r\n            tHit = this._recList[i];\r\n            if (tHit.rec.contains(tX, tY)) {\r\n                this._eventLink(tHit.href);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _eventLink(href: string): void {\r\n        this.event(Event.LINK, [href]);\r\n    }\r\n}\r\n\r\nIHtml.HTMLDivElement = HTMLDivElement;\r\nIHtml.HTMLParse = HTMLParse;","import { HTMLDivElement } from \"./HTMLDivElement\";\r\nimport { Loader } from \"../../net/Loader\"\r\nimport { URL } from \"../../net/URL\"\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n/**\r\n * iframe标签类，目前用于加载外并解析数据\r\n */\r\nexport class HTMLIframeElement extends HTMLDivElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this._element._getCSSStyle().valign = \"middle\";\r\n    }\r\n\r\n    /**\r\n     * 加载html文件，并解析数据\r\n     * @param\turl\r\n     */\r\n    set href(url: string) {\r\n        url = URL.formatURL(url, this._element.URI ? this._element.URI.path : null);\r\n        ILaya.loader.fetch(url, \"text\").then((data: string) => {\r\n            var pre: URL = this._element.URI;\r\n            this._element.URI = new URL(url);\r\n            this.innerHTML = data;\r\n            !pre || (this._element.URI = pre);\r\n        });\r\n    }\r\n\r\n}\r\n\r\n","import { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { HTMLBrElement } from \"./dom/HTMLBrElement\";\r\nimport { HTMLDivElement } from \"./dom/HTMLDivElement\";\r\nimport { HTMLDivParser } from \"./dom/HTMLDivParser\";\r\nimport { HTMLDocument } from \"./dom/HTMLDocument\";\r\nimport { HTMLElement } from \"./dom/HTMLElement\";\r\nimport { HTMLHitRect } from \"./dom/HTMLHitRect\";\r\nimport { HTMLIframeElement } from \"./dom/HTMLIframeElement\";\r\nimport { HTMLImageElement } from \"./dom/HTMLImageElement\";\r\nimport { HTMLLinkElement } from \"./dom/HTMLLinkElement\";\r\nimport { HTMLStyleElement } from \"./dom/HTMLStyleElement\";\r\nimport { HTMLExtendStyle } from \"./utils/HTMLExtendStyle\";\r\nimport { HTMLParse } from \"./utils/HTMLParse\";\r\nimport { HTMLStyle } from \"./utils/HTMLStyle\";\r\nimport { Layout } from \"./utils/Layout\";\r\nimport { LayoutLine } from \"./utils/LayoutLine\";\r\n\r\nlet c = ClassUtils.regClass;\r\nc(\"HTMLBrElement\", HTMLBrElement);\r\nc(\"HTMLDivElement\", HTMLDivElement);\r\nc(\"HTMLDivParser\", HTMLDivParser);\r\nc(\"HTMLDocument\", HTMLDocument);\r\nc(\"HTMLElement\", HTMLElement);\r\nc(\"HTMLHitRect\", HTMLHitRect);\r\nc(\"HTMLIframeElement\", HTMLIframeElement);\r\nc(\"HTMLImageElement\", HTMLImageElement);\r\nc(\"HTMLLinkElement\", HTMLLinkElement);\r\nc(\"HTMLStyleElement\", HTMLStyleElement);\r\nc(\"HTMLExtendStyle\", HTMLExtendStyle);\r\nc(\"HTMLParse\", HTMLParse);\r\nc(\"HTMLStyle\", HTMLStyle);\r\nc(\"Layout\", Layout);\r\nc(\"LayoutLine\", LayoutLine);\r\nc('div', HTMLDivParser);\r\nc('p', HTMLElement);\r\nc('img', HTMLImageElement);\r\nc('span', HTMLElement);\r\nc('br', HTMLBrElement);\r\nc('style', HTMLStyleElement);\r\nc('font', HTMLElement);\r\nc('a', HTMLElement);\r\nc('#text', HTMLElement);\r\nc('link', HTMLLinkElement);\r\n"],"names":["Pool","ILaya","Config","Rectangle","HTMLElementType","HTMLChar","URL","ClassUtils","Utils","LayaEnv","Sprite","Handler","Event"],"mappings":"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"}