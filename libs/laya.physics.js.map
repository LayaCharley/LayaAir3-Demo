{"version":3,"file":"laya.physics.js","sources":["../../src/layaAir/laya/physics/DestructionListener.ts","../../src/layaAir/laya/physics/Physics.ts","../../src/layaAir/laya/physics/RigidBody.ts","../../src/layaAir/laya/physics/ColliderBase.ts","../../src/layaAir/laya/physics/BoxCollider.ts","../../src/layaAir/laya/physics/ChainCollider.ts","../../src/layaAir/laya/physics/CircleCollider.ts","../../src/layaAir/laya/physics/EdgeCollider.ts","../../src/layaAir/laya/physics/joint/JointBase.ts","../../src/layaAir/laya/physics/joint/DistanceJoint.ts","../../src/layaAir/laya/physics/joint/GearJoint.ts","../../src/layaAir/laya/physics/joint/MotorJoint.ts","../../src/layaAir/laya/physics/joint/MouseJoint.ts","../../src/layaAir/laya/physics/joint/PrismaticJoint.ts","../../src/layaAir/laya/physics/joint/PulleyJoint.ts","../../src/layaAir/laya/physics/joint/RevoluteJoint.ts","../../src/layaAir/laya/physics/joint/WeldJoint.ts","../../src/layaAir/laya/physics/joint/WheelJoint.ts","../../src/layaAir/laya/physics/PhysicsDebugDraw.ts","../../src/layaAir/laya/physics/PolygonCollider.ts","../../src/layaAir/laya/physics/ModuleDef.ts"],"sourcesContent":["\r\n/** \r\n * JS实现Box2D SayGoodbyeParticle\r\n * 相关类型对象被隐性移除时触发对应的SayGoodBye方法\r\n */\r\nexport class DestructionListener {\r\n    /**\r\n     * Joint被隐性移除时触发\r\n     * @param params box2d的Joint相关对象\r\n     */\r\n    public SayGoodbyeJoint(params: any): void {\r\n        params.m_userData && (params.m_userData.isDestroy = true);\r\n    }\r\n    /**\r\n     * Fixtures被隐性移除时触发\r\n     * @param params box2d的Fixtures相关对象\r\n     */\r\n    public SayGoodbyeFixture(params: any): void {\r\n\r\n    }\r\n    /**\r\n     * ParticleGroup被隐性移除时触发\r\n     * @param params box2d的ParticleGroup相关对象\r\n     */\r\n    public SayGoodbyeParticleGroup(params: any): void {\r\n\r\n    }\r\n    /**\r\n     * Particle被隐性移除时触发\r\n     * @param params box2d的Particle相关对象\r\n     */\r\n    public SayGoodbyeParticle(params: any): void {\r\n\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { DestructionListener } from \"./DestructionListener\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * 2D物理引擎，使用Box2d驱动\r\n */\r\nexport class Physics extends EventDispatcher {\r\n    /**2D游戏默认单位为像素，物理默认单位为米，此值设置了像素和米的转换比率，默认50像素=1米*/\r\n    static PIXEL_RATIO: number = 50;\r\n    /**@private */\r\n    private static _I: Physics;\r\n\r\n    /**Box2d引擎的全局引用，更多属性和api请参考 http://box2d.org */\r\n    box2d: any = (<any>window).box2d;\r\n    /**[只读]物理世界引用，更多属性请参考官网 */\r\n    world: any;\r\n    /**旋转迭代次数，增大数字会提高精度，但是会降低性能*/\r\n    velocityIterations: number = 8;\r\n    /**位置迭代次数，增大数字会提高精度，但是会降低性能*/\r\n    positionIterations: number = 3;\r\n\r\n    /**@private 是否已经激活*/\r\n    private _enabled: boolean;\r\n    /**@private 根容器*/\r\n    private _worldRoot: Sprite;\r\n    /**@private 空的body节点，给一些不需要节点的关节使用*/\r\n    _emptyBody: any;\r\n    /**@private */\r\n    _eventList: any[] = [];\r\n\r\n    /**全局物理单例*/\r\n    static get I(): Physics {\r\n        return Physics._I || (Physics._I = new Physics());\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * 开启物理世界\r\n     * options值参考如下：\r\n       allowSleeping:true,\r\n       gravity:10,\r\n       customUpdate:false 自己控制物理更新时机，自己调用Physics.update\r\n     */\r\n    static enable(options: any = null): void {\r\n        Physics.I.start(options);\r\n    }\r\n\r\n    /**\r\n     * 开启物理世界\r\n     * options值参考如下：\r\n       allowSleeping:true,\r\n       gravity:10,\r\n       customUpdate:false 自己控制物理更新时机，自己调用Physics.update\r\n     */\r\n    start(options: any = null): void {\r\n        if (!this._enabled) {\r\n            this._enabled = true;\r\n\r\n            options || (options = {});\r\n            var box2d: any = (<any>window).box2d;\r\n            if (box2d == null) {\r\n                console.error(\"Can not find box2d libs, you should request box2d.js first.\");\r\n                return;\r\n            }\r\n\r\n            var gravity: any = new box2d.b2Vec2(0, options.gravity || 500 / Physics.PIXEL_RATIO);\r\n            this.world = new box2d.b2World(gravity);\r\n            this.world.SetDestructionListener(new DestructionListener());\r\n            this.world.SetContactListener(new ContactListener());\r\n            this.allowSleeping = options.allowSleeping == null ? true : options.allowSleeping;\r\n            if (!options.customUpdate && LayaEnv.isPlaying)\r\n                ILaya.physicsTimer.frameLoop(1, this, this._update);\r\n            this._emptyBody = this._createBody(new (<any>window).box2d.b2BodyDef());\r\n        }\r\n    }\r\n\r\n    private _update(): void {\r\n        var delta = ILaya.timer.delta / 1000;\r\n        if (delta > .033) { // 时间步太长，会导致错误穿透\r\n            delta = .033;\r\n        }\r\n        this.world.Step(delta, this.velocityIterations, this.positionIterations, 3);\r\n        var len: number = this._eventList.length;\r\n        if (len > 0) {\r\n            for (var i: number = 0; i < len; i += 2) {\r\n                this._sendEvent(this._eventList[i], this._eventList[i + 1]);\r\n            }\r\n            this._eventList.length = 0;\r\n        }\r\n    }\r\n\r\n    private _sendEvent(type: number, contact: any): void {\r\n        var colliderA: any = contact.GetFixtureA().collider;\r\n        var colliderB: any = contact.GetFixtureB().collider;\r\n        var ownerA: any = colliderA.owner;\r\n        var ownerB: any = colliderB.owner;\r\n        contact.getHitInfo = function (): any {\r\n            var manifold: any = new this.box2d.b2WorldManifold();\r\n            this.GetWorldManifold(manifold);\r\n            //第一点？\r\n            var p: any = manifold.points[0];\r\n            p.x *= Physics.PIXEL_RATIO;\r\n            p.y *= Physics.PIXEL_RATIO;\r\n            return manifold;\r\n        }\r\n        if (ownerA) {\r\n            var args: any[] = [colliderB, colliderA, contact];\r\n            if (type === 0) {\r\n                ownerA.event(Event.TRIGGER_ENTER, args);\r\n                if (!ownerA[\"_triggered\"]) {\r\n                    ownerA[\"_triggered\"] = true;\r\n                } else {\r\n                    ownerA.event(Event.TRIGGER_STAY, args);\r\n                }\r\n            } else {\r\n                ownerA[\"_triggered\"] = false;\r\n                ownerA.event(Event.TRIGGER_EXIT, args);\r\n            }\r\n        }\r\n        if (ownerB) {\r\n            args = [colliderA, colliderB, contact];\r\n            if (type === 0) {\r\n                ownerB.event(Event.TRIGGER_ENTER, args);\r\n                if (!ownerB[\"_triggered\"]) {\r\n                    ownerB[\"_triggered\"] = true;\r\n                } else {\r\n                    ownerB.event(Event.TRIGGER_STAY, args);\r\n                }\r\n            } else {\r\n                ownerB[\"_triggered\"] = false;\r\n                ownerB.event(Event.TRIGGER_EXIT, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _createBody(def: any): any {\r\n        if (this.world) {\r\n            return this.world.CreateBody(def);\r\n        } else {\r\n            console.error('The physical engine should be initialized first.use \"Physics.enable()\"');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _removeBody(body: any): void {\r\n        if (this.world) {\r\n            this.world.DestroyBody(body);\r\n        } else {\r\n            console.error('The physical engine should be initialized first.use \"Physics.enable()\"');\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _createJoint(def: any): any {\r\n        if (this.world) {\r\n            let joint = this.world.CreateJoint(def);\r\n            joint.m_userData = {};\r\n            joint.m_userData.isDestroy = false;\r\n            return joint;\r\n        } else {\r\n            console.error('The physical engine should be initialized first.use \"Physics.enable()\"');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _removeJoint(joint: any): void {\r\n        if (this.world) {\r\n            this.world.DestroyJoint(joint);\r\n        } else {\r\n            console.error('The physical engine should be initialized first.use \"Physics.enable()\"');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止物理世界\r\n     */\r\n    stop(): void {\r\n        ILaya.physicsTimer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 设置是否允许休眠，休眠可以提高稳定性和性能，但通常会牺牲准确性\r\n     */\r\n    get allowSleeping(): boolean {\r\n        return this.world.GetAllowSleeping();\r\n    }\r\n\r\n    set allowSleeping(value: boolean) {\r\n        this.world.SetAllowSleeping(value);\r\n    }\r\n\r\n    /**\r\n     * 物理世界重力环境，默认值为{x:0,y:1}\r\n     * 如果修改y方向重力方向向上，可以直接设置gravity.y=-1;\r\n     */\r\n    get gravity(): any {\r\n        return this.world.GetGravity();\r\n    }\r\n\r\n    set gravity(value: any) {\r\n        this.world.SetGravity(value);\r\n    }\r\n\r\n    /**获得刚体总数量*/\r\n    getBodyCount(): number {\r\n        return this.world.GetBodyCount();\r\n    }\r\n\r\n    /**获得碰撞总数量*/\r\n    getContactCount(): number {\r\n        return this.world.GetContactCount();\r\n    }\r\n\r\n    /**获得关节总数量*/\r\n    getJointCount(): number {\r\n        return this.world.GetJointCount();\r\n    }\r\n\r\n    /**物理世界根容器，将根据此容器作为物理世界坐标世界，进行坐标变换，默认值为stage\r\n     * 设置特定容器后，就可整体位移物理对象，保持物理世界不变。\r\n     * 注意，仅会在 set worldRoot 时平移一次，其他情况请配合 updatePhysicsByWorldRoot 函数使用*/\r\n    get worldRoot(): Sprite {\r\n        return this._worldRoot || ILaya.stage;\r\n    }\r\n\r\n    set worldRoot(value: Sprite) {\r\n        this._worldRoot = value;\r\n        if (value) {\r\n            //TODO：\r\n            var p: Point = value.localToGlobal(Point.TEMP.setTo(0, 0));\r\n            this.world.ShiftOrigin({ x: -p.x / Physics.PIXEL_RATIO, y: -p.y / Physics.PIXEL_RATIO });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设定 worldRoot 后，手动触发物理世界更新\r\n     */\r\n    updatePhysicsByWorldRoot() {\r\n        if (!!this.worldRoot) {\r\n            var p: Point = this.worldRoot.localToGlobal(Point.TEMP.setTo(0, 0));\r\n            this.world.ShiftOrigin({ x: -p.x / Physics.PIXEL_RATIO, y: -p.y / Physics.PIXEL_RATIO });\r\n        }\r\n    }\r\n}\r\n\r\n// import { Physics } from \"./Physics\"\r\n\r\n/**@private */\r\nclass ContactListener {\r\n    BeginContact(contact: any): void {\r\n        Physics.I._eventList.push(0, contact);\r\n        //console.log(\"BeginContact\", contact);\t\r\n    }\r\n\r\n    EndContact(contact: any): void {\r\n        Physics.I._eventList.push(1, contact);\r\n        //console.log(\"EndContact\", contact);\r\n    }\r\n\r\n    PreSolve(contact: any, oldManifold: any): void {\r\n        //console.log(\"PreSolve\", contact);\r\n    }\r\n\r\n    PostSolve(contact: any, impulse: any): void {\r\n        //console.log(\"PostSolve\", contact);\r\n    }\r\n}\r\n","import { ColliderBase } from \"./ColliderBase\";\r\nimport { Component } from \"../components/Component\"\r\nimport { Sprite } from \"..//display/Sprite\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { Physics } from \"./Physics\";\r\n\r\n/**\r\n * 2D刚体，显示对象通过RigidBody和物理世界进行绑定，保持物理和显示对象之间的位置同步\r\n * 物理世界的位置变化会自动同步到显示对象，显示对象本身的位移，旋转（父对象位移无效）也会自动同步到物理世界\r\n * 由于引擎限制，暂时不支持以下情形：\r\n * 1.不支持绑定节点缩放\r\n * 2.不支持绑定节点的父节点缩放和旋转\r\n * 3.不支持实时控制父对象位移，IDE内父对象位移是可以的\r\n * 如果想整体位移物理世界，可以Physics.I.worldRoot=场景，然后移动场景即可\r\n * 可以通过IDE-\"项目设置\" 开启物理辅助线显示，或者通过代码PhysicsDebugDraw.enable();\r\n */\r\nexport class RigidBody extends Component {\r\n    /**\r\n     * 刚体类型，支持三种类型static，dynamic和kinematic类型，默认为dynamic类型\r\n     * static为静态类型，静止不动，不受重力影响，质量无限大，可以通过节点移动，旋转，缩放进行控制\r\n     * dynamic为动态类型，受重力影响\r\n     * kinematic为运动类型，不受重力影响，可以通过施加速度或者力的方式使其运动\r\n     */\r\n    protected _type: string = \"dynamic\";\r\n    /**是否允许休眠，允许休眠能提高性能*/\r\n    protected _allowSleep: boolean = true;\r\n    /**角速度，设置会导致旋转*/\r\n    protected _angularVelocity: number = 0;\r\n    /**旋转速度阻尼系数，范围可以在0到无穷大之间，0表示没有阻尼，无穷大表示满阻尼，通常阻尼的值应该在0到0.1之间*/\r\n    protected _angularDamping: number = 0;\r\n    /**线性运动速度，比如{x:10,y:10}*/\r\n    protected _linearVelocity: any = { x: 0, y: 0 };\r\n    /**线性速度阻尼系数，范围可以在0到无穷大之间，0表示没有阻尼，无穷大表示满阻尼，通常阻尼的值应该在0到0.1之间*/\r\n    protected _linearDamping: number = 0;\r\n    /**是否高速移动的物体，设置为true，可以防止高速穿透*/\r\n    protected _bullet: boolean = false;\r\n    /**是否允许旋转，如果不希望刚体旋转，这设置为false*/\r\n    protected _allowRotation: boolean = true;\r\n    /**重力缩放系数，设置为0为没有重力*/\r\n    protected _gravityScale: number = 1;\r\n\r\n    /**[只读] 指定了该主体所属的碰撞组，默认为0，碰撞规则如下：\r\n     * 1.如果两个对象group相等\r\n     * \t\tgroup值大于零，它们将始终发生碰撞\r\n     * \t\tgroup值小于零，它们将永远不会发生碰撞\r\n     * \t\tgroup值等于0，则使用规则3\r\n     * 2.如果group值不相等，则使用规则3\r\n     * 3.每个刚体都有一个category类别，此属性接收位字段，范围为[1,2^31]范围内的2的幂\r\n     * 每个刚体也都有一个mask类别，指定与其碰撞的类别值之和（值是所有category按位AND的值）\r\n     */\r\n    group: number = 0;\r\n    /**[只读]碰撞类别，使用2的幂次方值指定，有32种不同的碰撞类别可用*/\r\n    category: number = 1;\r\n    /**[只读]指定冲突位掩码碰撞的类别，category位操作的结果*/\r\n    mask: number = -1;\r\n    /**[只读]自定义标签*/\r\n    label: string = \"RigidBody\";\r\n    /**[只读]原始刚体*/\r\n    protected _body: any;\r\n\r\n    private _createBody(): void {\r\n        if (this._body || !this.owner) return;\r\n        var sp: Sprite = (<Sprite>this.owner);\r\n        var box2d: any = (<any>window).box2d;\r\n        var def: any = new box2d.b2BodyDef();\r\n        var point: Point = sp.localToGlobal(Point.TEMP.setTo(0, 0), false, Physics.I.worldRoot);\r\n        def.position.Set(point.x / Physics.PIXEL_RATIO, point.y / Physics.PIXEL_RATIO);\r\n        def.angle = Utils.toRadian(sp.rotation);\r\n        def.allowSleep = this._allowSleep;\r\n        def.angularDamping = this._angularDamping;\r\n        def.angularVelocity = this._angularVelocity;\r\n        def.bullet = this._bullet;\r\n        def.fixedRotation = !this._allowRotation;\r\n        def.gravityScale = this._gravityScale;\r\n        def.linearDamping = this._linearDamping;\r\n        var obj: any = this._linearVelocity;\r\n        if (obj && obj.x != 0 || obj.y != 0) {\r\n            def.linearVelocity = new box2d.b2Vec2(obj.x, obj.y);\r\n        }\r\n        def.type = box2d.b2BodyType[\"b2_\" + this._type + \"Body\"];\r\n        //def.userData = label;\r\n\r\n        this._body = Physics.I._createBody(def);\r\n        //trace(body);\r\n\r\n        //查找碰撞体\r\n        this.resetCollider(false);\r\n    }\r\n\r\n    protected _onAwake(): void {\r\n        this._createBody();\r\n    }\r\n\r\n    protected _onEnable(): void {\r\n        var _$this = this;\r\n        this._createBody();\r\n\r\n        //监听节点变化，同步到物理世界\r\n        var sp: any = <Sprite>this.owner;\r\n        //如果节点发生变化，则同步到物理世界（仅限节点本身，父节点发生变化不会自动同步）\r\n        if (this.accessGetSetFunc(sp, \"x\", \"set\") && !sp._changeByRigidBody) {\r\n            sp._changeByRigidBody = true;\r\n            function setX(value: any): void {\r\n                _$this.accessGetSetFunc(sp, \"x\", \"set\")(value);\r\n                _$this._sysPosToPhysic();\r\n            }\r\n            this._overSet(sp, \"x\", setX);\r\n\r\n            function setY(value: any): void {\r\n                _$this.accessGetSetFunc(sp, \"y\", \"set\")(value);\r\n                _$this._sysPosToPhysic();\r\n            };\r\n            this._overSet(sp, \"y\", setY);\r\n\r\n            function setRotation(value: any): void {\r\n                _$this.accessGetSetFunc(sp, \"rotation\", \"set\")(value);\r\n                _$this._sysNodeToPhysic();\r\n            };\r\n            this._overSet(sp, \"rotation\", setRotation);\r\n\r\n            function setScaleX(value: any): void {\r\n                _$this.accessGetSetFunc(sp, \"scaleX\", \"set\")(value);\r\n                _$this.resetCollider(true);\r\n            };\r\n            this._overSet(sp, \"scaleX\", setScaleX);\r\n\r\n            function setScaleY(value: any): void {\r\n                _$this.accessGetSetFunc(sp, \"scaleY\", \"set\")(value);\r\n                _$this.resetCollider(true);\r\n            };\r\n            this._overSet(sp, \"scaleY\", setScaleY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取对象某属性的get set方法\r\n     * 通过其本身无法获取该方法，只能从原型上获取\r\n     * @param obj \r\n     * @param prop \r\n     * @param accessor \r\n     */\r\n    private accessGetSetFunc(obj: Node, prop: string, accessor: string): any {\r\n        if ([\"get\", \"set\"].indexOf(accessor) === -1) { // includes\r\n            return;\r\n        }\r\n        let privateProp = `_$${accessor}_${prop}`;\r\n        if ((obj as any)[privateProp]) {\r\n            return (obj as any)[privateProp];\r\n        }\r\n        let ObjConstructor = obj.constructor;\r\n        let des;\r\n        while (ObjConstructor) {\r\n            des = Object.getOwnPropertyDescriptor(ObjConstructor.prototype, prop);\r\n            if (des && (des as any)[accessor]) { // 构造函数(包括原型的构造函数)有该属性\r\n                (obj as any)[privateProp] = (des as any)[accessor].bind(obj);\r\n                break;\r\n            }\r\n            ObjConstructor = Object.getPrototypeOf(ObjConstructor);\r\n        }\r\n        return (obj as any)[privateProp];\r\n    }\r\n\r\n    /**\r\n     * 重置Collider\r\n     * @param\tresetShape 是否先重置形状，比如缩放导致碰撞体变化\r\n     */\r\n    private resetCollider(resetShape: boolean): void {\r\n        //查找碰撞体\r\n        var comps: any[] = this.owner.getComponents(ColliderBase);\r\n        if (comps) {\r\n            for (var i: number = 0, n: number = comps.length; i < n; i++) {\r\n                var collider: ColliderBase = comps[i];\r\n                collider.rigidBody = this;\r\n                if (resetShape) collider.resetShape();\r\n                else collider.refresh();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**同步物理坐标到游戏坐标*/\r\n    onUpdate(): void {\r\n        if (this.type != \"static\" && this._body.IsAwake()) {\r\n            var pos: any = this._body.GetPosition();\r\n            var ang: any = this._body.GetAngle();\r\n            var sp: any = (<Sprite>this.owner);\r\n\r\n            //if (label == \"tank\") console.log(\"get\",ang);\r\n            this.accessGetSetFunc(sp, \"rotation\", \"set\")(Utils.toAngle(ang) - (<Sprite>sp.parent).globalRotation);\r\n\r\n            // if (ang == 0) {\r\n            //     var point: Point = sp.globalToLocal(Point.TEMP.setTo(pos.x * IPhysics.Physics.PIXEL_RATIO + sp.pivotX, pos.y * IPhysics.Physics.PIXEL_RATIO + sp.pivotY), false, IPhysics.Physics.I.worldRoot);\r\n            //     point = sp.toParentPoint(point);\r\n            //     this.accessGetSetFunc(sp, \"x\", \"set\")(point.x);\r\n            //     this.accessGetSetFunc(sp, \"y\", \"set\")(point.y);\r\n            // } else {\r\n            var point = sp.globalToLocal(Point.TEMP.setTo(pos.x * Physics.PIXEL_RATIO, pos.y * Physics.PIXEL_RATIO), false, Physics.I.worldRoot);\r\n            point.x += sp.pivotX;\r\n            point.y += sp.pivotY;\r\n            point = sp.toParentPoint(point);\r\n            this.accessGetSetFunc(sp, \"x\", \"set\")(point.x);\r\n            this.accessGetSetFunc(sp, \"y\", \"set\")(point.y);\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**@private 同步节点坐标及旋转到物理世界*/\r\n    private _sysNodeToPhysic(): void {\r\n        var sp: Sprite = <Sprite>this.owner;\r\n        this._body.SetAngle(Utils.toRadian(sp.rotation));\r\n        var p: Point = sp.localToGlobal(Point.TEMP.setTo(0, 0), false, Physics.I.worldRoot);\r\n        this._body.SetPositionXY(p.x / Physics.PIXEL_RATIO, p.y / Physics.PIXEL_RATIO);\r\n    }\r\n\r\n    /**@private 同步节点坐标到物理世界*/\r\n    private _sysPosToPhysic(): void {\r\n        var sp: Sprite = <Sprite>this.owner;\r\n        var p: Point = sp.localToGlobal(Point.TEMP.setTo(0, 0), false, Physics.I.worldRoot);\r\n        this._body.SetPositionXY(p.x / Physics.PIXEL_RATIO, p.y / Physics.PIXEL_RATIO);\r\n    }\r\n\r\n    /**@private */\r\n    private _overSet(sp: Node, prop: string, getfun: any): void {\r\n        Object.defineProperty(sp, prop, { get: this.accessGetSetFunc(sp, prop, \"get\"), set: getfun, enumerable: false, configurable: true });;\r\n    }\r\n\r\n    protected _onDisable(): void {\r\n        //添加到物理世界\r\n        this._body && Physics.I._removeBody(this._body);\r\n        this._body = null;\r\n\r\n        var owner: any = this.owner;\r\n        if (owner._changeByRigidBody) {\r\n            this._overSet(owner, \"x\", this.accessGetSetFunc(owner, \"x\", \"set\"));\r\n            this._overSet(owner, \"y\", this.accessGetSetFunc(owner, \"y\", \"set\"));\r\n            this._overSet(owner, \"rotation\", this.accessGetSetFunc(owner, \"rotation\", \"set\"));\r\n            this._overSet(owner, \"scaleX\", this.accessGetSetFunc(owner, \"scaleX\", \"set\"));\r\n            this._overSet(owner, \"scaleY\", this.accessGetSetFunc(owner, \"scaleY\", \"set\"));\r\n            owner._changeByRigidBody = false;\r\n        }\r\n    }\r\n\r\n    /**获得原始body对象 */\r\n    getBody(): any {\r\n        if (!this._body) this._onAwake();\r\n        return this._body;\r\n    }\r\n\r\n    _getOriBody(): any {\r\n        return this._body;\r\n    }\r\n\r\n    /**[只读]获得原始body对象 */\r\n    get body(): any {\r\n        if (!this._body) this._onAwake();\r\n        return this._body;\r\n    }\r\n\r\n    /**\r\n     * 对刚体施加力\r\n     * @param\tposition 施加力的点，如{x:100,y:100}，全局坐标\r\n     * @param\tforce\t施加的力，如{x:0.1,y:0.1}\r\n     */\r\n    applyForce(position: any, force: any): void {\r\n        if (!this._body) this._onAwake();\r\n        this._body.ApplyForce(force, position);\r\n    }\r\n\r\n    /**\r\n     * 从中心点对刚体施加力，防止对象旋转\r\n     * @param\tforce\t施加的力，如{x:0.1,y:0.1}\r\n     */\r\n    applyForceToCenter(force: any): void {\r\n        if (!this._body) this._onAwake();\r\n        this._body.ApplyForceToCenter(force);\r\n    }\r\n\r\n    /**\r\n     * 施加速度冲量，添加的速度冲量会与刚体原有的速度叠加，产生新的速度\r\n     * @param\tposition 施加力的点，如{x:100,y:100}，全局坐标\r\n     * @param\timpulse\t施加的速度冲量，如{x:0.1,y:0.1}\r\n     */\r\n    applyLinearImpulse(position: any, impulse: any): void {\r\n        if (!this._body) this._onAwake();\r\n        this._body.ApplyLinearImpulse(impulse, position);\r\n    }\r\n\r\n    /**\r\n     * 施加速度冲量，添加的速度冲量会与刚体原有的速度叠加，产生新的速度\r\n     * @param\timpulse\t施加的速度冲量，如{x:0.1,y:0.1}\r\n     */\r\n    applyLinearImpulseToCenter(impulse: any): void {\r\n        if (!this._body) this._onAwake();\r\n        this._body.ApplyLinearImpulseToCenter(impulse);\r\n    }\r\n\r\n    /**\r\n     * 对刚体施加扭矩，使其旋转\r\n     * @param\ttorque\t施加的扭矩\r\n     */\r\n    applyTorque(torque: number): void {\r\n        if (!this._body) this._onAwake();\r\n        this._body.ApplyTorque(torque);\r\n    }\r\n\r\n    /**\r\n     * 设置速度，比如{x:10,y:10}\r\n     * @param\tvelocity\r\n     */\r\n    setVelocity(velocity: any): void {\r\n        if (!this._body) this._onAwake();\r\n        this._body.SetLinearVelocity(velocity);\r\n    }\r\n\r\n    /**\r\n     * 设置角度\r\n     * @param\tvalue 单位为弧度\r\n     */\r\n    setAngle(value: any): void {\r\n        if (!this._body) this._onAwake();\r\n        this._body.SetAngle(value);\r\n        this._body.SetAwake(true);\r\n    }\r\n\r\n    /**获得刚体质量*/\r\n    getMass(): number {\r\n        return this._body ? this._body.GetMass() : 0;\r\n    }\r\n\r\n    /**\r\n     * 获得质心的相对节点0,0点的位置偏移\r\n     */\r\n    getCenter(): any {\r\n        if (!this._body) this._onAwake();\r\n        var p: Point = this._body.GetLocalCenter();\r\n        p.x = p.x * Physics.PIXEL_RATIO;\r\n        p.y = p.y * Physics.PIXEL_RATIO;\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * 获得质心的世界坐标，相对于Physics.I.worldRoot节点\r\n     */\r\n    getWorldCenter(): any {\r\n        if (!this._body) this._onAwake();\r\n        var p: Point = this._body.GetWorldCenter();\r\n        p.x = p.x * Physics.PIXEL_RATIO;\r\n        p.y = p.y * Physics.PIXEL_RATIO;\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * 刚体类型，支持三种类型static，dynamic和kinematic类型\r\n     * static为静态类型，静止不动，不受重力影响，质量无限大，可以通过节点移动，旋转，缩放进行控制\r\n     * dynamic为动态类型，接受重力影响\r\n     * kinematic为运动类型，不受重力影响，可以通过施加速度或者力的方式使其运动\r\n     */\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._type = value;\r\n        if (this._body) this._body.SetType((<any>window).box2d.b2BodyType[\"b2_\" + this._type + \"Body\"]);\r\n    }\r\n\r\n    /**重力缩放系数，设置为0为没有重力*/\r\n    get gravityScale(): number {\r\n        return this._gravityScale;\r\n    }\r\n\r\n    set gravityScale(value: number) {\r\n        this._gravityScale = value;\r\n        if (this._body) this._body.SetGravityScale(value);\r\n    }\r\n\r\n    /**是否允许旋转，如果不希望刚体旋转，这设置为false*/\r\n    get allowRotation(): boolean {\r\n        return this._allowRotation;\r\n    }\r\n\r\n    set allowRotation(value: boolean) {\r\n        this._allowRotation = value;\r\n        if (this._body) this._body.SetFixedRotation(!value);\r\n    }\r\n\r\n    /**是否允许休眠，允许休眠能提高性能*/\r\n    get allowSleep(): boolean {\r\n        return this._allowSleep;\r\n    }\r\n\r\n    set allowSleep(value: boolean) {\r\n        this._allowSleep = value;\r\n        if (this._body) this._body.SetSleepingAllowed(value);\r\n    }\r\n\r\n    /**旋转速度阻尼系数，范围可以在0到无穷大之间，0表示没有阻尼，无穷大表示满阻尼，通常阻尼的值应该在0到0.1之间*/\r\n    get angularDamping(): number {\r\n        return this._angularDamping;\r\n    }\r\n\r\n    set angularDamping(value: number) {\r\n        this._angularDamping = value;\r\n        if (this._body) this._body.SetAngularDamping(value);\r\n    }\r\n\r\n    /**角速度，设置会导致旋转*/\r\n    get angularVelocity(): number {\r\n        if (this._body) return this._body.GetAngularVelocity();\r\n        return this._angularVelocity;\r\n    }\r\n\r\n    set angularVelocity(value: number) {\r\n        this._angularVelocity = value;\r\n        if (this._body) this._body.SetAngularVelocity(value);\r\n    }\r\n\r\n    /**线性速度阻尼系数，范围可以在0到无穷大之间，0表示没有阻尼，无穷大表示满阻尼，通常阻尼的值应该在0到0.1之间*/\r\n    get linearDamping(): number {\r\n        return this._linearDamping;\r\n    }\r\n\r\n    set linearDamping(value: number) {\r\n        this._linearDamping = value;\r\n        if (this._body) this._body.SetLinearDamping(value);\r\n    }\r\n\r\n    /**线性运动速度，比如{x:5,y:5}*/\r\n    get linearVelocity(): any {\r\n        if (this._body) {\r\n            var vec: any = this._body.GetLinearVelocity();\r\n            return { x: vec.x, y: vec.y };\r\n        }\r\n        return this._linearVelocity;\r\n    }\r\n\r\n    set linearVelocity(value: any) {\r\n        if (!value) return;\r\n        if (value instanceof Array) {\r\n            value = { x: value[0], y: value[1] };\r\n        }\r\n        this._linearVelocity = value;\r\n        if (this._body) this._body.SetLinearVelocity(new (<any>window).box2d.b2Vec2(value.x, value.y));\r\n    }\r\n\r\n    /**是否高速移动的物体，设置为true，可以防止高速穿透*/\r\n    get bullet(): boolean {\r\n        return this._bullet;\r\n    }\r\n\r\n    set bullet(value: boolean) {\r\n        this._bullet = value;\r\n        if (this._body) this._body.SetBullet(value);\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Component } from \"../components/Component\";\r\nimport { RigidBody } from \"./RigidBody\";\r\n\r\n/**\r\n * 碰撞体基类\r\n */\r\nexport class ColliderBase extends Component {\r\n    /**是否是传感器，传感器能够触发碰撞事件，但不会产生碰撞反应*/\r\n    private _isSensor: boolean = false;\r\n    /**密度值，值可以为零或者是正数，建议使用相似的密度，这样做可以改善堆叠稳定性，默认值为10*/\r\n    private _density: number = 10;\r\n    /**摩擦力，取值范围0-1，值越大，摩擦越大，默认值为0.2*/\r\n    private _friction: number = 0.2;\r\n    /**弹性系数，取值范围0-1，值越大，弹性越大，默认值为0*/\r\n    private _restitution: number = 0;\r\n    /**标签*/\r\n    label: string;\r\n\r\n    /**@private b2Shape对象*/\r\n    protected _shape: any;\r\n    /**@private b2FixtureDef对象 */\r\n    protected _def: any;\r\n    /**[只读]b2Fixture对象 */\r\n    fixture: any;\r\n    /**[只读]刚体引用*/\r\n    rigidBody: RigidBody;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._singleton = false;\r\n    }\r\n\r\n    /**@private 获取碰撞体信息*/\r\n    protected getDef(): any {\r\n        if (!this._def) {\r\n            var def: any = new (<any>window).box2d.b2FixtureDef();\r\n            def.density = this.density;\r\n            def.friction = this.friction;\r\n            def.isSensor = this.isSensor;\r\n            def.restitution = this.restitution;\r\n            def.shape = this._shape;\r\n            this._def = def;\r\n        }\r\n        return this._def;\r\n    }\r\n\r\n    protected _onEnable(): void {\r\n        if (this.rigidBody)\r\n            this.refresh();\r\n        else\r\n            ILaya.systemTimer.callLater(this, this._checkRigidBody);\r\n    }\r\n\r\n    private _checkRigidBody(): void {\r\n        if (!this.rigidBody) {\r\n            var comp: RigidBody = this.owner.getComponent(RigidBody);\r\n            if (comp) {\r\n                this.rigidBody = comp;\r\n                this.refresh();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _onDestroy() {\r\n        if (this.rigidBody) {\r\n            if (this.fixture) {\r\n                if (this.fixture.GetBody() == this.rigidBody._getOriBody()) {\r\n                    this.rigidBody.body.DestroyFixture(this.fixture);\r\n                }\r\n                //fixture.Destroy();\r\n                this.fixture = null;\r\n            }\r\n            this.rigidBody = null;\r\n            this._shape = null;\r\n            this._def = null;\r\n        }\r\n    }\r\n\r\n    /**是否是传感器，传感器能够触发碰撞事件，但不会产生碰撞反应*/\r\n    get isSensor(): boolean {\r\n        return this._isSensor;\r\n    }\r\n\r\n    set isSensor(value: boolean) {\r\n        this._isSensor = value;\r\n        if (this._def) {\r\n            this._def.isSensor = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    /**密度值，值可以为零或者是正数，建议使用相似的密度，这样做可以改善堆叠稳定性，默认值为10*/\r\n    get density(): number {\r\n        return this._density;\r\n    }\r\n\r\n    set density(value: number) {\r\n        this._density = value;\r\n        if (this._def) {\r\n            this._def.density = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    /**摩擦力，取值范围0-1，值越大，摩擦越大，默认值为0.2*/\r\n    get friction(): number {\r\n        return this._friction;\r\n    }\r\n\r\n    set friction(value: number) {\r\n        this._friction = value;\r\n        if (this._def) {\r\n            this._def.friction = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    /**弹性系数，取值范围0-1，值越大，弹性越大，默认值为0*/\r\n    get restitution(): number {\r\n        return this._restitution;\r\n    }\r\n\r\n    set restitution(value: number) {\r\n        this._restitution = value;\r\n        if (this._def) {\r\n            this._def.restitution = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 碰撞体参数发生变化后，刷新物理世界碰撞信息\r\n     */\r\n    refresh(): void {\r\n        if (this.enabled && this.rigidBody) {\r\n            var body: any = this.rigidBody.body;\r\n            if (this.fixture) {\r\n                //trace(fixture);\r\n                if (this.fixture.GetBody() == this.rigidBody.body) {\r\n                    this.rigidBody.body.DestroyFixture(this.fixture);\r\n                }\r\n                this.fixture.Destroy();\r\n                this.fixture = null;\r\n            }\r\n            var def: any = this.getDef();\r\n            def.filter.groupIndex = this.rigidBody.group;\r\n            def.filter.categoryBits = this.rigidBody.category;\r\n            def.filter.maskBits = this.rigidBody.mask;\r\n            this.fixture = body.CreateFixture(def);\r\n            this.fixture.collider = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 重置形状\r\n     */\r\n    resetShape(re: boolean = true): void {\r\n\r\n    }\r\n}\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { ColliderBase } from \"./ColliderBase\";\r\nimport { Physics } from \"./Physics\";\r\n\r\n/**\r\n * 2D矩形碰撞体\r\n */\r\nexport class BoxCollider extends ColliderBase {\r\n    /**相对节点的x轴偏移*/\r\n    private _x: number = 0;\r\n    /**相对节点的y轴偏移*/\r\n    private _y: number = 0;\r\n    /**矩形宽度*/\r\n    private _width: number = 100;\r\n    /**矩形高度*/\r\n    private _height: number = 100;\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected getDef(): any {\r\n        if (!this._shape) {\r\n            this._shape = new (<any>window).box2d.b2PolygonShape();\r\n            this._setShape(false);\r\n        }\r\n        this.label = (this.label || \"BoxCollider\");\r\n        return super.getDef();\r\n    }\r\n\r\n    /**\r\n     * @override 初始化设置为当前显示对象的宽和高\r\n     */\r\n    protected _onAdded(): void {\r\n        let node = this.owner as Sprite;\r\n        if (node && 0 < node.width && 0 < node.height) {\r\n            if (100 == this.width && 100 == this.height) {\r\n                this.width = node.width;\r\n                this.height = node.height;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _setShape(re: boolean = true): void {\r\n        var scaleX: number = ((this.owner as any)[\"scaleX\"] || 1);\r\n        var scaleY: number = ((this.owner as any)[\"scaleY\"] || 1);\r\n        this._shape.SetAsBox(this._width / 2 / Physics.PIXEL_RATIO * scaleX, this._height / 2 / Physics.PIXEL_RATIO * scaleY, new (<any>window).box2d.b2Vec2((this._width / 2 + this._x) / Physics.PIXEL_RATIO * scaleX, (this._height / 2 + this._y) / Physics.PIXEL_RATIO * scaleY));\r\n        if (re) this.refresh();\r\n    }\r\n\r\n    /**相对节点的x轴偏移*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**相对节点的y轴偏移*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**矩形宽度*/\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        if (value <= 0) throw \"BoxCollider size cannot be less than 0\";\r\n        this._width = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**矩形高度*/\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        if (value <= 0) throw \"BoxCollider size cannot be less than 0\";\r\n        this._height = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**@private 重置形状\r\n     * @override\r\n    */\r\n    resetShape(re: boolean = true): void {\r\n        this._setShape();\r\n    }\r\n}\r\n","import { ColliderBase } from \"./ColliderBase\";\r\nimport { Physics } from \"./Physics\";\r\n\r\n/**\r\n * 2D线形碰撞体\r\n */\r\nexport class ChainCollider extends ColliderBase {\r\n    /**相对节点的x轴偏移*/\r\n    private _x: number = 0;\r\n    /**相对节点的y轴偏移*/\r\n    private _y: number = 0;\r\n    /**用逗号隔开的点的集合，格式：x,y,x,y ...*/\r\n    private _points: string = \"0,0,100,0\";\r\n    /**是否是闭环，注意不要有自相交的链接形状，它可能不能正常工作*/\r\n    private _loop: boolean = false;\r\n    /**\r\n     * @override\r\n     */\r\n    protected getDef(): any {\r\n        if (!this._shape) {\r\n            this._shape = new (<any>window).box2d.b2ChainShape();\r\n            this._setShape(false);\r\n        }\r\n        this.label = (this.label || \"ChainCollider\");\r\n        return super.getDef();\r\n    }\r\n\r\n    private _setShape(re: boolean = true): void {\r\n        var arr: any[] = this._points.split(\",\");\r\n        var len: number = arr.length;\r\n        if (len % 2 == 1) throw \"ChainCollider points lenth must a multiplier of 2\";\r\n\r\n        var ps: any[] = [];\r\n        for (var i: number = 0, n: number = len; i < n; i += 2) {\r\n            ps.push(new (<any>window).box2d.b2Vec2((this._x + parseInt(arr[i])) / Physics.PIXEL_RATIO, (this._y + parseInt(arr[i + 1])) / Physics.PIXEL_RATIO));\r\n        }\r\n        // this._shape.CreateChain的第三四个参数(prevVertex, &nextVertex)，参考原js版本，设置为0\r\n        this._loop ? this._shape.CreateLoop(ps, len / 2) : this._shape.CreateChain(ps, len / 2, new (<any>window).box2d.b2Vec2(0, 0), new (<any>window).box2d.b2Vec2(0, 0));\r\n\r\n        if (re) this.refresh();\r\n    }\r\n\r\n    /**相对节点的x轴偏移*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**相对节点的y轴偏移*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**用逗号隔开的点的集合，格式：x,y,x,y ...*/\r\n    get points(): string {\r\n        return this._points;\r\n    }\r\n\r\n    set points(value: string) {\r\n        if (!value) throw \"ChainCollider points cannot be empty\";\r\n        this._points = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**是否是闭环，注意不要有自相交的链接形状，它可能不能正常工作*/\r\n    get loop(): boolean {\r\n        return this._loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        this._loop = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { ColliderBase } from \"./ColliderBase\";\r\nimport { Physics } from \"./Physics\";\r\n\r\n/**\r\n * 2D圆形碰撞体\r\n */\r\nexport class CircleCollider extends ColliderBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**相对节点的x轴偏移*/\r\n    private _x: number = 0;\r\n    /**相对节点的y轴偏移*/\r\n    private _y: number = 0;\r\n    /**圆形半径，必须为正数*/\r\n    private _radius: number = 50;\r\n    /**\r\n     * @override\r\n     */\r\n    protected getDef(): any {\r\n        if (!this._shape) {\r\n            this._shape = new (<any>window).box2d.b2CircleShape();\r\n            this._setShape(false);\r\n        }\r\n        this.label = (this.label || \"CircleCollider\");\r\n        return super.getDef();\r\n    }\r\n    /**\r\n     * @override 初始化设置为当前显示对象的宽和高\r\n     */\r\n    protected _onAdded(): void {\r\n        let node = this.owner as Sprite;\r\n        if (node && 0 < node.width && 0 < node.height) {\r\n            if (50 == this._radius) {\r\n                this._radius = node.width >> 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _setShape(re: boolean = true): void {\r\n        var scale: number = (this.owner as any)[\"scaleX\"] || 1;\r\n        this._shape.m_radius = this._radius / Physics.PIXEL_RATIO * scale;\r\n        this._shape.m_p.Set((this._radius + this._x) / Physics.PIXEL_RATIO * scale, (this._radius + this._y) / Physics.PIXEL_RATIO * scale);\r\n        if (re) this.refresh();\r\n    }\r\n\r\n    /**相对节点的x轴偏移*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**相对节点的y轴偏移*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**圆形半径，必须为正数*/\r\n    get radius(): number {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius(value: number) {\r\n        if (value <= 0) throw \"CircleCollider radius cannot be less than 0\";\r\n        this._radius = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**@private 重置形状\r\n     * @override\r\n    */\r\n    resetShape(re: boolean = true): void {\r\n        this._setShape();\r\n    }\r\n}","import { ColliderBase } from \"./ColliderBase\";\r\nimport { Physics } from \"./Physics\";\r\n\r\n/**\r\n * 2D边框碰撞体\r\n */\r\nexport class EdgeCollider extends ColliderBase {\r\n    /**相对节点的x轴偏移*/\r\n    private _x: number = 0;\r\n    /**相对节点的y轴偏移*/\r\n    private _y: number = 0;\r\n    /**用逗号隔开的点的集合，注意只有两个点，格式：x,y,x,y*/\r\n    private _points: string = \"0,0,100,0\";\r\n    /**\r\n     * @override\r\n     */\r\n    protected getDef(): any {\r\n        if (!this._shape) {\r\n            this._shape = new (<any>window).box2d.b2EdgeShape();\r\n            this._setShape(false);\r\n        }\r\n        this.label = (this.label || \"EdgeCollider\");\r\n        return super.getDef();\r\n    }\r\n\r\n    private _setShape(re: boolean = true): void {\r\n        var arr: any[] = this._points.split(\",\");\r\n        var len: number = arr.length;\r\n        if (len % 2 == 1) throw \"EdgeCollider points lenth must a multiplier of 2\";\r\n\r\n        var ps: any[] = [];\r\n        for (var i: number = 0, n: number = len; i < n; i += 2) {\r\n            ps.push(new (<any>window).box2d.b2Vec2((this._x + parseInt(arr[i])) / Physics.PIXEL_RATIO, (this._y + parseInt(arr[i + 1])) / Physics.PIXEL_RATIO));\r\n        }\r\n        this._shape.SetTwoSided(ps[0], ps[1])\r\n\r\n        if (re) this.refresh();\r\n    }\r\n\r\n    /**相对节点的x轴偏移*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**相对节点的y轴偏移*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**用逗号隔开的点的集合，注意只有两个点，格式：x,y,x,y*/\r\n    get points(): string {\r\n        return this._points;\r\n    }\r\n\r\n    set points(value: string) {\r\n        if (!value) throw \"EdgeCollider points cannot be empty\";\r\n        this._points = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n}","import { Component } from \"../../components/Component\"\r\nimport { Physics } from \"../Physics\"\r\n\r\n/**\r\n * 关节基类\r\n */\r\nexport class JointBase extends Component {\r\n    /**原生关节对象*/\r\n    protected _joint: any;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._singleton = false;\r\n    }\r\n\r\n    /**[只读]原生关节对象*/\r\n    get joint(): any {\r\n        if (!this._joint) this._createJoint();\r\n        return this._joint;\r\n    }\r\n\r\n    protected _onEnable(): void {\r\n        this._createJoint();\r\n    }\r\n\r\n    protected _onAwake(): void {\r\n        this._createJoint();\r\n    }\r\n\r\n    protected _createJoint(): void {\r\n    }\r\n\r\n    protected _onDisable(): void {\r\n        if (this._joint && this._joint.m_userData && !this._joint.m_userData.isDestroy) {\r\n            Physics.I._removeJoint(this._joint);\r\n        }\r\n        this._joint = null;\r\n    }\r\n}\r\n","import { JointBase } from \"./JointBase\";\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\n\r\n/**\r\n * 距离关节：两个物体上面各自有一点，两点之间的距离固定不变\r\n */\r\nexport class DistanceJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]关节的自身刚体*/\r\n    selfBody: RigidBody;\r\n    /**[首次设置有效]关节的连接刚体，可不设置，默认为左上角空刚体*/\r\n    otherBody: RigidBody;\r\n    /**[首次设置有效]自身刚体链接点，是相对于自身刚体的左上角位置偏移*/\r\n    selfAnchor: any[] = [0, 0];\r\n    /**[首次设置有效]链接刚体链接点，是相对于otherBody的左上角位置偏移*/\r\n    otherAnchor: any[] = [0, 0];\r\n    /**[首次设置有效]两个刚体是否可以发生碰撞，默认为false*/\r\n    collideConnected: boolean = false;\r\n\r\n    /**约束的目标静止长度*/\r\n    private _length: number = 0;\r\n    /**约束的最小长度，-1表示使用默认值*/\r\n    private _maxLength: number = -1;\r\n    /**约束的最大长度，-1表示使用默认值*/\r\n    private _minLength: number = -1;\r\n\r\n    /**弹簧系统的震动频率，可以视为弹簧的弹性系数，通常频率应该小于时间步长频率的一半*/\r\n    private _frequency: number = 1;\r\n    /**刚体在回归到节点过程中受到的阻尼比，建议取值0~1*/\r\n    private _dampingRatio: number = 0;\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            this.selfBody = this.selfBody || this.owner.getComponent(RigidBody);\r\n            if (!this.selfBody) throw \"selfBody can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = DistanceJoint._temp || (DistanceJoint._temp = new box2d.b2DistanceJointDef());\r\n            def.bodyA = this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody;\r\n            def.bodyB = this.selfBody.getBody();\r\n            def.localAnchorA.Set(this.otherAnchor[0] / Physics.PIXEL_RATIO, this.otherAnchor[1] / Physics.PIXEL_RATIO);\r\n            def.localAnchorB.Set(this.selfAnchor[0] / Physics.PIXEL_RATIO, this.selfAnchor[1] / Physics.PIXEL_RATIO);\r\n            box2d.b2LinearStiffness(def, this._frequency, this._dampingRatio, def.bodyA, def.bodyB);\r\n            // def.stiffness = this._stiffness;\r\n            // def.damping = this._damping;\r\n            def.collideConnected = this.collideConnected;\r\n            var p1: any = def.bodyA.GetWorldPoint(def.localAnchorA, new box2d.b2Vec2());\r\n            var p2: any = def.bodyB.GetWorldPoint(def.localAnchorB, new box2d.b2Vec2());\r\n            def.length = this._length / Physics.PIXEL_RATIO || box2d.b2Vec2.SubVV(p2, p1, new box2d.b2Vec2()).Length();\r\n            \r\n            def.maxLength = box2d.b2_maxFloat;\r\n            def.minLength = 0;\r\n            if (this._maxLength >= 0)\r\n                def.maxLength = this._maxLength / Physics.PIXEL_RATIO;\r\n            if (this._minLength >= 0)\r\n                def.minLength = this._minLength / Physics.PIXEL_RATIO;\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n\r\n    /**约束的目标静止长度*/\r\n    get length(): number {\r\n        return this._length;\r\n    }\r\n\r\n    set length(value: number) {\r\n        this._length = value;\r\n        if (this._joint) this._joint.SetLength(value / Physics.PIXEL_RATIO);\r\n    }\r\n\r\n    /**约束的最小长度*/\r\n    get minLength(): number {\r\n        return this._minLength;\r\n    }\r\n\r\n    set minLength(value: number) {\r\n        this._minLength = value;\r\n        if (this._joint) this._joint.SetMinLength(value / Physics.PIXEL_RATIO);\r\n    }\r\n\r\n    /**约束的最大长度*/\r\n    get maxLength(): number {\r\n        return this._maxLength;\r\n    }\r\n\r\n    set maxLength(value: number) {\r\n        this._maxLength = value;\r\n        if (this._joint) this._joint.SetMaxLength(value / Physics.PIXEL_RATIO);\r\n    }\r\n\r\n    /**弹簧系统的震动频率，可以视为弹簧的弹性系数，通常频率应该小于时间步长频率的一半*/\r\n    get frequency(): number {\r\n        return this._frequency;\r\n    }\r\n\r\n    set frequency(value: number) {\r\n        this._frequency = value;\r\n        if (this._joint) {\r\n            let out: any = {};\r\n            let box2d: any = (<any>window).box2d;\r\n            let bodyA = this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody;\r\n            let bodyB = this.selfBody.getBody();\r\n            box2d.b2LinearStiffness(out, this._frequency, this._dampingRatio, bodyA, bodyB);\r\n\r\n            this._joint.SetStiffness(out.stiffness);\r\n            this._joint.SetDamping(out.damping);\r\n        }\r\n    }\r\n\r\n    /**刚体在回归到节点过程中受到的阻尼比，建议取值0~1*/\r\n    get damping(): number {\r\n        return this._dampingRatio;\r\n    }\r\n\r\n    set damping(value: number) {\r\n        this._dampingRatio = value;\r\n        if (this._joint) {\r\n            let out: any = {};\r\n            let box2d: any = (<any>window).box2d;\r\n            let bodyA = this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody;\r\n            let bodyB = this.selfBody.getBody();\r\n            box2d.b2LinearStiffness(out, this._frequency, this._dampingRatio, bodyA, bodyB);\r\n\r\n            // this._joint.SetStiffness(out.stiffness); // 修改 dampingRatio 最终只影响 damping\r\n            this._joint.SetDamping(out.damping);\r\n        }\r\n    }\r\n}","import { JointBase } from \"./JointBase\";\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\n\r\n/**\r\n * 齿轮关节：用来模拟两个齿轮间的约束关系，齿轮旋转时，产生的动量有两种输出方式，一种是齿轮本身的角速度，另一种是齿轮表面的线速度\r\n */\r\nexport class GearJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]要绑定的第1个关节，类型可以是RevoluteJoint或者PrismaticJoint*/\r\n    joint1: any;\r\n    /**[首次设置有效]要绑定的第2个关节，类型可以是RevoluteJoint或者PrismaticJoint*/\r\n    joint2: any;\r\n    /**[首次设置有效]两个刚体是否可以发生碰撞，默认为false*/\r\n    collideConnected: boolean = false;\r\n\r\n    /**两个齿轮角速度比例，默认1*/\r\n    private _ratio: number = 1;\r\n    /**\r\n     * @override\r\n     * \r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            if (!this.joint1) throw \"Joint1 can not be empty\";\r\n            if (!this.joint2) throw \"Joint2 can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = GearJoint._temp || (GearJoint._temp = new box2d.b2GearJointDef());\r\n            def.bodyA = this.joint1.owner.getComponent(RigidBody).getBody();\r\n            def.bodyB = this.joint2.owner.getComponent(RigidBody).getBody();\r\n            def.joint1 = this.joint1.joint;\r\n            def.joint2 = this.joint2.joint;\r\n            def.ratio = this._ratio;\r\n            def.collideConnected = this.collideConnected;\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n\r\n    /**两个齿轮角速度比例，默认1*/\r\n    get ratio(): number {\r\n        return this._ratio;\r\n    }\r\n\r\n    set ratio(value: number) {\r\n        this._ratio = value;\r\n        if (this._joint) this._joint.SetRatio(value);\r\n    }\r\n}","import { JointBase } from \"./JointBase\";\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\n\r\n/**\r\n * 马达关节：用来限制两个刚体，使其相对位置和角度保持不变\r\n */\r\nexport class MotorJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]关节的自身刚体*/\r\n    selfBody: RigidBody;\r\n    /**[首次设置有效]关节的连接刚体*/\r\n    otherBody: RigidBody;\r\n    /**[首次设置有效]两个刚体是否可以发生碰撞，默认为false*/\r\n    collideConnected: boolean = false;\r\n\r\n    /**基于otherBody坐标位置的偏移量，也是selfBody的目标位置*/\r\n    private _linearOffset: any[] = [0, 0];\r\n    /**基于otherBody的角度偏移量，也是selfBody的目标角度*/\r\n    private _angularOffset: number = 0;\r\n    /**当selfBody偏离目标位置时，为使其恢复到目标位置，马达关节所施加的最大作用力*/\r\n    private _maxForce: number = 1000;\r\n    /**当selfBody角度与目标角度不同时，为使其达到目标角度，马达关节施加的最大扭力*/\r\n    private _maxTorque: number = 1000;\r\n    /**selfBody向目标位置移动时的缓动因子，取值0~1，值越大速度越快*/\r\n    private _correctionFactor: number = 0.3;\r\n    /**\r\n     * @override\r\n     * \r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            if (!this.otherBody) throw \"otherBody can not be empty\";\r\n            this.selfBody = this.selfBody || this.owner.getComponent(RigidBody);\r\n            if (!this.selfBody) throw \"selfBody can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = MotorJoint._temp || (MotorJoint._temp = new box2d.b2MotorJointDef());\r\n            def.Initialize(this.otherBody.getBody(), this.selfBody.getBody());\r\n            def.linearOffset = new box2d.b2Vec2(this._linearOffset[0] / Physics.PIXEL_RATIO, this._linearOffset[1] / Physics.PIXEL_RATIO);\r\n            def.angularOffset = this._angularOffset;\r\n            def.maxForce = this._maxForce;\r\n            def.maxTorque = this._maxTorque;\r\n            def.correctionFactor = this._correctionFactor;\r\n            def.collideConnected = this.collideConnected;\r\n\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n\r\n    /**基于otherBody坐标位置的偏移量，也是selfBody的目标位置*/\r\n    get linearOffset(): any[] {\r\n        return this._linearOffset;\r\n    }\r\n\r\n    set linearOffset(value: any[]) {\r\n        this._linearOffset = value;\r\n        if (this._joint) this._joint.SetLinearOffset(new (<any>window).box2d.b2Vec2(value[0] / Physics.PIXEL_RATIO, value[1] / Physics.PIXEL_RATIO));\r\n    }\r\n\r\n    /**基于otherBody的角度偏移量，也是selfBody的目标角度*/\r\n    get angularOffset(): number {\r\n        return this._angularOffset;\r\n    }\r\n\r\n    set angularOffset(value: number) {\r\n        this._angularOffset = value;\r\n        if (this._joint) this._joint.SetAngularOffset(value);\r\n    }\r\n\r\n    /**当selfBody偏离目标位置时，为使其恢复到目标位置，马达关节所施加的最大作用力*/\r\n    get maxForce(): number {\r\n        return this._maxForce;\r\n    }\r\n\r\n    set maxForce(value: number) {\r\n        this._maxForce = value;\r\n        if (this._joint) this._joint.SetMaxForce(value);\r\n    }\r\n\r\n    /**当selfBody角度与目标角度不同时，为使其达到目标角度，马达关节施加的最大扭力*/\r\n    get maxTorque(): number {\r\n        return this._maxTorque;\r\n    }\r\n\r\n    set maxTorque(value: number) {\r\n        this._maxTorque = value;\r\n        if (this._joint) this._joint.SetMaxTorque(value);\r\n    }\r\n\r\n    /**selfBody向目标位置移动时的缓动因子，取值0~1，值越大速度越快*/\r\n    get correctionFactor(): number {\r\n        return this._correctionFactor;\r\n    }\r\n\r\n    set correctionFactor(value: number) {\r\n        this._correctionFactor = value;\r\n        if (this._joint) this._joint.SetCorrectionFactor(value);\r\n    }\r\n}","import { JointBase } from \"./JointBase\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Event } from \"../../events/Event\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\nimport { ILaya } from \"../../../ILaya\";\r\n\r\n/**\r\n * 鼠标关节：鼠标关节用于通过鼠标来操控物体。它试图将物体拖向当前鼠标光标的位置。而在旋转方面就没有限制。\r\n */\r\nexport class MouseJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]关节的自身刚体*/\r\n    selfBody: RigidBody;\r\n    /**[首次设置有效]关节的链接点，是相对于自身刚体的左上角位置偏移，如果不设置，则根据鼠标点击点作为连接点*/\r\n    anchor: any[];\r\n\r\n    /**鼠标关节在拖曳刚体bodyB时施加的最大作用力*/\r\n    private _maxForce: number = 10000;\r\n    /**弹簧系统的震动频率，可以视为弹簧的弹性系数，通常频率应该小于时间步长频率的一半*/\r\n    private _frequency: number = 5;\r\n    /**刚体在回归到节点过程中受到的阻尼比，建议取值0~1*/\r\n    private _dampingRatio: number = 0.7;\r\n\r\n    protected _onEnable(): void {\r\n        super._onEnable();\r\n        this.owner.on(Event.MOUSE_DOWN, this, this.onMouseDown);\r\n    }\r\n\r\n    private onMouseDown(): void {\r\n        this._createJoint();\r\n        ILaya.stage.on(Event.MOUSE_MOVE, this, this.onMouseMove);\r\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n    }\r\n    /**\r\n     * @override\r\n     * \r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            this.selfBody = this.selfBody || this.owner.getComponent(RigidBody);\r\n            if (!this.selfBody) throw \"selfBody can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = MouseJoint._temp || (MouseJoint._temp = new box2d.b2MouseJointDef());\r\n            if (this.anchor) {\r\n                var anchorPos: Point = (<Sprite>this.selfBody.owner).localToGlobal(Point.TEMP.setTo(this.anchor[0], this.anchor[1]), false, Physics.I.worldRoot);\r\n            } else {\r\n                anchorPos = Physics.I.worldRoot.globalToLocal(Point.TEMP.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY));\r\n            }\r\n            var anchorVec: any = new box2d.b2Vec2(anchorPos.x / Physics.PIXEL_RATIO, anchorPos.y / Physics.PIXEL_RATIO);\r\n            def.bodyA = Physics.I._emptyBody;\r\n            def.bodyB = this.selfBody.getBody();\r\n            def.target = anchorVec;\r\n            box2d.b2LinearStiffness(def, this._frequency, this._dampingRatio, def.bodyA, def.bodyB);\r\n            // def.stiffness = this._stiffness;\r\n            // def.damping = this._damping;\r\n            def.maxForce = this._maxForce;\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n\r\n    private onStageMouseUp(): void {\r\n        ILaya.stage.off(Event.MOUSE_MOVE, this, this.onMouseMove);\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n\r\n        super._onDisable();\r\n    }\r\n\r\n    private onMouseMove(): void {\r\n        this._joint.SetTarget(new (<any>window).box2d.b2Vec2(Physics.I.worldRoot.mouseX / Physics.PIXEL_RATIO, Physics.I.worldRoot.mouseY / Physics.PIXEL_RATIO));\r\n    }\r\n\r\n    protected _onDisable(): void {\r\n        super._onDisable();\r\n\r\n        this.owner.off(Event.MOUSE_DOWN, this, this.onMouseDown);\r\n    }\r\n\r\n    /**鼠标关节在拖曳刚体bodyB时施加的最大作用力*/\r\n    get maxForce(): number {\r\n        return this._maxForce;\r\n    }\r\n\r\n    set maxForce(value: number) {\r\n        this._maxForce = value;\r\n        if (this._joint) this._joint.SetMaxForce(value);\r\n    }\r\n\r\n    /**弹簧系统的震动频率，可以视为弹簧的弹性系数，通常频率应该小于时间步长频率的一半*/\r\n    get frequency(): number {\r\n        return this._frequency;\r\n    }\r\n\r\n    set frequency(value: number) {\r\n        this._frequency = value;\r\n        if (this._joint) {\r\n            let out: any = {};\r\n            let box2d: any = (<any>window).box2d;\r\n            let bodyA = Physics.I._emptyBody;\r\n            let bodyB = this.selfBody.getBody();\r\n            box2d.b2LinearStiffness(out, this._frequency, this._dampingRatio, bodyA, bodyB);\r\n\r\n            this._joint.SetStiffness(out.stiffness);\r\n            this._joint.SetDamping(out.damping);\r\n        }\r\n    }\r\n\r\n    /**刚体在回归到节点过程中受到的阻尼比，建议取值0~1*/\r\n    get damping(): number {\r\n        return this._dampingRatio;\r\n    }\r\n\r\n    set damping(value: number) {\r\n        this._dampingRatio = value;\r\n        if (this._joint) {\r\n            let out: any = {};\r\n            let box2d: any = (<any>window).box2d;\r\n            let bodyA = Physics.I._emptyBody;\r\n            let bodyB = this.selfBody.getBody();\r\n            box2d.b2LinearStiffness(out, this._frequency, this._dampingRatio, bodyA, bodyB);\r\n\r\n            // this._joint.SetStiffness(out.stiffness); // 修改 dampingRatio 最终只影响 damping\r\n            this._joint.SetDamping(out.damping);\r\n        }\r\n    }\r\n}\r\n","import { JointBase } from \"./JointBase\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\n\r\n/**\r\n * 平移关节：移动关节允许两个物体沿指定轴相对移动，它会阻止相对旋转\r\n */\r\nexport class PrismaticJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]关节的自身刚体*/\r\n    selfBody: RigidBody;\r\n    /**[首次设置有效]关节的连接刚体，可不设置，默认为左上角空刚体*/\r\n    otherBody: RigidBody;\r\n    /**[首次设置有效]关节的控制点，是相对于自身刚体的左上角位置偏移*/\r\n    anchor: any[] = [0, 0];\r\n    /**[首次设置有效]一个向量值，描述运动方向，比如1,0是沿X轴向右*/\r\n    axis: any[] = [1, 0];\r\n    /**[首次设置有效]两个刚体是否可以发生碰撞，默认为false*/\r\n    collideConnected: boolean = false;\r\n\r\n    /**是否开启马达，开启马达可使目标刚体运动*/\r\n    private _enableMotor: boolean = false;\r\n    /**启用马达后，在axis坐标轴上移动可以达到的最大速度*/\r\n    private _motorSpeed: number = 0;\r\n    /**启用马达后，可以施加的最大作用力*/\r\n    private _maxMotorForce: number = 10000;\r\n\r\n    /**是否对刚体的移动范围加以约束*/\r\n    private _enableLimit: boolean = false;\r\n    /**启用约束后，刚体移动范围的下限，是距离anchor的偏移量*/\r\n    private _lowerTranslation: number = 0;\r\n    /**启用约束后，刚体移动范围的上限，是距离anchor的偏移量*/\r\n    private _upperTranslation: number = 0;\r\n    /**\r\n     * @override\r\n     * \r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            //if (!otherBody) throw \"otherBody can not be empty\";\r\n            this.selfBody = this.selfBody || this.owner.getComponent(RigidBody);\r\n            if (!this.selfBody) throw \"selfBody can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = PrismaticJoint._temp || (PrismaticJoint._temp = new box2d.b2PrismaticJointDef());\r\n            var anchorPos: Point = (<Sprite>this.selfBody.owner).localToGlobal(Point.TEMP.setTo(this.anchor[0], this.anchor[1]), false, Physics.I.worldRoot);\r\n            var anchorVec: any = new box2d.b2Vec2(anchorPos.x / Physics.PIXEL_RATIO, anchorPos.y / Physics.PIXEL_RATIO);\r\n            def.Initialize(this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody, this.selfBody.getBody(), anchorVec, new box2d.b2Vec2(this.axis[0], this.axis[1]));\r\n            def.enableMotor = this._enableMotor;\r\n            def.motorSpeed = this._motorSpeed;\r\n            def.maxMotorForce = this._maxMotorForce;\r\n            def.enableLimit = this._enableLimit;\r\n            def.lowerTranslation = this._lowerTranslation / Physics.PIXEL_RATIO;\r\n            def.upperTranslation = this._upperTranslation / Physics.PIXEL_RATIO;\r\n            def.collideConnected = this.collideConnected;\r\n\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n\r\n    /**是否开启马达，开启马达可使目标刚体运动*/\r\n    get enableMotor(): boolean {\r\n        return this._enableMotor;\r\n    }\r\n\r\n    set enableMotor(value: boolean) {\r\n        this._enableMotor = value;\r\n        if (this._joint) this._joint.EnableMotor(value);\r\n    }\r\n\r\n    /**启用马达后，在axis坐标轴上移动可以达到的最大速度*/\r\n    get motorSpeed(): number {\r\n        return this._motorSpeed;\r\n    }\r\n\r\n    set motorSpeed(value: number) {\r\n        this._motorSpeed = value;\r\n        if (this._joint) this._joint.SetMotorSpeed(value);\r\n    }\r\n\r\n    /**启用马达后，可以施加的最大作用力*/\r\n    get maxMotorForce(): number {\r\n        return this._maxMotorForce;\r\n    }\r\n\r\n    set maxMotorForce(value: number) {\r\n        this._maxMotorForce = value;\r\n        if (this._joint) this._joint.SetMaxMotorForce(value);\r\n    }\r\n\r\n    /**是否对刚体的移动范围加以约束*/\r\n    get enableLimit(): boolean {\r\n        return this._enableLimit;\r\n    }\r\n\r\n    set enableLimit(value: boolean) {\r\n        this._enableLimit = value;\r\n        if (this._joint) this._joint.EnableLimit(value);\r\n    }\r\n\r\n    /**启用约束后，刚体移动范围的下限，是距离anchor的偏移量*/\r\n    get lowerTranslation(): number {\r\n        return this._lowerTranslation;\r\n    }\r\n\r\n    set lowerTranslation(value: number) {\r\n        this._lowerTranslation = value;\r\n        if (this._joint) this._joint.SetLimits(value, this._upperTranslation);\r\n    }\r\n\r\n    /**启用约束后，刚体移动范围的上限，是距离anchor的偏移量*/\r\n    get upperTranslation(): number {\r\n        return this._upperTranslation;\r\n    }\r\n\r\n    set upperTranslation(value: number) {\r\n        this._upperTranslation = value;\r\n        if (this._joint) this._joint.SetLimits(this._lowerTranslation, value);\r\n    }\r\n}","import { JointBase } from \"./JointBase\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\n\r\n/**\r\n * 滑轮关节：它将两个物体接地(ground)并彼此连接，当一个物体上升，另一个物体就会下降\r\n */\r\nexport class PulleyJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]关节的自身刚体*/\r\n    selfBody: RigidBody;\r\n    /**[首次设置有效]关节的连接刚体*/\r\n    otherBody: RigidBody;\r\n    /**[首次设置有效]自身刚体链接点，是相对于自身刚体的左上角位置偏移*/\r\n    selfAnchor: any[] = [0, 0];\r\n    /**[首次设置有效]链接刚体链接点，是相对于otherBody的左上角位置偏移*/\r\n    otherAnchor: any[] = [0, 0];\r\n\r\n    /**[首次设置有效]滑轮上与节点selfAnchor相连接的节点，是相对于自身刚体的左上角位置偏移*/\r\n    selfGroundPoint: any[] = [0, 0];\r\n    /**[首次设置有效]滑轮上与节点otherAnchor相连接的节点，是相对于otherBody的左上角位置偏移*/\r\n    otherGroundPoint: any[] = [0, 0];\r\n    /**[首次设置有效]两刚体移动距离比率*/\r\n    ratio: number = 1.5;\r\n    /**[首次设置有效]两个刚体是否可以发生碰撞，默认为false*/\r\n    collideConnected: boolean = false;\r\n    /**\r\n     * @override\r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            if (!this.otherBody) throw \"otherBody can not be empty\";\r\n            this.selfBody = this.selfBody || this.owner.getComponent(RigidBody);\r\n            if (!this.selfBody) throw \"selfBody can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = PulleyJoint._temp || (PulleyJoint._temp = new box2d.b2PulleyJointDef());\r\n            var posA: Point = ((<Sprite>this.otherBody.owner)).localToGlobal(Point.TEMP.setTo(this.otherAnchor[0], this.otherAnchor[1]), false, Physics.I.worldRoot);\r\n            var anchorVecA: any = new box2d.b2Vec2(posA.x / Physics.PIXEL_RATIO, posA.y / Physics.PIXEL_RATIO);\r\n            var posB: Point = ((<Sprite>this.selfBody.owner)).localToGlobal(Point.TEMP.setTo(this.selfAnchor[0], this.selfAnchor[1]), false, Physics.I.worldRoot);\r\n            var anchorVecB: any = new box2d.b2Vec2(posB.x / Physics.PIXEL_RATIO, posB.y / Physics.PIXEL_RATIO);\r\n            var groundA: Point = ((<Sprite>this.otherBody.owner)).localToGlobal(Point.TEMP.setTo(this.otherGroundPoint[0], this.otherGroundPoint[1]), false, Physics.I.worldRoot);\r\n            var groundVecA: any = new box2d.b2Vec2(groundA.x / Physics.PIXEL_RATIO, groundA.y / Physics.PIXEL_RATIO);\r\n            var groundB: Point = ((<Sprite>this.selfBody.owner)).localToGlobal(Point.TEMP.setTo(this.selfGroundPoint[0], this.selfGroundPoint[1]), false, Physics.I.worldRoot);\r\n            var groundVecB: any = new box2d.b2Vec2(groundB.x / Physics.PIXEL_RATIO, groundB.y / Physics.PIXEL_RATIO);\r\n\r\n            def.Initialize(this.otherBody.getBody(), this.selfBody.getBody(), groundVecA, groundVecB, anchorVecA, anchorVecB, this.ratio);\r\n            def.collideConnected = this.collideConnected;\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n}","import { JointBase } from \"./JointBase\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\n\r\n/**\r\n * 旋转关节强制两个物体共享一个锚点，两个物体相对旋转\r\n */\r\nexport class RevoluteJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]关节的自身刚体*/\r\n    selfBody: RigidBody;\r\n    /**[首次设置有效]关节的连接刚体，可不设置*/\r\n    otherBody: RigidBody;\r\n    /**[首次设置有效]关节的链接点，是相对于自身刚体的左上角位置偏移*/\r\n    anchor: any[] = [0, 0];\r\n    /**[首次设置有效]两个刚体是否可以发生碰撞，默认为false*/\r\n    collideConnected: boolean = false;\r\n\r\n    /**是否开启马达，开启马达可使目标刚体运动*/\r\n    private _enableMotor: boolean = false;\r\n    /**启用马达后，可以达到的最大旋转速度*/\r\n    private _motorSpeed: number = 0;\r\n    /**启用马达后，可以施加的最大扭距，如果最大扭矩太小，会导致不旋转*/\r\n    private _maxMotorTorque: number = 10000;\r\n\r\n    /**是否对刚体的旋转范围加以约束*/\r\n    private _enableLimit: boolean = false;\r\n    /**启用约束后，刚体旋转范围的下限弧度*/\r\n    private _lowerAngle: number = 0;\r\n    /**启用约束后，刚体旋转范围的上限弧度*/\r\n    private _upperAngle: number = 0;\r\n    /**\r\n     * @override\r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            //if (!otherBody) throw \"otherBody can not be empty\";\r\n            this.selfBody = this.selfBody || this.owner.getComponent(RigidBody);\r\n            if (!this.selfBody) throw \"selfBody can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = RevoluteJoint._temp || (RevoluteJoint._temp = new box2d.b2RevoluteJointDef());\r\n            var anchorPos: Point = (<Sprite>this.selfBody.owner).localToGlobal(Point.TEMP.setTo(this.anchor[0], this.anchor[1]), false, Physics.I.worldRoot);\r\n            var anchorVec: any = new box2d.b2Vec2(anchorPos.x / Physics.PIXEL_RATIO, anchorPos.y / Physics.PIXEL_RATIO);\r\n            def.Initialize(this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody, this.selfBody.getBody(), anchorVec);\r\n            def.enableMotor = this._enableMotor;\r\n            def.motorSpeed = this._motorSpeed;\r\n            def.maxMotorTorque = this._maxMotorTorque;\r\n            def.enableLimit = this._enableLimit;\r\n            def.lowerAngle = this._lowerAngle;\r\n            def.upperAngle = this._upperAngle;\r\n            def.collideConnected = this.collideConnected;\r\n\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n\r\n    /**是否开启马达，开启马达可使目标刚体运动*/\r\n    get enableMotor(): boolean {\r\n        return this._enableMotor;\r\n    }\r\n\r\n    set enableMotor(value: boolean) {\r\n        this._enableMotor = value;\r\n        if (this._joint) this._joint.EnableMotor(value);\r\n    }\r\n\r\n    /**启用马达后，可以达到的最大旋转速度*/\r\n    get motorSpeed(): number {\r\n        return this._motorSpeed;\r\n    }\r\n\r\n    set motorSpeed(value: number) {\r\n        this._motorSpeed = value;\r\n        if (this._joint) this._joint.SetMotorSpeed(value);\r\n    }\r\n\r\n    /**启用马达后，可以施加的最大扭距，如果最大扭矩太小，会导致不旋转*/\r\n    get maxMotorTorque(): number {\r\n        return this._maxMotorTorque;\r\n    }\r\n\r\n    set maxMotorTorque(value: number) {\r\n        this._maxMotorTorque = value;\r\n        if (this._joint) this._joint.SetMaxMotorTorque(value);\r\n    }\r\n\r\n    /**是否对刚体的旋转范围加以约束*/\r\n    get enableLimit(): boolean {\r\n        return this._enableLimit;\r\n    }\r\n\r\n    set enableLimit(value: boolean) {\r\n        this._enableLimit = value;\r\n        if (this._joint) this._joint.EnableLimit(value);\r\n    }\r\n\r\n    /**启用约束后，刚体旋转范围的下限弧度*/\r\n    get lowerAngle(): number {\r\n        return this._lowerAngle;\r\n    }\r\n\r\n    set lowerAngle(value: number) {\r\n        this._lowerAngle = value;\r\n        if (this._joint) this._joint.SetLimits(value, this._upperAngle);\r\n    }\r\n\r\n    /**启用约束后，刚体旋转范围的上限弧度*/\r\n    get upperAngle(): number {\r\n        return this._upperAngle;\r\n    }\r\n\r\n    set upperAngle(value: number) {\r\n        this._upperAngle = value;\r\n        if (this._joint) this._joint.SetLimits(this._lowerAngle, value);\r\n    }\r\n}","import { JointBase } from \"./JointBase\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\n\r\n/**\r\n * 焊接关节：焊接关节的用途是使两个物体不能相对运动，受到关节的限制，两个刚体的相对位置和角度都保持不变，看上去像一个整体\r\n */\r\nexport class WeldJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]关节的自身刚体*/\r\n    selfBody: RigidBody;\r\n    /**[首次设置有效]关节的连接刚体*/\r\n    otherBody: RigidBody;\r\n    /**[首次设置有效]关节的链接点，是相对于自身刚体的左上角位置偏移*/\r\n    anchor: any[] = [0, 0];\r\n    /**[首次设置有效]两个刚体是否可以发生碰撞，默认为false*/\r\n    collideConnected: boolean = false;\r\n\r\n   /**弹簧系统的震动频率，可以视为弹簧的弹性系数，通常频率应该小于时间步长频率的一半*/\r\n   private _frequency: number = 5;\r\n   /**刚体在回归到节点过程中受到的阻尼比，建议取值0~1*/\r\n   private _dampingRatio: number = 0.7;\r\n    /**\r\n     * @override\r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            if (!this.otherBody) throw \"otherBody can not be empty\";\r\n            this.selfBody = this.selfBody || this.owner.getComponent(RigidBody);\r\n            if (!this.selfBody) throw \"selfBody can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = WeldJoint._temp || (WeldJoint._temp = new box2d.b2WeldJointDef());\r\n            var anchorPos: Point = (<Sprite>this.selfBody.owner).localToGlobal(Point.TEMP.setTo(this.anchor[0], this.anchor[1]), false, Physics.I.worldRoot);\r\n            var anchorVec: any = new box2d.b2Vec2(anchorPos.x / Physics.PIXEL_RATIO, anchorPos.y / Physics.PIXEL_RATIO);\r\n            def.Initialize(this.otherBody.getBody(), this.selfBody.getBody(), anchorVec);\r\n            box2d.b2AngularStiffness(def, this._frequency, this._dampingRatio, def.bodyA, def.bodyB);\r\n            // def.stiffness = this._stiffness;\r\n            // def.damping = this._damping;\r\n            def.collideConnected = this.collideConnected;\r\n\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n\r\n    /**弹簧系统的震动频率，可以视为弹簧的弹性系数，通常频率应该小于时间步长频率的一半*/\r\n    get frequency(): number {\r\n        return this._frequency;\r\n    }\r\n\r\n    set frequency(value: number) {\r\n        this._frequency = value;\r\n        if (this._joint) {\r\n            let out: any = {};\r\n            let box2d: any = (<any>window).box2d;\r\n            let bodyA = this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody;\r\n            let bodyB = this.selfBody.getBody();\r\n            box2d.b2AngularStiffness(out, this._frequency, this._dampingRatio, bodyA, bodyB);\r\n\r\n            this._joint.SetStiffness(out.stiffness);\r\n            this._joint.SetDamping(out.damping);\r\n        }\r\n    }\r\n\r\n    /**刚体在回归到节点过程中受到的阻尼比，建议取值0~1*/\r\n    get damping(): number {\r\n        return this._dampingRatio;\r\n    }\r\n\r\n    set damping(value: number) {\r\n        this._dampingRatio = value;\r\n        if (this._joint) {\r\n            let out: any = {};\r\n            let box2d: any = (<any>window).box2d;\r\n            let bodyA = this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody;\r\n            let bodyB = this.selfBody.getBody();\r\n            box2d.b2AngularStiffness(out, this._frequency, this._dampingRatio, bodyA, bodyB);\r\n\r\n            // this._joint.SetStiffness(out.stiffness); // 修改 dampingRatio 最终只影响 damping\r\n            this._joint.SetDamping(out.damping);\r\n        }\r\n    }\r\n}","import { JointBase } from \"./JointBase\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Physics } from \"../Physics\"\r\nimport { RigidBody } from \"../RigidBody\"\r\n\r\n/**\r\n * 轮子关节：围绕节点旋转，包含弹性属性，使得刚体在节点位置发生弹性偏移\r\n */\r\nexport class WheelJoint extends JointBase {\r\n    /**@private */\r\n    private static _temp: any;\r\n    /**[首次设置有效]关节的自身刚体*/\r\n    selfBody: RigidBody;\r\n    /**[首次设置有效]关节的连接刚体*/\r\n    otherBody: RigidBody;\r\n    /**[首次设置有效]关节的链接点，是相对于自身刚体的左上角位置偏移*/\r\n    anchor: any[] = [0, 0];\r\n    /**[首次设置有效]两个刚体是否可以发生碰撞，默认为false*/\r\n    collideConnected: boolean = false;\r\n    /**[首次设置有效]一个向量值，描述运动方向，比如1,0是沿X轴向右*/\r\n    axis: any[] = [1, 0];\r\n\r\n    /**弹簧系统的震动频率，可以视为弹簧的弹性系数，通常频率应该小于时间步长频率的一半*/\r\n    private _frequency: number = 5;\r\n    /**刚体在回归到节点过程中受到的阻尼比，建议取值0~1*/\r\n    private _dampingRatio: number = 0.7;\r\n\r\n    /**是否开启马达，开启马达可使目标刚体运动*/\r\n    private _enableMotor: boolean = false;\r\n    /**启用马达后，可以达到的最大旋转速度*/\r\n    private _motorSpeed: number = 0;\r\n    /**启用马达后，可以施加的最大扭距，如果最大扭矩太小，会导致不旋转*/\r\n    private _maxMotorTorque: number = 10000;\r\n\r\n     /**是否对刚体的移动范围加以约束*/\r\n     private _enableLimit: boolean = true;\r\n     /**启用约束后，刚体移动范围的下限，是距离anchor的偏移量*/\r\n     private _lowerTranslation: number = 0;\r\n     /**启用约束后，刚体移动范围的上限，是距离anchor的偏移量*/\r\n     private _upperTranslation: number = 0;\r\n     \r\n    /**\r\n     * @override\r\n     */\r\n    protected _createJoint(): void {\r\n        if (!this._joint) {\r\n            if (!this.otherBody) throw \"otherBody can not be empty\";\r\n            this.selfBody = this.selfBody || this.owner.getComponent(RigidBody);\r\n            if (!this.selfBody) throw \"selfBody can not be empty\";\r\n\r\n            var box2d: any = (<any>window).box2d;\r\n            var def: any = WheelJoint._temp || (WheelJoint._temp = new box2d.b2WheelJointDef());\r\n            var anchorPos: Point = (<Sprite>this.selfBody.owner).localToGlobal(Point.TEMP.setTo(this.anchor[0], this.anchor[1]), false, Physics.I.worldRoot);\r\n            var anchorVec: any = new box2d.b2Vec2(anchorPos.x / Physics.PIXEL_RATIO, anchorPos.y / Physics.PIXEL_RATIO);\r\n            def.Initialize(this.otherBody.getBody(), this.selfBody.getBody(), anchorVec, new box2d.b2Vec2(this.axis[0], this.axis[1]));\r\n            def.enableMotor = this._enableMotor;\r\n            def.motorSpeed = this._motorSpeed;\r\n            def.maxMotorTorque = this._maxMotorTorque;\r\n            box2d.b2LinearStiffness(def, this._frequency, this._dampingRatio, def.bodyA, def.bodyB);\r\n            // def.stiffness = this._stiffness;\r\n            // def.damping = this._damping;\r\n            def.collideConnected = this.collideConnected;\r\n            def.enableLimit = this._enableLimit;\r\n            def.lowerTranslation = this._lowerTranslation / Physics.PIXEL_RATIO;\r\n            def.upperTranslation = this._upperTranslation / Physics.PIXEL_RATIO;\r\n\r\n            this._joint = Physics.I._createJoint(def);\r\n        }\r\n    }\r\n\r\n    /**弹簧系统的震动频率，可以视为弹簧的弹性系数，通常频率应该小于时间步长频率的一半*/\r\n    get frequency(): number {\r\n        return this._frequency;\r\n    }\r\n\r\n    set frequency(value: number) {\r\n        this._frequency = value;\r\n        if (this._joint) {\r\n            let out: any = {};\r\n            let box2d: any = (<any>window).box2d;\r\n            let bodyA = this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody;\r\n            let bodyB = this.selfBody.getBody();\r\n            box2d.b2LinearStiffness(out, this._frequency, this._dampingRatio, bodyA, bodyB);\r\n\r\n            this._joint.SetStiffness(out.stiffness);\r\n            this._joint.SetDamping(out.damping);\r\n        }\r\n    }\r\n\r\n    /**刚体在回归到节点过程中受到的阻尼比，建议取值0~1*/\r\n    get damping(): number {\r\n        return this._dampingRatio;\r\n    }\r\n\r\n    set damping(value: number) {\r\n        this._dampingRatio = value;\r\n        if (this._joint) {\r\n            let out: any = {};\r\n            let box2d: any = (<any>window).box2d;\r\n            let bodyA = this.otherBody ? this.otherBody.getBody() : Physics.I._emptyBody;\r\n            let bodyB = this.selfBody.getBody();\r\n            box2d.b2LinearStiffness(out, this._frequency, this._dampingRatio, bodyA, bodyB);\r\n\r\n            // this._joint.SetStiffness(out.stiffness); // 修改 dampingRatio 最终只影响 damping\r\n            this._joint.SetDamping(out.damping);\r\n        }\r\n    }\r\n\r\n    /**是否开启马达，开启马达可使目标刚体运动*/\r\n    get enableMotor(): boolean {\r\n        return this._enableMotor;\r\n    }\r\n\r\n    set enableMotor(value: boolean) {\r\n        this._enableMotor = value;\r\n        if (this._joint) this._joint.EnableMotor(value);\r\n    }\r\n\r\n    /**启用马达后，可以达到的最大旋转速度*/\r\n    get motorSpeed(): number {\r\n        return this._motorSpeed;\r\n    }\r\n\r\n    set motorSpeed(value: number) {\r\n        this._motorSpeed = value;\r\n        if (this._joint) this._joint.SetMotorSpeed(value);\r\n    }\r\n\r\n    /**启用马达后，可以施加的最大扭距，如果最大扭矩太小，会导致不旋转*/\r\n    get maxMotorTorque(): number {\r\n        return this._maxMotorTorque;\r\n    }\r\n\r\n    set maxMotorTorque(value: number) {\r\n        this._maxMotorTorque = value;\r\n        if (this._joint) this._joint.SetMaxMotorTorque(value);\r\n    }\r\n\r\n    /**是否对刚体的移动范围加以约束*/\r\n    get enableLimit(): boolean {\r\n        return this._enableLimit;\r\n    }\r\n\r\n    set enableLimit(value: boolean) {\r\n        this._enableLimit = value;\r\n        if (this._joint) this._joint.EnableLimit(value);\r\n    }\r\n\r\n    /**启用约束后，刚体移动范围的下限，是距离anchor的偏移量*/\r\n    get lowerTranslation(): number {\r\n        return this._lowerTranslation;\r\n    }\r\n\r\n    set lowerTranslation(value: number) {\r\n        this._lowerTranslation = value;\r\n        if (this._joint) this._joint.SetLimits(value, this._upperTranslation);\r\n    }\r\n\r\n    /**启用约束后，刚体移动范围的上限，是距离anchor的偏移量*/\r\n    get upperTranslation(): number {\r\n        return this._upperTranslation;\r\n    }\r\n\r\n    set upperTranslation(value: number) {\r\n        this._upperTranslation = value;\r\n        if (this._joint) this._joint.SetLimits(this._lowerTranslation, value);\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { Physics } from \"./Physics\";\r\n\r\n/**\r\n * 物理辅助线，调用PhysicsDebugDraw.enable()开启，或者通过IDE设置打开\r\n */\r\nexport class PhysicsDebugDraw extends Sprite {\r\n    /**@private */\r\n    m_drawFlags: number = 99;\r\n    /**@private */\r\n    static box2d: any;\r\n    /**@private */\r\n    static DrawString_s_color: any;\r\n    /**@private */\r\n    static DrawStringWorld_s_p: any;\r\n    /**@private */\r\n    static DrawStringWorld_s_cc: any;\r\n    /**@private */\r\n    static DrawStringWorld_s_color: any;\r\n    /**@private */\r\n    world: any;\r\n    /**@private */\r\n    private _camera: any;\r\n    /**@private */\r\n    private static _canvas: any;\r\n    /**@private */\r\n    private static _inited: boolean = false;\r\n    /**@private */\r\n    private _mG: Graphics;\r\n    /**@private */\r\n    private _textSp: Sprite;\r\n    /**@private */\r\n    private _textG: Graphics;\r\n\r\n    /**@private */\r\n    static init(): void {\r\n        PhysicsDebugDraw.box2d = Browser.window.box2d;\r\n        PhysicsDebugDraw.DrawString_s_color = new PhysicsDebugDraw.box2d.b2Color(0.9, 0.6, 0.6);\r\n        PhysicsDebugDraw.DrawStringWorld_s_p = new PhysicsDebugDraw.box2d.b2Vec2();\r\n        PhysicsDebugDraw.DrawStringWorld_s_cc = new PhysicsDebugDraw.box2d.b2Vec2();\r\n        PhysicsDebugDraw.DrawStringWorld_s_color = new PhysicsDebugDraw.box2d.b2Color(0.5, 0.9, 0.5);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        if (!PhysicsDebugDraw._inited) {\r\n            PhysicsDebugDraw._inited = true;\r\n            PhysicsDebugDraw.init();\r\n        }\r\n        this._camera = {};\r\n        this._camera.m_center = new PhysicsDebugDraw.box2d.b2Vec2(0, 0);\r\n        this._camera.m_extent = 25;\r\n        this._camera.m_zoom = 1;\r\n        this._camera.m_width = 1280;\r\n        this._camera.m_height = 800;\r\n\r\n        this._mG = new Graphics();\r\n        this.graphics = this._mG;\r\n\r\n        this._textSp = new Sprite();\r\n        this._textG = this._textSp.graphics;\r\n        this.addChild(this._textSp);\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    render(ctx: Context, x: number, y: number): void {\r\n        this._renderToGraphic();\r\n        super.render(ctx, x, y);\r\n    }\r\n\r\n    /**@private */\r\n    private lineWidth: number;\r\n\r\n    /**@private */\r\n    private _renderToGraphic(): void {\r\n        if (this.world) {\r\n            this._textG.clear();\r\n            this._mG.clear();\r\n            this._mG.save();\r\n            this._mG.scale(Physics.PIXEL_RATIO, Physics.PIXEL_RATIO);\r\n            this.lineWidth = 1 / Physics.PIXEL_RATIO;\r\n            if (this.world.DebugDraw) // ts源码版box2d\r\n                this.world.DebugDraw();\r\n            else\r\n                this.world.DrawDebugData();\r\n            this._mG.restore();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    SetFlags(flags: number): void {\r\n        this.m_drawFlags = flags;\r\n    }\r\n\r\n    /**@private */\r\n    GetFlags(): number {\r\n        return this.m_drawFlags;\r\n    }\r\n\r\n    /**@private */\r\n    AppendFlags(flags: number): void {\r\n        this.m_drawFlags |= flags;\r\n    }\r\n\r\n    /**@private */\r\n    ClearFlags(flags: any): void {\r\n        this.m_drawFlags &= ~flags;\r\n    }\r\n\r\n    /**@private */\r\n    PushTransform(xf: any): void {\r\n        this._mG.save();\r\n        this._mG.translate(xf.p.x, xf.p.y);\r\n        this._mG.rotate(xf.q.GetAngle());\r\n    }\r\n\r\n    /**@private */\r\n    PopTransform(xf: any): void {\r\n        this._mG.restore();\r\n    }\r\n\r\n    /**@private */\r\n    DrawPolygon(vertices: any, vertexCount: any, color: any): void {\r\n        var i: number, len: number;\r\n        len = vertices.length;\r\n        var points: any[];\r\n        points = [];\r\n        for (i = 0; i < vertexCount; i++) {\r\n            points.push(vertices[i].x, vertices[i].y);\r\n        }\r\n        this._mG.drawPoly(0, 0, points, null, color.MakeStyleString(1), this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    DrawSolidPolygon(vertices: any, vertexCount: any, color: any): void {\r\n        var i: number, len: number;\r\n        len = vertices.length;\r\n        var points: any[];\r\n        points = [];\r\n        for (i = 0; i < vertexCount; i++) {\r\n            points.push(vertices[i].x, vertices[i].y);\r\n        }\r\n        this._mG.drawPoly(0, 0, points, color.MakeStyleString(0.5), color.MakeStyleString(1), this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    DrawCircle(center: any, radius: any, color: any): void {\r\n        this._mG.drawCircle(center.x, center.y, radius, null, color.MakeStyleString(1), this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    DrawSolidCircle(center: any, radius: any, axis: any, color: any): void {\r\n        var cx: any = center.x;\r\n        var cy: any = center.y;\r\n        this._mG.drawCircle(cx, cy, radius, color.MakeStyleString(0.5), color.MakeStyleString(1), this.lineWidth);\r\n        this._mG.drawLine(cx, cy, (cx + axis.x * radius), (cy + axis.y * radius), color.MakeStyleString(1), this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    DrawParticles(centers: any, radius: any, colors: any, count: any): void {\r\n        if (colors !== null) {\r\n            for (var i: number = 0; i < count; ++i) {\r\n                var center: any = centers[i];\r\n                var color: any = colors[i];\r\n                this._mG.drawCircle(center.x, center.y, radius, color.MakeStyleString(), null, this.lineWidth);\r\n            }\r\n        } else {\r\n\r\n            for (i = 0; i < count; ++i) {\r\n                center = centers[i];\r\n                this._mG.drawCircle(center.x, center.y, radius, \"#ffff00\", null, this.lineWidth);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    DrawSegment(p1: any, p2: any, color: any): void {\r\n        this._mG.drawLine(p1.x, p1.y, p2.x, p2.y, color.MakeStyleString(1), this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    DrawTransform(xf: any): void {\r\n        this.PushTransform(xf);\r\n        this._mG.drawLine(0, 0, 1, 0, PhysicsDebugDraw.box2d.b2Color.RED.MakeStyleString(1), this.lineWidth);\r\n        this._mG.drawLine(0, 0, 0, 1, PhysicsDebugDraw.box2d.b2Color.GREEN.MakeStyleString(1), this.lineWidth);\r\n        this.PopTransform(xf);\r\n    }\r\n\r\n    /**@private */\r\n    DrawPoint(p: any, size: any, color: any): void {\r\n        size *= this._camera.m_zoom;\r\n        size /= this._camera.m_extent;\r\n        var hsize: any = size / 2;\r\n\r\n        this._mG.drawRect(p.x - hsize, p.y - hsize, size, size, color.MakeStyleString(), null);\r\n    }\r\n\r\n    /**@private */\r\n    DrawString(x: any, y: any, message: any): void {\r\n        this._textG.fillText(message, x, y, \"15px DroidSans\", PhysicsDebugDraw.DrawString_s_color.MakeStyleString(), \"left\");\r\n    }\r\n\r\n    /**@private */\r\n    DrawStringWorld(x: any, y: any, message: any): void {\r\n        this.DrawString(x, y, message);\r\n    }\r\n\r\n    /**@private */\r\n    DrawAABB(aabb: any, color: any): void {\r\n        var x: number = aabb.lowerBound.x;\r\n        var y: number = aabb.lowerBound.y;\r\n        var w: number = aabb.upperBound.x - aabb.lowerBound.x;\r\n        var h: number = aabb.upperBound.y - aabb.lowerBound.y;\r\n\r\n        this._mG.drawRect(x, y, w, h, null, color.MakeStyleString(), this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    static I: PhysicsDebugDraw;\r\n\r\n    /**\r\n     * 激活物理辅助线\r\n     * @param\tflags 位标记值，其值是AND的结果，其值有-1:显示形状，2:显示关节，4:显示AABB包围盒,8:显示broad-phase pairs,16:显示质心\r\n     * @return\t返回一个Sprite对象，本对象用来显示物理辅助线\r\n     */\r\n    static enable(flags: number = 99): PhysicsDebugDraw {\r\n        if (!PhysicsDebugDraw.I) {\r\n            var debug: PhysicsDebugDraw = new PhysicsDebugDraw();\r\n            debug.world = Physics.I.world;\r\n            debug.world.SetDebugDraw(debug);\r\n            debug.zOrder = 1000;\r\n            debug.m_drawFlags = flags;\r\n            ILaya.stage.addChild(debug);\r\n            PhysicsDebugDraw.I = debug;\r\n\r\n        }\r\n        return debug;\r\n    }\r\n}\r\n","import { ColliderBase } from \"./ColliderBase\";\r\nimport { Physics } from \"./Physics\";\r\n\r\n/**\r\n * 2D多边形碰撞体，暂时不支持凹多边形，如果是凹多边形，先手动拆分为多个凸多边形\r\n * 节点个数最多是b2_maxPolygonVertices，这数值默认是8，所以点的数量不建议超过8个，也不能小于3个\r\n */\r\nexport class PolygonCollider extends ColliderBase {\r\n    /**相对节点的x轴偏移*/\r\n    private _x: number = 0;\r\n    /**相对节点的y轴偏移*/\r\n    private _y: number = 0;\r\n    /**用逗号隔开的点的集合，格式：x,y,x,y ...*/\r\n    private _points: string = \"50,0,100,100,0,100\";\r\n    /**\r\n     * @override\r\n     */\r\n    protected getDef(): any {\r\n        if (!this._shape) {\r\n            this._shape = new (<any>window).box2d.b2PolygonShape();\r\n            this._setShape(false);\r\n        }\r\n        this.label = (this.label || \"PolygonCollider\");\r\n        return super.getDef();\r\n    }\r\n\r\n    private _setShape(re: boolean = true): void {\r\n        var arr: any[] = this._points.split(\",\");\r\n        var len: number = arr.length;\r\n        if (len < 6) throw \"PolygonCollider points must be greater than 3\";\r\n        if (len % 2 == 1) throw \"PolygonCollider points lenth must a multiplier of 2\";\r\n\r\n        var ps: any[] = [];\r\n        for (var i: number = 0, n: number = len; i < n; i += 2) {\r\n            ps.push(new (<any>window).box2d.b2Vec2((this._x + parseInt(arr[i])) / Physics.PIXEL_RATIO, (this._y + parseInt(arr[i + 1])) / Physics.PIXEL_RATIO));\r\n        }\r\n\r\n        this._shape.Set(ps, len / 2);\r\n        if (re) this.refresh();\r\n    }\r\n\r\n    /**相对节点的x轴偏移*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**相对节点的y轴偏移*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n\r\n    /**用逗号隔开的点的集合，格式：x,y,x,y ...*/\r\n    get points(): string {\r\n        return this._points;\r\n    }\r\n\r\n    set points(value: string) {\r\n        if (!value) throw \"PolygonCollider points cannot be empty\";\r\n        this._points = value;\r\n        if (this._shape) this._setShape();\r\n    }\r\n}","import { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { BoxCollider } from \"./BoxCollider\";\r\nimport { ChainCollider } from \"./ChainCollider\";\r\nimport { CircleCollider } from \"./CircleCollider\";\r\nimport { ColliderBase } from \"./ColliderBase\";\r\nimport { EdgeCollider } from \"./EdgeCollider\";\r\nimport { DistanceJoint } from \"./joint/DistanceJoint\";\r\nimport { GearJoint } from \"./joint/GearJoint\";\r\nimport { JointBase } from \"./joint/JointBase\";\r\nimport { MotorJoint } from \"./joint/MotorJoint\";\r\nimport { MouseJoint } from \"./joint/MouseJoint\";\r\nimport { PrismaticJoint } from \"./joint/PrismaticJoint\";\r\nimport { PulleyJoint } from \"./joint/PulleyJoint\";\r\nimport { RevoluteJoint } from \"./joint/RevoluteJoint\";\r\nimport { WeldJoint } from \"./joint/WeldJoint\";\r\nimport { WheelJoint } from \"./joint/WheelJoint\";\r\nimport { Physics } from \"./Physics\";\r\nimport { PhysicsDebugDraw } from \"./PhysicsDebugDraw\";\r\nimport { PolygonCollider } from \"./PolygonCollider\";\r\nimport { RigidBody } from \"./RigidBody\";\r\n\r\nlet c = ClassUtils.regClass;\r\nc(\"Physics\", Physics);\r\nc(\"PhysicsDebugDraw\", PhysicsDebugDraw);\r\nc(\"ColliderBase\", ColliderBase);\r\nc(\"BoxCollider\", BoxCollider);\r\nc(\"ChainCollider\", ChainCollider);\r\nc(\"CircleCollider\", CircleCollider);\r\nc(\"EdgeCollider\", EdgeCollider);\r\nc(\"PolygonCollider\", PolygonCollider);\r\nc(\"RigidBody\", RigidBody);\r\nc(\"JointBase\", JointBase);\r\nc(\"DistanceJoint\", DistanceJoint);\r\nc(\"GearJoint\", GearJoint);\r\nc(\"MotorJoint\", MotorJoint);\r\nc(\"MouseJoint\", MouseJoint);\r\nc(\"PrismaticJoint\", PrismaticJoint);\r\nc(\"PulleyJoint\", PulleyJoint);\r\nc(\"RevoluteJoint\", RevoluteJoint);\r\nc(\"WeldJoint\", WeldJoint);\r\nc(\"WheelJoint\", WheelJoint);"],"names":["EventDispatcher","LayaEnv","ILaya","Event","Point","Component","Utils","Sprite","Browser","Graphics","ClassUtils"],"mappings":"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"}