{"version":3,"names":["ClassUtils","static","className","classDef","_classMap","compClass","getClass","console","warn","dummy","Config","isAntialias","useWebGL2","FPS","useRetinalCanvas","animationInterval","webGL2D_MeshAllocMaxMem","defaultFontSize","defaultFont","isAlpha","isDepth","isfailIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","isStencil","preserveDrawingBuffer","printWebglOrder","fontFamilyMap","fixedFrames","destroyResourceImmediatelyDefault","Const","ENUM_TEXTALIGN_DEFAULT","ENUM_TEXTALIGN_CENTER","ENUM_TEXTALIGN_RIGHT","BYTES_PE","BYTES_PIDX","MAX_CLIP_SIZE","NodeFlags","NOT_ACTIVE","ACTIVE_INHIERARCHY","AWAKED","NOT_READY","DISPLAY","HAS_ZORDER","HAS_MOUSE","DISPLAYED_INSTAGE","DRAWCALL_OPTIMIZE","PROCESS_COLLISIONS","PROCESS_TRIGGERS","HAS_SCRIPT","ESCAPE_DRAWING_TO_TEXTURE","DISABLE_INNER_CLIPPING","DISABLE_OUTER_CLIPPING","DISABLE_VISIBILITY","EDITING_NODE","HIDE_BY_EDITOR","LOCK_BY_EDITOR","HideFlags","HideInHierarchy","HideInInspector","DontSave","HideAndDontSave","ILaya","Loader","Context","Browser","Laya","loader","timer","systemTimer","physicsTimer","stage","LayaEnv","version","isPlaying","isPreview","isConch","window","conch","Pool","sign","_poolDic","length","item","POOLSIGN","getPoolBySign","push","instance","constructor","_$gid","recover","cla","_CLSID","cls","getItemByClass","_getClassSign","rst","pool","pop","createFun","caller","call","_gid","_pi","Math","PI","_pi2","Utils","angle","radian","color","isNaN","str","toString","value","indexOf","p1","p2","arr","substring","split","len","i","parseFloat","round","charAt","temp","parseInt","source","array","points","x","y","radix","result","path","lastIndexOf","ext","toLowerCase","j","k","ext2","newExt","excludeDot","Component","this","_hideFlags","_status","_enabled","_singleton","_id","getGID","_initialize","hideFlags","_extra","hasHideFlag","flag","id","enabled","owner","_setActive","activeInHierarchy","awaked","destroyed","_isScript","_resetComp","_enableState","_setOwner","node","_setBit","_onAdded","onAdded","_onAwake","_onEnable","onEnable","_onDisable","onDisable","_onDestroy","_parse","data","interactMap","_parseInteractive","spriteMap","_cloneTo","dest","runInEditor","onAwake","_a","_is3D","_scene","_componentDriver","add","setupScript","_b","remove","offAllCaller","destroy","_destroyComponent","_destroy","second","onDestroy","onReset","recoverByClass","_toDestroys","Matrix","a","b","c","d","tx","ty","nums","_bTransform","_createFun","_checkTransform","identity","setTranslate","translate","scale","rotate","cos","sin","a1","c1","tx1","skew","tanX","tan","tanY","b1","invertTransformPoint","out","d1","n","a2","b2","c2","d2","tx2","ty2","setTo","transformPoint","transformPointN","getScaleX","sqrt","getScaleY","invert","concat","matrix","m1","m2","aa","ab","ac","ad","atx","aty","ba","bb","bc","bd","btx","bty","scaleEx","rotateEx","clone","dec","create","copyTo","EMPTY","TEMP","Point","reset","distance","normalize","copy","point","Rectangle","width","height","right","bottom","copyFrom","contains","intersects","rect","intersection","max","min","union","addPoint","equals","_getBoundPoints","_temB","sp","_temA","pointList","minX","maxX","minY","maxY","tPoint","isEmpty","HDREncodeFormat","TextureFormat","LayaGL","Delegate","_flag","_items","callback","target","args","index","findIndex","once","splice","clear","forEach","clearForTarget","count","invoke","cnt","fixedArgs","Event","touchId","delta","button","touchPos","type","MOUSE_EVENTS","has","currentTarget","stopPropagation","_stopped","touches","_touches","altKey","nativeEvent","ctrlKey","shiftKey","metaKey","key","keyCode","charCode","code","keyLocation","location","stageX","stageY","MOUSE_DOWN","MOUSE_UP","RIGHT_MOUSE_DOWN","RIGHT_MOUSE_UP","CLICK","RIGHT_CLICK","MOUSE_MOVE","MOUSE_OVER","MOUSE_OUT","MOUSE_WHEEL","ROLL_OVER","ROLL_OUT","DOUBLE_CLICK","MOUSE_DRAG","MOUSE_DRAG_END","DRAG_START","DRAG_MOVE","DRAG_END","KEY_DOWN","KEY_PRESS","KEY_UP","CHANGE","CHANGED","WILL_RESIZE","RESIZE","ADDED","REMOVED","UNDISPLAY","ERROR","COMPLETE","LOADED","READY","PROGRESS","INPUT","RENDER","OPEN","MESSAGE","CLOSE","FRAME","ENTER","SELECT","BLUR","FOCUS","VISIBILITY_CHANGE","FOCUS_CHANGE","PLAYED","PAUSED","STOPPED","START","END","LINK","LABEL","FULL_SCREEN_CHANGE","DEVICE_LOST","TRANSFORM_CHANGED","LAYERCHANGE","staticMask","TRIGGER_ENTER","TRIGGER_STAY","TRIGGER_EXIT","COLLISION_ENTER","COLLISION_STAY","COLLISION_EXIT","JOINT_BREAK","_Add_Script","Set","eventPool","EventDispatcher","onStartListeningToType","hasListener","listeners","_events","event","ret","Array","isArray","undefined","ev","on","listener","arguments","off","offAll","FilterMode","RenderCapable","_idCounter","_disposingCounter","_clearRetry","Resource","managed","super","_cpuMemory","_gpuMemory","_referenceCount","_destroyed","_idResourcesMap","lock","destroyedImmediately","cpuMemory","gpuMemory","size","cpuSize","gpuSize","loading","frameLoop","_destroyUnusedResources","force","destroyCnt","res","DEBUG","debug","obsolute","_obsolute","referenceCount","_setCPUMemory","offsetValue","_addCPUMemory","_setGPUMemory","_addGPUMemory","_setCreateURL","url","uuid","isCreateFromURL","endsWith","_addReference","_removeReference","_clearReference","_recoverResource","_disposeResource","_activeResource","Object","getPrototypeOf","name","clearRes","BaseTexture","format","_gammaSpace","_width","_height","_format","hdrEncodeFormat","NONE","dimension","_dimension","mipmap","_texture","mipmapCount","anisoLevel","filterMode","wrapModeU","wrapU","wrapModeV","wrapV","wrapModeW","wrapW","compareMode","textureContext","setTextureCompareMode","gammaCorrection","baseMipmapLevel","maxMipmapLevel","gammaSpace","useSRGBLoad","gpuCompressFormat","R8G8B8","R8G8B8A8","R16G16B16","R16G16B16A16","R32G32B32","R32G32B32A32","R5G6B5","Alpha8","DXT1","DXT3","DXT5","ETC1RGB","ETC2RGB","ETC2RGBA","ETC2SRGB_Alpha8","ETC2SRGB","PVRTCRGB_2BPPV","PVRTCRGBA_2BPPV","PVRTCRGB_4BPPV","PVRTCRGBA_4BPPV","ASTC4x4","ASTC4x4SRGB","ASTC6x6","ASTC6x6SRGB","ASTC8x8","ASTC8x8SRGB","ASTC10x10","ASTC10x10SRGB","ASTC12x12","ASTC12x12SRGB","_getFormatByteCount","_getSource","resource","defaultTexture","dispose","Byte","_xd_","_allocated_","_pos_","_length","_u8d_","Uint8Array","_d_","DataView","buffer","byteLength","_resizeBuffer","_sysEndian","ArrayBuffer","setInt16","Int16Array","LITTLE_ENDIAN","BIG_ENDIAN","rstBuffer","slice","endian","floor","newByteView","set","subarray","err","getString","readString","_rUTF","getUint16","getFloat32Array","start","readFloat32Array","end","v","Float32Array","getUint8Array","readUint8Array","getInt16Array","readInt16Array","getFloat32","readFloat32","getFloat64","readFloat64","writeFloat32","_ensureWrite","setFloat32","writeFloat64","setFloat64","getInt32","readInt32","float","getUint32","readUint32","writeInt32","setInt32","writeUint32","setUint32","getInt16","readInt16","us","readUint16","writeUint16","setUint16","writeInt16","getUint8","readUint8","writeUint8","setUint8","_getUInt8","pos","_readUInt8","_getUint16","_readUint16","_getMatrix","_readMatrix","f","String","fromCharCode","u","strs","_code","_offset","_lead","_trail","join","getCustomString","readCustomString","ulen","bytesAvailable","__getBuffer","writeUTFBytes","sz","charCodeAt","writeByte","Number","_p1","_p2","_b1","_b2","_b3","_b4","writeUTFString","tPos","dPos","writeUTFString32","readUTFString","readUTFBytes","readUTFString32","getUTFString","lastBytes","getUTFBytes","setInt8","readByte","getInt8","getByte","lengthToEnsure","writeArrayBuffer","arraybuffer","offset","uint8array","readArrayBuffer","HalfFloatUtils","e","_baseTable","_shiftTable","_mantissaTable","m","_exponentTable","_offsetTable","num","_floatView","_uint32View","float16bits","_buffer","Uint32Array","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","DDPF_LUMINANCE","DDSTextureInfo","isCube","bpp","blockBytes","dataOffset","compressed","sourceData","header","Int32Array","fourCC","isFourCC","isRGB","isLuminance","isCompressed","layaTexFormat","renderEngine","getCapable","COMPRESS_TEXTURE_S3TC","COMPRESS_TEXTURE_S3TC_SRGB","TextureDimension","GL_FORMAT_RGBA","GL_FORMAT_RGB","GL_DATATYPE_UNSIGNED_BYTE","KTXTextureInfo","compress","sRGB","bytesOfKeyValueData","headerOffset","glFormat","glInternalFormat","glType","glTypeSize","FileIdentifier","createKTX1Info","dataSize","BYTES_PER_ELEMENT","headerDataView","littleEndian","pixelWidth","pixelHeight","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","formatInfo","getLayaFormat","layaFormat","sRGBData","layaDemision","Tex2D","CubeArray","Cube","Texture2DArray","IdentifierByteSize","Texture2D","canRead","premultiplyAlpha","_canRead","createTextureInternal","pixels","grayTexture","setPixelsData","whiteTexture","blackTexture","TextureFormat_R16G16B16A16","floatPixle","Uint16Array","normalTexture","errorTexture","propertyParams","constructParams","pixelDataArrays","usePixelData","byte","texture","textureWidth","pixelDataLength","log","TextureFormat_R32G32B32A32","error","convertToNumber","imageSource","canread","srgb","pma","setImageData","setProperties","_nativeObj","_pixels","getImageData","canvas","context","drawImage","ddsInfo","getDDSTextureInfo","setDDSData","ktxInfo","getKTXTextureInfo","setKTXData","complete","load","TEXTURE2D","invertY","setTextureImageData","setTexturePixelsData","setSubPixelsData","xOffset","yOffset","mipmapLevel","generateMipmap","setTextureSubPixelsData","setTextureDDSData","setTextureKTXData","setHDRData","hdrInfo","setTextureHDRData","getPixels","Error","BaseShader","RenderState2D","mat","matArray","m4","EMPTYMAT4_ARRAY","TEMPMAT4_ARRAY","worldScissorTest","worldAlpha","RenderTargetFormat","RenderClearFlag","BlendFactor","_MAXSIZE","worldMatrix4","worldMatrix","matWVP","InvertY","Color","r","g","pow","equal","toFIxed","toLinear","gammaToLinearSpace","toGamma","linearToGammaSpace","cloneTo","destObject","destColor","setValue","fromArray","toArray","RED","GREEN","BLUE","CYAN","YELLOW","MAGENTA","GRAY","WHITE","BLACK","CLEAR","NativeRenderTexture2D","depthStencilFormat","DEPTH_16","_mgrKey","_colorFormat","_depthStencilFormat","_create","currentActive","_currentActive","getIsReady","sourceWidth","sourceHeight","offsetX","offsetY","samples","_start","_end","conchRenderTexture2D","_renderTarget","_textures","restore","getData","recycle","_clearColor","rtStack","defuv","flipyuv","RenderTexture2D","None","_invertY","_isCube","_samples","_generateMipmap","createRenderTargetInternal","rt","w","h","top","bindRenderTarget","bindoutScreenTarget","viewport","scissor","_lastRT","_lastWidth","_lastHeight","activeShader","unbindRenderTarget","clearRenderTexture","Depth","getRenderTextureData","_clearLinearColor","conchConfig","conchWebGL","WebGLRTMgr","dict","RenderStateContext","DepthTestCMD","createRenderStateComand","DepthMaskCMD","DepthFuncCMD","StencilTestCMD","StencilMaskCMD","StencilFuncCMD","stencilOpCMD","BlendCMD","BlendEquationCMD","BlendEquationSeparateCMD","BlendFuncCMD","BlendFuncSeperateCMD","CullFaceCMD","FrontFaceCMD","_GLRenderState","setDepthTest","setDepthMask","setDepthFunc","setStencilTest","setStencilMask","fun","ref","setStencilFunc","fail","zfail","zpass","setstencilOp","setBlend","blendEquation","setBlendEquation","blendEquationRGB","blendEquationAlpha","setBlendEquationSeparate","sFactor","dFactor","setBlendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","setBlendFuncSeperate","setCullFace","setFrontFace","stencilFuncArray","blendEquationSeparateArray","blenfunArray","blendFuncSeperateArray","stencilOpArray","BlendMode","fns","BlendNormal","BlendAdd","BlendMultiply","BlendScreen","BlendOverlay","BlendLight","BlendMask","BlendDestinationOut","BlendAddOld","BlendSourceAlpha","targetFns","BlendNormalTarget","BlendAddTarget","BlendMultiplyTarget","BlendScreenTarget","BlendOverlayTarget","BlendLightTarget","BlendAddTargetOld","One","OneMinusSourceAlpha","DestinationAlpha","DestinationColor","OneMinusSourceColor","Zero","SourceAlpha","activeBlendFunction","NAMES","TOINT","normal","multiply","screen","overlay","light","mask","lighter","lighter_old","add_old","NORMAL","MASK","LIGHTER","_rect1","_rect2","Texture","uv","uvrect","_w","_h","scaleRate","bitmap","outTexture","tex","btex","DEF_UV","dwidth","dheight","u1","v1","u2","v2","inAltasUVWidth","inAltasUVHeight","oriUV","moveUV","bitmapScale","texScaleRate","_uv","_bitmap","cb","recoverBitmap","Promise","resolve","then","bit","run","getTexturePixels","st","dst","tex2d","texw","texh","tex2dw","tex2dh","draww","drawh","marginL","marginT","rePosX","rePosY","wstride","pix","atlasPosX","atlasPosY","ctx","asBitmap","stu","stv","uk","vk","_drawTextureM","_targets","flush","dt","disposeBitmap","valid","getCachedClip","_clipCache","Map","get","createFromTexture","_sizeGrid","NO_UV","INV_UV","AssetDb","uuidMap","shaderNameMap","metaMap","UUID_to_URL","UUID_to_URL_async","URL_to_UUID_async","resolveURL","onResolve","startsWith","inst","shaderName_to_URL","shaderName","shaderName_to_URL_async","getMeta","getSubAssetURL","subAssetName","subAssetExt","replaceFileExtension","URL","_url","formatURL","_path","getPath","rootPath","basePath","protocol","host","pathname","overrideExtension","base","url2","char1","customFormat","ver","basePaths","hasExtOverrides","extold","getFileExtension","overrideFileExts","parts","ofs","originalExts","targetExt","IncludeFile","txt","codes","funs","curUseID","funnames","script","begin","words","splitToWords","substr","block","word","ofs2","useFuns","getWith","getFunsScript","funsdef","ShaderNode","includefiles","childs","text","z","setParent","parent","setCondition","condition","conditionType","replace","__condition","toscript","def","_toscript","__id","ifdef","__noCompileEnable","noCompile","o","funsCode","file","_clearCR","RegExp","_splitToWordExps3","ShaderCompile","fileName","allowReplace","includes","vs","ps","vsNode","psNode","includeNames","defs","_compileToTree","inc","_loadIncludesDeep","toLoad","includesCnt","map","tc","files","codeName","preNode","fname","lines","src","match","IFDEF_YES","IFDEF_ELSE","includeFile","includeName","loadIncludeFileSync","IFDEF_NO","IFDEF_PARENT","DefineDatas","_mask","_intersectionDefineDatas","define","unionMask","_index","maskStart","_value","endIndex","newValue","addDefineDatas","addMask","removeDefineDatas","removeMask","destDefineData","destMask","ShaderDefine","_texGammaDefine","ShaderVariant","shader","subShaderIndex","passIndex","defines","_subShaderIndex","_passIndex","_shader","defineNames","_defineNames","subShader","getSubShaderAt","pass","_passes","validDefine","_validDefine","defname","Shader3D","getDefineByName","_name","other","otherDefines","ShaderVariantCollection","_allCompiled","_variants","allCompiled","variantCount","variant","contatins","getByIndex","compile","variants","compileShaderByDefineNames","MathUtils3D","abs","zeroTolerance","n1","n2","isZero","MaxValue","MinValue","Deg2Rad","Vector2","nearEqual","writeTo","destVector2","s","forNativeElement","nativeElements","elements","rewriteNumProperty","proto","ZERO","ONE","TempVector2","Vector4","destVector4","t","ax","ay","az","aw","vector4","m4x4","vx","vy","vz","vw","me","lengthSquared","inverse","mineX","mineY","mineZ","mineW","maxeX","maxeY","maxeZ","maxeW","value1","value2","UnitX","UnitY","UnitZ","UnitW","tempVec4","Vector3","rotation","qx","qy","qz","qw","ix","iy","iz","iw","vector","transform","intermediate","_tempVector4","transformV3ToV4","vectorX","vectorY","vectorZ","transformElem","normalX","normalY","normalZ","coordinate","coordinateX","coordinateY","coordinateZ","bx","by","bz","vsub","vadd","dot","cross","destVector3","toDefault","_tempVector3","NegativeUnitX","ForwardRH","ForwardLH","Up","_DEFAULTELEMENTS","_tempV30","_tempV31","_tempV32","Matrix3x3","createElement","rotX","rotY","rotZ","rotW","xx","yy","zz","xy","zw","zx","yw","yz","xw","resultE","trans","rad","sou","souE","outE","left","l","l11","l12","l13","l21","l22","l23","l31","l32","l33","r11","r12","r13","r21","r22","r23","r31","r32","r33","cloneByArray","determinant","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","transpose","eye","up","subtract","v0","DEFAULT","Temp","TEMPVector30","TEMPVector31","TEMPVector32","TEMPVector33","_tempMatrix3x3","Quaternion","yaw","pitch","roll","halfRoll","halfPitch","halfYaw","sinRoll","cosRoll","sinPitch","cosPitch","sinYaw","cosYaw","lx","ly","lz","lw","rx","ry","rz","rw","axis","normalAxis","atan","from","asin","arcTanAngle","half","omega","cosom","sinom","scale0","scale1","bw","acos","amount","scaling","rotateX","rotateY","rotateZ","getYawPitchRoll","transformQuat","upe","angleTo","Matrix4x4","createRotationY","TEMPMatrix0","createRotationX","TEMPMatrix1","transformCoordinate","oe","a0","a3","invDot","forward","lookAt","rotationMatrix","forwardLookAt","lengthSq","matrix3x3","m11","m12","m13","m21","m22","m23","m31","m32","m33","NAN","NaN","_tempVector0","_tempVector1","_tempVector2","DEFAULTARRAY","m14","m24","m34","m41","m42","m43","m44","createFromYawPitchRoll","createRotationQuaternion","xz","rotationX","rotationY","rotationZ","rotationW","l14","l24","l34","l41","l42","l43","l44","r14","r24","r34","r41","r42","r43","r44","x2","y2","z2","yx","zy","wx","wy","wz","rot","sx","sy","oE","xaxis","yaxis","zaxis","fov","aspect","znear","zfar","yScale","halfWidth","halfHeight","createPerspectiveOffCenter","zRange","getElementByRowColumn","row","column","setElementByRowColumn","setRotation","setPosition","position","equalsOtherMatrix","decomposeTransRotScale","translation","_tempMatrix4x4","decomposeTransRotMatScale","createFromMatrix4x4","te","re","se","sX","sY","sZ","at","tempRight","decomposeYawPitchRoll","yawPitchRoll","atan2","ae","a03","a13","a23","a30","a31","a32","a33","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","objectPosition","cameraPosition","cameraUp","cameraForward","scalarLengthSquared","crosse","finale","diffee","obpose","mate","isIdentity","defined","num0","num1","v3","getTranslationVector","setTranslationVector","ve","getForward","setForward","getInvertFront","isInvert","DEFAULTINVERT","ShaderDataType","UniformBufferParamsType","RenderParams","WrapMode","ShaderDataDefaultValue","Int","Bool","Float","ShaderData","ownerResource","_ownerResource","applyUBO","_data","_defineDatas","_initData","_uniformBufferDatas","_uniformBuffersMap","uniformBufferDatas","uniformBuffersMap","_addCheckUBO","ubo","uboData","uboBuffer","_uniformParamsState","setDataByUniformBufferData","_gammaColorMap","applyUBOData","addDefine","removeDefine","hasDefine","clearDefine","getBool","setBool","getInt","setInt","_setData","getNumber","setNumber","getVector2","setVector2","getVector3","setVector3","getVector","setVector","getColor","setColor","gammaColor","linearColor","getLinearColor","getMatrix4x4","setMatrix4x4","getMatrix3x3","setMatrix3x3","getBuffer","setBuffer","setTexture","lastValue","shaderDefine","getTexture","getSourceIndex","setValueData","getValueData","setUniformBuffer","getUniformBuffer","setShaderData","uniformIndex","TextureCube","Buffer","getShaderData","destData","clonecolor","v4","_cloneUBO","uboDatas","UnifromBufferData","uniformParamsStat","_createBuffer","_updateFlag","_resetUpdateFlag","dataPos","_layoutMap","_addUniformParams","_bytelength","ceil","_getArraySize","uniformID","offsetadd","posAdd","posG","Vector4Array","propertyIDToName","MatrixArray","paramsInfo","_getParamsInfo","_setUpdateFlag","_has","setNumberbyIndex","setVector2byIndex","setVector3byIndex","setVector4byIndex","setMatrixbyIndex","setVector4ArraybyIndex","setMatrixArraybyIndex","getbyteLength","setVector4Array","propertyNameToID","info","vec","setMatrixArray","setVector4","setColorbyIndex","setMatrix","ubd","ShaderProcessInfo","ShaderCompileDefineBase","compiledObj","_cacheShaderHierarchy","_cacheSharders","_owner","_VS","_PS","_defs","_resizeCacheShaderMap","cacheMap","hierarchy","resizeLength","withCompile","compileDefine","debugMaskLength","debugDefineString","_debugDefineString","debugDefineMask","_debugDefineMask","debugMode","cacheShaders","maskLength","maxEndIndex","subMask","subCacheShaders","cacheKey","defineString","_defineString","_getNamesByDefineData","shaderProcessInfo","is2D","attributeMap","_attributeMap","uniformMap","_uniformMap","renderOBJCreate","createShaderInstance","defStr","defMask","ShaderPass","_tags","statefirst","_renderState","createRenderState","setNull","renderState","_addDebugShaderVariantCollection","outDebugDefines","outDebugDefineMask","dbugShaderVariantInfo","_debugShaderVariantInfo","debugSubShader","debugShader","_subShaders","debugShaderVariantCollection","IS2d","_debugDefineStrings","_debugDefineMasks","_defineStrings","defCommonStr","spriteCommonNode","_configDefineValues","nodeCommonMap","VertexElement","elementFormat","elementUsage","_elementFormat","_elementUsage","VertexElementFormat","_elementInfos","single","getParams","FLOAT","vector2","vector3","byte4","UNSIGNED_BYTE","byte3","byte2","short2","UNSIGNED_SHORT","short4","normalizedshort2","normalizedshort4","halfvector2","halfvector4","nbyte4","BYTE","element","Single","Byte4","Byte3","Byte2","ByteOne","Short2","Short4","NormalizedShort2","NormalizedShort4","HalfVector2","HalfVector4","NorByte4","VertexDeclaration","vertexStride","vertexElements","_uniqueIDCounter","_vertexElementsDic","_vertexStride","_vertexElements","_VAElements","_shaderValues","vertexElement","elmentInfo","getElementInfos","stride","shaderLocation","vertexElementCount","getVertexElementByIndex","getVertexElementByUsage","usage","VertexMesh","instanceWorldMatrixDeclaration","MESH_WORLDMATRIX_ROW0","MESH_WORLDMATRIX_ROW1","MESH_WORLDMATRIX_ROW2","MESH_WORLDMATRIX_ROW3","instanceSimpleAnimatorDeclaration","MESH_SIMPLEANIMATOR","instanceLightMapScaleOffsetDeclaration","MESH_LIGHTMAPSCALEOFFSET","vertexFlag","compatible","verDec","_vertexDeclarationMap","subFlags","MESH_POSITION0","MESH_NORMAL0","MESH_COLOR0","MESH_TEXTURECOORDINATE0","MESH_TEXTURECOORDINATE1","MESH_BLENDWEIGHT0","MESH_BLENDINDICES0","MESH_TANGENT0","MESH_CUSTOME0","MESH_CUSTOME1","MESH_CUSTOME2","MESH_CUSTOME3","SubShader","DefaultAttributeMap","uniformDefaultValue","_uniformBufferDataMap","_flags","_uniformDefaultValue","_uniformTypeMap","blockUniformMap","uniformName","uniformType","ShaderDataTypeToUniformBufferType","blockUniformIndexMap","blockData","unifromType","textureGammaDefine","defaultValue","obj","assign","IncludeUniformMap","setFlag","getFlag","addShaderPass","pipelineMode","_addShaderPass","shaderPass","_pipelineMode","_addIncludeUniform","includemap","ele","includeBindInfo","bindtypeMap","bindDefaultValue","shaderDataType","a_Position","a_Normal","a_Tangent0","a_Texcoord0","a_Texcoord1","a_Color","a_BoneWeights","a_BoneIndices","a_WorldMat","a_SimpleTextureParams","a_LightmapScaleOffset","enableInstancing","supportReflectionProbe","_enableInstancing","_supportReflectionProbe","defineData","maskMap","_maskMap","subMaskMap","_defineMap","counter","_defineCounter","addInclude","find","compileDefineDatas","_compileDefineDatas","_preCompileShader","subshader","addSubShader","passArray","VS","FS","pipeline","PERIOD_CUSTOM","PERIOD_MATERIAL","PERIOD_SPRITE","PERIOD_CAMERA","PERIOD_SCENE","_propertyNameMap","_propertyNameCounter","ShaderDefines2D","PRIMITIVE","FILTERGLOW","FILTERBLUR","FILTERCOLOR","COLORADD","WORLDMAT","FILLTEXTURE","MVP3D","GAMMASPACE","INVERTY","GAMMATEXTURE","TEXTURESHADER","PRIMITIVESHADER","initSprite2DCommandEncoder","UNIFORM_MMAT","UNIFORM_CLIPMATDIR","UNIFORM_CLIPMATPOS","UNIFORM_MMAT2","UNIFORM_SIZE","UNIFORM_CLIPOFF","UNIFORM_MVPMatrix","UNIFORM_SPRITETEXTURE","UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1","UNIFORM_BLURINFO","UNIFORM_COLORALPHA","UNIFORM_COLORMAT","UNIFORM_COLOR","UNIFORM_BLURINFO1","UNIFORM_BLURINFO2","UNIFORM_COLORADD","UNIFORM_TEXRANGE","commandUniform","createGlobalUniformMap","addShaderUniform","RenderInfo","loopStTm","loopCount","AtlasGrid","atlasID","_texCount","_rowInfo","_cells","_used","_init","addRect","pt","_get","_fill","_release","_clear","nWidth","nHeight","pCellBox","tm","nHeghit","_check","FontInfo","font","_family","_size","_italic","_bold","setFont","_lastFont","_lastFontInfo","_cache","_font","szpos","fpos","familys","RenderSpriteData","WordText","pagecharsCtx","_conchWordText","pageChars","scalex","scaley","setText","_text","cleanCache","chars","p","ri","splitRender","_splitRender","CharRenderInfo","char","deleted","orix","oriy","touchTick","isSpace","touch","curLoop","touchRect","ICharRender","fontsz","getWidth","canvasWidth","getCharBmp","lineWidth","colStr","strokeColStr","margin_left","margin_top","margin_right","margin_bottom","_window","win","doc","_document","document","userAgent","navigator","maxTouchPoints","platform","wxMiniGame","enable","tbMiniGame","aliPayMiniGame","isWXMiMi","ttMiniGame","biliMiniGame","qqMiniGame","hwMiniGame","bdMiniGame","miMiniGame","qgMiniGame","vvMiniGame","trace","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","bodyStyle","body","style","margin","overflow","metas","getElementsByTagName","viewportContent","meta","content","arr2","trim","appendChild","keys","onMobile","onIOS","onIPhone","onMac","onIPad","onAndroid","onWP","onQQBrowser","onMQQBrowser","onIE","ActiveXObject","onWeiXin","onSafari","onChrome","onPC","onFirefox","onEdge","onMiniGame","onBDMiniGame","onLayaRuntime","onQGMiniGame","onQQMiniGame","onBLMiniGame","onTTMiniGame","onHWMiniGame","onVVMiniGame","onKGMiniGame","onAlipayMiniGame","onTBMiniGame","PLATFORM_ANDROID","PLATFORM_IOS","PLATFORM_PC","_isMiniGame","__init__","getElementById","parentNode","removeChild","Date","now","clientWidth","_clientWidth","innerWidth","clientHeight","_clientHeight","innerHeight","documentElement","canvasRotation","pixelRatio","_pixelRatio","devicePixelRatio","container","_container","search","reg","unescape","__innerHeight","mainCanvas","hanzi","fontMap","measureText","isChinese","test","CharRender_Canvas","maxw","maxh","scalefont","useImageData","showdbg","lastScaleX","lastScaleY","maxTexW","maxTexH","scaleFontSize","showDbgInfo","supportImageData","getContext","willReadFrequently","setTransform","cri","getCharCanvas","clearW","clearH","clearRect","save","textBaseline","lineJoin","strokeStyle","strokeText","fillStyle","fillText","strokeRect","imgdt","bmpWidth","bmpHeight","textAlign","fillAndStrokeText","TextRender","fontSizeInfo","mapFont","fontID","fontScaleX","fontScaleY","_curStrPos","textAtlases","isoTextures","lastFont","fontSizeW","fontSizeH","fontSizeOffX","fontSizeOffY","renderPerChar","tmpAtlasPos","textureMem","bugIOS","miniadp","systemInfo","system","isWan1Wan","charRender","scaleFontWithCtx","textRenderInst","atlasWidth2","atlasWidth","getFontSizeInfo","offx","offy","fw","fh","standardFontSize","fontStr","getNextChar","state","filltext","strokeColor","parse","nTextAlign","_fast_filltext","getMatScaleX","getMatScaleY","maxFontScale","_italicDeg","wt","isWT","sameTexData","strWidth","hasFreedText","splitTex","forceSplitRender","curstr","stx","getCharRenderInfo","o1","texgen","genID","isotex","noAtlas","_drawResortedWords","startx","starty","samePagesData","isLastRender","_charSubmitCache","_enable","_curMat","pri","pisz","riSaved","drawTexAlign","_inner_drawTexture","txts","isoTexture","fid","atlas","charMaps","w1","TextTexture","getTextTexture","addChar","lineExt","imgdtRect","addBmpData","getAEmpty","TextAtlas","cleanAtlases","GC","destroyDt","destroyAtlasDt","totalUsedRateAtlas","curloop","maxWasteRateID","maxWasteRate","curatlas","curUsedCovRate","curUsedCovRateAtlas","waste","usedRate","lastTouchTm","showLog","destroyUnusedTextureDt","needGC","cleanMem","simClean","clean","checkBmpLine","ex","bmpData32","stpos","updateBbx","curbbx","onlyH","ey","minx","maxx","finfo","fontstr","szinfo","pixelBBX","tmpRI","bmpdt","sizeinfo","printDbgInfo","totalUsedRate","dtstr","_texW","_texH","showAtlas","bgcolor","Sprite","texttex","graphics","drawRect","drawTexture","addChild","filltext_native","useOldCharBook","forceWholeRender","checkCleanTextureDt","debugUV","texWidth","texHeight","atlasGridW","atlasgrid","setProtecteDist","discard","printDebugInfo","textureW","textureH","_discardTm","_glTexture","_render2DContext","render2DContext","recreateResource","_source","glTex","Bilinear","Clamp","fillWhite","addCharCanvas","u0","Uint8ClampedArray","canv","setTextureSubImageData","fill","setGlobalRepaint","curtm","cleanTm","poolLen","texw2","gridw2","drawOnScreen","Value2D","mainID","alpha","ALPHA","_cacheID","_mmat","_clipMatDir","_clipMatpos","_clipOff","textureHost","clipMatDir","clipMatPos","clipOff","_inClassCache","classT","_typeClass","globalShaderData","mainType","types","mmat","u_MvpMatrix","_textureHost","colorAdd","updateShaderData","renderstate2d","returnGamma","textrueReadGamma","Primitive","upload","material","_compileDefine","shaderIns","bind","uploadUniforms","_sprite2DUniformParamsMap","_sceneUniformParamsMap","_materialUniformParamsMap","shaderData","_defaultShader","setFilters","filters","typeDefine","action","release","SubmitKey","submitType","blendShader","copyFrom2","equal3_2","next","equal4_2","equal_3","SubmitCMD","_ref","_key","renderSubmit","apply","_this","getRenderType","releaseRender","POOL","thisobj","Filter","COLOR","GLOW","_filter","sprite","webglctx","_next","setColorFilter","_fun","svCP","tMatrix","tPadding","tHalfPadding","_cacheStyle","filterCache","getRepaint","_isHaveGlowFilter","getBounds","pivotX","pivotY","getSelfBounds","tSX","tSY","releaseRT","getRT","outRT","_getCacheStyle","pushRT","useRT","tX","tY","drawTarget","fil","_glRender","render","popRT","_drawRenderTexture","submit","addRenderObject","_COLOR_MAP","purple","orange","white","red","green","blue","black","yellow","gray","ColorUtils","arrColor","strColor","numColor","fromStringColor","toHexColor","_DEFAULT","_SAVE","_SAVE_SIZE","_initSaveMap","_initDefault","DELTA_INDEX","GRAY_MATRIX","IDENTITY_MATRIX","ColorFilter","_copyMatrix","_mat","_alpha","setByMatrix","mt","_matrix","adjustColor","brightness","contrast","saturation","hue","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_clampValue","_multiplyMatrix","x1","dx","col","_fixMatrix","val","limit","onAfterDeserialize","_color","_brightness","_contrast","_saturation","_hue","GrahamScan","p0","tempUse","_mPointList","getFrom","getFromR","pList","_getPoints","_tempPointList","_temPList","copyArray","pointListToPlist","scan","pListToPointList","PointSet","tmp","ch","_tmpDic","_temArr","dis","SpriteConst","RenderStatisticsInfo","BufferTargetType","BufferUsage","IndexFormat","TRANSFORM","BLEND","CANVAS","FILTERS","CLIP","STYLE","TEXTURE","GRAPHICS","LAYAGL3D","CUSTOM","ONECHILD","HITAREA","CHILDS","REPAINT_NONE","REPAINT_NODE","REPAINT_CACHE","REPAINT_ALL","Stat","views","checkUI","hide","_show","_currentShowArray","AllShow","_statUI","show","loop","_currentToggleArray","showToggle","_count","_timer","updateEngineData","delay","_fpsStr","renderSlow","update","trianglesFaces","getStatisticsInfo","Triangle","drawCall","DrawCall","instanceDrawCall","InstanceDrawCall","GPUMemory","textureMemory","TextureMemeory","renderTextureMemory","RenderTextureMemory","bufferMemory","BufferMemory","mode","clearStatisticsInfo","FPSStatUIParams","title","units","NodeStatUIParams","Sprite3DStatUIParams","TriangleFace","RenderNode","SkinRenderNode","ParticleRenderNode","FrustumCulling","UniformUpload","OpaqueDrawCall","TransDrawCall","DepthCastDrawCall","CMDDrawCall","BlitDrawCall","uploadUniformNum","memoryShow","renderShow","toogle_Shadow","toogle_MulLight","toogle_Light","toogle_Postprocess","toogle_AnimatorUpdate","toogle_PhysicsUpdate","toogle_Skin","toogle_Transparent","toogle_Particle","toogle_msaa","toogle_CameraCMD","toogle_Opaque","AllToggle","RenderModeToggle","RenderFuncToggle","spriteRenderUseCacheCount","canvasNormal","canvasBitmap","canvasReCache","spriteCount","sprite3DCount","renderNode","skinRenderNode","particleRenderNode","frustumCulling","uniformUpload","opaqueDrawCall","transDrawCall","depthCastDrawCall","cmdDrawCall","blitDrawCall","uploadUniform","enableShadow","enableMulLight","enableLight","enableCameraCMD","enablePostprocess","enableSkin","enableTransparent","enableParticle","enableAnimatorUpdate","enablePhysicsUpdate","enablemsaa","enableOpaque","SubmitBase","renderType","TYPE_2D","clipInfoID","_mesh","_blendFn","_renderType","_parent","_startIdx","_numEle","shaderValue","ID","RENDERBASE","getID","TYPE_CANVAS","TYPE_CMDSETRT","TYPE_CUSTOM","TYPE_BLURRT","TYPE_CMDDESTORYPRERT","TYPE_DISABLESTENCIL","TYPE_OTHERIBVB","TYPE_PRIMITIVE","TYPE_RT","TYPE_BLUR_RT","TYPE_TARGET","TYPE_CHANGE_VALUE","TYPE_SHAPE","TYPE_TEXTURE","TYPE_FILLTEXTURE","KEY_ONCE","KEY_FILLRECT","KEY_DRAWTEXTURE","KEY_VG","KEY_TRIANGLES","preRender","VertexAttributeLayout","vertexs","VAElements","attributeByteSize","instanceMode","vaelements","oneAttributeSize","vertexDeclaration","vdec","instanceBuffer","IPoint","_pool","layout","deepthEqaul","vaelemets","_vertexDeclaration","thisVaeEs","ii","nn","BufferState","_nativeVertexArrayObject","createVertexState","applyVertexBuffers","applyVertexBuffer","_vertexBuffers","applyIndexBuffers","applyIndexBuffer","_bindedIndexBuffer","applyState","vertexBuffers","indexBuffer","vertexlayout","getVertexLayoutByPool","unbind","unBind","bindVertexArray","_curBindedBufferState","unbindVertexArray","isbind","unbindVertexState","targetType","bufferUsageType","_byteLength","_glBuffer","createBuffer","_bufferType","_bufferUsage","bufferUsage","bindBuffer","unbindBuffer","IndexBuffer","_indexType","UInt16","_setIndexData","bufferOffset","curBufSta","setDataLength","setData","Buffer2D","_maxsize","_upload","_uploadSize","_bufferSize","_u8Array","constBuffer","bufferLength","setByteLength","needSize","old","needsz","_floatArray32","_bufferData","_checkArrayUse","buff","_uint32Array","_uint16Array","_bufferSubData","dataStart","dataLength","subBuffer","_bind_upload","_bind_subUpload","nsz","oldU8Arr","newbuffer","append","byteLen","appendU16Array","setNeedUpload","subUpload","scuess","FLOAT32","SHORT","IndexBuffer2D","Static","ELEMENT_ARRAY_BUFFER","buffer2D","_bindForVAO","destory","disposeResource","VertexBuffer","_instanceBuffer","VertexBuffer2D","ARRAY_BUFFER","appendArray","oldoff","deleteBuffer","Dynamic","Mesh2D","vballoc","iballoc","_stride","vertNum","indexNum","_applied","_quadNum","canReuse","_vb","_ib","createQuadIB","QuadNum","idx","curvert","setAttributes","attribs","_attribInfo","configVAO","_vao","useMesh","releaseMesh","clearVB","_gvaoid","MeshQuadTexture","const_stride","_fixattriInfo","_fixib","_maxIB","VertexDeclarition","mainctx","_POOL","addQuad","useTex","vb","vpos","vbdata","vbu32Arr","cpos","useTexVal","MeshTexture","addData","vertices","uvs","rgba","ib","vertsz","f32pos","ci","m00","m01","m10","vertN","stib","cidx","stibid","si","MeshVG","addVertAndIBToMesh","NativeWebGLCacheAsNormalCanvas","_context","_conchWebGLCacheAsNormalCanvas","startRec","endRec","isCacheValid","isTextNeedRestore","WebGLCacheAsNormalCanvas","submitStartPos","submitEndPos","submits","meshlist","cachedClipInfo","oldTx","oldTy","invMat","_globalClipMatrix","_incache","_submits","curm","getAMesh","_pathMesh","_triangleMesh","_curSubmit","_oldMesh","_oldPathMesh","_oldTriMesh","_oldMeshList","parsubmits","curclip","textNeedRestore","charRIs","flushsubmit","curSubmit","subm","releaseMem","matI","LayaGLQuickRunner","alpha_transform_drawLayaGL","alpha_drawLayaGL","transform_drawLayaGL","transform_drawNodes","alpha_transform_drawTexture","alpha_drawTexture","transform_drawTexture","drawLayaGL_drawNodes","_style","saveTransform","curMat","transformByMatrix","_isWidthSet","_isHeightSet","wRate","hRate","px","py","_getBit","restoreTransform","_needRepaint","globalAlpha","_graphics","_render","textLastRender","drawCallOptimize","drawingToTexture","_drawingToTexture","_children","_x","_y","visFlag","_visible","NativeFilter","drawTargetBlurFilter","strength","drawFilter","RenderSprite","NORENDER","_no","_transform","_blend","_canvas","_maskNative","_clip","_custom","_hitarea","_initRenderFun","onCreate","initRender","renders","_getTypeRender","tType","customRender","scrollRect","clipRect","hitArea","_hit","_unHit","enableCanvasRender","cacheAs","cacheNeedRebuild","isGlobalRepaint","_canvas_webgl_normal_repaint","_canvas_repaint","tRec","cacheRect","drawCanvas","scaleX","scaleY","scaleInfo","tCacheType","_calculateCacheRect","releaseContext","createContext","_applyFilters","staticCache","reCache","blendMode","globalCompositeOperation","preBlendMode","tRect","tmpRT","breakNextMerge","tmpTarget","shrink","getStyle","setBlendMode","recycleTarget","drawMask","drawMasked","drawMaskComposite","Bezier","_controlPoints","_calFun","getPoint2","_switchPoint","shift","p3","lineX","lineY","getPoint3","p4","insertPoints","dLen","getBezierPoints","inSertCount","BlendEquationSeparate","CullMode","RenderStateType","I","DrawStyle","_drawStyle","toInt","toColorStr","Path","_lastOriX","_lastOriY","paths","_curPath","beginPath","convex","renderPath","closePath","newPath","pointX","pointY","rp","SaveBase","namemap","_namemap","TYPE_ALPHA","TYPE_FILESTYLE","TYPE_FONT","TYPE_LINEWIDTH","TYPE_STROKESTYLE","TYPE_ENABLEMERGE","TYPE_MARK","TYPE_TRANSFORM","TYPE_TRANSLATE","TYPE_TEXTBASELINE","TYPE_TEXTALIGN","TYPE_GLOBALCOMPOSITEOPERATION","TYPE_SHADER","TYPE_FILTERS","TYPE_COLORFILTER","isSaveMark","_dataObj","_valueName","_newSubmit","dataObj","newSubmit","_saveMark","_saveuse","cache","_save","TYPE_CLIPRECT","TYPE_CLIPRECT_STENCIL","TYPE_IBVB","TYPE_FILTERS_TYPE","_createArray","SaveClipRect","_clipInfoID","_clipRect","incache","_clipInCache","SaveMark","_preSaveMark","no","SaveTransform","_savematrix","SaveTranslate","MeshTopology","CONTEXT2D_FUNCTION_ID","Shader2D","shaderType","textureShader","textureAttribute","primitiveShader","primitiveAttribute","a_position","a_attribColor","a_posuv","a_attribFlags","SkinMeshBuffer","addSkinMesh","skinMesh","getData2","BasePoly","indices","indexBase","outVertex","tempData","newlen","p1x","p1y","p2x","p2y","p3x","p3y","startIndex","vec2","getNormal","_setMiddleVertexs","y1","x3","y3","perpx","perpy","perp2x","perp2y","denom","dist","outvb","vbstride","outib","ptlen","dy","pointnum","tmpData","realPtNum","EarcutNode","prev","prevZ","nextZ","steiner","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","area","ear","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","filterPoints","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","locallyInside","isValidDiagonal","splitPolygon","list","queue","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","hx","hy","Infinity","mx","my","tanMin","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","cx","cy","intersectsPolygon","middleInside","q1","q2","inside","an","bp","sum","Submit","_tex","renderDrawContext","drawElements2DTemp","Triangles","_poolSize","mesh","sv","blendType","_nBlendType","_shader2D","numEle","SubmitCanvas","_matrix4","preAlpha","preMatrix4","preMatrix","preFilters","worldFilters","preWorldShaderDefines","worldShaderDefines","mout","mul","SubmitTarget","srcRT","blend","_colorFiler","ft","colorMat","colorAlpha","SubmitTexture","CharSubmitCache","_ndata","_clipid","_clipMatrix","_imgId","imgid","getPos","__nPosPool","__posPool","colorFiler","_copyClipInfo","_drawCount","Config3D","customResolution","_resoluWidth","_resoluHeight","enableDynamicBatch","enableStaticBatch","enableUniformBufferObject","defaultCacheRTMemory","defaultPhysicsMemory","enableMultiLight","maxLightCount","lightClusterCount","maxMorphTargetCount","useBVHCull","BVH_max_SpatialCount","BVH_limit_size","BVH_Min_Build_nums","debugFrustumCulling","RenderTexture","colorFormat","depthFormat","multiSamples","generateDepthTexture","_inPool","_isCameraTarget","_generateDepthTexture","_multiSamples","_createRenderTarget","_configInstance","depthTexture","_poolMemory","bindCanvasRender","_bindCanvasRender","_depthStencilTexture","createRenderTextureInternal","setupRendertargetTextureAttachment","depthStencilTexture","recreate","readRenderTargetPixelData","NativeContext","_byteLen","_renderObject3DList","_tmpMatrix","_conchContext","_tempRenderTexture2D","isSyncToRenderThread","_idata","_fdata","_byteArray","bufferConchRef","webglPlus","createArrayBufferRef","ARRAY_BUFFER_TYPE_CMD","ARRAY_BUFFER_REF_REFERENCE","setSharedCommandBuffer","_need","flushCommand","lineCap","miterLimit","isMain","_target","add_i","keepRT","_deleteRT","const2DRenderCMD","cmd","addCMD","BlendType","BlendEquation","ADD","BlendFunc","DepthTest","DepthMask","CullFace","FrontFace","Front","applyCMD","set2DRenderConfig","add_i_String","SET_GLOBAL_COMPOSITE_OPERTAION","add_ii","FILL_STYLE","add_if","SAVE","RESTORE","add_iffffff","add_iffff","CLIP_RECT","add_iff","SCALE","checkTexture","add_iiffffffffffffi","DRAW_TEXTURE","drawTextureWithTransform","drawTextureWithSizeGrid","sizeGrid","gx","gy","repeat","add_iiffffffffiffffffffffi","DRAW_TEXTURE_SIZE_GRID","TRANSLATE","_rotate","ROTATE","_scale","_drawLine","fromX","fromY","toX","toY","lineColor","vid","add_iffffffif","DRAW_LINE","_drawLines","add_iffif_ab","DRAW_LINES","_drawCircle","radius","fillColor","add_ifffiiiif","DRAW_CIRCLE","_drawPie","startAngle","endAngle","add_ifffffiiiif","DRAW_PIE","_drawPoly","isConvexPolygon","add_iffiiiifi_ab","DRAW_POLY","fillRect","FILL_RECT","fillTexture","typeValue","add_iiffffiffi","FILL_TEXTURE","STROKE_STYLE","LINE_WIDTH","STROKE_RECT","_drawPath","brush","pen","BEGIN_PATH","MOVE_TO","LINE_TO","add_ifffff","ARC_TO","CLOSE_PATH","FILL","STROKE","drawCurves","DRAW_CURVES","drawCanvasNormal","drawCanvasBitmap","align","borderColor","add_iiiifff_String_String","FILL_WORDS","add_iiffiifi_String","FILL_WORD_TEXT","drawText","strokeWord","fillBorderText","filltext11","fontObj","underLine","drawTriangles","colorNum","add_iiifffffffff_ab_ab_ab","DRAW_TRANGLES","DRAW_MASKED","SET_AS_BITMAP","add_iii","SIZE","filter","addRenderObject3D","scene3D","cs","repaint","add_iffif","fdata","idata","add_iiffff","add_String","add_iffiiiifi","add_iiffiifi","strTobufer","add_iiiifff","str0","str1","ab0","ab1","add_iiifffffffff","arraybuffer0","arraybuffer1","arraybuffer2","nAlignLength0","getAlignLength","nAlignLength1","nAlignLength2","wab","nAlignLength","byteOffset","add_iif_ab","ARRAY_BUFFER_TYPE_DATA","ARRAY_BUFFER_REF_COPY","defaultClipMatrix","_drawTexToDrawTri_Vert","_drawTexToDrawTri_Index","_tempUV","_drawTriUseAbsMatrix","_COUNT","_other","_renderNextSubmitIndex","_renderCount","_submitKey","_transedPoints","_temp4Points","MAXCLIPRECT","_clipID_Gen","_lastMatScaleX","_lastMatScaleY","_lastMat_a","_lastMat_b","_lastMat_c","_lastMat_d","_lastTex","_fillColor","_flushCnt","defTexture","clearColor","_contextcount","_textRender","defTex2d","ContextParams","$transform","_drawRect","drawTexture2","args2","moveTo","lineTo","stroke","addPath","quadraticCurveTo","_fillAndStroke","arc","PI2","_drawEllipse","_drawRoundRect","lt","lb","rb","tPath","_getPath","HPI","startX","startY","arcTo","scissorTest","clearBG","_getSubmits","_releaseMem","Create","getFillColor","make","lastBlend","_fillRect","sameKey","_MAXVERTNUM","isSameClipInfo","transformQuad","clipedOff","drawstyle","mixRGBandAlpha","_fillTexture","callLater","_repaintSprite","texuvRect","offsetx","offsety","repeatx","repeaty","sty","edx","edy","edu","edv","_mixRGBandAlpha","arry","u_TexRange","drawTextures","colors","ipos","bmpid","submitDebugger","clipInfo","cm","cmp","_useNewTex2DSubmit","minVertNum","_drawTexRect","ops","lastRender","preKey","tv","tuv","transform4Points","ma","mb","mc","md","a4","a5","a6","a7","italicDeg","xoff","maxy","RTRestore","oldcomp","tmpMat","_flushToTarget","restoreTempArray","triMesh","webGLImg","_transformByMatrix","setTransformByMatrix","escape","miny","cmaxx","cmaxy","submitElement","renderList","getInstance","close","addVGSubmit","curEleNum","xp","yp","cpath","pi","faceNum","idxpos","fi","earcut","createShape","vertex","maxVertexNum","createLine2","ptnum","len1","ndx","ndy","dx2","dy2","len22","len2","ndx2","ndy2","odx","ody","olen","nOdx","nOdy","halfAng","ptx1","pty1","orilen","sinx","cosx","fda","SEGNUM","lastx","lasty","_x1","_y1","cvx","cvy","counterclockwise","minNum","ndivs","da","sr","cl","cpx","cpy","tArray","parameterLineWidth","hw","clip","drawParticle","_fillTexture_h","oriw","orih","du","uvr","tmpuv1","_fillTexture_v","dv","uvb","d_top","d_left","d_right","d_bottom","scale_x","scale_y","uvl","uvt","uvl_","uvt_","uvr_","uvb_","tuvr","tmpUVRect","_SUBMITVBSIZE","tmpUV","HTMLCanvas","createCanvas","_ctx","_setContext","contextID","getMemSize","toBase64","encoderOptions","conchToBase64FlipY","conchToBase64","toDataURL","toBase64Async","callBack","getDataAsync","base64","BoundsStyle","bounds","userBounds","temBM","CacheStyle","needBitmapCache","cacheForFilters","needEnableCanvasRender","userSetCache","getItem","releaseFilterCache","fc","maskParent","hasGlowFilter","CANVAS_EXTEND_EDGE","_scaleInfo","SpriteStyle","skewX","skewY","dragging","AlphaCmd","cmdID","DrawCircleCmd","percent","getBoundPoints","_getBoundPointS","regClass","DrawCurvesCmd","DrawImageCmd","DrawLineCmd","_tempPoints","DrawLinesCmd","DrawPathCmd","tCMD","DrawPieCmd","_startAngle","_endAngle","lineOffset","end1","ed","s1","s2","csr","DrawPolyCmd","DrawRectCmd","DrawTextureCmd","FillTextureCmd","RestoreCmd","RotateCmd","ScaleCmd","TransformCmd","TranslateCmd","DrawTrianglesCmd","vert","vnum","Draw9GridTextureCmd","EMPTY_SIZE_GRID","SaveCmd","_tempMatrix","_initMatrix","_tempMatrixArrays","GraphicsBounds","_cacheBoundsType","_temp","_rstBoundPoints","_bounds","realSize","_getWrapRec","_getCmdPoints","cmds","_sp","_affectBySize","matrixs","tempMatrix","_switchMatrix","addPointArrToRst","scanPList","tMatix","addPointToRst","_tempPoint","ClipRectCmd","DrawTexturesCmd","FillTextCmd","_strokeColor","_stroke","_align","_wordText","_fontObj","CacheManger","disposeFunction","getCacheListFunction","unRegCacheByFunction","tryDispose","getCacheList","_cacheList","waitTime","_checkLoop","cacheList","tTime","loopTimeLimit","VectorGraphManager","useDic","shapeDic","shapeLineDic","_checkKey","_freeIdArray","regCacheByFunction","startDispose","getId","addShape","shape","addLine","Line","getShape","deleteShape","endDispose","DrawEllipseCmd","DrawRoundRectCmd","Graphics","_renderEmpty","_cmds","_vectorgraphArray","_graphicBounds","_createData","propertyID","propertyKey","uniformtype","_clearData","_destroyData","recoverCmds","_repaint","_clearBoundsCache","onSizeChanged","_initGraphicBounds","_isOnlyOne","_renderOne","_renderAll","addCmd","removeCmd","_material","replaceTextColor","loadImage","getRes","drawLine","drawLines","drawRoundRect","drawCircle","drawEllipse","drawPie","toRadian","drawPoly","drawPath","draw9Grid","ARRAY_EMPTY","Node","_bits","is3D","_updateDisplayedInstage","_setUpNoticeChain","_setBitUp","bubbleEvent","_bubbleChainPool","destroyChild","destroyAllComponent","destroyChildren","removeChildren","_zOrder","getChildIndex","_childChanged","_setParent","addChildren","addChildAt","oldIndex","getChildByName","child","getChildAt","setChildIndex","removeChildAt","removeSelf","removeChildByName","beginIndex","replaceChild","newNode","oldNode","numChildren","isAncestorOf","displayedInStage","_displayChild","_onRemoved","_setDisplay","display","timerLoop","method","coverBefore","jumpFrame","timerOnce","frameOnce","clearTimer","runCallLater","scene","active","_activeChangeScripts","_processActive","_onActive","_onInActive","_onActiveInScene","EVENT_SET_ACTIVESCENE","_onInActiveInScene","EVENT_SET_IN_ACTIVESCENE","_setBelongScene","_setUnBelongScene","fromSetter","_activeHierarchy","_inActiveHierarchy","comp","activeChangeScripts","_components","parentScene","_addComponentInstance","_componentsChanged","srcRoot","dstRoot","destNode","destComponent","addComponent","addComponentInstance","component","getComponent","componentType","createByClass","components","getComponents","HALF_PI","Ease","bounceOut","bounceIn","Handler","runWith","unshift","Tween","gid","props","duration","ease","autoRecover","to","isTo","usePool","runNow","_duration","_ease","easeNone","_complete","_delay","_props","_usedTimer","_startTimer","_usedPool","_delayParam","$_GID","tweenMap","clearTween","firstStart","_initProps","_beginLoop","_doEase","_updateEase","time","usedTimer","ratio","prop","progress","uTime","runTimer","handler","restart","pause","dTime","setStartTime","startTime","tweens","tween","clearAll","_remove","resume","Dragging","maxOffset","_dragging","_clickOnly","hasInertia","elasticDistance","elasticBackTime","_elasticRateX","_elasticRateY","_lastX","mouseX","_lastY","mouseY","onStageMouseUp","tweenMove","_tween","backToArea","getMousePoint","_canvasTransform","_offsets","checkArea","_offsetX","_offsetY","checkElastic","sineOut","SpriteUtils","x0","y0","newLTPoint","newRBPoint","localToGlobal","getGlobalRecByPoints","coordinateSpace","globalTransform","getGlobalPosAndScale","canvasMatrix","canvasLeft","canvasTop","canvasDegree","clientScaleX","clientScaleY","domScaleX","domScaleY","perpendicular","dom","_fitLayaAirInitialized","transformOrigin","webKittransformOrigin","getTransformRelativeToWindow","webkitTransform","_anchorX","_anchorY","_mouseState","_tfChanged","_sizeFlag","_boundStyle","_ownGraphics","mouseThrough","autoSize","hitTestPrior","_globalDeltaFlages","_cacheGlobal","_globalPosx","_globalPosy","_globalRotate","_globalScalex","_globalScaley","updateZOrder","updateOrder","_getBoundsStyle","_setCustomRender","customRenderEnable","_setCacheAs","_checkCanvasEnable","tEnable","_setX","_setY","cacheGlobal","_setGlobalCacheFlag","Sprite_GlobalDeltaFlage_Position_X","Sprite_GlobalDeltaFlage_Matrix","_syncGlobalFlag","parentRepaint","Sprite_GlobalDeltaFlage_Position_Y","get_width","set_width","_setWidth","_setPivotX","_setTranformChange","_shouldRefreshLayout","get_height","set_height","_setHeight","_setPivotY","displayWidth","displayHeight","setSelfBounds","bound","_boundPointsToParent","_getBoundPointsM","ifRotate","pX","pY","transPointList","toParentPoint","getGraphicBounds","rec","chidren","cList","setStyle","set_scaleX","set_scaleY","Sprite_GlobalDeltaFlage_Scale_X","_setScaleX","get_scaleX","Sprite_GlobalDeltaFlage_Scale_Y","_setScaleY","get_scaleY","Sprite_GlobalDeltaFlage_Rotation","_setRotation","_setSkewX","_setSkewY","_createTransform","_adjustTransform","sskx","ssky","skx","sky","ssx","ssy","_setTransform","set_transform","get_transform","_getPivotX","_getPivotY","anchorX","get_anchorX","set_anchorX","anchorY","get_anchorY","set_anchorY","_setAlpha","_getAlpha","visible","get_visible","set_visible","setGraphics","transferOwnership","speedMode","pivot","drawToCanvas","canvasHeight","drawToTexture","drawToTexture3D","imgdata","ImageData","lineLen","srcoff","putImageData","drawtocanvCtx","texRT","rtex","createNewPoint","globalNode","globalToLocal","fromParentPoint","scroll","isMouseEvent","mouseEnabled","_onDisplay","_skinBaseUrl","_setMask","startDrag","stopDrag","hitTestPoint","_setTexture","recArr","_gcmds","_filters","getGlobalMatrix","_globalMatrix","_getGlobalCacheFlag","globalRotation","globalScaleX","globalScaleY","globalPosX","globalPosY","CustomMaterial","setGlobalPos","globalx","globaly","globalDeltaFlages","AnimationBase","wrapMode","_interval","_isReverse","_frameRateChanged","play","_isPlaying","_actionName","_getFrameByLabel","WRAP_REVERSE","interval","_frameLoop","label","_labels","_controlNode","WRAP_PINGPONG","_setControlNode","_resumePlay","addLabel","removeLabel","_removeLabelFromList","gotoAndStop","_displayToIndex","tArr","WRAP_POSITIVE","AtlasInfoManager","infoFile","fetch","addAtlases","dic","_fileLoadDic","prefix","frames","entry","atlasUrl","WorkerLoader","Worker","_worker","workerPath","onmessage","workerMessage","_dispatcher","options","postMessage","evt","imageBitmap","AtlasResource","dir","textures","BatchProgress","_callback","_weights","_progress","itemCount","createCallback","weight","np","ws","perc","ImgUtils","curVersion","needVersion","curVersionArr","needVersionArr","num2","isSupport","getSystemInfoSync","SDKVersion","compareVersion","Blob","arrayBuffer","newurl","createBufferURL","blob","createObjectURL","isSavaData","revokeBufferURL","revokeObjectURL","XMLUtils","aSource","sb","pos1","pos2","entity","attrs","attrName","defValue","XMLTagType","XMLIterator","lowerCaseName","sourceLen","parsePos","lastTagEnd","tagPos","tagLength","tagName","tagType","Start","attrParsed","lastTagName","CDATA","Comment","Instruction","End","singleQuoted","doubleQuoted","possibleEnd","Void","decodeString","trimEnd","attributes","_attrs","parseAttributes","valueStart","valueEnd","waitValue","quoted","attrEnd","prototype","XML","XmlString","getAttrString","getAttrInt","getAttrFloat","getFloat","getAttrBool","setAttribute","attrValue","getNode","selector","lastOpenNode","nodeStack","nextTag","childNode","getText","HttpRequest","_http","XMLHttpRequest","send","responseType","headers","_responseType","_urlEncode","http","open","setRequestHeader","JSON","stringify","restype","dataType","onerror","_onError","onabort","_onAbort","onprogress","_onProgress","onload","_onLoad","lengthComputable","loaded","total","status","statusText","responseURL","message","responseText","response","encodeURI","Downloader","httpRequestPool","common","originalUrl","contentType","onProgress","onComplete","getRequestInst","returnRequestInst","$ref","image","Image","crossOrigin","imageWithBlob","arrayBufferToURL","imageWithWorker","workerLoaderOptions","audio","oncanplaythrough","typeIdCounter","NullURLInfo","typeId","main","loaderType","retryNum","retryDelay","maxLoader","_loadings","_queue","_downloadings","exts","typeEntry","typeMap","extMap","arg1","arg2","arg3","priority","group","ignoreCache","useWorkerLoader","promise","dummyOptions","pd","promises","_load1","all","_load2","silent","warnFailed","getURLInfo","obsoluteRes","formattedUrl","groupMap","cacheRes","_getRes","loadingKey","task","atlasInfo","getFileLoadPath","ATLAS","baseUrl","loadTaskPool","LoadTask","obsoluteInst","assetLoader","_cacheRes","catch","delete","retryCnt","noRetry","queueToDownload","download","postFormatURL","preloadedContent","preLoadedMap","completeItem","downloader","extEntry","msg","errMsg","stack","resArr","loadedMap","urlInfo","checkObj","_clearRes","clearTextureRes","clearUnLoaded","cancelLoadByUrls","urls","cancelLoadByUrl","loadPackage","remoteUrl","tmpPath","_loadSubFileConfig","plat","tt","qg","_loadMiniPackage","mini","packName","reject","loadSubpackage","success","onProgressUpdate","fileConfig","hash","indice","configs","config","addAtlas","TEXT","BUFFER","IMAGE","SOUND","VIDEO","FONT","TTF","HIERARCHY","MESH","MATERIAL","TEXTURECUBE","ANIMATIONCLIP","TERRAINHEIGHTDATA","TERRAINRES","SPINE","MathUtil","Offset1","Offset2","Offset3","bigFirst","forceNum","_sortFun","sortNumBigFirst","sortBigFirst","sortNumSmallFirst","sortSmallFirst","FrameAnimation","_sortIndexFun","sortByKey","objpre","objnext","_setUp","targetDic","animationData","_targetDic","_animationData","frameRate","parsed","labels","_usedFrames","animationNewFrames","_calculateDatas","nodes","_displayNodeToFrame","frame","propFrames","funFrames","funkeys","tNode","_calculateKeyFrames","tKeyFrames","keyFrames","keyframes","initValues","isFun","_calculateNodePropFrames","resetNodes","_dealKeyFrame","_calculateFrameValues","keyFrame","startFrame","endFrame","easeFun","startValue","dValue","tweenMethod","linearNone","GraphicAnimation","_nodeIDAniDic","_parseNodeList","uiView","_nodeList","_nodeDefaultProps","compId","_calGraphicData","aniData","_createGraphicData","preGraphic","gList","animationDataNew","_createFrameGraphic","_gList","_rootMatrix","_updateNodeGraphic","_rootNode","parentTransfrom","tNodeG","tResultTransform","tTex","_nodeGDic","_getNodeGraphicData","resultTransform","tGraphicAlpha","skin","_getTextureByUrl","_updateNoChilds","tTransform","_updateNodeGraphic2","onlyTranslate","hasTrans","ifSave","getNodeDataByID","nodeID","_getParams","params","obj2","_temParam","_getObjVar","noValue","vArr","GraphicNode","frameData","_drawTextureCmd","aX","aY","_tempMt","setAniData","aniName","animations","tAniO","aniDic","anilist","frameO","animationList","animationDic","parseByData","rootNode","aniO","nodeRoot","setUpAniData","animationObject","_I","Animation","_autoPlay","_frames","_setFramesFromCache","showWarn","framesMap","parseAnimationByData","_copyLabels","loadAnimation","loadAtlas","loadImages","autoPlay","cacheName","createFrames","onLoaded","loadUrl","getAtlas","_loadAnimationData","parseAnimationData","defaultO","aniList","key2","images","BitmapFont","fontSize","autoScaleSize","tint","maxWidth","lineHeight","letterSpacing","parseFont","xml","paddingArray","padding","ct","advance","getTextWidth","getMaxWidth","getMaxHeight","EffectAnimation","EFFECT_BEGIN","_onOtherBegin","_addEvent","effect","playEvent","_playEvent","_onPlayAction","_recordInitData","_aniKeys","effectClass","classStr","_effectClass","uiData","effectData","tSecondFrame","secondFrames","TextStyle","bold","italic","underline","underlineColor","valign","leading","HtmlElementType","HtmlElement","getAttr","setAttr","fetchAttributes","Text","HtmlImage","_element","objContainer","loadTexture","refreshLayout","HtmlLink","_shape","_rects","_rectCnt","resetArea","HtmlParseOptions","linkUnderline","defaultLinkUnderline","linkColor","defaultLinkColor","s_list1","s_list2","HtmlParser","_styleStack","_options","_elements","_styleStackTop","colorChanged","skipText","ignoreWhiteSpace","skipNextCR","appendText","pushStyle","popStyle","strikethrough","getAttribute","getFromPool","Link","LinkEnd","Input","Select","isNewLine","tf","equalStyle","defaultParser","classMap","UBBParser","_readPos","defaultImgWidth","defaultImgHeight","_handlers","onTag_URL","onTag_IMG","onTag_B","onTag_I","onTag_U","onTag_Simple","onTag_COLOR","onTag_FONT","onTag_SIZE","attr","getTagText","lastColor","lastSize","pos3","tag","repl","func","_overflow","VISIBLE","_singleCharRender","_prompt","_textWidth","_textHeight","_textStyle","_lines","_padding","_fontSizeScale","bitmapFont","_bitmapFonts","recoverLines","returnToPool","textWidth","_updatingLayout","drawBg","markChanged","textHeight","typeset","ignoreLang","langPacks","changeText","_realFont","_bitmapFont","family","set_color","_isChanged","wordWrap","_wordWrap","bgColor","_bgColor","_borderColor","singleCharRender","html","_html","ubb","_ubb","_maxWidth","htmlParseOptions","_htmlParseOptions","parseTemplate","template","_templateVars","templateVars","setVar","scrollX","_scrollPos","maxScrollX","renderText","scrollY","maxScrollY","_typeset","doLayout","_objContainer","_hideText","isPrompt","_onPostLayout","saveColor","normalizeCR","_parseEscapeChars","escapeCharsPattern","getReplaceStr","_asPassword","_passwordChar","_promptColor","rectWidth","ELLIPSIS","MAX_VALUE","curLine","lastCmd","charWidth","charHeight","rectHeight","bfont","buildLines","ctxFont","_ctxFont","mr","_testWord","line","wrapText","endLine","startLine","cmdPool","linkEnd","linePool","remainWidth","tw","maybeIndex","wordWidth","isEmoji","testEmoji","isEmojiChar","newLine","ccode","unicode","execResult","wordBoundaryTest","exec","calcTextSize","nw","nh","lastLine","htmlObj","SHRINK","low","high","cur","linesDeleted","done","ellipsisStr","SCROLL","HIDDEN","paddingLeft","paddingTop","scrollPos","clipped","curLink","linkStartX","lineCnt","lineClipped","thickness","_bgDrawCmd","RightToLeft","emojiTest","escapeSequence","_isFirstTouch","_tempRect","_rollOverChain","_rollOutChain","_inst","InputManager","_touchPool","_mouseTouch","TouchInfo","_pressKeys","_keyEvent","getTouch","touchTarget","_touchTarget","touchCount","clickCancelled","_stage","oncontextmenu","addEventListener","preventDefault","_touchInput","handleMouse","passive","isTextInputting","handleTouch","setPointerCapture","pointerId","releasePointerCapture","handleKeys","_eventType","_nativeEvent","pageX","clientX","pageY","clientY","mouseEventsEnabled","getNodeUnderPoint","_mouseMoveTime","move","downTargets","lastRollOver","handleRollOver","began","handleFocus","_c","_d","moved","clickTarget","clickTest","isDblClick","clickCount","deltaY","_e","changedTouches","uTouch","multiTouchEnabled","identifier","shouldCreate","focus","pre_input","new_input","nativeInput","multiline","keyEventsEnabled","getSpriteUnderPoint","getSprite3DUnderPoint","editing","hitTest","childEditing","isHit","clickTestThreshold","isiOSWKwebView","clickTrack","downPos","performance","lastClick","Render","mainCanv","_first","_startTm","_timeId","_Render","_mainCanvas","stamp","ifps","frm","lastFrm","_loop","_customRequestAnimationFrame","_loopFunction","fps","_onVisibilitychange","loopFun","customRenderEngine","engine","_customEngine","isVisibility","clearInterval","setInterval","_enterFrame","_rendercontex","_init_","TypedArrayClasses","Int8Array","Float64Array","_errors","_getNodeByRef","_getNodeData","SerializeUtil","outErrors","getNodeByRef","getNodeData","isDeserializing","_decodeObj","_$uuid","getResURLByUUID","getLoadTypeByEngineType","_$type","_$ref","typedArray","_$tmpl","childObj","overrideData","dataMap","od","_$override","_$parent","nodeData","overrideDataMap","_$id","children","_$child","cloneTree","comps","_$comp","visit","idPath","toWrite","arrayEquals","mergeData","compType","_$prefab","_$index","overrided","_multiline","_editable","_maxChars","_type","IOS_IFRAME","self","_onMouseDown","_onUnDisplay","_createInputElement","isTrue","_popupInputMethod","inputElement","_initInput","input","inputContainer","zIndex","setPos","cssText","resize","backgroundColor","border","outline","_processInputting","_stopEvent","setFontFace","fontFace","fontFamily","isAppUseNewInput","setFontSize","_restrictPattern","setSelection","selectionStart","selectionEnd","_syncInputTransform","inputWid","inputHei","setScale","setSize","select","_focus","_focusOut","_setInputMethod","_focusIn","scrollTop","blur","parentElement","direction","cssStyle","whiteSpace","_setPromptColor","readOnly","setType","setForbidEdit","maxLength","placeholder","_onKeyDown","setMultiAble","fontStyle","fontWeight","promptStyleDOM","head","innerText","miniGameTxt","setBgColor","restrict","_restrict","editable","maxChars","prompt","promptColor","TYPE_TEXT","TYPE_PASSWORD","TYPE_EMAIL","TYPE_URL","TYPE_NUMBER","TYPE_RANGE","TYPE_DATE","TYPE_MONTH","TYPE_WEEK","TYPE_TIME","TYPE_DATE_TIME","TYPE_DATE_TIME_LOCAL","TYPE_SEARCH","Widget","_top","_bottom","_left","_right","_centerX","_centerY","_onParentResize","resetLayoutX","resetLayoutY","flagX","flagY","resetLayout","centerX","centerY","_rect","_ptPoint","HitArea","_isHitGraphic","graphic","_isHitCmd","_ptInPolygon","areaPoints","nCross","hit","unHit","_hitCmds","_unHitCmds","WeakObject","_obj","_maps","supportWeakMap","delInterval","clearCache","del","Prefab","_deps","errors","json","LegacyUIParser","createByData","deps","addDep","onDepObsolute","addDeps","_listClass","_viewClass","HierarchyResource","PrefabImpl","api","root","runtime","clas","_viewCreated","_funMap","_runScript","tInitTool","InitTool","createComp","_idMap","tAni","_aniList","Scene","finish","view","initTool","getCompInstance","isList","_addGraphicsToSprite","_isDrawType","_addGraphicToSprite","tChild","addNodeRef","setCompValue","_afterInited","_sheet","one","watcher","DataWatcher","exe","_parseWatchData","key1","_parseKeyWord","_watchMap","notifer","changeData","pageData","_doAwake","innerUrls","addInnerUrl","loadList","loadList3D","check","customHandler","instanceHandler","createByJson","itemRender","Function","customProps","created","graphicO","_getGraphicsFromSprite","ox","oy","_addGraphicToGraphics","isChild","dataO","propsName","propsO","drawConfig","DrawTypeDic","_tM","_getPointListByStr","xPos","adptFun","_getTransformData","pointArr","Rect","Circle","Pie","FillTexture","FillText","Lines","Curves","Poly","getBindFun","_nodeRefList","_initList","tool","referStr","setNodeRef","tRefInfo","getReferData","tStr","list2","addInitItem","doInits","createChildren","autoDestroyAtClosed","_widget","uimap","loadScene","unDestroyedScenes","_loadPage","hideLoadingPage","createView","getNodeByID","closeOther","param","closeAll","_scene3D","onOpened","onClosed","_getWidget","_sizeChanged","freshLayout","_root","_scene2D","showLoadingPage","_onSceneLoaded","destroyUnusedResources","loadPage","_showLoading","_hideLoading","Timer","autoActive","currFrame","_delta","_map","gSysTimer","_update","currTimer","_getNowData","_lastTimer","awake","handlers","userFrame","exeTime","_clearHandlers","_recoverHandler","useFrame","_getHandler","TimerHandler","_indexHandler","cid","mid","$_TID","_mid","CallLater","clearCallLater","withClear","_laters","laters","LaterHandler","WebGL","isNativeRender_enable","RunDriver","changeWebGLSize","onStageResize","ComponentDriver","_onUpdates","_onLateUpdates","_onPreRenders","_onPostRenders","_toStarts","callStart","onStart","callUpdate","onUpdate","callLateUpdate","onLateUpdate","callPreRender","onPreRender","callPostRender","onPostRender","callDestroy","Stage","_frameRate","designWidth","designHeight","renderingEnabled","screenAdaptationEnabled","_screenMode","_scaleMode","_alignV","_alignH","_safariOffsetY","_frameStartTime","_previousOrientation","orientation","_wgColor","_scene3Ds","_globalRepaintSet","_globalRepaintGet","_needUpdateCanvasSize","_isFocused","_isVisibility","_isInputting","visibilityChange","hidden","mozHidden","msHidden","webkitHidden","getSafariToolbarOffset","updateCanvasSize","needUpdateCanvasSize","isFocused","setScreenSize","screenWidth","screenHeight","SCREEN_NONE","SCREEN_VERTICAL","SCREEN_HORIZONTAL","canvasStyle","scaleMode","realWidth","realHeight","SCALE_NOSCALE","SCALE_SHOWALL","SCALE_NOBORDER","SCALE_FULL","SCALE_FIXED_WIDTH","SCALE_FIXED_HEIGHT","SCALE_FIXED_AUTO","SCALE_FIXED_AUTO_LAYAME","SCALE_FIXED_AUTO_LAYAVERSE","_formatData","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_TOP","ALIGN_BOTTOM","webkitTransformOrigin","msTransformOrigin","mozTransformOrigin","oTransformOrigin","msTransform","mozTransform","oTransform","setScreenSizeForScene","stageWidth","stageHeight","alignH","alignV","background","screenMode","getFrameTm","getTimeFromFrameStart","visibility","renderToNative","FRAME_SLEEP","_runComponents","_updateTimers","isFastMode","FRAME_MOUSE","FRAME_FAST","FRAME_SLOW","isDoubleLoop","fullScreenEnabled","_requestFullscreen","_fullScreenChanged","removeEventListener","_frameRateNative","setLimitFPS","setMouseFrame","setSlowFrame","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","SCALE_EXACTFIT","ALIGN_CENTER","ALIGN_MIDDLE","BlurFilterGLRender","setShaderInfo","blurinfo","blurInfo","sigma","sigma2","strength_sig2_2sig2_gauss1","BlurFilter","getStrenth_sig2_2sig2_native","strength_sig2_native","GlowFilterGLRender","_sv_blurInfo1","u_blurInfo1","info2","_sv_blurInfo2","u_blurInfo2","svBlur","GlowFilter","offX","offY","getColorNative","_color_native","getBlurInfo1Native","_blurInof1_native","getBlurInfo2Native","_blurInof2_native","SoundChannel","isStopped","volume","completeHandler","__runComplete","AudioSoundChannel","_audio","_onEnd","__onEnd","__resumePlay","_src","loops","LayaEvent","currentTime","playbackRate","SoundManager","addChannel","removeChannel","AudioSound","_musicAudio","removeElement","autoReleaseSound","disposeSoundLater","readyState","_audioCache","clearBySign","_makeMusicOK","_bgMusic","_initMusicAudio","onErr","offs","tAd","cloneNode","channel","WebAudioSoundChannel","bufferSource","_currentTime","_volume","_startTime","_pauseTime","WebAudioSound","_onPlayEnd","__onPlayEnd","gain","_clearBufferSource","audioBuffer","createBufferSource","connect","disconnect","destination","onended","setTargetAtTime","SetTargetDelay","sourceNode","noteOff","_tryCleanFailed","_tryClearBuffer","_disposed","_miniBuffer","_unlocked","_playEmptySound","_unlock","_loaded","__playAfterLoaded","__toPlays","toPlays","tParams","supportWebAudio","initWebAudio","_soundClass","_musicClass","_channels","_lastSoundUsedTimeDic","_isCheckingDispose","_checkDisposeSound","hasCheck","disposeSoundIfNotUsed","destroySound","autoStopMusic","_stageOnBlur","_stageOnFocus","_visibilityChange","_autoStopMusic","_isActive","_musicChannel","_blurPaused","stopAllSound","_recoverWebAudio","muted","_muted","musicMuted","soundMuted","_soundMuted","_musicMuted","useAudioMusic","_useAudioMusic","soundClass","tSound","_soundCache","musicVolume","soundVolume","playSound","_setVolume","SoundNode","_onParentChange","_channel","isMusic","_isMusic","playMusic","_setPlayAction","tar","_setPlayActions","events","eventArr","_playEvents","_tar","_stopEvents","stopEvent","VideoTexture","videoWidth","videoHeight","_frameRender","_isLoaded","_needUpdate","immediatelyPlay","_listeningEvents","x5PlaysInline","playsInline","webkitPlaysInline","playsinline","autoplay","loadedmetadata","scope","requestVideoFrameCallback","updateVideo","isNeedUpdate","initVideoTextureData","childElementCount","firstChild","appendSource","sourceElement","extension","updateVideoTexture","frameRender","canPlayType","buffered","currentSrc","ended","paused","preload","seekable","seeking","videoEvents","VideoNode","_internalTex","_videoTexture","videoTexture","onVideoMetaLoaded","reload","detroyChildren","AnimatorPlayState2D","_currentState","_frontPlay","animatorState","_resetPlayState","clipDuration","_finish","_startPlayTime","_elapsedTime","_lastIsFront","_parentPlayTime","_playNum","_playAllTime","playTime","_normalizedPlayTime","AnimatorControllerLayer2D","_playStateInfo","_crossPlayStateInfo","_crossMark","_crossNodesOwnersCount","_crossNodesOwnersIndicesMap","_srcCrossClipNodeIndices","_destCrossClipNodeIndices","playOnWake","defaultWeight","blendingMode","BLENDINGMODE_OVERRIDE","_states","_playType","states","removeState","addState","defaultStateName","_defaultState","getStateByName","_defaultStateNameCatch","defaultState","_removeClip","clipStateInfos","_getReferenceCount","getCurrentPlayState","stateName","AniParmType","AniStateConditionType","AniStateConditionNumberCompressType","AnimatorUpdateMode","AniConditionType","TextResourceFormat","BLENDINGMODE_ADDTIVE","AnimatorControllerParse","layers","controllerLayers","clipsID","retobj","checkStates","enterName","clipState","enterState","checkNext","defName","checkDefault","nexts","soloTransitions","nState","getStateByID","conditions","checkConditions","animatorParams","parms","parm","checkValue","defState","Animator2D","_speed","_updateMode","Normal","_lowUpdateDelty","_controllerLayers","_parameters","controller","_controller","updateTo","parameters","speed","_updateStateFinish","playState","_eventExit","_setClipDatasToNode","stateInfo","additive","controllerLayer","realtimeDatas","_realtimeDatas","_nodes","getNodeByIndex","getOwner","_applyFloat","pro","ower","defVal","_ownerMap","property","ownerPathCount","ownPat","getOwnerPathByIndex","pobj","propertyCount","pname","getPropertyByIndex","classObj","_updateClipDatas","addtive","playStateInfo","curPlayTime","clipStart","currentFrameIndices","_currentFrameIndices","_evaluateClipDatasRealTime","_updatePlayer","elapsedTime","layerIndex","isReplay","clipEnd","lastElapsedTime","pAllTime","_lastElapsedTime","normalizedTime","yoyo","pTime","normalizedPlayTime","_eventStateUpdate","_applyTransition","_eventtransition","absTime","_eventLoop","_updateEventScript","_animationEvents","frontPlay","parentPlayTime","_eventScript","currPlayTime","scripts","eventName","layerindex","transition","crossFade","destState","transduration","transstartoffset","_applyUpdateMode","LowFrame","UnScaleTime","gotoAndStopByFrame","curPlayState","calclipduration","_eventStart","NEGATIVE_INFINITY","_checkEnterIndex","_enterTransition","defaultClip","getDefaultState","cycleOffset","islooping","addControllerLayer","controllderLayer","transitionDuration","layer","enterTransition","setParamsTrigger","Trigger","setParamsNumber","setParamsBool","getParamsvalue","AnimatorState2D","transitions","_scripts","_resetFrameIndices","EVENT_OnStateUpdate","onStateUpdate","animator","EVENT_OnStateEnter","setPlayScriptInfo","onStateEnter","EVENT_OnStateExit","onStateExit","EVENT_OnStateLoop","onStateLoop","normalizeTime","paramsMap","soloNums","transNums","addScript","getScript","getScripts","coms","KeyframeNode2D","_ownerPath","_propertys","_keyFrames","keyFramesCount","_setOwnerPathCount","_setOwnerPathByIndex","_setPropertyCount","_setPropertyByIndex","_setKeyframeCount","_joinOwnerPath","sep","_joinProperty","getKeyframeByIndex","Keyframe2D","Animation2DEvent","AnimationClip2DParse01","_DATA","_reader","_BLOCK","blockStarts","blockLengths","prePos","_strings","reader","_version","READ_DATA","READ_BLOCK","READ_STRINGS","blockName","fn","numList","numCount","nodeCount","nodesMap","_nodesMap","nodesDic","_nodesDic","setNodeByIndex","_indexInList","pathLength","nodePath","mapArray","propertyLength","fullPath","keyframeCount","timeToFrame","tweenType","tweenInfo","inTangent","outTangent","inWeight","outWeight","extend","eventCount","paramCount","addEvent","KeyframeNodeList2D","AnimationClip2D","playCurTime","realTimeCurrentFrameIndexes","outDatas","nextFrameIndex","frameIndex","isEnd","nextFarme","_getTweenVal","nextFrame","dur","tweenFun","poval","oval","hermiteInterpolate","hermiteCurveSplineWeight","_binarySearchEventIndex","midValue","frameValue","frametime","frameOutWeight","frameOutTangent","nextframeValue","nextframetime","nextframeInweight","nextframeIntangent","Eps","wt1","wt2","yp1","yp2","isFinite","wt2s","t2","fg","fpg","fppg","Linear","Quad_EaseIn","Quad_EaseOut","Quad_EaseInOut","Cubic_EaseIn","Cubic_EaseOut","Cubic_EaseInOut","Quart_EaseIn","Quart_EaseOut","Quart_EaseInOut","Quint_EaseIn","Quint_EaseOut","Quint_EaseInOut","Sine_EaseIn","Sine_EaseOut","Sine_EaseInOut","Expo_EaseIn","Expo_EaseOut","Expo_EaseInOut","Circ_EaseIn","Circ_EaseOut","Circ_EaseInOut","Elastic_EaseIn","Elastic_EaseOut","Elastic_EaseInOut","Back_EaseIn","Back_EaseOut","Back_EaseInOut","Bounce_EaseIn","Bounce_EaseOut","Bounce_EaseInOut","endValue","t3","Animation2DParm","Animation2DCondition","AnimatorStateCondition","conditionNameToID","_conditionNameMap","checkState","AnimatorStateNumberCondition","_numberValue","_numberCompareFlag","Greater","numberValue","compareFlag","AnimatorStateBoolCondition","_compareFlag","AnimatorStateTriggerCondition","AnimatorTransition2D","exitByTime","exitTime","mute","addCondition","removeCondition","con","AnimatorController2D","getLayers","lArr","acl","getState","createState","idCatch","defID","childStates","groupRet","setTransitions","setExitTransition","exitRet","pExitRet","ats","sts","linArr","ato","addConditions","solo","_getAnimatorTransition2D","pState","exitTransition","idk","Boolean","currLayer","setParm","Script","onTriggerEnter","onTriggerStay","onTriggerExit","onCollisionEnter","onCollisionStay","onCollisionExit","onJointBreak","onMouseDown","onMouseUp","onRightMouseDown","onRightMouseUp","onMouseMove","onMouseDrag","onMouseDragEnd","onMouseOver","onMouseOut","onMouseClick","onMouseDoubleClick","onMouseRightClick","onKeyDown","onKeyPress","onKeyUp","TextResource","registerLoader","Plain","toloadPics","folderPath","query","pics","pic","directory","subTextures","tPic","filename","spriteSourceSize","sourceSize","_stateNum","stateNum","errorList","HierarchyParser","inPrefab","prefabNodeDict","skinBaseUrl","bakedOverrideData","nodeMap","dataList","allNodes","outNodes","prefab","createNode","pstr","overrideData2","testId","findNodeInPrefab","_$runtime","outNodeData","nodeData2","topNode","compInitList","compData","decodeOptions","bakeOverrideData","applyOverrideData","decodeObj","_$var","_$preloads","HierarchyLoader","_$ver","_load","legacySceneOrPrefab","links","collectResourceLinks","resArray","HDRTextureInfo","decreaseX","decreaseY","getHDRInfo","readByteOffset","readLine","lineStr","getLineString","commandsMap","commands","resolutions","get_32_bit_rle_rgbe","dataIndex","rgbeBuffer","rgbeArray","pixelBuffer","pixelArray","scanlineLength","Ldexp","mantissa","exponent","readScanLine","scanlineArray","getc","wrong","readcolors","byter","byteg","byteb","bytee","pixelIndex","ldexp","setScanLineData","unnormalizedr","unnormalizedg","unnormalizedb","unnormalizede","olddreadcolors","rshift","scanIndex","lastIndex","color_color","clr","internalResources","HDRTEXTURE","propertyParams2d","constructParams2d","compressedFormats","videoFormats","wrapTex2D","tex2D","getBaseName","load2","fileIndex","platforms","fileInfo","readWrite","_parseDDS","_parseKTX","_parsePVR","_parseHDRTexture","_SimpleAnimatorTextureParse","img","needBitmap","ImageBitmap","createImageBitmap","bitmapimage","_parseImage","loadStates","NullLoader","picUrl","testString","CompareFunction","StencilOperation","MaterialRenderMode","TextureCubeFace","fontName","registerFont","FontFace","fonts","fontTxt","txtWidth","textContent","checkComplete","RenderState","cull","CULL_BACK","BLEND_DISABLE","srcBlend","BLENDPARAM_ONE","dstBlend","BLENDPARAM_ZERO","srcBlendRGB","dstBlendRGB","srcBlendAlpha","dstBlendAlpha","BLENDEQUATION_ADD","depthTest","DEPTHTEST_LEQUAL","depthWrite","stencilRef","stencilTest","STENCILTEST_OFF","stencilWrite","stencilOp","STENCILOP_KEEP","STENCILOP_REPLACE","CULL_NONE","Off","CULL_FRONT","Back","BLEND_ENABLE_ALL","BLEND_ENABLE_SEPERATE","BLENDPARAM_SRC_COLOR","SourceColor","BLENDPARAM_ONE_MINUS_SRC_COLOR","BLENDPARAM_DST_COLOR","BLENDPARAM_ONE_MINUS_DST_COLOR","OneMinusDestinationColor","BLENDPARAM_SRC_ALPHA","BLENDPARAM_ONE_MINUS_SRC_ALPHA","BLENDPARAM_DST_ALPHA","BLENDPARAM_ONE_MINUS_DST_ALPHA","OneMinusDestinationAlpha","BLENDPARAM_SRC_ALPHA_SATURATE","SourceAlphaSaturate","BLENDPARAM_BLENDCOLOR","BlendColor","BLENDPARAM_BLEND_ONEMINUS_COLOR","OneMinusBlendColor","BLENDEQUATION_SUBTRACT","SUBTRACT","BLENDEQUATION_REVERSE_SUBTRACT","REVERSE_SUBTRACT","BLENDEQUATION_MIN","MIN","BLENDEQUATION_MAX","MAX","DEPTHTEST_OFF","DEPTHTEST_NEVER","Never","DEPTHTEST_LESS","Less","DEPTHTEST_EQUAL","Equal","LessEqual","DEPTHTEST_GREATER","DEPTHTEST_NOTEQUAL","NotEqual","DEPTHTEST_GEQUAL","GreaterEqual","DEPTHTEST_ALWAYS","Always","STENCILTEST_NEVER","STENCILTEST_LESS","STENCILTEST_EQUAL","STENCILTEST_LEQUAL","STENCILTEST_GREATER","STENCILTEST_NOTEQUAL","STENCILTEST_GEQUAL","STENCILTEST_ALWAYS","Keep","STENCILOP_ZERO","Replace","STENCILOP_INCR","IncrementSaturate","STENCILOP_INCR_WRAP","IncrementWrap","STENCILOP_DECR","DecrementSaturate","STENCILOP_DECR_WRAP","DecrementWrap","STENCILOP_INVERT","Invert","Default","UniformBufferBase","pointer","_mapArray","_blockName","_singgle","_glPointerID","splitBuffer","UniformBufferObject","glPointer","isSingle","UNIFORM_BUFFER","_isSingle","_glPointer","_bindUniformBufferBase","bytelength","_Map","getUBOPointer","bufferBase","createUniformBufferObject","bindBufferBase","_bindBufferRange","byteCount","bindBufferRange","_reset","MAX_SAFE_INTEGER","subData","setDataEx","bufferData","_updateDataInfo","setDataByByUniformBufferDataOffset","datalength","reallength","_realByte","UBONAME_SCENE","UBONAME_CAMERA","UBONAME_SPRITE3D","UBONAME_SHADOW","commonMap","Material","createShaderData","renderQueue","RENDERQUEUE_OPAQUE","alphaTest","blendSrc","blendDst","blendSrcRGB","blendDstRGB","blendSrcAlpha","blendDstAlpha","SHADERDEFINE_ALPHATEST","SHADERDEFINE_MAINTEXTURE","SHADERDEFINE_ADDTIVEFOG","ALPHATESTVALUE","CULL","BLEND_SRC","BLEND_DST","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","BLEND_EQUATION","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","DEPTH_TEST","DEPTH_WRITE","STENCIL_Ref","STENCIL_TEST","STENCIL_WRITE","STENCIL_Op","alphaTestValue","setDefine","MaterialProperty","propertyMap","shaderValues","MaterialDefine","shaderDefineArray","materialRenderMode","_matRenderNode","RENDERMODE_OPAQUE","RENDERMODE_CUTOUT","RENDERQUEUE_ALPHATEST","RENDERMODE_TRANSPARENT","RENDERQUEUE_TRANSPARENT","RENDERMODE_ADDTIVE","RENDERMODE_ALPHABLENDED","RENDERMODE_CUSTOME","_bindShaderInfo","shaderUBODatas","_releaseUBOData","values","effectiveProperty","setShaderName","_uniformBlock","applyUniformDefaultValue","getBoolByIndex","setBoolByIndex","getFloatByIndex","setFloatByIndex","setFloat","getIntByIndex","setIntByIndex","getVector2ByIndex","setVector2ByIndex","getVector3ByIndex","setVector3ByIndex","setVector4ByIndex","getVector4ByIndex","getVector4","getColorByIndex","setColorByIndex","getMatrix4x4ByIndex","setMatrix4x4ByIndex","getMatrix3x3ByIndex","setMatrix3x3ByIndex","setTextureByIndex","reSetTexture","getTextureByIndex","getBufferByIndex","setBufferByIndex","setShaderDataByIndex","getShaderDataByIndex","destBaseMaterial","setShaderPropertyValue","getShaderPropertyValue","oldparseEndEvent","MaterialParser","parseLegacy","getBaseTexture","uniName","vectorValue","matrix3","matrix4","tex2DPath","jsonData","classType","vectors","renderStateData","_getRenderStateParams","collectLinks","shaderPath","ParseJSON","parseStart","fstr","cobj","currArr","numVal","currStr","formatVal","finCurrObj","cNext","cstr","finCurrStr","pcobj","DEFAULT_PIXELS","_blackTexture","_grayTexture","_whiteTexture","_errorTexture","writeTexture","every","setCubePixelsData","setCubeImageData","updateSubPixelsData","setCubeSubPixelData","setCubeDDSData","setCubeKTXData","CGBlock","shaderBlock","shaderDataOBJ","CullStateMap","BlendStateMap","Disable","All","Seperate","BlendFactorMap","BlendEquationMap","Add","Subtract","Reverse_substract","Min","Max","CompareFunctionMap","StencilOperationMap","ShaderParser","getShaderBlock","cgmap","getCGBlock","bindCG","sliceFlag","sliceIndex","slicedata","splitmap","compileToTree","shaderObj","i1","i2","cgdata","datavalue","getMapKey","attributemap","indexofAttribute","dataArray","getShaderDataType","defaultmap","newUniformMap","serializable","default","getDefaultData","stencilFail","stencilZFail","stencilZPass","mat3","texcube","compileAsync","compiledObjs","getRenderState","decodeAudioData","LocalStorage","_baseClass","Storage","init","items","support","setItem","setJSON","getJSON","removeItem","localStorage","PrimitiveSV","TextureSV","_blurInfo","_u_blurInfo1","_u_blurInfo2","_u_TexRange","_colorMat","_colorAlpha","_strength_sig2_2sig2_gauss1","Mouse","cursor","cursorStr","_preCursor","MeshParticle2D","maxNum","glfloat","setMaxParticleNum","_isinit","stageConfig","arrayBufferSlice","float32ArraySlice","uint16ArraySlice","uint8ArraySlice","laya3D","_changeWebGLSize","is3DMode","supportLocalStorage","beforeInit","enableNative","beginCheck","__int__","createEngine","initRender2D","__initDefine__","_initone","init3D","_onInitModuleCallbacks","afterInit","_physiscs2D","exports","memory","WasmModules","erralert","detail","alert","_evcode","debugJsPath","arrU8List","newU8List","arg","isWXOpenDataContext","isWXPosMsg","DrawType","RenderDrawMode","RenderIndexMode","TextureCompareMode","TextureDecodeFormat","alertGlobalError","enableDebugPanel","BlendState","colorBlendhash","alphaBlendComponent","_blend_All_pool","_blend_seperate_pool","BlendComponent","blendOperationGLData","sourceBlendFactor","destinationFactor","hashindex","_hashIndex","_blendOperationGLData","_sourceBlendFactor","_destinationFactor","getHash","CommandUniformMap","_stateName","hasPtrID","getMap","propertyName","addShaderBlockUniform","blockname","blockProperty","RenderStateCommand","cmdArray","renderstate","applyRenderStateCMD","EffectBase","autoDestroyAtComplete","_comlete","_exeTween","_doTween","Keyboard","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","A","B","C","D","E","F","G","H","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","NUMPAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","SEMICOLON","EQUAL","COMMA","MINUS","PERIOD","SLASH","BACKQUOTE","LEFTBRACKET","BACKSLASH","RIGHTBRACKET","QUOTE","ALTERNATE","BACKSPACE","CAPS_LOCK","COMMAND","CONTROL","DELETE","ESCAPE","PAGE_UP","PAGE_DOWN","HOME","LEFT","UP","RIGHT","DOWN","SHIFT","SPACE","TAB","INSERT","KeyLocation","STANDARD","NUM_PAD","CommandEncoder","getArrayData","getCount","variable","QuickTestTool","_typeToNameDic","showedDic","_rendertypeToStrDic","getMCDName","_addType","showRenderTypeInfo","_stageRender","_countStart","_PreStageRender","_countEnd","_countDic","_i","showCountInfo","Socket","port","byteClass","protocols","isSecure","disableInput","_byteClass","_input","output","_output","connected","_connected","_endian","connectByUrl","_socket","cleanSocket","WebSocket","binaryType","_addInputPosition","onopen","_onOpen","_onMessage","onclose","_onClose","pre","GLSLCodeGenerator","getAttributeType","uniformsMap","useUniformBlock","blocksStr","uniformsStr","blockUniforms","ShaderInstance","_customUniformParamsMap","_uploadMark","_uploadRenderType","_webGLShaderLanguageProcess3D","_renderShaderInstance","_shaderPass","_create2D","vertexHead","fragmentHead","clusterSlices","defMap","defineStr","attributeglsl","glslAttributeString","uniformglsl","glslUniformString","isWebGL2","_maxAreaLightCountPerClusterAverage","SHADER_CAPAILITY_LEVEL","vsVersion","psVersion","dstVS","detFS","_webGLShaderLanguageProcess2D","_cameraUniformParamsMap","_spriteUniformParamsMap","sceneParams","cameraParams","customParams","getUniformMap","hasSpritePtrID","sprite2DParms","sceneParms","commap","_uploadMaterial","_uploadRender","_uploadCameraShaderValue","_uploadScene","shaderUniform","shaderDatas","uploadUnTexture","uploadRenderStateBlendDepth","uploadRenderStateBlendDepthByShader","uploadRenderStateBlendDepthByMaterial","datas","_f","_g","_k","_j","_m","_l","_p","_o","_r","_q","_t","_s","_v","_u","_z","_1","_0","_3","_2","_5","_4","_7","_6","uploadRenderStateFrontFace","isTarget","invertFront","forntFace","uploadCustomUniform","uploadCustomUniforms","ShaderVariable","onID","pointID","textureID","Base64Tool","lookup","bytes","encoded1","encoded2","encoded3","encoded4","reghead","Log","_logdiv","_btn","onclick","toggle","maxCount","autoScrollToBottom","scrollHeight","PerfData","datapos","PerfHUD","xdata","DATANUM","ydata","hud_width","hud_height","gMinV","gMaxV","textSpace","sttm","addDataDef","_now","updateValue","v2y","drawHLine","_lastTm","di","cd","dtlen","_cx","dtsz","drawTexTm","PoolCache","SingletonList","_add","indexof","TimeLine","_tweenDic","_tweenDataList","_currTime","_lastTime","_gidIndex","_firstTweenDic","_startTimeSort","_endTimeSort","_loopKey","_frameIndex","_total","tTweenData","tweenData","endTime","_labelDic","tIndex","gotoTime","tTween","tObject","tTweenDataCopyList","tDataP","diyTarget","_endTweenDataList","Compare","paraA","paraB","tP","_animComplete","gotoLabel","Label","tLabelData","timeOrLabel","tTarget","tSrcData","tNow","tFrameTime","tCurrTime","DrawParticleCmd","_templ","NativeCommandUniformMap","NativeGLObject","_engine","_gl","gl","_IDCounter","setResourceManager","NativeGLTextureContext","native","_native","conchImgId","setTexture3DImageData","depth","setTexture3DPixlesData","setTexture3DSubPixelsData","zOffset","sources","renderTarget","faceIndex","createRenderTargetCubeInternal","createRenderTextureCubeInternal","video","internalTex","NativeGL2TextureContext","NativeGLRenderDrawContext","conchGLRenderDrawContext","drawElementsInstanced","instanceCount","drawArraysInstanced","first","drawArrays","drawElements","drawGeometryElement","geometryElement","NativeRenderStateCommand","conchRenderStateCommand","DepthFunc","StencilTest","StencilMask","addCMDInt1","StencilFunc","addCMDInt2","StencilOp","addCMDInt3","BlendFuncSeperate","addCMDInt4","NativeRenderState","conchRenderState","setStencilOp","MemoryDataType","NativeShaderDataType","WebGLMode","WebGLExtension","CommonMemoryAllocater","NativeMemory","shared","_sharedBuffer","creatBlock","_f64data","float32Array","float64Array","uint8Array","int32Array","freeMemoryBlock","NativeSourceID","UploadMemory","_currentOffsetInByte","addBlockCell","dataSizeInByte","uploadDataTOShareMemory","UploadMemoryManager","_dataNodeList","_commandNums","_currentBlock","UploadMemorySize","_conchUploadMemoryManager","conchUploadMemoryManager","_instance","_addNodeCommand","sizeInByte","_serialiseData","getUploadMemoryLength","uploadData","NativeShaderData","inUploadList","payload32bitNum","conchShaderData","setApplyUBOData","nativeObjID","nativeID","_dataType","updateMap","updataSizeMap","memoryBlock","strideInByte","strideFloat","clearUpload","compressNumber","Number32","compressVector2","compressVector3","compressVector4","compressMatrix4x4","compressNumberArray","Number32Array","compressTexture","compressUBO","UBO","_conchUniformBufferObject","configMotionProperty","NativeUniformBufferObject","conchUniformBufferObject","setGLBuffer","NativeGLVertexState","conchGLVertexState","_nativeVertexBuffers","vertexBuffer","_conchVertexBuffer3D","_conchIndexBuffer3D","GLObject","WebGLInternalTex","useSRGBLoader","_baseMipmapLevel","_maxMipmapLevel","createTexture","isPot","isPotSize","Tex3D","_mipmap","_mipmapCount","log2","Repeat","_addStatisticsInfo","_filterMode","getFilteMinrParam","_setTexParameteri","TEXTURE_MIN_FILTER","mag","getFilterMagParam","TEXTURE_MAG_FILTER","_warpU","warpParam","getWrapParam","_setWrapMode","TEXTURE_WRAP_S","_warpV","TEXTURE_WRAP_T","_warpW","Texture3D","TEXTURE_WRAP_R","_anisoLevel","anisoExt","_supportCapatable","getExtension","EXT_texture_filter_anisotropic","maxAnisoLevel","Max_AnisoLevel_Count","level","_setTexParametexf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","_compareMode","_bindTexture","texParameteri","texParameterf","NEAREST_MIPMAP_NEAREST","NEAREST","LINEAR_MIPMAP_NEAREST","LINEAR","Trilinear","LINEAR_MIPMAP_LINEAR","REPEAT","CLAMP_TO_EDGE","Mirrored","MIRRORED_REPEAT","deleteTexture","WebGLInternalRT","_depthTexture","_framebuffer","createFramebuffer","_msaaFramebuffer","deleteFramebuffer","_depthbuffer","deleteRenderbuffer","_msaaRenderbuffer","GLTextureContext","_glParam","internalFormat","_sRGB","EXT_sRGB","_oesTextureHalfFloat","OES_texture_half_float","_compressdTextureS3tc_srgb","WEBGL_compressed_texture_s3tc_srgb","_compressedTextureEtc1","WEBGL_compressed_texture_etc1","_compressedTextureS3tc","WEBGL_compressed_texture_s3tc","_compressedTextureETC","WEBGL_compressed_texture_etc","_compressedTextureASTC","WEBGL_compressed_texture_astc","_webgl_depth_texture","WEBGL_depth_texture","glTextureParam","useSRGB","SRGB_EXT","RGB","SRGB_ALPHA_EXT","RGBA","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","glRenderTextureParam","DEPTH_COMPONENT","DEPTHSTENCIL_24_8","DEPTH_STENCIL","UNSIGNED_INT_24_8_WEBGL","DEPTH_32","UNSIGNED_INT","STENCIL_8","glRenderBufferParam","DEPTH_COMPONENT16","attachment","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","STENCIL_INDEX8","STENCIL_ATTACHMENT","glRenderTargetAttachment","COLOR_ATTACHMENT0","getTarget","TEXTURE_2D","TEXTURE_CUBE_MAP","getFormatPixelsParams","formatParams","channels","bytesPerPixel","dataTypedCons","typedSize","getGLtexMemory","singlebyte","srgb_alpha","getGLRTTexMemory","cube","getpixelbyte","rtFormat","pixelByte","colorPixelbyte","supportSRGB","Texture_SRGB","supportGenerateMipmap","isSRGBFormat","useSRGBExt","glParam","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","texImage2D","texSubImage2D","fourSize","UNPACK_ALIGNMENT","mipmapWidth","mipmapHeight","compressedTexImage2D","imageSize","pixelParams","hdrPixelData","cubeFace","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","channelsByte","dataTypeConstur","face","framebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","colorAttachment","depthBufferParam","depthbuffer","createRenderbuffer","framebufferRenderbuffer","RENDERBUFFER","renderbuffer","bindRenderbuffer","renderbufferStorage","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","UNSIGNED_SHORT_4_4_4_4","GL2TextureContext","TEXTURE_2D_ARRAY","TEXTURE_3D","SRGB8","RGB8","SRGB8_ALPHA8","RGBA8","RGB565","RGBA32F","RGB32F","RGB16F","HALF_FLOAT","RGBA16F","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","UNSIGNED_INT_24_8","texStorage2D","createTexture3DInternal","texStorage3D","texSubImage3D","setTexture3DPixelsData","getCubeKTXRGBMData","LEQUAL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","GEQUAL","LESS","GREATER","NOTEQUAL","ALWAYS","NEVER","renderbufferStorageMultisample","msaaFramebuffer","renderbufferParam","msaaRenderbuffer","isSRGB","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","biltMask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","blitFramebuffer","GLBuffer","_glTargetType","_glBufferUsageType","_getGLTarget","_getGLUsage","_glUsage","STATIC_DRAW","DYNAMIC_DRAW","Stream","STREAM_DRAW","_glTarget","_memorychange","_getbindBuffer","_setbindBuffer","orphanStorage","srcData","bufferSubData","_getBindUBOBuffer","_setBindUBOBuffer","resizeBuffer","glErrorShadow","synthesizeGLError","opt_msg","WebGLVertexArrayObjectOES","isAlive","hasBeenBound","elementArrayBuffer","maxVertexAttribs","attrib","VertexAttrib","maxAttrib","normalized","cached","recache","OESVertexArrayObject","getError","NO_ERROR","err1","wrapGLError","original","getParameter","enableVertexAttribArray","disableVertexAttribArray","getVertexAttrib","vertexAttribPointer","VERTEX_ARRAY_BINDING_OES","currentVertexArrayObject","defaultVertexArrayObject","vao","currentArrayBuffer","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","indx","instrumentExtension","reset_","vertexArrayObjects","MAX_VERTEX_ATTRIBS","bindVertexArrayOES","createVertexArrayOES","arrayObject","deleteVertexArrayOES","isVertexArrayOES","oldVAO","newVAO","currentBinding","oldAttrib","bufferChanged","INVALID_OPERATION","_setupVertexArrayObject","original_getSupportedExtensions","getSupportedExtensions","original_getExtension","__OESVertexArrayObject","GlCapable","glEngine","_extentionVendorPrefixes","initExtension","initCapable","isWebgl2","_capabilityMap","OES_element_index_uint","Element_Index_Uint32","OES_texture_float","Texture_anisotropic","EXT_color_buffer_float","EXT_color_buffer_half_float","OES_texture_half_float_linear","RenderTextureFormat_R16G16B16A16","OES_texture_float_linear","RenderTextureFormat_R32G32B32A32","RenderTextureFormat_Depth","RenderTextureFormat_ShadowMap","OES_vertex_array_object","Vertex_VAO","ANGLE_instanced_arrays","DrawElement_Instance","EXT_shader_texture_lod","Shader_TextureLod","WEBGL_compressed_texture_pvrtc","COMPRESS_TEXTURE_PVRTC","COMPRESS_TEXTURE_ETC1","COMPRESS_TEXTURE_ETC","COMPRESS_TEXTURE_ASTC","Texture_FloatLinearFiltering","Texture_HalfFloatLinearFiltering","MSAA","UnifromBufferObject","_extensionMap","setExtensionMap","_extTextureFilterAnisotropic","_getExtension","_compressedTexturePvrtc","_oesTextureFloatLinear","_extColorBufferHalfFloat","_extColorBufferFloat","_vaoExt","_angleInstancedArrays","_oesTextureHalfFloatLinear","_oesTextureFloat","_oes_element_index_uint","_extShaderTextureLod","OES_standard_derivatives","prefixes","GLParams","_initParams","_glParamsData","Max_Active_Texture_Count","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxVertexUniform","MAX_VERTEX_UNIFORM_VECTORS","maxFragUniform","MAX_FRAGMENT_UNIFORM_VECTORS","Max_Uniform_Count","MAX_Texture_Size","MAX_TEXTURE_SIZE","MAX_Texture_Image_Uint","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_MAX_ANISOTROPY_EXT","GLRender2DContext","activeTexture","_activedTextureID","bindTexture","bindUseProgram","webglProgram","cacheShaderProgram","useProgram","_glUseProgram","GLRenderDrawContext","getMeshTopology","Points","POINTS","LINES","LineLoop","LINE_LOOP","LineStrip","LINE_STRIP","TRIANGLES","TriangleStrip","TRIANGLE_STRIP","TriangleFan","TRIANGLE_FAN","getIndexType","UInt8","UInt32","drawElementsInstancedANGLE","drawArraysInstancedANGLE","bufferState","drawParams","drawType","DrawArray","_glmode","DrawElement","_glindexFormat","DrawArrayInstance","DrawElementInstance","GLRenderState","_depthTest","_depthMask","_stencilTest","_cullFace","_initState","_blendEquation","_sFactor","_dFactor","_sFactorAlpha","_dFactorAlpha","_getBlendFactor","factor","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","SRC_ALPHA_SATURATE","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","_getBlendOperation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","_getGLCompareFunction","compareFunction","_getGLStencilOperation","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","_getGLFrontfaceFactor","cullmode","CCW","CW","disable","depthMask","_depthFunc","depthFunc","_stencilMask","stencilMask","_stencilFunc","_stencilRef","stencilFunc","_stencilOp_fail","_stencilOp_zfail","_stencilOp_zpass","_blendEquationRGB","_blendEquationAlpha","blendEquationSeparate","_sFactorRGB","_dFactorRGB","blendFunc","blendFuncSeparate","CULL_FACE","_frontFace","frontFace","applyRenderStateCommand","GLShaderInstance","_vs","_ps","_program","createProgram","_vshader","_createShader","VERTEX_SHADER","_pshader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","nUniformNum","ACTIVE_UNIFORMS","_curActTexIndex","uniformData","getActiveUniform","getUniformLocation","_addShaderUnifiormFun","_uniformObjectMap","nUniformBlock","ACTIVE_UNIFORM_BLOCKS","gl2","uniformBlockName","getActiveUniformBlockName","getUniformBlockIndex","uniformBlockBinding","_legalUBObyteLength","createShader","shaderSource","compileShader","_isShaderDebugMode","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","BOOL","_uniform1i","uploadedValue","INT","_uniform1iv","_uniform1fv","_uniform1f","FLOAT_VEC2","_uniform_vec2v","_uniform_vec2","FLOAT_VEC3","_uniform_vec3v","_uniform_vec3","FLOAT_VEC4","_uniform_vec4v","_uniform_vec4","FLOAT_MAT2","_uniformMatrix2fv","FLOAT_MAT3","_uniformMatrix3fv","FLOAT_MAT4","_uniformMatrix4fv","_uniformMatrix4f","SAMPLER_2D","SAMPLER_2D_SHADOW","uniform1i","_glTextureIDParams","_uniform_sampler2D","SAMPLER_2D_ARRAY","_uniform_sampler2DArray","_uniform_sampler3D","SAMPLER_CUBE","_uniform_samplerCube","_uniform_UniformBuffer","uniform1f","uniform1fv","uniform2f","uniform2fv","uniform3f","uniform3fv","uniform4f","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniform1iv","_uniform_ivec2","uniform2i","_uniform_ivec2v","uniform2iv","_uniform_vec3i","uniform3i","_uniform_vec3vi","uniform3iv","_uniform_vec4i","uniform4i","_uniform_vec4vi","uniform4iv","texID","TEXTURE0","_activeTextures","deleteShader","deleteProgram","GLVertexState","createVertexArray","deleteVertexArray","_GLBindVertexArray","isVertexArray","clearVAO","valueData","loc","attribute","vertexAttribDivisor","divisor","vertexAttribDivisorANGLE","WebGLEngine","webglMode","Auto","_curUBOPointer","_GLUBOPointerMap","_GLBindPointerUBOMap","_lastClearColor","_lastClearDepth","_GLStatisticsInfo","_config","_isWebGL2","_lastViewport","_lastScissor","_webglMode","_initStatisticsInfo","webglConfig","initRenderEngine","names","WebGL1","WebGL2","_initBindBufferMap","_GLParams","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","_GLTextureContext","_GLRenderDrawContext","_GL2DRenderContext","_GLBufferBindMap","capatableType","lv","SCISSOR_TEST","clearFlag","clearcolor","clearDepth","Stencil","clearStencil","STENCIL_BUFFER_BIT","copySubFrameBuffertoTex","xoffset","yoffset","copyTexSubImage2D","colorMask","getTextureContext","getDrawContext","get2DRenderContext","getCreateRenderOBJContext","_renderOBJCreateContext","commandEncoder","shaderCall","custom","ArabicReshaper","characterMapContains","charsMap","getCharRep","getCombCharRep","combCharsMap","isTransparent","transChars","getOriginalCharsFromCode","convertArabic","crep","combcrep","shaped","current","prevID","nextID","convertArabicBack","apfb","selectedChar","toReturn","MatirxArray","ai0","ai1","ai2","ai3","_curState","effectScale","tweenTime","toChangedState","toInitState","_curTween","effectEase","tweenComplete","backEase","conchCommandUniformMap","conchWebGLEngine","addStatisticsInfo","conchGL2TextureContext","conchGLTextureContext","conchGLBuffer","_strsToID","_idToStrs","getName","_isInPool","globalBlockMap","comMap","glConfig","stencil","antialias","failIfMajorPerformanceCaveat","_replaceWebglcall","tempgl","assetId"],"sources":["../../src/layaAir/laya/utils/ClassUtils.ts","../../src/layaAir/Decorators.ts","../../src/layaAir/Config.ts","../../src/layaAir/laya/Const.ts","../../src/layaAir/ILaya.ts","../../src/layaAir/LayaEnv.ts","../../src/layaAir/laya/utils/Pool.ts","../../src/layaAir/laya/utils/Utils.ts","../../src/layaAir/laya/components/Component.ts","../../src/layaAir/laya/maths/Matrix.ts","../../src/layaAir/laya/maths/Point.ts","../../src/layaAir/laya/maths/Rectangle.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/HDREncodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureFormat.ts","../../src/layaAir/laya/layagl/LayaGL.ts","../../src/layaAir/laya/utils/Delegate.ts","../../src/layaAir/laya/events/Event.ts","../../src/layaAir/laya/events/EventDispatcher.ts","../../src/layaAir/laya/resource/Resource.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/FilterMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderCapable.ts","../../src/layaAir/laya/resource/BaseTexture.ts","../../src/layaAir/laya/utils/Byte.ts","../../src/layaAir/laya/utils/HalfFloatUtils.ts","../../src/layaAir/laya/RenderEngine/DDSTextureInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDimension.ts","../../src/layaAir/laya/RenderEngine/KTXTextureInfo.ts","../../src/layaAir/laya/resource/Texture2D.ts","../../src/layaAir/laya/webgl/shader/BaseShader.ts","../../src/layaAir/laya/webgl/utils/RenderState2D.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderTargetFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderClearFlag.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendFactor.ts","../../src/layaAir/laya/maths/Color.ts","../../src/layaAir/laya/resource/NativeRenderTexture2D.ts","../../src/layaAir/laya/resource/RenderTexture2D.ts","../../src/layaAir/laya/resource/WebGLRTMgr.ts","../../src/layaAir/laya/RenderEngine/RenderStateContext.ts","../../src/layaAir/laya/webgl/canvas/BlendMode.ts","../../src/layaAir/laya/resource/Texture.ts","../../src/layaAir/laya/resource/AssetDb.ts","../../src/layaAir/laya/net/URL.ts","../../src/layaAir/laya/webgl/utils/IncludeFile.ts","../../src/layaAir/laya/webgl/utils/ShaderNode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompile.ts","../../src/layaAir/laya/RenderEngine/RenderShader/DefineDatas.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderDefine.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariantCollection.ts","../../src/layaAir/laya/maths/MathUtils3D.ts","../../src/layaAir/laya/maths/Vector2.ts","../../src/layaAir/laya/maths/Vector4.ts","../../src/layaAir/laya/maths/Vector3.ts","../../src/layaAir/laya/maths/Matrix3x3.ts","../../src/layaAir/laya/maths/Quaternion.ts","../../src/layaAir/laya/maths/Matrix4x4.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderData.ts","../../src/layaAir/laya/RenderEngine/UniformBufferData.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderParams.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/WrapMode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompileDefineBase.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderPass.ts","../../src/layaAir/laya/renders/VertexElement.ts","../../src/layaAir/laya/renders/VertexElementFormat.ts","../../src/layaAir/laya/RenderEngine/VertexDeclaration.ts","../../src/layaAir/laya/RenderEngine/RenderShader/VertexMesh.ts","../../src/layaAir/laya/RenderEngine/RenderShader/SubShader.ts","../../src/layaAir/laya/RenderEngine/RenderShader/Shader3D.ts","../../src/layaAir/laya/webgl/shader/d2/ShaderDefines2D.ts","../../src/layaAir/laya/renders/RenderInfo.ts","../../src/layaAir/laya/webgl/text/AtlasGrid.ts","../../src/layaAir/laya/utils/FontInfo.ts","../../src/layaAir/laya/webgl/shader/d2/value/Value2D.ts","../../src/layaAir/laya/utils/WordText.ts","../../src/layaAir/laya/webgl/text/CharRenderInfo.ts","../../src/layaAir/laya/webgl/text/ICharRender.ts","../../src/layaAir/laya/utils/Browser.ts","../../src/layaAir/laya/webgl/text/CharRender_Canvas.ts","../../src/layaAir/laya/webgl/text/TextRender.ts","../../src/layaAir/laya/webgl/text/TextAtlas.ts","../../src/layaAir/laya/webgl/text/TextTexture.ts","../../src/layaAir/laya/webgl/submit/SubmitKey.ts","../../src/layaAir/laya/webgl/submit/SubmitCMD.ts","../../src/layaAir/laya/filters/Filter.ts","../../src/layaAir/laya/utils/ColorUtils.ts","../../src/layaAir/laya/filters/ColorFilter.ts","../../src/layaAir/laya/maths/GrahamScan.ts","../../src/layaAir/laya/display/SpriteConst.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStatInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BufferTargetType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/IndexFormat.ts","../../src/layaAir/laya/utils/Stat.ts","../../src/layaAir/laya/webgl/submit/SubmitBase.ts","../../src/layaAir/laya/RenderEngine/VertexAttributeLayout.ts","../../src/layaAir/laya/webgl/utils/BufferState.ts","../../src/layaAir/laya/RenderEngine/Buffer.ts","../../src/layaAir/laya/RenderEngine/IndexBuffer.ts","../../src/layaAir/laya/webgl/utils/Buffer2D.ts","../../src/layaAir/laya/webgl/utils/IndexBuffer2D.ts","../../src/layaAir/laya/RenderEngine/VertexBuffer.ts","../../src/layaAir/laya/webgl/utils/VertexBuffer2D.ts","../../src/layaAir/laya/webgl/utils/Mesh2D.ts","../../src/layaAir/laya/webgl/utils/MeshQuadTexture.ts","../../src/layaAir/laya/webgl/utils/MeshTexture.ts","../../src/layaAir/laya/webgl/utils/MeshVG.ts","../../src/layaAir/laya/webgl/canvas/NativeWebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/webgl/canvas/WebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/renders/LayaGLQuickRunner.ts","../../src/layaAir/laya/filters/NativeFilter.ts","../../src/layaAir/laya/renders/RenderSprite.ts","../../src/layaAir/laya/maths/Bezier.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendEquationSeparate.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CullMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStateType.ts","../../src/layaAir/laya/webgl/canvas/DrawStyle.ts","../../src/layaAir/laya/webgl/canvas/Path.ts","../../src/layaAir/laya/webgl/canvas/save/SaveBase.ts","../../src/layaAir/laya/webgl/canvas/save/SaveClipRect.ts","../../src/layaAir/laya/webgl/canvas/save/SaveMark.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTransform.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTranslate.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.vs.glsl","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderPologyMode.ts","../../src/layaAir/laya/resource/NativeContext.ts","../../src/layaAir/laya/webgl/shader/d2/Shader2D.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DFrag.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DVertex.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DShaderInfo.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.ps.glsl","../../src/layaAir/laya/webgl/shader/d2/skinAnishader/SkinMeshBuffer.ts","../../src/layaAir/laya/webgl/shapes/BasePoly.ts","../../src/layaAir/laya/webgl/shapes/EarcutNode.ts","../../src/layaAir/laya/webgl/shapes/Earcut.ts","../../src/layaAir/laya/webgl/submit/Submit.ts","../../src/layaAir/laya/webgl/submit/SubmitCanvas.ts","../../src/layaAir/laya/webgl/submit/SubmitTarget.ts","../../src/layaAir/laya/webgl/submit/SubmitTexture.ts","../../src/layaAir/laya/webgl/text/CharSubmitCache.ts","../../src/layaAir/Config3D.ts","../../src/layaAir/laya/resource/RenderTexture.ts","../../src/layaAir/laya/resource/Context.ts","../../src/layaAir/laya/resource/HTMLCanvas.ts","../../src/layaAir/laya/display/css/BoundsStyle.ts","../../src/layaAir/laya/display/css/CacheStyle.ts","../../src/layaAir/laya/display/css/SpriteStyle.ts","../../src/layaAir/laya/display/cmd/AlphaCmd.ts","../../src/layaAir/laya/display/cmd/DrawCircleCmd.ts","../../src/layaAir/laya/display/cmd/DrawCurvesCmd.ts","../../src/layaAir/laya/display/cmd/DrawImageCmd.ts","../../src/layaAir/laya/display/cmd/DrawLineCmd.ts","../../src/layaAir/laya/display/cmd/DrawLinesCmd.ts","../../src/layaAir/laya/display/cmd/DrawPathCmd.ts","../../src/layaAir/laya/display/cmd/DrawPieCmd.ts","../../src/layaAir/laya/display/cmd/DrawPolyCmd.ts","../../src/layaAir/laya/display/cmd/DrawRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTextureCmd.ts","../../src/layaAir/laya/display/cmd/FillTextureCmd.ts","../../src/layaAir/laya/display/cmd/RestoreCmd.ts","../../src/layaAir/laya/display/cmd/RotateCmd.ts","../../src/layaAir/laya/display/cmd/ScaleCmd.ts","../../src/layaAir/laya/display/cmd/TransformCmd.ts","../../src/layaAir/laya/display/cmd/TranslateCmd.ts","../../src/layaAir/laya/display/cmd/DrawTrianglesCmd.ts","../../src/layaAir/laya/display/cmd/Draw9GridTextureCmd.ts","../../src/layaAir/laya/display/cmd/SaveCmd.ts","../../src/layaAir/laya/display/GraphicsBounds.ts","../../src/layaAir/laya/display/cmd/ClipRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTexturesCmd.ts","../../src/layaAir/laya/display/cmd/FillTextCmd.ts","../../src/layaAir/laya/utils/CacheManger.ts","../../src/layaAir/laya/utils/VectorGraphManager.ts","../../src/layaAir/laya/display/cmd/DrawEllipseCmd.ts","../../src/layaAir/laya/display/cmd/DrawRoundRectCmd.ts","../../src/layaAir/laya/display/Graphics.ts","../../src/layaAir/laya/display/Node.ts","../../src/layaAir/laya/utils/Ease.ts","../../src/layaAir/laya/utils/Handler.ts","../../src/layaAir/laya/utils/Tween.ts","../../src/layaAir/laya/utils/Dragging.ts","../../src/layaAir/laya/utils/SpriteUtils.ts","../../src/layaAir/laya/display/Sprite.ts","../../src/layaAir/laya/display/AnimationBase.ts","../../src/layaAir/laya/net/AtlasInfoManager.ts","../../src/layaAir/laya/net/WorkerLoader.ts","../../src/layaAir/laya/resource/AtlasResource.ts","../../src/layaAir/laya/net/BatchProgress.ts","../../src/layaAir/laya/utils/ImgUtils.ts","../../src/layaAir/laya/html/XMLUtils.ts","../../src/layaAir/laya/html/XMLIterator.ts","../../src/layaAir/laya/html/XML.ts","../../src/layaAir/laya/net/HttpRequest.ts","../../src/layaAir/laya/net/Downloader.ts","../../src/layaAir/laya/net/Loader.ts","../../src/layaAir/laya/maths/MathUtil.ts","../../src/layaAir/laya/display/FrameAnimation.ts","../../src/layaAir/laya/display/GraphicAnimation.ts","../../src/layaAir/laya/display/Animation.ts","../../src/layaAir/laya/display/BitmapFont.ts","../../src/layaAir/laya/display/EffectAnimation.ts","../../src/layaAir/laya/display/css/TextStyle.ts","../../src/layaAir/laya/html/HtmlElement.ts","../../src/layaAir/laya/html/HtmlImage.ts","../../src/layaAir/laya/html/HtmlLink.ts","../../src/layaAir/laya/html/HtmlParseOptions.ts","../../src/layaAir/laya/html/HtmlParser.ts","../../src/layaAir/laya/html/UBBParser.ts","../../src/layaAir/laya/display/Text.ts","../../src/layaAir/laya/events/InputManager.ts","../../src/layaAir/laya/renders/Render.ts","../../src/layaAir/laya/loaders/SerializeUtil.ts","../../src/layaAir/laya/display/Input.ts","../../src/layaAir/laya/components/Widget.ts","../../src/layaAir/laya/utils/HitArea.ts","../../src/layaAir/laya/utils/WeakObject.ts","../../src/layaAir/laya/resource/HierarchyResource.ts","../../src/layaAir/laya/loaders/LegacyUIParser.ts","../../src/layaAir/laya/resource/PrefabImpl.ts","../../src/layaAir/laya/display/Scene.ts","../../src/layaAir/laya/utils/Timer.ts","../../src/layaAir/laya/utils/CallLater.ts","../../src/layaAir/laya/webgl/WebGL.ts","../../src/layaAir/laya/utils/RunDriver.ts","../../src/layaAir/laya/components/ComponentDriver.ts","../../src/layaAir/laya/display/Stage.ts","../../src/layaAir/laya/filters/BlurFilterGLRender.ts","../../src/layaAir/laya/filters/BlurFilter.ts","../../src/layaAir/laya/filters/GlowFilterGLRender.ts","../../src/layaAir/laya/filters/GlowFilter.ts","../../src/layaAir/laya/media/SoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSound.ts","../../src/layaAir/laya/media/webaudio/WebAudioSoundChannel.ts","../../src/layaAir/laya/media/webaudio/WebAudioSound.ts","../../src/layaAir/laya/media/SoundManager.ts","../../src/layaAir/laya/media/SoundNode.ts","../../src/layaAir/laya/media/VideoTexture.ts","../../src/layaAir/laya/media/VideoNode.ts","../../src/layaAir/laya/components/AnimatorPlayState2D.ts","../../src/layaAir/laya/components/AnimatorControllerLayer2D.ts","../../src/layaAir/laya/components/AnimatorControllerParse.ts","../../src/layaAir/laya/components/AnimatorUpdateMode.ts","../../src/layaAir/laya/components/Animation2DCondition.ts","../../src/layaAir/laya/resource/TextResource.ts","../../src/layaAir/laya/components/Animator2D.ts","../../src/layaAir/laya/components/AnimatorState2D.ts","../../src/layaAir/laya/components/KeyframeNode2D.ts","../../src/layaAir/laya/components/KeyFrame2D.ts","../../src/layaAir/laya/components/Animation2DEvent.ts","../../src/layaAir/laya/components/AnimationClip2DParser01.ts","../../src/layaAir/laya/components/KeyframeNodeList2D.ts","../../src/layaAir/laya/components/AnimationClip2D.ts","../../src/layaAir/laya/components/Animation2DParm.ts","../../src/layaAir/laya/components/AnimatorStateCondition.ts","../../src/layaAir/laya/components/AnimatorTransition2D.ts","../../src/layaAir/laya/components/AnimatorController2D.ts","../../src/layaAir/laya/components/Script.ts","../../src/layaAir/laya/loaders/TextResourceLoader.ts","../../src/layaAir/laya/loaders/AtlasLoader.ts","../../src/layaAir/laya/loaders/HierarchyParser.ts","../../src/layaAir/laya/loaders/HierarchyLoader.ts","../../src/layaAir/laya/RenderEngine/HDRTextureInfo.ts","../../src/layaAir/laya/loaders/TextureLoader.ts","../../src/layaAir/laya/loaders/AnimationClip2DLoader.ts","../../src/layaAir/laya/loaders/AnimationController2DLoader.ts","../../src/layaAir/laya/loaders/NullLoader.ts","../../src/layaAir/laya/loaders/BitmapFontLoader.ts","../../src/layaAir/laya/loaders/TTFFontLoader.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CompareFunction.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/StencilOperation.ts","../../src/layaAir/laya/resource/Material.ts","../../src/layaAir/laya/resource/TextureCube.ts","../../src/layaAir/laya/RenderEngine/RenderShader/RenderState.ts","../../src/layaAir/laya/RenderEngine/UniformBufferBase.ts","../../src/layaAir/laya/RenderEngine/UniformBufferObject.ts","../../src/layaAir/laya/loaders/MaterialParser.ts","../../src/layaAir/laya/loaders/MaterialLoader.ts","../../src/layaAir/laya/utils/ParseJSON.ts","../../src/layaAir/laya/loaders/ShaderParser.ts","../../src/layaAir/laya/loaders/ShaderLoader.ts","../../src/layaAir/laya/media/webaudio/WebAudioLoader.ts","../../src/layaAir/laya/ModuleDef.ts","../../src/layaAir/laya/net/LocalStorage.ts","../../src/layaAir/laya/webgl/shader/d2/value/PrimitiveSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/TextureSV.ts","../../src/layaAir/laya/utils/Mouse.ts","../../src/layaAir/laya/webgl/utils/MeshParticle2D.ts","../../src/layaAir/Laya.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/DrawType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderDrawMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderIndexMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureCompareMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDecodeFormat.ts","../../src/layaAir/laya/RenderEngine/BlendState.ts","../../src/layaAir/laya/RenderEngine/CommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/RenderStateCommand.ts","../../src/layaAir/laya/effect/EffectBase.ts","../../src/layaAir/laya/events/Keyboard.ts","../../src/layaAir/laya/events/KeyLocation.ts","../../src/layaAir/laya/layagl/CommandEncoder.ts","../../src/layaAir/laya/layagl/QuickTestTool.ts","../../src/layaAir/laya/net/Socket.ts","../../src/layaAir/laya/RenderEngine/RenderShader/GLSLCodeGenerator.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariable.ts","../../src/layaAir/laya/utils/Base64Tool.ts","../../src/layaAir/laya/utils/Log.ts","../../src/layaAir/laya/utils/PerfData.ts","../../src/layaAir/laya/utils/PerfHUD.ts","../../src/layaAir/laya/utils/PoolCache.ts","../../src/layaAir/laya/utils/SingletonList.ts","../../src/layaAir/laya/utils/TimeLine.ts","../../src/layaAir/laya/display/cmd/DrawParticleCmd.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeCommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeShaderData.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLExtension.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/CommonMemoryAllocater.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/NativeMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeUniformBufferObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalTex.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalRT.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLBuffer.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/VertexArrayObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GlCapable.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLParams.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLEngine.ts","../../src/layaAir/laya/webgl/text/ArabicReshaper.ts","../../src/layaAir/laya/webgl/utils/MatirxArray.ts","../../src/layaAir/laya/components/AnimatorState2DScript.ts","../../src/layaAir/laya/effect/ButtonEffect.ts","../../src/layaAir/laya/effect/FadeIn.ts","../../src/layaAir/laya/effect/FadeOut.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderEngineFactory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeWebGLEngine.ts","../../src/layaAir/laya/resource/RenderTextureCube.ts","../../src/layaAir/laya/media/Sound.ts","../../src/layaAir/laya/utils/StringKey.ts","../../src/layaAir/laya/RenderEngine/SubUniformBufferData.ts","../../src/layaAir/laya/system/System.ts","../../src/layaAir/laya/resource/Texture2DArray.ts","../../src/layaAir/laya/resource/Texture3D.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLRenderEngineFactory.ts"],"sourcesContent":["/**\r\n * <code>ClassUtils</code> 是一个类工具类。\r\n */\r\nexport class ClassUtils {\r\n    static _classMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * 注册 Class 映射，方便在class反射时获取。\r\n     * @param\tclassName 映射的名字或者别名。\r\n     * @param\tclassDef 类的全名或者类的引用，全名比如:\"laya.Sprite\"。\r\n     */\r\n    static regClass(className: string, classDef: any): void {\r\n        ClassUtils._classMap[className] = classDef;\r\n    }\r\n\r\n    /**\r\n     * 根据名字返回类对象。\r\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\r\n     * @return 类对象\r\n     */\r\n    static getClass(className: string): any {\r\n        return ClassUtils._classMap[className];\r\n    }\r\n\r\n    /**\r\n     * 根据名称创建 Class 实例。\r\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\r\n     * @return\t返回类的实例。\r\n     */\r\n    static getInstance(className: string): any {\r\n        var compClass: any = ClassUtils.getClass(className);\r\n        if (compClass) return new compClass();\r\n        else console.warn(\"[error] Undefined class:\", className);\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { ClassUtils } from \"./laya/utils/ClassUtils\";\r\n\r\nexport type EnumDescriptor = {\r\n    name: string,\r\n    value: any,\r\n    extend?: EnumDescriptor,\r\n    [index: string]: any,\r\n}[] | any[] | Object | string;\r\n\r\nexport type PropertType = string | Function | Object | [PropertType] | [\"Record\", PropertType];\r\n\r\nexport interface PropertyDescriptor {\r\n    /** 属性名称。一般不需要设定。 */\r\n    name: string;\r\n    /** \r\n     * 属性类型。\r\n     * 基础类型有：number,string,boolean,any，注意是使用字符串，不是类型。\r\n     * 复合类型有：数组，使用类似[\"number\"]这样的方式表达；字典，使用类似[\"Record\", \"number\"]这样的方式表达，第一个元素固定为Record，第二个元素为实际类型。\r\n     * 其他对象类型可以直接使用类名，但要注意该类必须有使用regClass装饰器。也支持枚举类型。枚举类型不需要regClass。\r\n     * 如果不提供type，表示只用于ui样式，没有实际对应数据，和不会序列化\r\n     */\r\n    type: PropertType;\r\n    /** 标题。如果不提供，则使用name。 */\r\n    caption: string;\r\n    /** 提示文字 */\r\n    tips: string;\r\n\r\n    /** 属性栏目。为多个属性设置相同的值，可以将它们显示在同一个Inspector栏目内。 */\r\n    catalog: string;\r\n    /* 栏目标题。不提供则直接使用栏目名称。 */\r\n    catalogCaption: string;\r\n    /* 栏目的显示顺序，数值越小显示在前面。不提供则按属性出现的顺序。*/\r\n    catalogOrder: number;\r\n\r\n    /**\r\n     * 编辑这个属性的控件。内置有：number,string,boolean,color,vec2,vec3,vec4,asset\r\n     * \r\n     *      number : 数字输入。\r\n     *      string : 字符串输入。默认为单行输入，如果是多行，需要激活multiline选项。\r\n     *      boolean : 布尔值输入，用于单选框或多选框。\r\n     *      color : 一个颜色框+调色盘+拾色器\r\n     *      vec2 : XY输入的组合\r\n     *      vec3 : XYZ输入的组合\r\n     *      vec4 : XYZW输入的组合\r\n     *      asset : 选择资源\r\n     * \r\n     * 一般来说，不需要设置这个选项，编辑器会自动根据属性类型选择适合的控件，但在某些情况下可以需要强制指定。\r\n     * 例如，如果数据类型是Vector4，但其实它表达的是颜色，用默认编辑Vector4的控件不适合，需要在这里设置为“color”。\r\n     * \r\n     * 显式设置inspector为null，则不会为属性构造inspector。这与hidden设置为true不同。hidden为true是创建但不可见，\r\n     * inspector为null的话则是完全不创建。\r\n     */\r\n    inspector: string;\r\n\r\n    /** 隐藏控制:true隐藏，false显示。常用于关联属性的情况。\r\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），隐藏这个属性。\r\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    hidden: boolean | string;\r\n\r\n    /** 只读控制。\r\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），该属性只读。\r\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    readonly: boolean | string;\r\n\r\n    /** 数据检查机制。\r\n     * 1. 将包括表达式的字符串传入，用于判断检查是否符合表达式的条件。符合条件，需要返回报错信息。\r\n     * 2. 使用示例为：\"if(value == data.a) return '不能与a的值相同'\"\r\n     * 其中的value为当前用户在该属性输入的值，data为当前组件的对象数据，data.a是当前组件中的a属性值\r\n     */\r\n    validator: string;\r\n\r\n    /** 是否序列化 */\r\n    serializable: boolean;\r\n    /** 属性在不参与序列化时，如果它的数据可能受其他可序列化的属性影响，在这里填写其他属性名称。这通常用于判断预制体属性是否覆盖。*/\r\n    affectBy?: string;\r\n\r\n    /** 是否多行文本输入 */\r\n    multiline: boolean;\r\n    /** 是否密码输入 */\r\n    password: boolean;\r\n    /** 如果true或者缺省，文本输入每次输入都提交；否则只有在失焦时才提交 */\r\n    submitOnTyping: boolean;\r\n    /** 输入文本的提示信息 */\r\n    prompt: string;\r\n\r\n    /** 定义枚举 */\r\n    enumSource: EnumDescriptor;\r\n\r\n    /** 是否反转布尔值。例如当属性值为true时，多选框显示为不勾选。 */\r\n    reverseBool: boolean;\r\n\r\n    /** 是否允许null值。默认为true。*/\r\n    nullable: boolean;\r\n\r\n    /** 数字的最小值 */\r\n    min: number,\r\n    /** 数字的最大值 */\r\n    max: number,\r\n    /** 数值范围，等同于一次性设置min和max。 */\r\n    range: [number, number];\r\n    /** 拖动方式改变数值时，每次数值改变的幅度。 */\r\n    step: number;\r\n    /** 小数点后的位数 */\r\n    fractionDigits: number;\r\n    /** 显示为百分比 */\r\n    percentage: boolean;\r\n\r\n    /** 对数组类型属性适用。表示数组是固定长度，不允许修改。*/\r\n    fixedLength: boolean;\r\n    /** 对数组类型属性适用。如果不提供，则表示数组允许所有操作，如果提供，则只允许列出的操作。*/\r\n    arrayActions: Array<\"append\" | \"insert\" | \"delete\" | \"move\">;\r\n    /** 对数组类型属性适用。这里可以定义数组元素的属性 */\r\n    elementProps: Partial<PropertyDescriptor>;\r\n\r\n    /** 对颜色类型属性适用。表示是否提供透明度a值的修改。 */\r\n    showAlpha: boolean;\r\n    /** 对颜色类型属性适用。它与default值不同的是，当default是null时，可以用defaultColor定义一个非null时的默认值。*/\r\n    defaultColor: any;\r\n    /** 对颜色类型属性适用。允许显示一个checkbox决定颜色是否为null。 */\r\n    colorNullable: boolean;\r\n\r\n    /** 对对象类型属性适用。如果为true，隐藏对象的标题，同时对象下的属性的显示缩进会减少一级。*/\r\n    hideHeader: boolean;\r\n    /** 对对象类型属性适用。对象创建时可以下拉选择一个类型。如果显示设置为null，则禁止菜单。默认是显示一个创建基类的菜单。*/\r\n    createObjectMenu: Array<string>;\r\n\r\n    /** 说明此属性是引用一个资源 */\r\n    isAsset?: boolean;\r\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。*/\r\n    assetTypeFilter: string;\r\n    /** 如果属性类型是string，并且进行资源选择时，这个选项决定属性值是资源原始路径还是res://uuid这样的格式。如果是true，则是资源原始路径。默认false。*/\r\n    useAssetPath: boolean;\r\n    /** 对资源类型的属性适用。选择资源时是否允许选择内部资源 */\r\n    allowInternalAssets: boolean;\r\n\r\n    /** 显示位置。语法：before xxx/after xxx/first/last。 */\r\n    position: string;\r\n\r\n    /** 表示属性是私有属性。私有属性不会显示在Inspector里，但会序列化保存。 */\r\n    \"private\": boolean;\r\n\r\n    /** 增加缩进，单位是层级，不是像素。 */\r\n    addIndent: number;\r\n\r\n    /** 表示属性是否允许多选情况下编辑。默认true。 */\r\n    allowMultipleObjects: boolean;\r\n\r\n    /** 表示属性不显示在派生类的属性表中 */\r\n    hideInDeriveType: boolean;\r\n\r\n    /** 属性改变时额外调用对象的一个函数，这里是函数名称。\r\n     * 函数原型是func(key?:string)。其中key在改变成员内部属性时会传递。\r\n     * 例如改变数据某个元素的内部属性，则key是这个元素的索引。 \r\n     */\r\n    onChange: string;\r\n\r\n    /** 额外的选项 */\r\n    options: Record<string, any>;\r\n}\r\n\r\nexport interface TypeDescriptor {\r\n    /** 标题。如果不提供，则使用name。 */\r\n    caption: string;\r\n    /** 添加到组件菜单。 */\r\n    menu: string;\r\n    /** 图标。*/\r\n    icon: string;\r\n    /** 属性列表 */\r\n    properties: Array<Partial<PropertyDescriptor>>;\r\n    /** 编辑这个类实例的控件 */\r\n    inspector: string;\r\n    /** 对Component使用，表示这个组件允许挂载的节点类型。默认null */\r\n    worldType: \"2d\" | \"3d\" | null;\r\n    /** 额外的选项 */\r\n    options: Record<string, any>;\r\n}\r\n\r\nfunction dummy() { }\r\n\r\n/**\r\n * 注册一个类型，注册后才能被序列化系统自动保存和载入。\r\n */\r\nexport function regClass(assetId?: string): any {\r\n    return function (constructor: Function) {\r\n        ClassUtils.regClass(assetId, constructor);\r\n    };\r\n}\r\n\r\n/**\r\n * 设置类型的额外信息。\r\n * @param info 类型的额外信息\r\n */\r\nexport function classInfo(info?: Partial<TypeDescriptor>): any { return dummy; }\r\n\r\n/**\r\n * 设置组件可以在编辑器环境中执行完整声明周期。\r\n */\r\nexport function runInEditor(constructor: Function): void { }\r\n\r\n/**\r\n * 使用这个装饰器，可以使属性显示在编辑器属性设置面板上，并且能序列化保存。\r\n * @param info 属性的类型，如: Number,\"number\",[Number],[\"Record\", Number]等。或传递对象描述详细信息，例如{ type: \"string\", multiline: true }。\r\n */\r\nexport function property(info: PropertType | Partial<PropertyDescriptor>): any { return dummy; }\r\n","/**\r\n *  Config 用于配置一些全局参数。如需更改，请在初始化引擎之前设置。\r\n */\r\nexport class Config {\r\n    /**\r\n    * 画布设置是否抗锯齿，只对2D(WebGL)有效,3D抗锯齿在camera或RT上面控制。\r\n    */\r\n    static isAntialias: boolean = true;\r\n    /**\r\n     * 是否使用webgl2\r\n     */\r\n    static useWebGL2: boolean = true;\r\n    /*\r\n     * 限制fps \r\n     */\r\n    static FPS = 60;\r\n    /**\r\n     * 是否使用视网膜模式，在iOS上面可能会创建更大的RT，来达到更佳的效果\r\n     */\r\n    static useRetinalCanvas: boolean = false;\r\n\r\n    //-------------2D设置---------------------\r\n    /**\r\n     * 2D动画 Animation 的默认播放时间间隔，单位为毫秒。\r\n     */\r\n    static animationInterval: number = 50;\r\n\r\n    /**\r\n       * 当使用webGL渲染2d的时候，每次创建vb是否直接分配足够64k个顶点的缓存。这样可以提高效率。\r\n       */\r\n    static webGL2D_MeshAllocMaxMem: boolean = true;\r\n\r\n    /*\r\n     *默认文本大小，默认为12\r\n     */\r\n    static defaultFontSize: number = 12;\r\n    /*\r\n     *默认文本字体，默认为Arial\r\n     */\r\n    static defaultFont: string = \"Arial\";\r\n\r\n    //-------------引擎内部使用-------------\r\n    /**\r\n     * 设置画布是否透明，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isAlpha: boolean = false;\r\n    /**\r\n     * 设置画布是否包含深度\r\n     */\r\n    static isDepth: boolean = false;\r\n    /**\r\n     * 表明在一个系统性能低的环境是否创建该上下文的boolean值\r\n     */\r\n    static isfailIfMajorPerformanceCaveat: boolean = false;\r\n\r\n    static powerPreference: WebGLPowerPreference = \"default\";\r\n    /**\r\n     * 设置画布是否预乘，只对2D(WebGL)、3D有效。\r\n     */\r\n    static premultipliedAlpha: boolean = true;\r\n    /**\r\n     * 设置画布的是否开启模板缓冲，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isStencil: boolean = false;\r\n    /**\r\n     * 是否保留渲染缓冲区。\r\n     */\r\n    static preserveDrawingBuffer: boolean = false;\r\n    /**\r\n     * 是否打印Webgl指令，同时定位webgl报错\r\n     */\r\n    static printWebglOrder: boolean = false;\r\n    \r\n    /**在IOS下，一些字体会找不到，引擎提供了字体映射功能，比如默认会把 \"黑体\" 映射为 \"黑体-简\"，更多映射，可以自己添加*/\r\n    static fontFamilyMap: any = { \"报隶\": \"报隶-简\", \"黑体\": \"黑体-简\", \"楷体\": \"楷体-简\", \"兰亭黑\": \"兰亭黑-简\", \"隶变\": \"隶变-简\", \"凌慧体\": \"凌慧体-简\", \"翩翩体\": \"翩翩体-简\", \"苹方\": \"苹方-简\", \"手札体\": \"手札体-简\", \"宋体\": \"宋体-简\", \"娃娃体\": \"娃娃体-简\", \"魏碑\": \"魏碑-简\", \"行楷\": \"行楷-简\", \"雅痞\": \"雅痞-简\", \"圆体\": \"圆体-简\" };\r\n\r\n    /**tempConfig Fixed number of frames */\r\n    static fixedFrames: boolean = true;\r\n\t/*资源引用参数为0是否立即删除资源，如果不立即删除请调用DestrotyUnUse*/\r\n    static destroyResourceImmediatelyDefault = true;\r\n\r\n}\r\n\r\n","/**\r\n * @private\r\n * 静态常量集合\r\n */\r\nexport class Const {\r\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\r\n    static ENUM_TEXTALIGN_CENTER: number = 1;\r\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\r\n\r\n    static BYTES_PE: number = 4;\r\n    static BYTES_PIDX: number = 2;\r\n\r\n    static MAX_CLIP_SIZE: number = 99999999;\r\n}\r\n\r\n/**\r\n * 节点标志\r\n */\r\nexport class NodeFlags {\r\n    static NOT_ACTIVE = 0x01;\r\n    static ACTIVE_INHIERARCHY = 0x02;\r\n    static AWAKED = 0x04;\r\n    static NOT_READY = 0x08;\r\n    static DISPLAY = 0x10;\r\n    static HAS_ZORDER = 0x20;\r\n    static HAS_MOUSE = 0x40;\r\n    static DISPLAYED_INSTAGE = 0x80;\r\n    static DRAWCALL_OPTIMIZE = 0x100;\r\n    static PROCESS_COLLISIONS = 0x200;\r\n    static PROCESS_TRIGGERS = 0x400;\r\n    static HAS_SCRIPT = 0x800;\r\n    static ESCAPE_DRAWING_TO_TEXTURE = 0x1000;\r\n    static DISABLE_INNER_CLIPPING = 0x2000;\r\n    static DISABLE_OUTER_CLIPPING = 0x4000;\r\n    static DISABLE_VISIBILITY = 0x8000;\r\n    static EDITING_NODE = 0x10000;\r\n    static HIDE_BY_EDITOR = 0x20000;\r\n    static LOCK_BY_EDITOR = 0x40000;\r\n}\r\n\r\nexport class HideFlags {\r\n    static HideInHierarchy = 0x1;\r\n    static HideInInspector = 0x2;\r\n    static DontSave = 0x4;\r\n    static HideAndDontSave = 0x7;\r\n}","import { Timer } from \"./laya/utils/Timer\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { Context } from \"./laya/resource/Context\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\n\r\n/**\r\n * @internal\r\n * 使用全局类的时候，避免引用其他模块\r\n */\r\nexport class ILaya {\r\n    static Loader: typeof Loader = null;\r\n    static Context: typeof Context = null;\r\n    static Browser: typeof Browser = null;\r\n\r\n    static Laya: any = null;\r\n    static loader: Loader = null;\r\n    static timer: Timer = null;\r\n    static systemTimer: Timer = null;\r\n    static physicsTimer: Timer = null;\r\n    static stage: Stage = null;\r\n}\r\n","export class LayaEnv {\r\n    static version: string = \"3.1.0\";\r\n    static isPlaying: boolean = true;\r\n    static isPreview: boolean = false;\r\n    static isConch: boolean = (<any>window).conch != null;\r\n\r\n    static beforeInit: (stageConfig: IStageConfig) => void;\r\n    static afterInit: () => void;\r\n}\r\n\r\nexport interface IStageConfig {\r\n    designWidth?: number;\r\n    designHeight?: number;\r\n    scaleMode?: string;\r\n    screenMode?: string;\r\n    alignV?: string;\r\n    alignH?: string;\r\n    backgroundColor?: string;\r\n}","/**\r\n * <p> <code>Pool</code> 是对象池类，用于对象的存储、重复使用。</p>\r\n * <p>合理使用对象池，可以有效减少对象创建的开销，避免频繁的垃圾回收，从而优化游戏流畅度。</p>\r\n */\r\nexport class Pool {\r\n    /**@private */\r\n    private static _CLSID: number = 0;\r\n    /**@private */\r\n    private static POOLSIGN: string = \"__InPool\";\r\n    /**@private  对象存放池。*/\r\n    private static _poolDic: any = {};\r\n\r\n    /**\r\n     * 根据对象类型标识字符，获取对象池。\r\n     * @param sign 对象类型标识字符。\r\n     * @return 对象池。\r\n     */\r\n    static getPoolBySign(sign: string): any[] {\r\n        return Pool._poolDic[sign] || (Pool._poolDic[sign] = []);\r\n    }\r\n\r\n    /**\r\n     * 清除对象池的对象。\r\n     * @param sign 对象类型标识字符。\r\n     */\r\n    static clearBySign(sign: string): void {\r\n        if (Pool._poolDic[sign]) Pool._poolDic[sign].length = 0;\r\n    }\r\n\r\n    /**\r\n     * 将对象放到对应类型标识的对象池中。\r\n     * @param sign 对象类型标识字符。\r\n     * @param item 对象。\r\n     */\r\n    static recover(sign: string, item: any): void {\r\n        if (item[Pool.POOLSIGN] !== false) //有这个标志，才表明对象是从Pool里获取的，允许recover\r\n            return;\r\n        item[Pool.POOLSIGN] = true;\r\n        Pool.getPoolBySign(sign).push(item);\r\n    }\r\n\r\n    /**\r\n     * 根据类名进行回收，如果类有类名才进行回收，没有则不回收\r\n     * @param\tinstance 类的具体实例\r\n     */\r\n    static recoverByClass(instance: any): void {\r\n        if (instance) {\r\n            var className: string = instance[\"__className\"] || instance.constructor._$gid;\r\n            if (className) Pool.recover(className, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回类的唯一标识\r\n     */\r\n    private static _getClassSign(cla: any): string {\r\n        var className = cla[\"__className\"] || cla[\"_$gid\"];\r\n        if (!className) {\r\n            cla[\"_$gid\"] = className = Pool._CLSID + \"\";\r\n            Pool._CLSID++;\r\n        }\r\n        return className;\r\n    }\r\n\r\n    /**\r\n     * 根据类型创建对象\r\n     * @param\tcls 类型\r\n     */\r\n    static createByClass<T>(cls: new () => T): T {\r\n        return Pool.getItemByClass(Pool._getClassSign(cls), cls);\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\r\n     * <p>当对象池中无此类型标识的对象时，则根据传入的类型，创建一个新的对象返回。</p>\r\n     * @param sign 对象类型标识字符。\r\n     * @param cls 用于创建该类型对象的类。\r\n     * @return 此类型标识的一个对象。\r\n     */\r\n    static getItemByClass<T>(sign: string, cls: new () => T): T {\r\n        let rst: any;\r\n        let pool = Pool.getPoolBySign(sign);\r\n        if (pool.length)\r\n            rst = pool.pop();\r\n        else\r\n            rst = new cls();\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\r\n     * <p>当对象池中无此类型标识的对象时，则使用传入的创建此类型对象的函数，新建一个对象返回。</p>\r\n     * @param sign 对象类型标识字符。\r\n     * @param createFun 用于创建该类型对象的方法。\r\n     * @param caller this对象\r\n     * @return 此类型标识的一个对象。\r\n     */\r\n    static getItemByCreateFun(sign: string, createFun: Function, caller: any = null): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : createFun.call(caller);\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 根据传入的对象类型标识字符，获取对象池中已存储的此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\r\n     * @param sign 对象类型标识字符。\r\n     * @return 对象池中此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\r\n     */\r\n    static getItem(sign: string): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : null;\r\n        if (rst) {\r\n            rst[Pool.POOLSIGN] = false;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n}\r\n\r\n\r\n","var _gid: number = 1;\r\nconst _pi: number = 180 / Math.PI;\r\nconst _pi2: number = Math.PI / 180;\r\n\r\n/**\r\n * <code>Utils</code> 是工具类。\r\n */\r\nexport class Utils {\r\n\r\n    /**\r\n     * 角度转弧度。\r\n     * @param\tangle 角度值。\r\n     * @return\t返回弧度值。\r\n     */\r\n    static toRadian(angle: number): number {\r\n        return angle * _pi2;\r\n    }\r\n\r\n    /**\r\n     * 弧度转换为角度。\r\n     * @param\tradian 弧度值。\r\n     * @return\t返回角度值。\r\n     */\r\n    static toAngle(radian: number): number {\r\n        return radian * _pi;\r\n    }\r\n\r\n    /**\r\n     * 将传入的 uint 类型颜色值转换为字符串型颜色值。\r\n     * @param color 颜色值。\r\n     * @return 字符串型颜色值。\r\n     */\r\n    static toHexColor(color: number): string {\r\n        if (color < 0 || isNaN(color)) return null;\r\n        var str: string = color.toString(16);\r\n        while (str.length < 6) str = \"0\" + str;\r\n        return \"#\" + str;\r\n    }\r\n\r\n    static fromStringColor(value: string): number {\r\n        if (!value)\r\n            return 0;\r\n\r\n        if (value.indexOf(\"rgba(\") >= 0 || value.indexOf(\"rgb(\") >= 0) {\r\n            let p1 = value.indexOf(\"(\");\r\n            let p2 = value.indexOf(\")\");\r\n            if (p1 == -1 || p2 == -1)\r\n                return 0;\r\n\r\n            value = value.substring(p1 + 1, p2);\r\n            let arr: any[] = value.split(\",\");\r\n            let len = arr.length;\r\n            for (let i = 0; i < len; i++) {\r\n                arr[i] = parseFloat(arr[i]);\r\n                if (isNaN(arr[i]))\r\n                    arr[i] = 0;\r\n            }\r\n            if (arr.length == 4)\r\n                return (arr[0] << 24) + (arr[1] << 16) + (arr[2] << 8) + Math.round(arr[3] * 255);\r\n            else\r\n                return (arr[0] << 16) + (arr[1] << 8) + arr[2];\r\n        } else {\r\n            value.charAt(0) === '#' && (value = value.substring(1));\r\n            let len = value.length;\r\n            if (len === 3 || len === 4) {\r\n                let temp: string = \"\";\r\n                for (let i = 0; i < len; i++) {\r\n                    temp += (value[i] + value[i]);\r\n                }\r\n                value = temp;\r\n            }\r\n            return parseInt(value, 16);\r\n        }\r\n    }\r\n\r\n    /**获取一个全局唯一ID。*/\r\n    static getGID(): number {\r\n        return _gid++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清空source数组，复制array数组的值。\r\n     * @param\tsource 需要赋值的数组。\r\n     * @param\tarray 新的数组值。\r\n     * @return \t复制后的数据 source 。\r\n     */\r\n    static copyArray(source: any[], array: any[]): any[] {\r\n        source || (source = []);\r\n        if (!array) return source;\r\n        source.length = array.length;\r\n        var len: number = array.length;\r\n        for (let i = 0; i < len; i++) {\r\n            source[i] = array[i];\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 批量移动点坐标。\r\n     * @param points 坐标列表。\r\n     * @param x x轴偏移量。\r\n     * @param y y轴偏移量。\r\n     */\r\n    static transPointList(points: any[], x: number, y: number): void {\r\n        var i: number, len: number = points.length;\r\n        for (i = 0; i < len; i += 2) {\r\n            points[i] += x;\r\n            points[i + 1] += y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 解析一个字符串，并返回一个整数。和JS原生的parseInt不同：如果str为空或者非数字，原生返回NaN，这里返回0。\r\n     * @param\tstr\t\t要被解析的字符串。\r\n     * @param\tradix\t表示要解析的数字的基数。默认值为0，表示10进制，其他值介于 2 ~ 36 之间。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。如果该参数不在上述范围内，则此方法返回 0。\r\n     * @return\t返回解析后的数字。\r\n     */\r\n    static parseInt(str: string, radix: number = 0): number {\r\n        var result: any = parseInt(str, radix);\r\n        if (isNaN(result)) return 0;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获得路径中的文件名（包含扩展名）\r\n     */\r\n    static getBaseName(path: string): string {\r\n        let i = path.lastIndexOf(\"/\");\r\n        if (i != -1)\r\n            path = path.substring(i + 1);\r\n        i = path.indexOf(\"?\");\r\n        if (i != -1)\r\n            path = path.substring(0, i);\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * 获取文件名的扩展名，并转换为小写字母。例如\"1.abc\"将返回abc。\r\n     */\r\n    static getFileExtension(path: string): string {\r\n        let i = path.lastIndexOf(\".\");\r\n\r\n        if (i != -1) {\r\n            let ext = path.substring(i + 1).toLowerCase();\r\n            let j = ext.indexOf(\"?\");\r\n            if (j != -1)\r\n                ext = ext.substring(0, j);\r\n            if (ext === \"ls\") { //lanit.ls ltcb.ls 这类特殊扩展名的支持\r\n                let k = path.lastIndexOf(\".\", i - 1);\r\n                if (k != -1) {\r\n                    let ext2 = path.substring(k + 1, i + 1) + ext;\r\n                    if (ext2 === \"lanit.ls\" || ext2 === \"ltcb.ls\")\r\n                        return ext2;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        else\r\n            return \"\";\r\n    }\r\n\r\n    /**\r\n     * 更改文件名的扩展名。\r\n     */\r\n    static replaceFileExtension(path: string, newExt: string, excludeDot?: boolean): string {\r\n        if (!path)\r\n            return path;\r\n        let i = path.lastIndexOf(\".\");\r\n        if (newExt.length > 0 && !excludeDot)\r\n            newExt = \".\" + newExt;\r\n        if (i != -1) {\r\n            let j = path.indexOf(\"?\", i);\r\n            if (j != -1)\r\n                return path.substring(0, i) + newExt + path.substring(j);\r\n            else\r\n                return path.substring(0, i) + newExt;\r\n        }\r\n        else\r\n            return path + newExt;\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <code>Component</code> 类用于创建组件的基类。\r\n */\r\nexport class Component {\r\n    /** @private */\r\n    _id: number;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n    /**@private */\r\n    private _enableState: boolean;\r\n    /** @internal */\r\n    _status: number = 0; //1-awaked,2-starting,3-started,4-destroyed\r\n\r\n    /**\r\n     * 获取所属Node节点。\r\n     */\r\n    owner: Node;\r\n    /** @internal */\r\n    _enabled: boolean = true;\r\n    /**\r\n     * 是否单例，即同一个节点只能添加此类型的脚本一次\r\n     */\r\n    _singleton?: boolean = true;\r\n    /**\r\n     * 是否可以在IDE环境中运行\r\n     */\r\n    runInEditor: boolean;\r\n    scriptPath: string;\r\n    _extra: IComponentExtra;\r\n\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /**\r\n     * 创建一个新的 <code>Component</code> 实例。\r\n     */\r\n    constructor() {\r\n        this._id = Utils.getGID();\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    //@internal\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * 唯一标识ID。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 是否启用组件。\r\n     */\r\n    get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(value: boolean) {\r\n        if (this._enabled != value) {\r\n            this._enabled = value;\r\n            if (this.owner)\r\n                this._setActive(value && this.owner.activeInHierarchy);\r\n        }\r\n    }\r\n\r\n    get awaked(): boolean {\r\n        return this._status > 0;\r\n    }\r\n\r\n    /**\r\n     * 是否已经销毁 。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._status == 4;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _isScript(): boolean {\r\n        return false;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _resetComp(): void {\r\n        this._enabled = true;\r\n        this._status = 0;\r\n        this._enableState = false;\r\n        this.owner = null;\r\n    }\r\n\r\n    _setOwner(node: Node) {\r\n        if (this._status != 0) {\r\n            throw 'reuse a destroyed component';\r\n        }\r\n        this.owner = node;\r\n\r\n        if (this._isScript())\r\n            node._setBit(NodeFlags.HAS_SCRIPT, true);\r\n\r\n        this._onAdded();\r\n        this.onAdded();\r\n    }\r\n\r\n    /**\r\n     * 被添加到节点后调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onAdded(): void {\r\n    }\r\n\r\n    /**\r\n   * 被激活后调用，可根据需要重写此方法\r\n   * @internal\r\n   */\r\n    protected _onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * 被激活后调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onEnable(): void {\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n    * 被禁用时调用，可根据需要重写此方法\r\n    * @internal\r\n    * 销毁组件\r\n    */\r\n    protected _onDisable(): void {\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * 被销毁时调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onDestroy(): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, interactMap: any = null): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parseInteractive(data: any = null, spriteMap: any = null) {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _cloneTo(dest: Component): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setActive(value: boolean): void {\r\n        if (value) {\r\n            if (this._status == 0) {\r\n                this._status = 1;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    this._onAwake();\r\n                    this.onAwake();\r\n                }\r\n            }\r\n            if (this._enabled && !this._enableState) {\r\n                this._enableState = true;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                    driver.add(this);\r\n\r\n                    if (LayaEnv.isPlaying && this._isScript())\r\n                        this.setupScript();\r\n\r\n                    this._onEnable();\r\n                }\r\n            }\r\n        } else if (this._enableState) {\r\n            this._enableState = false;\r\n            if (LayaEnv.isPlaying || this.runInEditor) {\r\n                let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                driver.remove(this);\r\n\r\n                ILaya.stage.offAllCaller(this);\r\n\r\n                this._onDisable();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setupScript() {\r\n    }\r\n\r\n    /**\r\n     * 销毁组件\r\n     */\r\n    destroy(): void {\r\n        if (this._status == 4)\r\n            return;\r\n\r\n        if (this.owner)\r\n            this.owner._destroyComponent(this);\r\n        else if(!this.destroyed)\r\n            this._destroy(true);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroy(second?: boolean): void {\r\n        if (second) {\r\n            this._onDestroy();\r\n            this.onDestroy();\r\n            if (this.onReset) {\r\n                this.onReset();\r\n                this._resetComp();\r\n                Pool.recoverByClass(this);\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._setActive(false);\r\n        this._status = 4;\r\n\r\n        let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n        driver._toDestroys.add(this);\r\n    }\r\n\r\n    /**\r\n     * 被添加到节点后调用，和Awake不同的是即使节点未激活onAdded也会调用。\r\n     */\r\n    onAdded(): void {\r\n    }\r\n\r\n    /**\r\n     * 重置组件参数到默认值，如果实现了这个函数，则组件会被重置并且自动回收到对象池，方便下次复用\r\n     * 如果没有重置，则不进行回收复用\r\n\r\n     */\r\n    onReset?(): void;\r\n\r\n    /**\r\n     * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\r\n     */\r\n    onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * 组件被启用后执行，比如节点被添加到舞台后\r\n     */\r\n    onEnable(): void {\r\n    }\r\n\r\n    /**\r\n     * 第一次执行update之前执行，只会执行一次\r\n     */\r\n    onStart?(): void;\r\n\r\n    /**\r\n     * 每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n     */\r\n    onUpdate?(): void;\r\n\r\n    /**\r\n     * 每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n     */\r\n    onLateUpdate?(): void;\r\n\r\n    /**\r\n     * 渲染之前执行\r\n     */\r\n    onPreRender?(): void;\r\n\r\n    /**\r\n     * 渲染之后执行\r\n     */\r\n    onPostRender?(): void;\r\n\r\n    /**\r\n     * 组件被禁用时执行，比如从节点从舞台移除后\r\n     */\r\n    onDisable(): void {\r\n    }\r\n\r\n    /**\r\n     * 手动调用节点销毁时执行\r\n     */\r\n    onDestroy(): void {\r\n    }\r\n}\r\n\r\nexport interface IComponentExtra { }","import { Point } from \"./Point\";\r\nimport { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * <p> <code>Matrix</code> 类表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。</p>\r\n * <p>您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix 对象应用于 Transform 对象的 matrix 属性，然后应用该 Transform 对象作为显示对象的 transform 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。</p>\r\n */\r\nexport class Matrix {\r\n\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static EMPTY: Matrix = new Matrix();\r\n    /**用于中转使用的 <code>Matrix</code> 对象。*/\r\n    static TEMP: Matrix = new Matrix();\r\n    /**@internal */\r\n    static _createFun: Function|null = null;\r\n\r\n    /**缩放或旋转图像时影响像素沿 x 轴定位的值。*/\r\n    a: number;\r\n    /**旋转或倾斜图像时影响像素沿 y 轴定位的值。*/\r\n    b: number;\r\n    /**旋转或倾斜图像时影响像素沿 x 轴定位的值。*/\r\n    c: number;\r\n    /**缩放或旋转图像时影响像素沿 y 轴定位的值。*/\r\n    d: number;\r\n    /**沿 x 轴平移每个点的距离。*/\r\n    tx: number;\r\n    /**沿 y 轴平移每个点的距离。*/\r\n    ty: number;\r\n    /**@internal 是否有旋转缩放操作*/\r\n    _bTransform: boolean = false;\r\n\r\n    /**\r\n     * 使用指定参数创建新的 <code>Matrix</code> 对象。\r\n     * @param a\t\t（可选）缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param b\t\t（可选）旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param c\t\t（可选）旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param d\t\t（可选）缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param tx\t（可选）沿 x 轴平移每个点的距离。\r\n     * @param ty\t（可选）沿 y 轴平移每个点的距离。\r\n     */\r\n    constructor(a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0, nums: number = 0) {\r\n        if (Matrix._createFun != null) {\r\n            return Matrix._createFun(a, b, c, d, tx, ty, nums);\r\n        }\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        this._checkTransform();\r\n    }\r\n\r\n    /**\r\n     * 将本矩阵设置为单位矩阵。\r\n     * @return 返回当前矩形。\r\n     */\r\n    identity(): Matrix {\r\n        this.a = this.d = 1;\r\n        this.b = this.tx = this.ty = this.c = 0;\r\n        this._bTransform = false;\r\n        return this;\r\n    }\r\n\r\n    /**@internal */\r\n    _checkTransform(): boolean {\r\n        return this._bTransform = (this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1);\r\n    }\r\n\r\n    /**\r\n     * 设置沿 x 、y 轴平移每个点的距离。\r\n     * @param\tx 沿 x 轴平移每个点的距离。\r\n     * @param\ty 沿 y 轴平移每个点的距离。\r\n     * @return\t返回对象本身\r\n     */\r\n    setTranslate(x: number, y: number): Matrix {\r\n        this.tx = x;\r\n        this.ty = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 沿 x 和 y 轴平移矩阵，平移的变化量由 x 和 y 参数指定。\r\n     * @param\tx 沿 x 轴向右移动的量（以像素为单位）。\r\n     * @param\ty 沿 y 轴向下移动的量（以像素为单位）。\r\n     * @return 返回此矩形对象。\r\n     */\r\n    translate(x: number, y: number): Matrix {\r\n        this.tx += x;\r\n        this.ty += y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对矩阵应用缩放转换。\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    scale(x: number, y: number): Matrix {\r\n        this.a *= x;\r\n        this.d *= y;\r\n        this.c *= x;\r\n        this.b *= y;\r\n        this.tx *= x;\r\n        this.ty *= y;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对 Matrix 对象应用旋转转换。\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    rotate(angle: number): Matrix {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var a1: number = this.a;\r\n        var c1: number = this.c;\r\n        var tx1: number = this.tx;\r\n\r\n        this.a = a1 * cos - this.b * sin;\r\n        this.b = a1 * sin + this.b * cos;\r\n        this.c = c1 * cos - this.d * sin;\r\n        this.d = c1 * sin + this.d * cos;\r\n        this.tx = tx1 * cos - this.ty * sin;\r\n        this.ty = tx1 * sin + this.ty * cos;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对 Matrix 对象应用倾斜转换。\r\n     * @param\tx 沿着 X 轴的 2D 倾斜弧度。\r\n     * @param\ty 沿着 Y 轴的 2D 倾斜弧度。\r\n     * @return 当前 Matrix 对象。\r\n     */\r\n    skew(x: number, y: number): Matrix {\r\n        var tanX: number = Math.tan(x);\r\n        var tanY: number = Math.tan(y);\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        this.a += tanY * this.c;\r\n        this.b += tanY * this.d;\r\n        this.c += tanX * a1;\r\n        this.d += tanX * b1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对指定的点应用当前矩阵的逆转化并返回此点。\r\n     * @param\tout 待转化的点 Point 对象。\r\n     * @return\t返回out\r\n     */\r\n    invertTransformPoint(out: Point): Point {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n\r\n        var a2: number = d1 / n;\r\n        var b2: number = -b1 / n;\r\n        var c2: number = -c1 / n;\r\n        var d2: number = a1 / n;\r\n        var tx2: number = (c1 * this.ty - d1 * tx1) / n;\r\n        var ty2: number = -(a1 * this.ty - b1 * tx1) / n;\r\n        return out.setTo(a2 * out.x + c2 * out.y + tx2, b2 * out.x + d2 * out.y + ty2);\r\n    }\r\n\r\n    /**\r\n     * 将 Matrix 对象表示的几何转换应用于指定点。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @return\t返回out\r\n     */\r\n    transformPoint(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y + this.tx, this.b * out.x + this.d * out.y + this.ty);\r\n    }\r\n\r\n    /**\r\n     * 将 Matrix 对象表示的几何转换应用于指定点，忽略tx、ty。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @return\t返回out\r\n     */\r\n    transformPointN(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y /*+ tx*/, this.b * out.x + this.d * out.y /*+ ty*/);\r\n    }\r\n\r\n    /**\r\n     * 获取 X 轴缩放值。\r\n     * @return  X 轴缩放值。\r\n     */\r\n    getScaleX(): number {\r\n        return this.b === 0 ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);\r\n    }\r\n\r\n    /**\r\n     * 获取 Y 轴缩放值。\r\n     * @return Y 轴缩放值。\r\n     */\r\n    getScaleY(): number {\r\n        return this.c === 0 ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);\r\n    }\r\n\r\n    /**\r\n     * 执行原始矩阵的逆转换。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    invert(): Matrix {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n        this.a = d1 / n;\r\n        this.b = -b1 / n;\r\n        this.c = -c1 / n;\r\n        this.d = a1 / n;\r\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\r\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *  将 Matrix 的成员设置为指定值。\r\n     * @param\ta 缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param\tb 旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param\tc 旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param\td 缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param\ttx 沿 x 轴平移每个点的距离。\r\n     * @param\tty 沿 y 轴平移每个点的距离。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    setTo(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix {\r\n        this.a = a, this.b = b, this.c = c, this.d = d, this.tx = tx, this.ty = ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将指定矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。\r\n     * @param\tmatrix 要连接到源矩阵的矩阵。\r\n     * @return\t当前矩阵。\r\n     */\r\n    concat(matrix: Matrix): Matrix {\r\n        var a: number = this.a;\r\n        var c: number = this.c;\r\n        var tx: number = this.tx;\r\n        this.a = a * matrix.a + this.b * matrix.c;\r\n        this.b = a * matrix.b + this.b * matrix.d;\r\n        this.c = c * matrix.a + this.d * matrix.c;\r\n        this.d = c * matrix.b + this.d * matrix.d;\r\n        this.tx = tx * matrix.a + this.ty * matrix.c + matrix.tx;\r\n        this.ty = tx * matrix.b + this.ty * matrix.d + matrix.ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将指定的两个矩阵相乘后的结果赋值给指定的输出对象。\r\n     * @param\tm1 矩阵一。\r\n     * @param\tm2 矩阵二。\r\n     * @param\tout 输出对象。\r\n     * @return\t结果输出对象 out。\r\n     */\r\n    static mul(m1: Matrix, m2: Matrix, out: Matrix): Matrix {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out.a = aa * ba + ab * bc;\r\n            out.b = aa * bb + ab * bd;\r\n            out.c = ac * ba + ad * bc;\r\n            out.d = ac * bb + ad * bd;\r\n            out.tx = ba * atx + bc * aty + btx;\r\n            out.ty = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out.a = aa * ba;\r\n            out.b = ab * bd;\r\n            out.c = ac * ba;\r\n            out.d = ad * bd;\r\n            out.tx = ba * atx + btx;\r\n            out.ty = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 将指定的两个矩阵相乘，结果赋值给指定的输出数组，长度为16。\r\n     * @param m1\t矩阵一。\r\n     * @param m2\t矩阵二。\r\n     * @param out\t输出对象Array。\r\n     * @return 结果输出对象 out。\r\n     */\r\n    static mul16(m1: Matrix, m2: Matrix, out: any[]): any[] {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out[0] = aa * ba + ab * bc;\r\n            out[1] = aa * bb + ab * bd;\r\n            out[4] = ac * ba + ad * bc;\r\n            out[5] = ac * bb + ad * bd;\r\n            out[12] = ba * atx + bc * aty + btx;\r\n            out[13] = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out[0] = aa * ba;\r\n            out[1] = ab * bd;\r\n            out[4] = ac * ba;\r\n            out[5] = ad * bd;\r\n            out[12] = ba * atx + btx;\r\n            out[13] = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对矩阵应用缩放转换。反向相乘\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     */\r\n    scaleEx(x: number, y: number): void {\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = x * ba;\r\n            this.b = x * bb;\r\n            this.c = y * bc;\r\n            this.d = y * bd;\r\n        } else {\r\n            this.a = x * ba;\r\n            this.b = 0 * bd;\r\n            this.c = 0 * ba;\r\n            this.d = y * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对 Matrix 对象应用旋转转换。反向相乘\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     */\r\n    rotateEx(angle: number): void {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = cos * ba + sin * bc;\r\n            this.b = cos * bb + sin * bd;\r\n            this.c = -sin * ba + cos * bc;\r\n            this.d = -sin * bb + cos * bd;\r\n        } else {\r\n            this.a = cos * ba;\r\n            this.b = sin * bd;\r\n            this.c = -sin * ba;\r\n            this.d = cos * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * 返回此 Matrix 对象的副本。\r\n     * @return 与原始实例具有完全相同的属性的新 Matrix 实例。\r\n     */\r\n    clone(): Matrix {\r\n        var dec: Matrix = Matrix.create();\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * 将当前 Matrix 对象中的所有矩阵数据复制到指定的 Matrix 对象中。\r\n     * @param\tdec 要复制当前矩阵数据的 Matrix 对象。\r\n     * @return\t已复制当前矩阵数据的 Matrix 对象。\r\n     */\r\n    copyTo(dec: Matrix): Matrix {\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * 返回列出该 Matrix 对象属性的文本值。\r\n     * @return 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。\r\n     */\r\n    toString(): string {\r\n        return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d + \",\" + this.tx + \",\" + this.ty;\r\n    }\r\n\r\n    /**\r\n     * 销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.recover();\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Matrix\", this.identity());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建一个 <code>Matrix</code> 对象。\r\n     * @return <code>Matrix</code> 对象。\r\n     */\r\n    static create(): Matrix {\r\n        return Pool.getItemByClass(\"Matrix\", Matrix);\r\n    }\r\n}\r\n\r\n","import { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * <code>Point</code> 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。\r\n */\r\nexport class Point {\r\n\r\n    /**临时使用的公用对象。*/\r\n    static TEMP: Point = new Point();\r\n    /**@private 全局空的point对象(x=0，y=0)，不允许修改此对象内容*/\r\n    static EMPTY: Point = new Point();\r\n\r\n    /**该点的水平坐标。*/\r\n    x: number;\r\n    /**该点的垂直坐标。*/\r\n    y: number;\r\n\r\n    /**\r\n     * 根据指定坐标，创建一个新的 <code>Point</code> 对象。\r\n     * @param x\t（可选）水平坐标。\r\n     * @param y\t（可选）垂直坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * 从对象池创建\r\n     */\r\n    static create(): Point {\r\n        return Pool.getItemByClass(\"Point\", Point);\r\n    }\r\n\r\n    /**\r\n     * 将 <code>Point</code> 的成员设置为指定值。\r\n     * @param\tx 水平坐标。\r\n     * @param\ty 垂直坐标。\r\n     * @return 当前 Point 对象。\r\n     */\r\n    setTo(x: number, y: number): Point {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): Point {\r\n        this.x = this.y = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Point\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 计算当前点和目标点(x，y)的距离。\r\n     * @param\tx 水平坐标。\r\n     * @param\ty 垂直坐标。\r\n     * @return\t返回当前点和目标点之间的距离。\r\n     */\r\n    distance(x: number, y: number): number {\r\n        return Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\r\n    }\r\n\r\n    /**返回包含 x 和 y 坐标的值的字符串。*/\r\n    toString(): string {\r\n        return this.x + \",\" + this.y;\r\n    }\r\n\r\n    /**\r\n     * 标准化向量。\r\n     */\r\n    normalize(): void {\r\n        var d: number = Math.sqrt(this.x * this.x + this.y * this.y);\r\n        if (d > 0) {\r\n            var id: number = 1.0 / d;\r\n            this.x *= id;\r\n            this.y *= id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * copy point坐标\r\n     * @param\tpoint 需要被copy的point\r\n     */\r\n    copy(point: Point): Point {\r\n        return this.setTo(point.x, point.y);\r\n    }\r\n}\r\n\r\n","import { Pool } from \"../utils/Pool\";\r\nimport { Point } from \"./Point\";\r\n\r\n/**\r\n * <p><code>Rectangle</code> 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。</p>\r\n * <p>Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。</p>\r\n */\r\nexport class Rectangle {\r\n\r\n    /**@private 全局空的矩形区域x=0,y=0,width=0,height=0，不允许修改此对象内容*/\r\n    static EMPTY: Rectangle = new Rectangle();\r\n    /**全局临时的矩形区域，此对象用于全局复用，以减少对象创建*/\r\n    static TEMP: Rectangle = new Rectangle();\r\n\r\n    /** @private */\r\n    private static _temB: number[] = [];\r\n    /** @private */\r\n    private static _temA: number[] = [];\r\n\r\n    /** 矩形左上角的 X 轴坐标。*/\r\n    x: number;\r\n    /** 矩形左上角的 Y 轴坐标。*/\r\n    y: number;\r\n    /** 矩形的宽度。*/\r\n    width: number;\r\n    /** 矩形的高度。*/\r\n    height: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Rectangle</code> 对象。\r\n     * @param\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth 矩形的宽度。\r\n     * @param\theight 矩形的高度。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    /** 此矩形右侧的 X 轴坐标。 x 和 width 属性的和。*/\r\n    get right(): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    /** 此矩形底端的 Y 轴坐标。y 和 height 属性的和。*/\r\n    get bottom(): number {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    /**\r\n     * 将 Rectangle 的属性设置为指定值。\r\n     * @param\tx\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty\tx 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth\t矩形的宽度。\r\n     * @param\theight\t矩形的高。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    setTo(x: number, y: number, width: number, height: number): Rectangle {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): Rectangle {\r\n        this.x = this.y = this.width = this.height = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this == Rectangle.TEMP || this == Rectangle.EMPTY) {\r\n            //console.log(\"recover Temp or Empty:\", this);\r\n            return;\r\n        }\r\n        Pool.recover(\"Rectangle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): Rectangle {\r\n        return Pool.getItemByClass(\"Rectangle\", Rectangle);\r\n    }\r\n\r\n    /**\r\n     * 复制 source 对象的属性值到此矩形对象中。\r\n     * @param\tsourceRect\t源 Rectangle 对象。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    copyFrom(source: Rectangle): Rectangle {\r\n        this.x = source.x;\r\n        this.y = source.y;\r\n        this.width = source.width;\r\n        this.height = source.height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\r\n     * @param x\t点的 X 轴坐标值（水平位置）。\r\n     * @param y\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果 Rectangle 对象包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return false;\r\n\r\n        if (x >= this.x && x < this.right) {\r\n            if (y >= this.y && y < this.bottom) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 确定在 rect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。\r\n     * @param\trect Rectangle 对象。\r\n     * @return\t如果传入的矩形对象与此对象相交，则返回 true 值，否则返回 false。\r\n     */\r\n    intersects(rect: Rectangle): boolean {\r\n        return !(rect.x > (this.x + this.width) || (rect.x + rect.width) < this.x || rect.y > (this.y + this.height) || (rect.y + rect.height) < this.y);\r\n    }\r\n\r\n    /**\r\n     * 如果在 rect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，则此方法返回null。\r\n     * @param rect\t待比较的矩形区域。\r\n     * @param out\t（可选）待输出的矩形区域。如果为空则创建一个新的。建议：尽量复用对象，减少对象创建消耗。\r\n     * @return\t返回相交的矩形区域对象。\r\n     */\r\n    intersection(rect: Rectangle, out: Rectangle | null = null): Rectangle | null {\r\n        if (!this.intersects(rect)) return null;\r\n        out || (out = new Rectangle());\r\n        out.x = Math.max(this.x, rect.x);\r\n        out.y = Math.max(this.y, rect.y);\r\n        out.width = Math.min(this.right, rect.right) - out.x;\r\n        out.height = Math.min(this.bottom, rect.bottom) - out.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * <p>矩形联合，通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。</p>\r\n     * <p>注意：union() 方法忽略高度或宽度值为 0 的矩形，如：var rect2:Rectangle = new Rectangle(300,300,50,0);</p>\r\n     * @param\t要添加到此 Rectangle 对象的 Rectangle 对象。\r\n     * @param\tout\t用于存储输出结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。\r\n     * @return\t充当两个矩形的联合的新 Rectangle 对象。\r\n     */\r\n    union(source: Rectangle, out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        this.clone(out);\r\n        if (source.width <= 0 || source.height <= 0) return out;\r\n        out.addPoint(source.x, source.y);\r\n        out.addPoint(source.right, source.bottom);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 返回一个 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     * @param out\t（可选）用于存储结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。。Rectangle.TEMP对象用于对象复用。\r\n     * @return Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     */\r\n    clone(out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        out.x = this.x;\r\n        out.y = this.y;\r\n        out.width = this.width;\r\n        out.height = this.height;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 当前 Rectangle 对象的水平位置 x 和垂直位置 y 以及高度 width 和宽度 height 以逗号连接成的字符串。\r\n     */\r\n    toString(): string {\r\n        return this.x + \",\" + this.y + \",\" + this.width + \",\" + this.height;\r\n    }\r\n\r\n    /**\r\n     * 检测传入的 Rectangle 对象的属性是否与当前 Rectangle 对象的属性 x、y、width、height 属性值都相等。\r\n     * @param\trect 待比较的 Rectangle 对象。\r\n     * @return\t如果判断的属性都相等，则返回 true ,否则返回 false。\r\n     */\r\n    equals(rect: Rectangle): boolean {\r\n        if (!rect || rect.x !== this.x || rect.y !== this.y || rect.width !== this.width || rect.height !== this.height) return false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>为当前矩形对象加一个点，以使当前矩形扩展为包含当前矩形和此点的最小矩形。</p>\r\n     * <p>此方法会修改本对象。</p>\r\n     * @param x\t点的 X 坐标。\r\n     * @param y\t点的 Y 坐标。\r\n     * @return 返回此 Rectangle 对象。\r\n     */\r\n    addPoint(x: number, y: number): Rectangle {\r\n        this.x > x && (this.width += this.x - x, this.x = x);//左边界比较\r\n        this.y > y && (this.height += this.y - y, this.y = y);//上边界比较\r\n        if (this.width < x - this.x) this.width = x - this.x;//右边界比较\r\n        if (this.height < y - this.y) this.height = y - this.y;//下边界比较\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回代表当前矩形的顶点数据。\r\n     * @return 顶点数据。\r\n     */\r\n    _getBoundPoints() {\r\n        var rst = Rectangle._temB;\r\n        rst.length = 0;\r\n        if (this.width == 0 || this.height == 0) return rst;\r\n        rst.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回矩形的顶点数据。\r\n     */\r\n    static _getBoundPointS(x: number, y: number, width: number, height: number, sp?: { width: number, height?: number }): number[] {\r\n        var rst: any[] = Rectangle._temA;\r\n        rst.length = 0;\r\n        if (width == 0 || height == 0) return rst;\r\n        if (sp) {\r\n            x *= sp.width;\r\n            y *= sp.height;\r\n            width *= sp.width;\r\n            height *= sp.height;\r\n        }\r\n        rst.push(x, y, x + width, y, x, y + height, x + width, y + height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回包含所有点的最小矩形。\r\n     * @param pointList 点列表。\r\n     * @return 包含所有点的最小矩形矩形对象。\r\n     */\r\n    static _getWrapRec(pointList: ArrayLike<number>, rst: Rectangle | null = null): Rectangle {\r\n\r\n        if (!pointList || pointList.length < 1) return rst ? rst.setTo(0, 0, 0, 0) : Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        rst = rst ? rst : Rectangle.create();\r\n        var i: number, len: number = pointList.length, minX: number, maxX: number, minY: number, maxY: number, tPoint: Point = Point.TEMP;\r\n        minX = minY = 99999;\r\n        maxX = maxY = -minX;\r\n        for (i = 0; i < len; i += 2) {\r\n            tPoint.x = pointList[i];\r\n            tPoint.y = pointList[i + 1];\r\n            minX = minX < tPoint.x ? minX : tPoint.x;\r\n            minY = minY < tPoint.y ? minY : tPoint.y;\r\n            maxX = maxX > tPoint.x ? maxX : tPoint.x;\r\n            maxY = maxY > tPoint.y ? maxY : tPoint.y;\r\n        }\r\n        return rst.setTo(minX, minY, maxX - minX, maxY - minY);\r\n    }\r\n\r\n    /**\r\n     * 确定此 Rectangle 对象是否为空。\r\n     * @return 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。\r\n     */\r\n    isEmpty(): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return true;\r\n        return false;\r\n    }\r\n}","export enum HDREncodeFormat{\r\n    NONE,\r\n    RGBM,\r\n    RGBD\r\n   \r\n}","/**\r\n * 纹理格式\r\n */\r\nexport enum TextureFormat {\r\n    /**纹理格式_R8G8B8。*/\r\n    R8G8B8 = 0,\r\n    /**纹理格式_R8G8B8A8。*/\r\n    R8G8B8A8 = 1,\r\n    /**RGB格式纹理,R通道5位，G通道6位，B通道5位。*/\r\n    R5G6B5 = 16,\r\n    /**纹理格式_ALPHA8。*/\r\n    Alpha8 = 2,\r\n    /**纹理格式_DXT1。*/\r\n    DXT1 = 3,\r\n    /**纹理格式_DXT3 */\r\n    DXT3 = 29,\r\n    /**纹理格式_DXT5。*/\r\n    DXT5 = 4,\r\n    /**纹理格式_ETC2RGB。*/\r\n    ETC1RGB = 5,\r\n    ///**纹理格式_ETC2RGB。*/\r\n    ETC2RGB = 6,\r\n    ///**纹理格式_ETC2RGBA。*/\r\n    ETC2RGBA = 7,\r\n    /**纹理格式_ETC2RGB_PUNCHTHROUGHALPHA。*/\r\n    //ETC2RGB_PUNCHTHROUGHALPHA:int = 8;\r\n    /**纹理格式_PVRTCRGB_2BPPV。*/\r\n    ETC2SRGB_Alpha8 = 8,\r\n    /** 纹理格式_ETC2SRGB*/\r\n    ETC2SRGB = 28,\r\n    /** 纹理格式_PVRTCRGB_2BPPV*/\r\n    PVRTCRGB_2BPPV = 9,\r\n    /**纹理格式_PVRTCRGBA_2BPPV。*/\r\n    PVRTCRGBA_2BPPV = 10,\r\n    /**纹理格式_PVRTCRGB_4BPPV。*/\r\n    PVRTCRGB_4BPPV = 11,\r\n    /**纹理格式_PVRTCRGBA_4BPPV。*/\r\n    PVRTCRGBA_4BPPV = 12,\r\n    /**RGBA格式纹理,每个通道32位浮点数。*/\r\n    R32G32B32A32 = 15,\r\n    /**R32G32B32 */\r\n    R32G32B32 = 30,\r\n    /**RGBA格式纹理，每个通道16位浮点数。 */\r\n    R16G16B16A16 = 17,\r\n    /**R16 G16 B6 */\r\n    R16G16B16 = 31,\r\n    /**ASTC 4x4*/\r\n    ASTC4x4 = 18,\r\n    /**ASTC sRGB 4x4 */\r\n    ASTC4x4SRGB = 23,\r\n    /**ASTC 6x6*/\r\n    ASTC6x6 = 19,\r\n    /**ASTC  6x6*/\r\n    ASTC6x6SRGB = 24,\r\n    /**ASTC 8x8 */\r\n    ASTC8x8 = 20,\r\n    /**ASTC srgb 8x8 */\r\n    ASTC8x8SRGB = 25,\r\n    /**ASTC 10x10 */\r\n    ASTC10x10 = 21,\r\n    /**ASTC srgb 10x10 */\r\n    ASTC10x10SRGB = 26,\r\n    /**ASTC 12x12 */\r\n    ASTC12x12 = 22,\r\n    /**ASTC srgb 12x12 */\r\n    ASTC12x12SRGB = 27,\r\n    /**ktx图片 */\r\n    KTXTEXTURE = -1,\r\n    /**pvr图片 */\r\n    PVRTEXTURE = -2\r\n}","import { IRender2DContext } from \"../RenderEngine/RenderInterface/IRender2DContext\";\r\nimport { IRenderDrawContext } from \"../RenderEngine/RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\r\nimport { IRenderEngineFactory } from \"../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { ITextureContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\n\r\n/**\r\n * 封装GL命令\r\n */\r\nexport class LayaGL {\r\n    static textureContext: ITextureContext;\r\n    static renderEngine: IRenderEngine;\r\n    static render2DContext: IRender2DContext;\r\n    static renderDrawContext: IRenderDrawContext;\r\n    static renderOBJCreate: IRenderEngineFactory;\r\n}","const ITEM_LAYOUT = 4; //callback,target,args,flag(0-deleted,1-normal,2-once) \r\n\r\nexport class Delegate {\r\n    private _flag: number;\r\n    private _items: Array<any>;\r\n\r\n    public constructor() {\r\n        this._flag = 0;\r\n        this._items = [];\r\n    }\r\n\r\n    public add(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 1;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 1);\r\n    }\r\n\r\n    public once(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 2;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 2);\r\n    }\r\n\r\n    public remove(callback: Function, target?: any): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            if (this._flag != 0) {\r\n                arr[index + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n            else\r\n                arr.splice(index, ITEM_LAYOUT);\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if (index % ITEM_LAYOUT == 3) arr[index] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            arr.length = 0;\r\n        }\r\n    }\r\n\r\n    public clearForTarget(target: any): void {\r\n        if (!target)\r\n            return;\r\n\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if ((index % ITEM_LAYOUT == 1) && arr[index] == target) arr[index + 2] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            let i: number = arr.length - ITEM_LAYOUT;\r\n            while (i >= 0) {\r\n                if (arr[i + 1] == target)\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                i -= ITEM_LAYOUT;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get count(): number {\r\n        return this._items.length / ITEM_LAYOUT;\r\n    }\r\n\r\n    public invoke(...args: any[]): void {\r\n        if (this._flag != 0)\r\n            return;\r\n\r\n        this._flag = 1;\r\n        let arr = this._items;\r\n        let cnt = arr.length;\r\n        for (let i = 0; i < cnt; i += ITEM_LAYOUT) {\r\n            if (0 == arr[i + 3]) continue;\r\n            let fixedArgs = arr[i + 2];\r\n            if (fixedArgs != null)\r\n                arr[i].call(arr[i + 1], ...fixedArgs, ...args);\r\n            else\r\n                arr[i].call(arr[i + 1], ...args);\r\n            if (arr[i + 3] == 2) {\r\n                arr[i + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n        }\r\n\r\n        if (this._flag == 2) {\r\n            let cnt = arr.length;\r\n            let i = 0;\r\n            while (i < cnt) {\r\n                if (arr[i + 3] == 0) {\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                    cnt -= ITEM_LAYOUT;\r\n                    continue;\r\n                }\r\n                else\r\n                    i += ITEM_LAYOUT;\r\n            }\r\n        }\r\n        this._flag = 0;\r\n    }\r\n}","import { Point } from \"../maths/Point\"\r\n\r\nexport interface ITouchInfo {\r\n    touchId: number;\r\n    readonly pos: Point;\r\n}\r\n\r\n/**\r\n * <code>Event</code> 是事件类型的集合。一般当发生事件时，<code>Event</code> 对象将作为参数传递给事件侦听器。\r\n */\r\nexport class Event {\r\n\r\n    /** 一个空的 Event 对象。用于事件派发中转使用。*/\r\n    static readonly EMPTY: Readonly<Event> = new Event();\r\n\r\n    /** 定义 mousedown 事件对象的 type 属性值。*/\r\n    static MOUSE_DOWN = \"mousedown\";\r\n    /** 定义 mouseup 事件对象的 type 属性值。*/\r\n    static MOUSE_UP = \"mouseup\";\r\n    /** 定义 rightmousedown 事件对象的 type 属性值。*/\r\n    static RIGHT_MOUSE_DOWN: string = \"rightmousedown\";\r\n    /** 定义 rightmouseup 事件对象的 type 属性值。*/\r\n    static RIGHT_MOUSE_UP: string = \"rightmouseup\";\r\n    /** 定义 click 事件对象的 type 属性值。*/\r\n    static CLICK = \"click\";\r\n    /** 定义 rightclick 事件对象的 type 属性值。*/\r\n    static RIGHT_CLICK = \"rightclick\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_MOVE = \"mousemove\";\r\n    /** 定义 mouseover 事件对象的 type 属性值。*/\r\n    static MOUSE_OVER = \"mouseover\";\r\n    /** 定义 mouseout 事件对象的 type 属性值。*/\r\n    static MOUSE_OUT = \"mouseout\";\r\n    /** 定义 mousewheel 事件对象的 type 属性值。*/\r\n    static MOUSE_WHEEL = \"mousewheel\";\r\n    /** 定义 mouseover 事件对象的 type 属性值。*/\r\n    static ROLL_OVER = \"mouseover\";\r\n    /** 定义 mouseout 事件对象的 type 属性值。*/\r\n    static ROLL_OUT = \"mouseout\";\r\n    /** 定义 doubleclick 事件对象的 type 属性值。*/\r\n    static DOUBLE_CLICK = \"doubleclick\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_DRAG = \"mousedrag\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_DRAG_END = \"mousedragend\";\r\n\r\n    /** 定义 dragstart 事件对象的 type 属性值。*/\r\n    static DRAG_START = \"dragstart\";\r\n    /** 定义 dragmove 事件对象的 type 属性值。*/\r\n    static DRAG_MOVE = \"dragmove\";\r\n    /** 定义 dragend 事件对象的 type 属性值。*/\r\n    static DRAG_END = \"dragend\";\r\n\r\n    /** 定义 keydown 事件对象的 type 属性值。*/\r\n    static KEY_DOWN = \"keydown\";\r\n    /** 定义 keypress 事件对象的 type 属性值。*/\r\n    static KEY_PRESS = \"keypress\";\r\n    /** 定义 keyup 事件对象的 type 属性值。*/\r\n    static KEY_UP = \"keyup\";\r\n\r\n    /** 定义 change 事件对象的 type 属性值。*/\r\n    static CHANGE = \"change\";\r\n    /** 定义 changed 事件对象的 type 属性值。*/\r\n    static CHANGED = \"changed\";\r\n    /** 定义 willResize 事件对象的 type 属性值。*/\r\n    static WILL_RESIZE = \"willResize\";\r\n    /** 定义 resize 事件对象的 type 属性值。*/\r\n    static RESIZE = \"resize\";\r\n\r\n    /** 定义 added 事件对象的 type 属性值。*/\r\n    static ADDED = \"added\";\r\n    /** 定义 removed 事件对象的 type 属性值。*/\r\n    static REMOVED = \"removed\";\r\n    /** 定义 display 事件对象的 type 属性值。*/\r\n    static DISPLAY = \"display\";\r\n    /** 定义 undisplay 事件对象的 type 属性值。*/\r\n    static UNDISPLAY = \"undisplay\";\r\n\r\n    /** 定义 error 事件对象的 type 属性值。*/\r\n    static ERROR = \"error\";\r\n    /** 定义 complete 事件对象的 type 属性值。*/\r\n    static COMPLETE = \"complete\";\r\n    /** 定义 loaded 事件对象的 type 属性值。*/\r\n    static LOADED = \"loaded\";\r\n    /** 定义 loaded 事件对象的 type 属性值。*/\r\n    static READY = \"ready\";\r\n    /** 定义 progress 事件对象的 type 属性值。*/\r\n    static PROGRESS = \"progress\";\r\n    /** 定义 input 事件对象的 type 属性值。*/\r\n    static INPUT = \"input\";\r\n    /** 定义 render 事件对象的 type 属性值。*/\r\n    static RENDER = \"render\";\r\n    /** 定义 open 事件对象的 type 属性值。*/\r\n    static OPEN = \"open\";\r\n    /** 定义 message 事件对象的 type 属性值。*/\r\n    static MESSAGE = \"message\";\r\n    /** 定义 close 事件对象的 type 属性值。*/\r\n    static CLOSE = \"close\";\r\n\r\n    /** 定义 frame 事件对象的 type 属性值。*/\r\n    static FRAME = \"enterframe\";\r\n    /** 定义 enter 事件对象的 type 属性值。*/\r\n    static ENTER = \"enter\";\r\n    /** 定义 select 事件对象的 type 属性值。*/\r\n    static SELECT = \"select\";\r\n    /** 定义 blur 事件对象的 type 属性值。*/\r\n    static BLUR = \"blur\";\r\n    /** 定义 focus 事件对象的 type 属性值。*/\r\n    static FOCUS = \"focus\";\r\n    /** 定义 visibilitychange 事件对象的 type 属性值。*/\r\n    static VISIBILITY_CHANGE = \"visibilitychange\";\r\n    /** 定义 focuschange 事件对象的 type 属性值。*/\r\n    static FOCUS_CHANGE = \"focuschange\";\r\n    /** 定义 played 事件对象的 type 属性值。*/\r\n    static PLAYED = \"played\";\r\n    /** 定义 paused 事件对象的 type 属性值。*/\r\n    static PAUSED = \"paused\";\r\n    /** 定义 stopped 事件对象的 type 属性值。*/\r\n    static STOPPED = \"stopped\";\r\n    /** 定义 start 事件对象的 type 属性值。*/\r\n    static START = \"start\";\r\n    /** 定义 end 事件对象的 type 属性值。*/\r\n    static END = \"end\";\r\n    /** 定义 link 事件对象的 type 属性值。*/\r\n    static LINK = \"link\";\r\n    /** 定义 label 事件对象的 type 属性值。*/\r\n    static LABEL = \"label\";\r\n    /**浏览器全屏更改时触发*/\r\n    static FULL_SCREEN_CHANGE = \"fullscreenchange\";\r\n    /**显卡设备丢失时触发*/\r\n    static DEVICE_LOST = \"devicelost\";\r\n    /**世界矩阵更新时触发。*/\r\n    static TRANSFORM_CHANGED = \"transformchanged\";\r\n    /**3D layer改变时触发。*/\r\n    static LAYERCHANGE = \"layerChange\";\r\n    /**3D Static改变时触发 */\r\n    static staticMask = \"staticMask\";\r\n\r\n    /**物理碰撞开始*/\r\n    static TRIGGER_ENTER = \"triggerenter\";\r\n    /**物理碰撞持续*/\r\n    static TRIGGER_STAY = \"triggerstay\";\r\n    /**物理碰撞结束*/\r\n    static TRIGGER_EXIT = \"triggerexit\";\r\n\r\n    /**物理碰撞开始*/\r\n    static COLLISION_ENTER = \"collisionenter\";\r\n    /**物理碰撞持续*/\r\n    static COLLISION_STAY = \"collisionstay\";\r\n    /**物理碰撞结束*/\r\n    static COLLISION_EXIT = \"collisionexit\";\r\n    /**关节破坏 */\r\n    static JOINT_BREAK = \"jointbreak\";\r\n\r\n    /**@internal */\r\n    static _Add_Script= \"addscript\";\r\n    /**\r\n     * 检测指定事件类型是否是鼠标事件。\r\n     * @param\ttype 事件的类型。\r\n     * @return\t如果是鼠标事件，则值为 true;否则，值为 false。\r\n     */\r\n    static isMouseEvent(type: string): boolean {\r\n        return MOUSE_EVENTS.has(type);\r\n    }\r\n\r\n    /** 事件类型。*/\r\n    type: string;\r\n    /** 事件目标触发对象。*/\r\n    target: any;\r\n    /** 事件当前冒泡对象。*/\r\n    currentTarget: any;\r\n\r\n    /** 分配给触摸点的唯一标识号（作为 int）。*/\r\n    touchId: number = 0;\r\n    /** 点击坐标 */\r\n    readonly touchPos: Point;\r\n    /** 是否双击 */\r\n    isDblClick: boolean;\r\n    /**滚轮滑动增量*/\r\n    delta: number = 0;\r\n    /** \r\n     * 鼠标按键，\r\n     * 0：主按键，通常指鼠标左键\r\n     * 1：辅助按键，通常指鼠标滚轮中键\r\n     * 2：次按键，通常指鼠标右键\r\n     * 3：第四个按钮，通常指浏览器后退按钮\r\n     * 4：第五个按钮，通常指浏览器的前进按钮\r\n     */\r\n    button: number = 0;\r\n\r\n    /** 原生浏览器事件。*/\r\n    nativeEvent: MouseEvent | TouchEvent | WheelEvent | KeyboardEvent;\r\n\r\n    /** @internal */\r\n    _stopped: boolean;\r\n    /** @internal */\r\n    _touches: ReadonlyArray<Readonly<ITouchInfo>>;\r\n\r\n    constructor() {\r\n        this.touchPos = new Point();\r\n    }\r\n\r\n    /**\r\n     * 设置事件数据。\r\n     * @param\ttype 事件类型。\r\n     * @param\tcurrentTarget 事件目标触发对象。\r\n     * @param\ttarget 事件当前冒泡对象。\r\n     * @return 返回当前 Event 对象。\r\n     */\r\n    setTo(type: string, currentTarget: any, target: any): Event {\r\n        this.type = type;\r\n        this.currentTarget = currentTarget;\r\n        this.target = target;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 阻止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 (currentTarget) 中的任何事件侦听器。\r\n     */\r\n    stopPropagation(): void {\r\n        this._stopped = true;\r\n    }\r\n\r\n    /**\r\n     * 触摸点列表。\r\n     */\r\n    get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return this._touches;\r\n    }\r\n\r\n    /**\r\n     * 表示 Alt 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get altKey(): boolean {\r\n        return this.nativeEvent?.altKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Ctrl 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get ctrlKey(): boolean {\r\n        return this.nativeEvent?.ctrlKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get shiftKey(): boolean {\r\n        return this.nativeEvent?.shiftKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get metaKey(): boolean {\r\n        return this.nativeEvent?.metaKey;\r\n    }\r\n\r\n    get key(): string {\r\n        return (<KeyboardEvent>this.nativeEvent).key;\r\n    }\r\n\r\n    get keyCode(): number {\r\n        return (<KeyboardEvent>this.nativeEvent).keyCode;\r\n    }\r\n\r\n    /**\r\n     * 包含按下或释放的键的字符代码值。字符代码值为英文键盘值。\r\n     */\r\n    get charCode(): string {\r\n        return (<KeyboardEvent>this.nativeEvent)?.code;\r\n    }\r\n\r\n    /**\r\n     * 表示键在键盘上的位置。这对于区分在键盘上多次出现的键非常有用。<br>\r\n     * 例如，您可以根据此属性的值来区分左 Shift 键和右 Shift 键：左 Shift 键的值为 KeyLocation.LEFT，右 Shift 键的值为 KeyLocation.RIGHT。另一个示例是区分标准键盘 (KeyLocation.STANDARD) 与数字键盘 (KeyLocation.NUM_PAD) 上按下的数字键。\r\n     */\r\n    get keyLocation(): number {\r\n        if (this.nativeEvent)\r\n            return (<KeyboardEvent>this.nativeEvent).location || (<any>this.nativeEvent).keyLocation;\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 X 轴坐标*/\r\n    get stageX(): number {\r\n        return this.touchPos.x;\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 Y 轴坐标*/\r\n    get stageY(): number {\r\n        return this.touchPos.y;\r\n    }\r\n}\r\n\r\nconst MOUSE_EVENTS = new Set<string>([\r\n    Event.MOUSE_DOWN, Event.MOUSE_UP, Event.MOUSE_MOVE, Event.CLICK, Event.DOUBLE_CLICK,\r\n    Event.RIGHT_CLICK, Event.RIGHT_MOUSE_DOWN, Event.RIGHT_MOUSE_UP,\r\n    Event.MOUSE_OVER, Event.MOUSE_OUT, Event.MOUSE_WHEEL, Event.MOUSE_DRAG, Event.MOUSE_DRAG_END\r\n]);","import { Delegate } from \"../utils/Delegate\";\r\nimport { Event } from \"./Event\";\r\n\r\nconst eventPool: Array<Event> = [];\r\n\r\n/**\r\n * <code>EventDispatcher</code> 类是可调度事件的所有类的基类。\r\n */\r\nexport class EventDispatcher {\r\n    /**@private */\r\n    private _events: Record<string, Delegate>;\r\n\r\n    protected onStartListeningToType(type: string) {\r\n    }\r\n\r\n    /**\r\n     * 检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。\r\n     * @param\ttype 事件的类型。\r\n     * @return 如果指定类型的侦听器已注册，则值为 true；否则，值为 false。\r\n     */\r\n    hasListener(type: string): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        return !!listeners && listeners.count > 0;\r\n    }\r\n\r\n    /**\r\n     * 派发事件。\r\n     * @param type\t事件类型。\r\n     * @param data\t（可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。\r\n     * @return 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。\r\n     */\r\n    event(type: string, data?: any): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        if (!listeners) return false;\r\n        let ret = listeners.count > 0;\r\n\r\n        if (Array.isArray(data))\r\n            listeners.invoke(...data);\r\n        else if (data !== undefined)\r\n            listeners.invoke(data);\r\n        else if (data === Event.EMPTY) {\r\n            let ev = eventPool.length > 0 ? eventPool.pop() : new Event();\r\n            listeners.invoke(ev.setTo(type, this, this));\r\n            ev.target = ev.currentTarget = null;\r\n            eventPool.push(ev);\r\n        }\r\n        else\r\n            listeners.invoke();\r\n\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @param args\t\t（可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    on(type: string, listener: Function): EventDispatcher;\r\n    on(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    on(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.add(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @param args\t\t（可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    once(type: string, listener: Function): EventDispatcher;\r\n    once(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    once(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.once(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除侦听器。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    off(type: string, listener: Function): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        let listeners = this._events && this._events[type];\r\n        if (listeners)\r\n            listeners.remove(listener, caller);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除指定事件类型的所有侦听器。\r\n     * @param type\t（可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    offAll(type?: string): EventDispatcher {\r\n        if (type == null)\r\n            this._events = null;\r\n        else {\r\n            let listeners = this._events && this._events[type];\r\n            if (listeners)\r\n                listeners.clear();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除caller为target的所有事件监听\r\n     * @param\tcaller caller对象\r\n     */\r\n    offAllCaller(caller: any): EventDispatcher {\r\n        if (caller && this._events) {\r\n            for (let type in this._events)\r\n                this._events[type].clearForTarget(caller);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\nvar _idCounter: number = 0;\r\nvar _disposingCounter: number = 0;\r\nvar _clearRetry: number = 0;\r\n\r\n/**\r\n * <code>Resource</code> 资源存取类。\r\n */\r\nexport class Resource extends EventDispatcher {\r\n    /** @private */\r\n    static _idResourcesMap: any = {};\r\n    /** @private 以字节为单位。*/\r\n    private static _cpuMemory: number = 0;\r\n    /** @private 以字节为单位。*/\r\n    private static _gpuMemory: number = 0;\r\n    /**是否开启debug模式 */\r\n    static DEBUG: boolean = false;\r\n\r\n    /**\r\n     * 当前内存，以字节为单位。\r\n     */\r\n    static get cpuMemory(): number {\r\n        return Resource._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 当前显存，以字节为单位。\r\n     */\r\n    static get gpuMemory(): number {\r\n        return Resource._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addCPUMemory(size: number): void {\r\n        Resource._cpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addGPUMemory(size: number): void {\r\n        Resource._gpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addMemory(cpuSize: number, gpuSize: number): void {\r\n        Resource._cpuMemory += cpuSize;\r\n        Resource._gpuMemory += gpuSize;\r\n    }\r\n\r\n    /**\r\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static destroyUnusedResources(): void {\r\n        _disposingCounter = 0; //复位一下，避免异常造成的标志错误\r\n        _clearRetry = 0;\r\n\r\n        if (!ILaya.loader.loading)\r\n            Resource._destroyUnusedResources(true);\r\n        else\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n    }\r\n\r\n    /** @private */\r\n    private static _destroyUnusedResources(force: boolean): void {\r\n        if (!force && ILaya.loader.loading)\r\n            return;\r\n\r\n        ILaya.timer.clear(Resource, Resource._destroyUnusedResources);\r\n        let destroyCnt = 0;\r\n\r\n        for (let k in Resource._idResourcesMap) {\r\n            let res: Resource = Resource._idResourcesMap[k];\r\n            if (!res.lock && res._referenceCount === 0) {\r\n                res.destroy();\r\n                destroyCnt++;\r\n            }\r\n        }\r\n\r\n        if (Resource.DEBUG && destroyCnt > 0)\r\n            console.debug(`destroyUnusedResources(${destroyCnt})`);\r\n\r\n        if (destroyCnt > 0 && _clearRetry < 5) {\r\n            _clearRetry++;\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n        }\r\n    }\r\n\r\n    private _cpuMemory: number = 0;\r\n    private _gpuMemory: number = 0;\r\n    _id: number = 0;\r\n    protected _destroyed?: boolean;\r\n    protected _referenceCount: number = 0;\r\n    protected _obsolute: boolean;\r\n\r\n    /**是否加锁，如果true为不能使用自动释放机制。*/\r\n    lock?: boolean;\r\n    /**名称。 */\r\n    name?: string;\r\n    /**获取资源的URL地址。 */\r\n    url: string;\r\n    /**获取资源的UUID。 */\r\n    uuid: string;\r\n\r\n    /**是否在引用计数为0的时候立马删除他 */\r\n    destroyedImmediately: boolean;\r\n\r\n    /**\r\n     * 获取唯一标识ID,通常用于识别。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 内存大小。\r\n     */\r\n    get cpuMemory(): number {\r\n        return this._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 显存大小。\r\n     */\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 是否已销毁。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    /** 如果设置一个已缓存的资源obsolute为true，则\r\n     * 1）getRes仍然可以返回这个资源；\r\n     * 2）下次加载时会忽略这个缓存而去重新加载。。\r\n     */\r\n    get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * 获取资源的引用计数。\r\n     */\r\n    get referenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Resource</code> 实例。\r\n     * @param managed 如果设置为true，则在destroyUnusedResources时会检测引用计数并自动释放如果计数为0。默认为true。\r\n     */\r\n    protected constructor(managed?: boolean) {\r\n        super();\r\n\r\n        this._id = ++_idCounter;\r\n        this._destroyed = false;\r\n        this._referenceCount = 0;\r\n        if (managed == null || managed)\r\n            Resource._idResourcesMap[this._id] = this;\r\n        this.lock = false;\r\n        this.destroyedImmediately = true;\r\n    }\r\n\r\n    _setCPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._cpuMemory;\r\n        this._cpuMemory = value;\r\n        Resource._addCPUMemory(offsetValue);\r\n    }\r\n\r\n    _setGPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._gpuMemory;\r\n        this._gpuMemory = value;\r\n        Resource._addGPUMemory(offsetValue);\r\n    }\r\n\r\n    _setCreateURL(url: string, uuid?: string): void {\r\n        this.url = url;\r\n        this.uuid = uuid;\r\n    }\r\n\r\n    /**\r\n     * 返回资源是否从指定url创建\r\n     */\r\n    isCreateFromURL(url: string): boolean {\r\n        return this.uuid && url.length === this.uuid.length + 6 && url.endsWith(this.uuid)\r\n            || this.url === url;\r\n    }\r\n\r\n    _addReference(count: number = 1): void {\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    _removeReference(count: number = 1): void {\r\n        this._referenceCount -= count;\r\n        //如果_removeReference发生在destroy中，可能是在collect或者处理内嵌资源的释放\r\n        if (_disposingCounter > 0 && this._referenceCount <= 0 && !this.lock && this.destroyedImmediately) {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除引用\r\n     */\r\n    _clearReference(): void {\r\n        this._referenceCount = 0;\r\n    }\r\n\r\n    protected _recoverResource(): void {\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n    }\r\n\r\n    protected _activeResource(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁资源,销毁后资源不能恢复。\r\n     */\r\n    destroy(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._destroyed = true;\r\n        this.lock = false; //解锁资源，强制清理\r\n        _disposingCounter++;\r\n        this._disposeResource();\r\n        _disposingCounter--;\r\n        this.offAll();\r\n        delete Resource._idResourcesMap[this.id];\r\n        if (this.url) {\r\n            if (Resource.DEBUG)\r\n                console.debug(`destroy ${Object.getPrototypeOf(this).constructor.name} ${this.url}`);\r\n            ILaya.loader.clearRes(this.url, this);\r\n        }\r\n    }\r\n}","/**\r\n * 纹理的过滤模式。\r\n */\r\nexport enum FilterMode {\r\n    /**点过滤。*/\r\n    Point = 0,\r\n    /**双线性过滤。*/\r\n    Bilinear = 1,\r\n    /**三线性过滤。*/\r\n    Trilinear = 2,\r\n}","export enum RenderCapable {\r\n    Element_Index_Uint32,//Index Usage 32\r\n    TextureFormat_R32G32B32A32,//Texturefloat32\r\n    TextureFormat_R16G16B16A16,//TextureFloat16\r\n    Texture_anisotropic,//anisotropic function\r\n    RenderTextureFormat_R16G16B16A16,//Rendertexture Float16\r\n    RenderTextureFormat_R32G32B32A32, // rendertexture float32\r\n    RenderTextureFormat_Depth,//depthTexture\r\n    RenderTextureFormat_ShadowMap,//shadowMap Texture\r\n    Vertex_VAO,//VAO\r\n    DrawElement_Instance,//Instance\r\n    Shader_TextureLod,//Texture lod sampler\r\n    COMPRESS_TEXTURE_S3TC,//compress Texture dds\r\n    COMPRESS_TEXTURE_S3TC_SRGB,//Compress Texture dds srgb\r\n    COMPRESS_TEXTURE_PVRTC,//Compress Texture PVR\r\n    COMPRESS_TEXTURE_ETC1,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ETC,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ASTC,//Compress Texture astc\r\n    Texture_SRGB,//Textrue srgb   \r\n    MSAA,//MSAA\r\n    UnifromBufferObject,\r\n    Texture3D,\r\n    Texture_FloatLinearFiltering,\r\n    Texture_HalfFloatLinearFiltering,\r\n}","import { Config } from \"../../Config\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { TextureCompareMode } from \"../RenderEngine/RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { InternalTexture } from \"../RenderEngine/RenderInterface/InternalTexture\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Resource } from \"./Resource\";\r\n\r\n/**\r\n * <code>BaseTexture</code> 纹理的父类，抽象类，不允许实例。\r\n */\r\nexport class BaseTexture extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    _texture: InternalTexture;\r\n    /**@internal */\r\n    hdrEncodeFormat: HDREncodeFormat;\r\n    /**@private */\r\n    protected _width: number;\r\n    /**@private */\r\n    protected _height: number;\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    protected _dimension: TextureDimension;\r\n\r\n    /**\r\n     * 纹理几何属性\r\n     */\r\n    public get dimension(): TextureDimension {\r\n        return this._dimension;\r\n    }\r\n\r\n    protected _format: TextureFormat;\r\n    /**\r\n     * 纹理格式\r\n     */\r\n    public get format(): TextureFormat {\r\n        return this._format;\r\n    }\r\n\r\n    /**\r\n     * 是否生成mipmap\r\n     */\r\n    public get mipmap(): boolean {\r\n        return this._texture.mipmap;\r\n    }\r\n\r\n    public get mipmapCount(): number {\r\n        return this._texture.mipmapCount;\r\n    }\r\n\r\n    /**\r\n     * 各向异性值\r\n     */\r\n    public get anisoLevel(): number {\r\n        return this._texture.anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        this._texture.anisoLevel = value;\r\n    }\r\n\r\n    /**\r\n     * 采样过滤模式\r\n     */\r\n    public get filterMode(): FilterMode {\r\n        return this._texture.filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        this._texture.filterMode = value;\r\n    }\r\n\r\n    /**\r\n     * U方向采样模式\r\n     */\r\n    public get wrapModeU(): WrapMode {\r\n        return this._texture.wrapU;\r\n    }\r\n    public set wrapModeU(value: WrapMode) {\r\n        this._texture.wrapU = value;\r\n    }\r\n\r\n    /**\r\n     * V方向采样模式\r\n     */\r\n    public get wrapModeV(): WrapMode {\r\n        return this._texture.wrapV;\r\n    }\r\n    public set wrapModeV(value: WrapMode) {\r\n        this._texture.wrapV = value;\r\n    }\r\n\r\n    /**\r\n     * W方向采样模式\r\n     */\r\n    public get wrapModeW(): WrapMode {\r\n        return this._texture.wrapW;\r\n    }\r\n    public set wrapModeW(value: WrapMode) {\r\n        this._texture.wrapW = value;\r\n    }\r\n\r\n    /**\r\n     * 贴图压缩格式\r\n     */\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._texture.compareMode;\r\n    }\r\n\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._texture.compareMode = LayaGL.textureContext.setTextureCompareMode(this._texture, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * gamma矫正值\r\n     * 如果是1.0  texture2D直接采样就是linear \r\n     */\r\n    public get gammaCorrection(): number {\r\n        return this._texture.gammaCorrection;\r\n    }\r\n\r\n    /**\r\n     * mipmap起始等级\r\n     */\r\n    public set baseMipmapLevel(value: number) {\r\n        this._texture.baseMipmapLevel = value;\r\n    }\r\n\r\n    public get baseMipmapLevel(): number {\r\n        return this._texture.baseMipmapLevel;\r\n    }\r\n\r\n    /**\r\n     * 最大Mipmap等级\r\n     */\r\n    public set maxMipmapLevel(value: number) {\r\n        this._texture.maxMipmapLevel = value;\r\n    }\r\n\r\n    public get maxMipmapLevel(): number {\r\n        return this._texture.maxMipmapLevel;\r\n    }\r\n\r\n    /**@internal */\r\n    _gammaSpace: boolean = false;\r\n    // todo\r\n    public get gammaSpace(): boolean {\r\n        // return this._gammaSpace;\r\n        return this._texture.useSRGBLoad || this._texture.gammaCorrection > 1;\r\n    }\r\n\r\n    /**\r\n     * 实例化一个纹理\r\n     * @param width 长\r\n     * @param height 宽\r\n     * @param format 格式\r\n     */\r\n    constructor(width: number, height: number, format: number) {\r\n        super();\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = format;\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n        this.hdrEncodeFormat = HDREncodeFormat.NONE;\r\n    }\r\n\r\n    /**\r\n     * 是否是gpu压缩纹理格式\r\n     * @returns \r\n     */\r\n    gpuCompressFormat(): boolean {\r\n        let format = this._format;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n            case TextureFormat.R16G16B16:\r\n            case TextureFormat.R16G16B16A16:\r\n            case TextureFormat.R32G32B32:\r\n            case TextureFormat.R32G32B32A32:\r\n            case TextureFormat.R5G6B5:\r\n            case TextureFormat.Alpha8:\r\n                return false;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n            case TextureFormat.ETC1RGB:\r\n            case TextureFormat.ETC2RGB:\r\n            case TextureFormat.ETC2RGBA:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.PVRTCRGB_2BPPV:\r\n            case TextureFormat.PVRTCRGBA_2BPPV:\r\n            case TextureFormat.PVRTCRGB_4BPPV:\r\n            case TextureFormat.PVRTCRGBA_4BPPV:\r\n            case TextureFormat.ASTC4x4:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取纹理格式的字节数\r\n     * @internal\r\n     */\r\n    _getFormatByteCount(): number {\r\n        switch (this._format) {\r\n            case TextureFormat.R8G8B8:\r\n                return 3;\r\n            case TextureFormat.R8G8B8A8:\r\n                return 4;\r\n            case TextureFormat.R5G6B5:\r\n                return 1;\r\n            case TextureFormat.Alpha8:\r\n                return 1;\r\n            case TextureFormat.R16G16B16A16:\r\n                return 2;\r\n            case TextureFormat.R32G32B32A32:\r\n                return 4;\r\n            default:\r\n                throw \"Texture2D: unknown format.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getSource() {\r\n        return this._texture.resource;\r\n    }\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        throw \"defaulte\"\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        this._texture.dispose();\r\n    }\r\n}","import { Matrix } from \"../maths/Matrix\"\r\n\r\n/**\r\n * <p> <code>Byte</code> 类提供用于优化读取、写入以及处理二进制数据的方法和属性。</p>\r\n * <p> <code>Byte</code> 类适用于需要在字节层访问数据的高级开发人员。</p>\r\n */\r\nexport class Byte {\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。<br/>\r\n     * <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**@private */\r\n    private static _sysEndian: string = null;\r\n    /**@private 是否为小端数据。*/\r\n    protected _xd_: boolean = true;\r\n    /**@private */\r\n    private _allocated_: number = 8;\r\n    /**@private 原始数据。*/\r\n    protected _d_: any\r\n    /**@private DataView*/\r\n    protected _u8d_: any;\r\n    /**@private */\r\n    protected _pos_: number = 0;\r\n    /**@private */\r\n    protected _length: number = 0;\r\n\r\n    /**\r\n     * <p>获取当前主机的字节序。</p>\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * @return 当前系统的字节序。\r\n     */\r\n    static getSystemEndian(): string {\r\n        if (!Byte._sysEndian) {\r\n            var buffer: any = new ArrayBuffer(2);\r\n            new DataView(buffer).setInt16(0, 256, true);\r\n            Byte._sysEndian = (new Int16Array(buffer))[0] === 256 ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n        }\r\n        return Byte._sysEndian;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Byte</code> 类的实例。\r\n     * @param\tdata\t用于指定初始化的元素数目，或者用于初始化的TypedArray对象、ArrayBuffer对象。如果为 null ，则预分配一定的内存空间，当可用空间不足时，优先使用这部分内存，如果还不够，则重新分配所需内存。\r\n     */\r\n    constructor(data: any = null) {\r\n        if (data) {\r\n            this._u8d_ = new Uint8Array(data);\r\n            this._d_ = new DataView(this._u8d_.buffer);\r\n            this._length = this._d_.byteLength;\r\n        } else {\r\n            this._resizeBuffer(this._allocated_);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取此对象的 ArrayBuffer 数据，数据只包含有效数据部分。\r\n     */\r\n    get buffer(): ArrayBuffer {\r\n        var rstBuffer: ArrayBuffer = this._d_.buffer;\r\n        if (rstBuffer.byteLength === this._length) return rstBuffer;\r\n        return rstBuffer.slice(0, this._length);\r\n    }\r\n\r\n    /**\r\n     * <p> <code>Byte</code> 实例的字节序。取值为：<code>BIG_ENDIAN</code> 或 <code>BIG_ENDIAN</code> 。</p>\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     *  <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._xd_ ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._xd_ = (value === Byte.LITTLE_ENDIAN);\r\n    }\r\n\r\n    /**\r\n     * <p> <code>Byte</code> 对象的长度（以字节为单位）。</p>\r\n     * <p>如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧；如果将长度设置为小于当前长度的值，将会截断该字节数组。</p>\r\n     * <p>如果要设置的长度大于当前已分配的内存空间的字节长度，则重新分配内存空间，大小为以下两者较大者：要设置的长度、当前已分配的长度的2倍，并将原有数据拷贝到新的内存空间中；如果要设置的长度小于当前已分配的内存空间的字节长度，也会重新分配内存空间，大小为要设置的长度，并将原有数据从头截断为要设置的长度存入新的内存空间中。</p>\r\n     */\r\n    set length(value: number) {\r\n        if (this._allocated_ < value) this._resizeBuffer(this._allocated_ = Math.floor(Math.max(value, this._allocated_ * 2)));\r\n        else if (this._allocated_ > value) this._resizeBuffer(this._allocated_ = value);\r\n        this._length = value;\r\n    }\r\n\r\n    get length(): number {\r\n        return this._length;\r\n    }\r\n\r\n    /**@private */\r\n    private _resizeBuffer(len: number): void {\r\n        try {\r\n            var newByteView: any = new Uint8Array(len);\r\n            if (this._u8d_ != null) {\r\n                if (this._u8d_.length <= len) newByteView.set(this._u8d_);\r\n                else newByteView.set(this._u8d_.subarray(0, len));\r\n            }\r\n            this._u8d_ = newByteView;\r\n            this._d_ = new DataView(newByteView.buffer);\r\n        } catch (err) {\r\n            throw \"Invalid typed array length:\" + len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>常用于解析固定格式的字节流。</p>\r\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    getString(): string {\r\n        return this.readString();\r\n    }\r\n\r\n    /**\r\n     * <p>常用于解析固定格式的字节流。</p>\r\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    readString(): string {\r\n        return this._rUTF(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。</p>\r\n     * <p><b>注意：</b>返回的 Float32Array 对象，在 JavaScript 环境下，是原生的 HTML5 Float32Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Float32Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    getFloat32Array(start: number, len: number): any {\r\n        return this.readFloat32Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    readFloat32Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Float32Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    getUint8Array(start: number, len: number): Uint8Array {\r\n        return this.readUint8Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readUint8Array(start: number, len: number): Uint8Array {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Uint8Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。</p>\r\n     * <p><b>注意：</b>返回的 Int16Array 对象，在 JavaScript 环境下，是原生的 HTML5 Int16Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Int16Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Int16Array 对象。\r\n     */\r\n    getInt16Array(start: number, len: number): any {\r\n        return this.readInt16Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readInt16Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Int16Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    getFloat32(): number {\r\n        return this.readFloat32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    readFloat32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getFloat32 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    getFloat64(): number {\r\n        return this.readFloat64();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    readFloat64(): number {\r\n        if (this._pos_ + 8 > this._length) throw \"getFloat64 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat64(this._pos_, this._xd_);\r\n        this._pos_ += 8;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @param\tvalue\t单精度（32 位）浮点数。\r\n     */\r\n    writeFloat32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setFloat32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @param\tvalue\t双精度（64 位）浮点数。\r\n     */\r\n    writeFloat64(value: number): void {\r\n        this._ensureWrite(this._pos_ + 8);\r\n        this._d_.setFloat64(this._pos_, value, this._xd_);\r\n        this._pos_ += 8;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @return Int32 值。\r\n     */\r\n    getInt32(): number {\r\n        return this.readInt32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @return Int32 值。\r\n     */\r\n    readInt32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getInt32 error - Out of bounds\";\r\n        var float: number = this._d_.getInt32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return float;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @return Uint32 值。\r\n     */\r\n    getUint32(): number {\r\n        return this.readUint32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @return Uint32 值。\r\n     */\r\n    readUint32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getUint32 error - Out of bounds\";\r\n        var v: number = this._d_.getUint32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Int32 值。\r\n     * @param\tvalue\t需要写入的 Int32 值。\r\n     */\r\n    writeInt32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setInt32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入 Uint32 值。\r\n     * @param\tvalue\t需要写入的 Uint32 值。\r\n     */\r\n    writeUint32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setUint32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @return Int16 值。\r\n     */\r\n    getInt16(): number {\r\n        return this.readInt16();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @return Int16 值。\r\n     */\r\n    readInt16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getInt16 error - Out of bounds\";\r\n        var us: number = this._d_.getInt16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @return Uint16 值。\r\n     */\r\n    getUint16(): number {\r\n        return this.readUint16();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @return Uint16 值。\r\n     */\r\n    readUint16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getUint16 error - Out of bounds\";\r\n        var us: number = this._d_.getUint16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint16 值。\r\n     * @param\tvalue\t需要写入的Uint16 值。\r\n     */\r\n    writeUint16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setUint16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Int16 值。\r\n     * @param\tvalue\t需要写入的 Int16 值。\r\n     */\r\n    writeInt16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setInt16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @return Uint8 值。\r\n     */\r\n    getUint8(): number {\r\n        return this.readUint8();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @return Uint8 值。\r\n     */\r\n    readUint8(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"getUint8 error - Out of bounds\";\r\n        return this._u8d_[this._pos_++];\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint8 值。\r\n     * @param\tvalue\t需要写入的 Uint8 值。\r\n     */\r\n    writeUint8(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setUint8(this._pos_, value);\r\n        this._pos_++;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUInt8(pos: number): number {\r\n        return this._readUInt8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUInt8(pos: number): number {\r\n        return this._d_.getUint8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUint16(pos: number): number {\r\n        return this._readUint16(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUint16(pos: number): number {\r\n        return this._d_.getUint16(pos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\r\n     * @return  Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _getMatrix(): Matrix {\r\n        return this._readMatrix();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\r\n     * @return  Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _readMatrix(): Matrix {\r\n        var rst: Matrix = new Matrix(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取指定长度的 UTF 型字符串。\r\n     * @param\tlen 需要读取的长度。\r\n     * @return 读取的字符串。\r\n     */\r\n    private _rUTF(len: number): string {\r\n        var v: string = \"\", max: number = this._pos_ + len, c: number, c2: number, c3: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        var strs: any[] = [];\r\n        var n: number = 0;\r\n        strs.length = 1000;\r\n        while (this._pos_ < max) {\r\n            c = u[this._pos_++];\r\n            if (c < 0x80) {\r\n                if (c != 0)\r\n                    //v += f(c);\\\r\n                    strs[n++] = f(c);\r\n            } else if (c < 0xE0) {\r\n                //v += f(((c & 0x3F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x3F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else if (c < 0xF0) {\r\n                c2 = u[this._pos_++];\r\n                //v += f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else {\r\n                c2 = u[this._pos_++];\r\n                c3 = u[this._pos_++];\r\n                //v += f(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (u[_pos_++] & 0x7F));\r\n                const _code = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (u[this._pos_++] & 0x7F);\r\n                if (_code >= 0x10000) {\r\n                    const _offset = _code - 0x10000;\r\n                    const _lead = 0xd800 | (_offset >> 10);\r\n                    const _trail = 0xdc00 | (_offset & 0x3ff);\r\n                    strs[n++] = f(_lead);\r\n                    strs[n++] = f(_trail);\r\n                }\r\n                else {\r\n                    strs[n++] = f(_code);\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        strs.length = n;\r\n        return strs.join('');\r\n        //return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取 <code>len</code> 参数指定的长度的字符串。\r\n     * @param\tlen\t要读取的字符串的长度。\r\n     * @return 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    getCustomString(len: number): string {\r\n        return this.readCustomString(len);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取 <code>len</code> 参数指定的长度的字符串。\r\n     * @param\tlen\t要读取的字符串的长度。\r\n     * @return 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    readCustomString(len: number): string {\r\n        var v: string = \"\", ulen: number = 0, c: number, c2: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        while (len > 0) {\r\n            c = u[this._pos_];\r\n            if (c < 0x80) {\r\n                v += f(c);\r\n                this._pos_++;\r\n                len--;\r\n            } else {\r\n                ulen = c - 0x80;\r\n                this._pos_++;\r\n                len -= ulen;\r\n                while (ulen > 0) {\r\n                    c = u[this._pos_++];\r\n                    c2 = u[this._pos_++];\r\n                    v += f((c2 << 8) | c);\r\n                    ulen--;\r\n                }\r\n            }\r\n        }\r\n\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 移动或返回 Byte 对象的读写指针的当前位置（以字节为单位）。下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。\r\n     */\r\n    get pos(): number {\r\n        return this._pos_;\r\n    }\r\n\r\n    set pos(value: number) {\r\n        this._pos_ = value;\r\n        //$MOD byteOffset是只读的，这里进行赋值没有意义。\r\n        //_d_.byteOffset = value;\r\n    }\r\n\r\n    /**\r\n     * 可从字节流的当前位置到末尾读取的数据的字节数。\r\n     */\r\n    get bytesAvailable(): number {\r\n        return this._length - this._pos_;\r\n    }\r\n\r\n    /**\r\n     * 清除字节数组的内容，并将 length 和 pos 属性重置为 0。调用此方法将释放 Byte 实例占用的内存。\r\n     */\r\n    clear(): void {\r\n        this._pos_ = 0;\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取此对象的 ArrayBuffer 引用。\r\n     * @return\r\n     */\r\n    __getBuffer(): ArrayBuffer {\r\n        //this._d_.buffer.byteLength = this.length;\r\n        return this._d_.buffer;\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。类似于 writeUTF() 方法，但 writeUTFBytes() 不使用 16 位长度的字为字符串添加前缀。</p>\r\n     * <p>对应的读取方法为： getUTFBytes 。</p>\r\n     * @param value 要写入的字符串。\r\n     */\r\n    writeUTFBytes(value: string): void {\r\n        // utf8-decode\r\n        value = value + \"\";\r\n        for (var i: number = 0, sz: number = value.length; i < sz; i++) {\r\n            var c: number = value.charCodeAt(i);\r\n\r\n            if (c <= 0x7F) {\r\n                this.writeByte(c);\r\n            } else if (c <= 0x7FF) {\r\n                //优化为直接写入多个字节，而不必重复调用writeByte，免去额外的调用和逻辑开销。\r\n                this._ensureWrite(this._pos_ + 2);\r\n                this._u8d_.set([0xC0 | (c >> 6), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 2;\r\n            } else if (c >= 0xD800 && c <= 0xDBFF) {\r\n                i++;\r\n                const c2 = value.charCodeAt(i);\r\n                if (!Number.isNaN(c2) && c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                    const _p1 = (c & 0x3FF) + 0x40;\r\n                    const _p2 = c2 & 0x3FF;\r\n\r\n                    const _b1 = 0xF0 | ((_p1 >> 8) & 0x3F);\r\n                    const _b2 = 0x80 | ((_p1 >> 2) & 0x3F);\r\n                    const _b3 = 0x80 | ((_p1 & 0x3) << 4) | ((_p2 >> 6) & 0xF);\r\n                    const _b4 = 0x80 | (_p2 & 0x3F);\r\n\r\n                    this._ensureWrite(this._pos_ + 4);\r\n                    this._u8d_.set([_b1, _b2, _b3, _b4], this._pos_);\r\n                    this._pos_ += 4;\r\n                }\r\n            } else if (c <= 0xFFFF) {\r\n                this._ensureWrite(this._pos_ + 3);\r\n                this._u8d_.set([0xE0 | (c >> 12), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 3;\r\n            } else {\r\n                this._ensureWrite(this._pos_ + 4);\r\n                this._u8d_.set([0xF0 | (c >> 18), 0x80 | ((c >> 12) & 0x3F), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 4;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节。</p>\r\n     * <p>对应的读取方法为： getUTFString 。</p>\r\n     * @param\tvalue 要写入的字符串值。\r\n     */\r\n    writeUTFString(value: string): void {\r\n        var tPos: number = this.pos;\r\n        this.writeUint16(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos: number = this.pos - tPos - 2;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint16(tPos, dPos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 32 位整数），然后写入表示字符串字符的字节。</p>\r\n     * @param\tvalue 要写入的字符串值。\r\n     */\r\n    writeUTFString32(value: string): void {\r\n        var tPos = this.pos;\r\n        this.writeUint32(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos = this.pos - tPos - 4;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint32(tPos, dPos, this._xd_);\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 读取 UTF-8 字符串。\r\n     * @return 读取的字符串。\r\n     */\r\n    readUTFString(): string {\r\n        //var tPos:int = pos;\r\n        //var len:int = getUint16();\r\n        ////trace(\"readLen:\"+len,\"pos,\",tPos);\r\n        return this.readUTFBytes(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    readUTFString32(): string {\r\n        return this.readUTFBytes(this.getUint32());\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取一个 UTF-8 字符串。假定字符串的前缀是一个无符号的短整型（以此字节表示要读取的长度）。</p>\r\n     * <p>对应的写入方法为： writeUTFString 。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    getUTFString(): string {\r\n        return this.readUTFString();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读字符串，必须是 writeUTFBytes 方法写入的字符串。\r\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @return 读取的字符串。\r\n     */\r\n    readUTFBytes(len: number = -1): string {\r\n        if (len === 0) return \"\";\r\n        var lastBytes: number = this.bytesAvailable;\r\n        if (len > lastBytes) throw \"readUTFBytes error - Out of bounds\";\r\n        len = len > 0 ? len : lastBytes;\r\n        return this._rUTF(len);\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取一个由 length 参数指定的长度的 UTF-8 字节序列，并返回一个字符串。</p>\r\n     * <p>一般读取的是由 writeUTFBytes 方法写入的字符串。</p>\r\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @return 读取的字符串。\r\n     */\r\n    getUTFBytes(len: number = -1): string {\r\n        return this.readUTFBytes(len);\r\n    }\r\n\r\n    /**\r\n     * <p>在字节流中写入一个字节。</p>\r\n     * <p>使用参数的低 8 位。忽略高 24 位。</p>\r\n     * @param\tvalue\r\n     */\r\n    writeByte(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setInt8(this._pos_, value);\r\n        this._pos_ += 1;\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取带符号的字节。</p>\r\n     * <p>返回值的范围是从 -128 到 127。</p>\r\n     * @return 介于 -128 和 127 之间的整数。\r\n     */\r\n    readByte(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"readByte error - Out of bounds\";\r\n        return this._d_.getInt8(this._pos_++);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流中读取带符号的字节。\r\n     */\r\n    getByte(): number {\r\n        return this.readByte();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * <p>保证该字节流的可用长度不小于 <code>lengthToEnsure</code> 参数指定的值。</p>\r\n     * @param\tlengthToEnsure\t指定的长度。\r\n     */\r\n    _ensureWrite(lengthToEnsure: number): void {\r\n        if (this._length < lengthToEnsure) this._length = lengthToEnsure;\r\n        if (this._allocated_ < lengthToEnsure) this.length = lengthToEnsure;\r\n    }\r\n\r\n    /**\r\n     * <p>将指定 arraybuffer 对象中的以 offset 为起始偏移量， length 为长度的字节序列写入字节流。</p>\r\n     * <p>如果省略 length 参数，则使用默认长度 0，该方法将从 offset 开始写入整个缓冲区；如果还省略了 offset 参数，则写入整个缓冲区。</p>\r\n     * <p>如果 offset 或 length 小于0，本函数将抛出异常。</p>\r\n     * @param\tarraybuffer\t需要写入的 Arraybuffer 对象。\r\n     * @param\toffset\t\tArraybuffer 对象的索引的偏移量（以字节为单位）\r\n     * @param\tlength\t\t从 Arraybuffer 对象写入到 Byte 对象的长度（以字节为单位）\r\n     */\r\n    writeArrayBuffer(arraybuffer: any, offset: number = 0, length: number = 0): void {\r\n        if (offset < 0 || length < 0) throw \"writeArrayBuffer error - Out of bounds\";\r\n        if (length == 0) length = arraybuffer.byteLength - offset;\r\n        this._ensureWrite(this._pos_ + length);\r\n        var uint8array: any = new Uint8Array(arraybuffer);\r\n        this._u8d_.set(uint8array.subarray(offset, offset + length), this._pos_);\r\n        this._pos_ += length;\r\n    }\r\n\r\n    /**\r\n     * 读取ArrayBuffer数据\r\n     * @param\tlength\r\n     * @return\r\n     */\r\n    readArrayBuffer(length: number): ArrayBuffer {\r\n        var rst: ArrayBuffer;\r\n        rst = this._u8d_.buffer.slice(this._pos_, this._pos_ + length);\r\n        this._pos_ = this._pos_ + length\r\n        return rst;\r\n    }\r\n}\r\n\r\n","/**\r\n * <code>HalfFloatUtils</code> 类用于创建HalfFloat工具。\r\n */\r\nexport class HalfFloatUtils {\r\n    /**@internal */\r\n    private static _buffer: ArrayBuffer = new ArrayBuffer(4);\r\n    /**@internal */\r\n    private static _floatView: Float32Array = new Float32Array(HalfFloatUtils._buffer);\r\n    /**@internal */\r\n    private static _uint32View: Uint32Array = new Uint32Array(HalfFloatUtils._buffer);\r\n\r\n    /**@internal */\r\n    private static _baseTable: Uint32Array = new Uint32Array(512);\r\n    /**@internal */\r\n    private static _shiftTable: Uint32Array = new Uint32Array(512);\r\n\r\n    /**@internal */\r\n    private static _mantissaTable: Uint32Array = new Uint32Array(2048);\r\n    /**@internal */\r\n    private static _exponentTable: Uint32Array = new Uint32Array(64);\r\n    /**@internal */\r\n    private static _offsetTable: Uint32Array = new Uint32Array(64);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        for (var i: number = 0; i < 256; ++i) {\r\n            var e: number = i - 127;\r\n            // very small number (0, -0)\r\n            if (e < -27) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0000;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // small number (denorm)\r\n            } else if (e < -14) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0400 >> (-e - 14);\r\n                HalfFloatUtils._baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = -e - 1;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = -e - 1;\r\n\r\n                // normal number\r\n            } else if (e <= 15) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = (e + 15) << 10;\r\n                HalfFloatUtils._baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n\r\n                // large number (Infinity, -Infinity)\r\n            } else if (e < 128) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // stay (NaN, Infinity, -Infinity)\r\n            } else {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n            }\r\n        }\r\n\r\n        HalfFloatUtils._mantissaTable[0] = 0;\r\n        for (i = 1; i < 1024; ++i) {\r\n            var m: number = i << 13;    // zero pad mantissa bits\r\n            e = 0;          // zero exponent\r\n\r\n            // normalized\r\n            while ((m & 0x00800000) === 0) {\r\n                e -= 0x00800000;    // decrement exponent\r\n                m <<= 1;\r\n            }\r\n\r\n            m &= ~0x00800000;   // clear leading 1 bit\r\n            e += 0x38800000;    // adjust bias\r\n\r\n            HalfFloatUtils._mantissaTable[i] = m | e;\r\n        }\r\n        for (i = 1024; i < 2048; ++i) {\r\n            HalfFloatUtils._mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\r\n        }\r\n\r\n        HalfFloatUtils._exponentTable[0] = 0;\r\n        for (i = 1; i < 31; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = i << 23;\r\n        }\r\n        HalfFloatUtils._exponentTable[31] = 0x47800000;\r\n        HalfFloatUtils._exponentTable[32] = 0x80000000;\r\n        for (i = 33; i < 63; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = 0x80000000 + ((i - 32) << 23);\r\n        }\r\n        HalfFloatUtils._exponentTable[63] = 0xc7800000;\r\n\r\n        HalfFloatUtils._offsetTable[0] = 0;\r\n        for (i = 1; i < 64; ++i) {\r\n            if (i === 32) {\r\n                HalfFloatUtils._offsetTable[i] = 0;\r\n            } else {\r\n                HalfFloatUtils._offsetTable[i] = 1024;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * round a number to a half float number bits.\r\n     * @param {number} num\r\n     */\r\n    static roundToFloat16Bits(num: number): number {\r\n        HalfFloatUtils._floatView[0] = num;\r\n        var f: number = HalfFloatUtils._uint32View[0];\r\n        var e: number = (f >> 23) & 0x1ff;\r\n        return HalfFloatUtils._baseTable[e] + ((f & 0x007fffff) >> HalfFloatUtils._shiftTable[e]);\r\n    }\r\n\r\n    /**\r\n     * convert a half float number bits to a number.\r\n     * @param {number} float16bits - half float number bits\r\n     */\r\n    static convertToNumber(float16bits: number): number {\r\n        var m: number = float16bits >> 10;\r\n        HalfFloatUtils._uint32View[0] = HalfFloatUtils._mantissaTable[HalfFloatUtils._offsetTable[m] + (float16bits & 0x3ff)] + HalfFloatUtils._exponentTable[m];\r\n        return HalfFloatUtils._floatView[0];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nconst FOURCC_DXT1: number = 827611204;\r\nconst FOURCC_DXT3 = 861165636;\r\nconst FOURCC_DXT5: number = 894720068;\r\nconst FOURCC_DX10 = 808540228;\r\nconst DDPF_FOURCC: number = 0x4;\r\nconst DDPF_RGB = 0x40;\r\nconst DDSCAPS2_CUBEMAP = 0x200;\r\nconst DDPF_LUMINANCE = 0x20000;\r\nconst DDSD_MIPMAPCOUNT: number = 0x20000;\r\nconst DDS_MAGIC: number = 0x20534444;\r\nconst DDS_HEADER_LENGTH: number = 31;\r\nconst DDS_DXGI_FORMAT: number = 32;\r\nconst DDS_HEADER_MAGIC: number = 0;\r\nconst DDS_HEADER_SIZE: number = 1;\r\nconst DDS_HEADER_FLAGS: number = 2;\r\nconst DDS_HEADER_HEIGHT: number = 3;\r\nconst DDS_HEADER_WIDTH: number = 4;\r\nconst DDS_HEADER_MIPMAPCOUNT: number = 7;\r\nconst DDS_HEADER_PF_FLAGS: number = 20;\r\nconst DDS_HEADER_PF_FOURCC: number = 21;\r\nconst DDS_HEADER_PF_RGBBPP: number = 22;\r\nconst DDS_HEADER_PF_CAPS2: number = 28;\r\nconst FOURCC_D3DFMT_R16G16B16A16F = 113;\r\nconst FOURCC_D3DFMT_R32G32B32A32F = 116;\r\n\r\nconst Int32ToFourCC = (value: number) => {\r\n    return String.fromCharCode(\r\n        value & 0xff,\r\n        (value >> 8) & 0xff,\r\n        (value >> 16) & 0xff,\r\n        (value >> 24) & 0xff\r\n    );\r\n}\r\n\r\n/**\r\n * dds 未存储 color space 需要手动指定\r\n */\r\nexport class DDSTextureInfo {\r\n\r\n    width: number;\r\n    height: number;\r\n    mipmapCount: number;\r\n    isCube: boolean;\r\n    bpp: number;\r\n    blockBytes: number;\r\n    format: TextureFormat;\r\n    compressed: boolean;\r\n    dataOffset: number;\r\n    source: ArrayBuffer;\r\n\r\n    constructor(width: number, height: number, mipmapCount: number, isCube: boolean, bpp: number, blockBytes: number, dataOffset: number, format: TextureFormat, compressed: boolean, sourceData: ArrayBuffer) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.mipmapCount = mipmapCount;\r\n        this.isCube = isCube;\r\n        this.blockBytes = blockBytes;\r\n        this.dataOffset = dataOffset;\r\n        this.format = format;\r\n        this.source = sourceData;\r\n        this.bpp = bpp;\r\n        this.compressed = compressed;\r\n    }\r\n\r\n    static getDDSTextureInfo(source: ArrayBuffer): DDSTextureInfo {\r\n        let header = new Int32Array(source, 0, DDS_HEADER_LENGTH);\r\n\r\n        let width = header[DDS_HEADER_WIDTH];\r\n        let height = header[DDS_HEADER_HEIGHT];\r\n\r\n        let mipmapCount = 1;\r\n        if (header[DDS_HEADER_FLAGS] & DDSD_MIPMAPCOUNT) {\r\n            mipmapCount = Math.max(1, header[DDS_HEADER_MIPMAPCOUNT]);\r\n        }\r\n\r\n        let fourCC = header[DDS_HEADER_PF_FOURCC];\r\n\r\n        // let extendedHeader = new Int32Array(source, 0, DDS_HEADER_LENGTH + 4);\r\n        // let dxgiFormat = (fourCC == FOURCC_DX10) ? header[32] : 0;\r\n\r\n        let isFourCC = (header[DDS_HEADER_PF_FLAGS] & DDPF_FOURCC) === DDPF_FOURCC;\r\n\r\n        let isRGB = (header[DDS_HEADER_PF_FLAGS] & DDPF_RGB) === DDPF_RGB;\r\n        let isLuminance = (header[DDS_HEADER_PF_FLAGS] & DDPF_LUMINANCE) === DDPF_LUMINANCE;\r\n        let isCube = (header[DDS_HEADER_PF_CAPS2] & DDSCAPS2_CUBEMAP) === DDSCAPS2_CUBEMAP;\r\n        let isCompressed = (fourCC === FOURCC_DXT1 || fourCC === FOURCC_DXT3 || fourCC === FOURCC_DXT5);\r\n\r\n        let layaTexFormat = TextureFormat.DXT1;\r\n        let dataOffset = header[DDS_HEADER_SIZE] + 4;\r\n        let blockBytes = 1;\r\n        // todo  DXT10  unCompressed texture ?\r\n        switch (fourCC) {\r\n            case FOURCC_DXT1:\r\n                layaTexFormat = TextureFormat.DXT1;\r\n                blockBytes = 8;\r\n                break;\r\n            case FOURCC_DXT3:\r\n                layaTexFormat = TextureFormat.DXT3;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_DXT5:\r\n                layaTexFormat = TextureFormat.DXT5;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_D3DFMT_R16G16B16A16F:\r\n                layaTexFormat = TextureFormat.R16G16B16A16;\r\n                blockBytes = 4;\r\n                break;\r\n            case FOURCC_D3DFMT_R32G32B32A32F:\r\n                layaTexFormat = TextureFormat.R32G32B32A32;\r\n                blockBytes = 4;\r\n                break;\r\n            default:\r\n                throw \"Unsupported format \" + Int32ToFourCC(fourCC)\r\n        }\r\n\r\n        if (header[DDS_HEADER_MAGIC] !== DDS_MAGIC) {\r\n            throw \"Invalid magic number in DDS header\";\r\n        }\r\n        if (!isFourCC && !isRGB && !isLuminance) {\r\n            throw \"Unsupported format, must contain a FourCC, RGB or LUMINANCE code\";\r\n        }\r\n\r\n        let ext = LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC) || LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB);\r\n\r\n        if (isCompressed && !ext) {\r\n            throw \"Compressed textures are not supported on this platform.\";\r\n        }\r\n\r\n        return new DDSTextureInfo(width, height, mipmapCount, isCube, 0, blockBytes, dataOffset, layaTexFormat, isCompressed, source);\r\n    }\r\n\r\n}","\r\nexport enum TextureDimension {\r\n    Tex2D,\r\n    Cube,\r\n    Tex3D,\r\n    Texture2DArray,\r\n    CubeArray,\r\n    Unkonw,\r\n    None\r\n}","import { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\n\r\nconst KTX1FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst KTX2FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst IdentifierByteSize = 12;\r\nconst HeaderSize = 13;\r\n\r\n/** etc1 */\r\nconst COMPRESSED_RGB_ETC1_WEBGL = 36196;\r\n\r\n/** etc2 */\r\nconst COMPRESSED_R11_EAC = 37488;\r\nconst COMPRESSED_RG11_EAC = 37490;\r\nconst COMPRESSED_RGB8_ETC2 = 37492;\r\nconst COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494;\r\nconst COMPRESSED_RGBA8_ETC2_EAC = 37496;\r\nconst COMPRESSED_SIGNED_R11_EAC = 37489;\r\nconst COMPRESSED_SIGNED_RG11_EAC = 37491;\r\nconst COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497;\r\nconst COMPRESSED_SRGB8_ETC2 = 37493;\r\nconst COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495;\r\n\r\n/** astc */\r\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 37808;\r\nconst COMPRESSED_RGBA_ASTC_5x4_KHR = 37809;\r\nconst COMPRESSED_RGBA_ASTC_5x5_KHR = 37810;\r\nconst COMPRESSED_RGBA_ASTC_6x5_KHR = 37811;\r\nconst COMPRESSED_RGBA_ASTC_6x6_KHR = 37812;\r\nconst COMPRESSED_RGBA_ASTC_8x5_KHR = 37813;\r\nconst COMPRESSED_RGBA_ASTC_8x6_KHR = 37814;\r\nconst COMPRESSED_RGBA_ASTC_8x8_KHR = 37815;\r\nconst COMPRESSED_RGBA_ASTC_10x5_KHR = 37816;\r\nconst COMPRESSED_RGBA_ASTC_10x6_KHR = 37817;\r\nconst COMPRESSED_RGBA_ASTC_10x8_KHR = 37818;\r\nconst COMPRESSED_RGBA_ASTC_10x10_KHR = 37819;\r\nconst COMPRESSED_RGBA_ASTC_12x10_KHR = 37820;\r\nconst COMPRESSED_RGBA_ASTC_12x12_KHR = 37821;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 37841;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 37842;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 37843;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 37844;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 37845;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 37846;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 37847;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 37848;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 37849;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 37850;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 37851;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 37852;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 37853;\r\n\r\n/** pvr */\r\n// todo\r\n\r\n\r\n/** gl param for unCompressed image data*/\r\nconst GL_FORMAT_RGBA = 6408;\r\nconst GL_FORMAT_RGB = 6407;\r\nconst GL_FORMAT_RGBA32F = 0x8814;\r\nconst GL_FORMAT_RGB32F = 0x8815;\r\nconst GL_FORMAT_RGBA16F = 0x881A;\r\nconst GL_FORMAT_RGB16F = 0x881B;\r\nconst GL_FORMAT_SRGB8 = 0x8C41;\r\n\r\nconst GL_INTERNALFORMAT_RGBA8 = 0x8058;\r\nconst GL_INTERNALFORMAT_RGB8 = 0x8051;\r\nconst GL_INTERNALFORMAT_SRGB8_ALPHA8 = 0x8C43;\r\nconst GL_INTERNALFORMAT_R11F_G11F_B10F = 0x8C3A;\r\n\r\n// gl data type\r\nconst GL_DATATYPE_BYTE = 0x1400;\r\nconst GL_DATATYPE_UNSIGNED_BYTE = 0x1401;\r\nconst GL_DATATYPE_SHORT = 0x1402;\r\nconst GL_DATATYPE_UNSIGNED_SHORT = 0x1403;\r\nconst GL_DATATYPE_INT = 0x1404;\r\nconst GL_DATATYPE_UNSIGNED_INT = 0x1405;\r\nconst GL_DATATYPE_FLOAT = 0x1406;\r\nconst GL_DATATYPE_HALF_FLOAT = 0x140b;\r\n\r\n/**\r\n * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\r\n * https://www.khronos.org/registry/KTX/specs/2.0/ktxspec_v2.html\r\n */\r\nexport class KTXTextureInfo {\r\n\r\n    static getLayaFormat(glFormat: number, glInternalFormat: number, glType: number, glTypeSize: number): { format: TextureFormat, sRGB: boolean } {\r\n\r\n        if (glFormat == 0) {\r\n            switch (glInternalFormat) {\r\n                /** etc1 */\r\n                case COMPRESSED_RGB_ETC1_WEBGL:\r\n                    return { format: TextureFormat.ETC1RGB, sRGB: false };\r\n                /** etc2 */\r\n                // todo etc2 其他格式\r\n                case COMPRESSED_RGBA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2RGBA, sRGB: false };\r\n                case COMPRESSED_RGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2RGB, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2SRGB_Alpha8, sRGB: true };\r\n                case COMPRESSED_SRGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2SRGB, sRGB: true };\r\n\r\n                /** astc */\r\n                // todo astc 其他格式\r\n                case COMPRESSED_RGBA_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12SRGB, sRGB: true };\r\n                default:\r\n                    throw \"KTX: UnSupported Compressed format.\";\r\n            }\r\n        }\r\n        else {\r\n            if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_RGBA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_SRGB8_ALPHA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32A32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16A16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_SRGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_INTERNALFORMAT_RGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: false };\r\n            }\r\n            else {\r\n                throw \"ktx: Unsupported UnCompressed image data.\";\r\n            }\r\n        }\r\n    }\r\n\r\n    static getKTXTextureInfo(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n\r\n        let FileIdentifier = new Uint8Array(source, 0, 12);\r\n\r\n        // ktx2\r\n        if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x32 && FileIdentifier[6] === 0x30 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            throw \"ktx2 !\"\r\n        }\r\n        // ktx1\r\n        else if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x31 && FileIdentifier[6] === 0x31 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            return KTXTextureInfo.createKTX1Info(source);\r\n        }\r\n        else {\r\n            throw \"ktx data wrong, not ktx1 or ktx2 buffer!\";\r\n        }\r\n    }\r\n\r\n    static createKTX1Info(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n        let dataSize = Uint32Array.BYTES_PER_ELEMENT;\r\n\r\n        let headerDataView = new DataView(source, IdentifierByteSize, dataSize * HeaderSize);\r\n\r\n        let endianness = headerDataView.getUint32(0, true);\r\n        let littleEndian = endianness == 0x04030201;\r\n\r\n        // header\r\n        let glType = headerDataView.getUint32(1 * dataSize, littleEndian);\r\n        let glTypeSize = headerDataView.getUint32(2 * dataSize, littleEndian);\r\n        let glFormat = headerDataView.getUint32(3 * dataSize, littleEndian);\r\n        let glInternalFormat = headerDataView.getUint32(4 * dataSize, littleEndian);\r\n        let glBaseInternalFormat = headerDataView.getUint32(5 * dataSize, littleEndian);\r\n        let pixelWidth = headerDataView.getUint32(6 * dataSize, littleEndian);\r\n        let pixelHeight = headerDataView.getUint32(7 * dataSize, littleEndian);\r\n        let pixelDepth = headerDataView.getUint32(8 * dataSize, littleEndian);\r\n        let numberOfArrayElements = headerDataView.getUint32(9 * dataSize, littleEndian);\r\n        let numberOfFaces = headerDataView.getUint32(10 * dataSize, littleEndian);\r\n        let numberOfMipmapLevels = headerDataView.getUint32(11 * dataSize, littleEndian);\r\n        let bytesOfKeyValueData = headerDataView.getUint32(12 * dataSize, littleEndian);\r\n        let compressed = glType == 0;\r\n\r\n        let formatInfo = KTXTextureInfo.getLayaFormat(glFormat, glInternalFormat, glType, glTypeSize);\r\n        let layaFormat = formatInfo.format;\r\n        let sRGBData = formatInfo.sRGB;\r\n\r\n        // todo  3d texture\r\n        let layaDemision = TextureDimension.Tex2D;\r\n        if (numberOfFaces > 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.CubeArray;\r\n        }\r\n        else if (numberOfFaces > 1 && numberOfArrayElements <= 1) {\r\n            layaDemision = TextureDimension.Cube;\r\n        }\r\n        else if (numberOfFaces <= 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.Texture2DArray;\r\n        }\r\n\r\n        let headerOffset = IdentifierByteSize + HeaderSize * 4;\r\n\r\n        return new KTXTextureInfo(source, glFormat == 0, sRGBData, layaDemision, pixelWidth, pixelHeight, layaFormat, numberOfMipmapLevels || 1, bytesOfKeyValueData, headerOffset);\r\n\r\n    }\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public compress: boolean, public sRGB: boolean, public dimension: TextureDimension, public width: number, public height: number, public format: TextureFormat, public mipmapCount: number, public bytesOfKeyValueData: number, public headerOffset: number) {\r\n\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Byte } from \"../utils/Byte\";\r\nimport { HalfFloatUtils } from \"../utils/HalfFloatUtils\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nexport interface TexturePropertyParams {\r\n    wrapModeU?: number,\r\n    wrapModeV?: number,\r\n    filterMode?: FilterMode,\r\n    anisoLevel?: number,\r\n    premultiplyAlpha?: boolean,\r\n    hdrEncodeFormat?: HDREncodeFormat,\r\n}\r\n\r\nexport type TextureConstructParams = ConstructorParameters<typeof Texture2D>;\r\n\r\n/**\r\n * <code>Texture2D</code> 类用于生成2D纹理。\r\n */\r\nexport class Texture2D extends BaseTexture {\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D: string = \"TEXTURE2D\";\r\n\r\n    /**纯灰色纹理。*/\r\n    static grayTexture: Texture2D = null;\r\n    /**纯白色纹理。*/\r\n    static whiteTexture: Texture2D = null;\r\n    /**纯黑色纹理。*/\r\n    static blackTexture: Texture2D = null;\r\n    /**默认法线纹理 */\r\n    static normalTexture: Texture2D = null;\r\n    /**错误纹理 */\r\n    static errorTexture: Texture2D = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        var pixels: Uint8Array = new Uint8Array(4);\r\n        pixels[0] = 128;\r\n        pixels[1] = 128;\r\n        pixels[2] = 128;\r\n        pixels[3] = 255;\r\n        Texture2D.grayTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.grayTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.grayTexture.name = \"Default_Gray\";\r\n        pixels[0] = 255;\r\n        pixels[1] = 255;\r\n        pixels[2] = 255;\r\n        pixels[3] = 255;\r\n        Texture2D.whiteTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.whiteTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.whiteTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.whiteTexture.name = \"Default_White\";\r\n        pixels[0] = 0;\r\n        pixels[1] = 0;\r\n        pixels[2] = 0;\r\n        pixels[3] = 255;\r\n        Texture2D.blackTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.blackTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.blackTexture.name = \"Default_Black\";\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n            let floatPixle = new Uint16Array(4);\r\n            floatPixle[0] = 14336;\r\n            floatPixle[1] = 14336;\r\n            floatPixle[2] = 15360;\r\n            floatPixle[3] = 15360;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R16G16B16A16, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(floatPixle, false, false);\r\n        }\r\n        else {\r\n            pixels[0] = 128;\r\n            pixels[1] = 128;\r\n            pixels[2] = 255;\r\n            pixels[3] = 255;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(pixels, false, false);\r\n        }\r\n\r\n        Texture2D.normalTexture.lock = true;\r\n        Texture2D.normalTexture.name = \"Default_Normal\";\r\n        Texture2D.errorTexture = Texture2D.whiteTexture;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _SimpleAnimatorTextureParse(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        var byte: Byte = new Byte(data);\r\n        var version: String = byte.readUTFString();\r\n        var texture: Texture2D;\r\n        var pixelDataArrays: Float32Array | Uint16Array;\r\n        var usePixelData: Float32Array | Uint16Array;\r\n        switch (version) {\r\n            case \"LAYAANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Float32Array(textureWidth * textureWidth * 4);\r\n                usePixelData = new Float32Array(byte.readArrayBuffer(pixelDataLength * 4));\r\n                pixelDataArrays.set(usePixelData, 0);\r\n                var texture: Texture2D = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                texture.setPixelsData(pixelDataArrays, false, false);\r\n                texture.filterMode = FilterMode.Point;\r\n                break;\r\n            case \"LAYACOMPRESSANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Uint16Array(byte.readArrayBuffer(pixelDataLength * 2));\r\n                if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n                    console.log(\"The platform does not support 16-bit floating-point textures\");\r\n                    if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32))\r\n                        console.error(\"The platform does not support 32-bit floating-point textures\");\r\n                    usePixelData = new Float32Array(textureWidth * textureWidth * 4);\r\n                    for (var i = 0, n = pixelDataArrays.length; i < n; i++) {\r\n                        usePixelData[i] = HalfFloatUtils.convertToNumber(pixelDataArrays[i]);\r\n                    }\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n\r\n                } else {\r\n                    usePixelData = new Uint16Array(textureWidth * textureWidth * 4);\r\n                    usePixelData.set(pixelDataArrays, 0);\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R16G16B16A16, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n                }\r\n                break;\r\n            default:\r\n                throw \"Laya3D:unknow version.\";\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param imageSource \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseImage(imageSource: any, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n\r\n        let format = constructParams ? constructParams[2] : TextureFormat.R8G8B8A8;\r\n        let mipmap = constructParams ? constructParams[3] : true;\r\n        let canread = constructParams ? constructParams[4] : false;\r\n        let srgb = constructParams ? constructParams[5] : false;\r\n        let pma = propertyParams ? propertyParams.premultiplyAlpha : false;\r\n        // todo  srgb\r\n        let texture = new Texture2D(imageSource.width, imageSource.height, format, mipmap, canread, srgb, pma);\r\n\r\n        if (propertyParams) {\r\n            texture.setImageData(imageSource, pma, false);\r\n            texture.setProperties(propertyParams);\r\n        }\r\n        else\r\n            texture.setImageData(imageSource, false, false);\r\n\r\n        if (canread) {\r\n            if (LayaEnv.isConch && imageSource._nativeObj) {\r\n                texture._pixels = new Uint8Array(imageSource._nativeObj.getImageData(0, 0, imageSource.width, imageSource.height));\r\n            } else {\r\n                ILaya.Browser.canvas.size(imageSource.width, imageSource.height);\r\n                ILaya.Browser.canvas.clear();\r\n                ILaya.Browser.context.drawImage(imageSource, 0, 0, imageSource.width, imageSource.height);\r\n                texture._pixels = new Uint8Array(ILaya.Browser.context.getImageData(0, 0, imageSource.width, imageSource.height).data.buffer);\r\n            }\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseDDS(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n\r\n        let ddsInfo = DDSTextureInfo.getDDSTextureInfo(data);\r\n\r\n        let texture = new Texture2D(ddsInfo.width, ddsInfo.height, ddsInfo.format, ddsInfo.mipmapCount > 1, false, false);\r\n\r\n        texture.setDDSData(ddsInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseKTX(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n\r\n        let texture = new Texture2D(ktxInfo.width, ktxInfo.height, ktxInfo.format, ktxInfo.mipmapCount > 1, false, ktxInfo.sRGB);\r\n\r\n        texture.setKTXData(ktxInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     */\r\n    static _parsePVR(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n        throw \"pvr !\";\r\n    }\r\n\r\n    /**\r\n     * 加载纹理\r\n     * @param url 路径\r\n     * @param complete 处理时间\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, ILaya.Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**@internal */\r\n    _canRead: boolean = false;\r\n    /**@internal */\r\n    _pixels: Uint8Array;\r\n\r\n    /**\r\n     * 实例化2D纹理\r\n     * @param width \r\n     * @param height \r\n     * @param format \r\n     * @param mipmap \r\n     * @param canRead \r\n     * @param sRGB \r\n     * @returns \r\n     */\r\n    constructor(width: number, height: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._gammaSpace = sRGB;\r\n        this._canRead = canRead;\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, width, height, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 设置Image数据\r\n     * @param source Image原始数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setImageData(source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureImageData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素数据\r\n     * @param source 像素数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素值\r\n     * @param xOffset offset X\r\n     * @param yOffset offset Y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param pixels 像素\r\n     * @param mipmapLevel mipmap等级\r\n     * @param generateMipmap 生成mipmap\r\n     * @param premultiplyAlpha 预乘\r\n     * @param invertY 翻转Y\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, width: number, height: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置dds数据\r\n     * @param ddsInfo \r\n     */\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    /**\r\n     * 设置ktx数据\r\n     * @param ktxInfo \r\n     */\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    /**\r\n     * 设置HDR数据\r\n     * @param hdrInfo \r\n     */\r\n    setHDRData(hdrInfo: HDRTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureHDRData(texture, hdrInfo);\r\n    }\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * 获得像素\r\n     * @returns \r\n     */\r\n    getPixels() {\r\n        if (this._canRead && this._pixels) {\r\n            return this._pixels;\r\n        }\r\n        else {\r\n            throw new Error(\"Texture2D: must set texture canRead is true.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param propertyParams \r\n     */\r\n    private setProperties(propertyParams: TexturePropertyParams) {\r\n        if (propertyParams) {\r\n            if (propertyParams.wrapModeU != null) this.wrapModeU = propertyParams.wrapModeU;\r\n            if (propertyParams.wrapModeV != null) this.wrapModeV = propertyParams.wrapModeV;\r\n            if (propertyParams.filterMode != null) this.filterMode = propertyParams.filterMode;\r\n            if (propertyParams.anisoLevel != null) this.anisoLevel = propertyParams.anisoLevel;\r\n        }\r\n    }\r\n}","import { Resource } from \"../../resource/Resource\"\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class BaseShader extends Resource {\r\n    static activeShader: BaseShader|null;\t\t\t//等于bindShader或者null\r\n    static bindShader: BaseShader;\t\t\t//当前绑定的shader\r\n\r\n    constructor() {\r\n        super();\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\r\n\r\nexport class RenderState2D {\r\n    static _MAXSIZE: number = 99999999;\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static EMPTYMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static TEMPMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static worldMatrix4: number[] = RenderState2D.TEMPMAT4_ARRAY;\r\n\r\n    static worldMatrix: Matrix = new Matrix();\r\n    static matWVP: any = null;// :Matrix4x4 = Matrix4x4.DEFAULT;\t\t// 3d矩阵\r\n    static worldAlpha: number = 1.0;\r\n\r\n    static worldScissorTest: boolean = false;\r\n\r\n    //public static var worldClipRect:Rectangle = new Rectangle(0, 0, _MAXSIZE, _MAXSIZE);\r\n    static worldShaderDefines: ShaderDefines2D;\r\n    static worldFilters: any[];\r\n\r\n    static width: number = 0;\r\n    static height: number = 0;\r\n\r\n    static InvertY:boolean = false;\r\n    /* 不知道 有什么用，删掉先\r\n    public static function getMatrArray():Array {\r\n        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    }\r\n    */\r\n    //TODO:coverage\r\n    static mat2MatArray(mat: Matrix, matArray: any[]): any[] {\r\n        var m: Matrix = mat;\r\n        var m4: any[] = matArray;\r\n        m4[0] = m.a;\r\n        m4[1] = m.b;\r\n        m4[2] = RenderState2D.EMPTYMAT4_ARRAY[2];\r\n        m4[3] = RenderState2D.EMPTYMAT4_ARRAY[3];\r\n        m4[4] = m.c;\r\n        m4[5] = m.d;\r\n        m4[6] = RenderState2D.EMPTYMAT4_ARRAY[6];\r\n        m4[7] = RenderState2D.EMPTYMAT4_ARRAY[7];\r\n        m4[8] = RenderState2D.EMPTYMAT4_ARRAY[8];\r\n        m4[9] = RenderState2D.EMPTYMAT4_ARRAY[9];\r\n        m4[10] = RenderState2D.EMPTYMAT4_ARRAY[10];\r\n        m4[11] = RenderState2D.EMPTYMAT4_ARRAY[11];\r\n        m4[12] = m.tx;\r\n        m4[13] = m.ty;\r\n        m4[14] = RenderState2D.EMPTYMAT4_ARRAY[14];\r\n        m4[15] = RenderState2D.EMPTYMAT4_ARRAY[15];\r\n        return matArray;\r\n    }\r\n\r\n    static restoreTempArray(): void {\r\n        RenderState2D.TEMPMAT4_ARRAY[0] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[1] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[4] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[5] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[12] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[13] = 0;\r\n    }\r\n\r\n    static clear(): void {\r\n        RenderState2D.worldScissorTest = false;\r\n        //worldFilters = null;\r\n        RenderState2D.worldAlpha = 1;\r\n        //worldClipRect.x = worldClipRect.y = 0;\r\n        //worldClipRect.width = width;\r\n        //worldClipRect.height = height;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { TextureFormat } from \"./TextureFormat\";\r\n\r\nexport enum RenderTargetFormat {\r\n \r\n    None = -1,\r\n    /**使用RGB的纹理，不可设置SRGB参数 */\r\n    R8G8B8 = TextureFormat.R8G8B8,\r\n    R8G8B8A8 = TextureFormat.R8G8B8A8,\r\n    R16G16B16A16 = TextureFormat.R16G16B16A16,\r\n    R32G32B32 = TextureFormat.R32G32B32,\r\n    R32G32B32A32 = TextureFormat.R32G32B32A32,\r\n    R16G16B16 = TextureFormat.R16G16B16,\r\n    \r\n    DEPTH_16 = 35,\r\n    STENCIL_8 = 36,\r\n    DEPTHSTENCIL_24_8 = 37,\r\n    DEPTH_32 = 38,\r\n    DEPTHSTENCIL_24_Plus = 39\r\n}","export enum RenderClearFlag{\r\n    Nothing = 0,\r\n    Color = 1,\r\n    Depth = 2,\r\n    Stencil = 4,\r\n}","export enum BlendFactor {\r\n    /** (0, 0, 0, 0)*/\r\n    Zero,\r\n    /** (1, 1, 1, 1)*/\r\n    One,\r\n    /** (Rs, Gs, Bs, As) */\r\n    SourceColor,\r\n    /** (1 - Rs, 1 - Gs, 1 - Bs, 1 - As)*/\r\n    OneMinusSourceColor,\r\n    /** (Rd, Gd, Bd, Ad)*/\r\n    DestinationColor,\r\n    /** (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad)*/\r\n    OneMinusDestinationColor,\r\n    /** (As, As, As, As)*/\r\n    SourceAlpha,\r\n    /** (1 - As, 1 - As, 1 - As, 1 - As)*/\r\n    OneMinusSourceAlpha,\r\n    /** (Ad, Ad, Ad, Ad)*/\r\n    DestinationAlpha,\r\n    /** (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad)*/\r\n    OneMinusDestinationAlpha,\r\n    /** (min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad), 10)*/\r\n    SourceAlphaSaturate,\r\n    /** (Rc, Gc, Bc, Ac)*/\r\n    BlendColor,\r\n    /** (1 - Rc, 1 - Gc, 1 - Bc, 1 - Ac)*/\r\n    OneMinusBlendColor\r\n  }","import { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * <code>Color</code> 类用于创建颜色实例。\r\n */\r\nexport class Color implements IClone {\r\n    /**\r\n     * 红色\r\n     */\r\n    static RED: Color = new Color(1, 0, 0, 1);\r\n    /**\r\n     * 绿色\r\n     */\r\n    static GREEN: Color = new Color(0, 1, 0, 1);\r\n    /**\r\n     * 蓝色\r\n     */\r\n    static BLUE: Color = new Color(0, 0, 1, 1);\r\n    /**\r\n     * 蓝绿色\r\n     */\r\n    static CYAN: Color = new Color(0, 1, 1, 1);\r\n    /**\r\n     * 黄色\r\n     */\r\n    static YELLOW: Color = new Color(1, 0.92, 0.016, 1);\r\n    /**\r\n     * 品红色\r\n     */\r\n    static MAGENTA: Color = new Color(1, 0, 1, 1);\r\n    /**\r\n     * 灰色\r\n     */\r\n    static GRAY: Color = new Color(0.5, 0.5, 0.5, 1);\r\n    /**\r\n     * 白色\r\n     */\r\n    static WHITE: Color = new Color(1, 1, 1, 1);\r\n    /**\r\n     * 黑色\r\n     */\r\n    static BLACK: Color = new Color(0, 0, 0, 1);\r\n    /**\r\n     * 全透明\r\n     */\r\n    static CLEAR: Color = new Color(0, 0, 0, 0);\r\n\r\n    /**\r\n     * Gamma空间值转换到线性空间。\r\n     * @param value gamma空间值。\r\n     */\r\n    static gammaToLinearSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  cs / 12.92,                 cs <= 0.04045 }\r\n        // {  ((cs + 0.055)/1.055)^2.4,   cs >  0.04045 }\r\n        if (value <= 0.04045)\r\n            return value / 12.92;\r\n        else if (value < 1.0)\r\n            return Math.pow((value + 0.055) / 1.055, 2.4);\r\n        else\r\n            return Math.pow(value, 2.4);\r\n    }\r\n\r\n    /**\r\n     * 线性空间值转换到Gamma空间。\r\n     * @param value 线性空间值。\r\n     */\r\n    static linearToGammaSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  0.0,                          0         <= cl\r\n        // {  12.92 * c,                    0         <  cl < 0.0031308\r\n        // {  1.055 * cl^0.41666 - 0.055,   0.0031308 <= cl < 1\r\n        // {  1.0,                                       cl >= 1  <- This has been adjusted since we want to maintain HDR colors\r\n        if (value <= 0.0)\r\n            return 0.0;\r\n        else if (value <= 0.0031308)\r\n            return 12.92 * value;\r\n        else if (value <= 1.0)\r\n            return 1.055 * Math.pow(value, 0.41666) - 0.055;\r\n        else\r\n            return Math.pow(value, 0.41666);\r\n    }\r\n\r\n\r\n    /**red分量*/\r\n    r: number;\r\n\r\n    /**green分量*/\r\n    g: number;\r\n\r\n    /**blue分量*/\r\n    b: number;\r\n\r\n    /**alpha分量*/\r\n    a: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Color</code> 实例。\r\n     * @param\tr  颜色的red分量。\r\n     * @param\tg  颜色的green分量。\r\n     * @param\tb  颜色的blue分量。\r\n     * @param\ta  颜色的alpha分量。\r\n     */\r\n    constructor(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    equal(c: Color): boolean {\r\n        if (!c) return false;\r\n        const toFIxed = (a: number, b: number) => {\r\n            var delta = 1e-5;\r\n            return -delta < a - b && a - b < delta;\r\n        }\r\n        return toFIxed(c.r, this.r) && toFIxed(c.g, this.g) && toFIxed(c.b, this.b) && toFIxed(c.a, this.a);\r\n    }\r\n\r\n    /**\r\n     * Gamma空间转换到线性空间。\r\n     * @param\tlinear 线性空间颜色。\r\n     */\r\n    toLinear(out: Color): void {\r\n        out.r = Color.gammaToLinearSpace(this.r);\r\n        out.g = Color.gammaToLinearSpace(this.g);\r\n        out.b = Color.gammaToLinearSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * 线性空间转换到Gamma空间。\r\n     * @param\tgamma Gamma空间颜色。\r\n     */\r\n    toGamma(out: Color): void {\r\n        out.r = Color.linearToGammaSpace(this.r);\r\n        out.g = Color.linearToGammaSpace(this.g);\r\n        out.b = Color.linearToGammaSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destColor: Color = (<Color>destObject);\r\n        destColor.r = this.r;\r\n        destColor.g = this.g;\r\n        destColor.b = this.b;\r\n        destColor.a = this.a;\r\n    }\r\n\r\n    scale(value: number): Color {\r\n        this.r = this.r * value;\r\n        this.g = this.g * value;\r\n        this.b = this.b * value;\r\n        return this;\r\n    }\r\n\r\n    setValue(r: number, g: number, b: number, a: number) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.r = array[offset + 0];\r\n        this.g = array[offset + 1];\r\n        this.b = array[offset + 2];\r\n        this.a = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.r, this.g, this.b, this.a];\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Color = new Color();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n}\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>RenderTexture</code> 类用于创建渲染目标。\r\n */\r\nexport class NativeRenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    /** @private */\r\n    private static _currentActive: NativeRenderTexture2D;\r\n    private static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    private _lastRT: NativeRenderTexture2D;\r\n    private _lastWidth: number;\r\n    private _lastHeight: number;\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\r\n\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * 获取当前激活的Rendertexture\r\n     */\r\n    static get currentActive(): NativeRenderTexture2D {\r\n        return NativeRenderTexture2D._currentActive;\r\n    }\r\n\r\n    /** @private */\r\n    private _depthStencilFormat: number;\r\n\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n\r\n    /**\r\n     * 获取深度格式。\r\n     *@return 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 获取offsetX。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /***\r\n     * 获取offsetY\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n\r\n    depthStencilTexture: BaseTexture;\r\n\r\n    _renderTarget: InternalRenderTarget;\r\n    _isCameraTarget: boolean;\r\n\r\n    private _nativeObj: any;\r\n    /**\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     * 创建一个 <code>RenderTexture</code> 实例。\r\n     */\r\n    constructor(width: number, height: number, format: number = RenderTargetFormat.R8G8B8, depthStencilFormat: number = RenderTargetFormat.DEPTH_16, create: boolean = true ) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0 && create) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    get isCube(): boolean {\r\n        return this._nativeObj.isCube;\r\n    }\r\n\r\n    get samples(): number {\r\n        return this._nativeObj.samples;\r\n    }\r\n\r\n    get generateMipmap(): boolean {\r\n        return this._nativeObj.generateMipmap;\r\n    }\r\n\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _create() {\r\n        // todo  mipmap\r\n        this._nativeObj = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, this.width, this.height, this._colorFormat, this.depthStencilFormat);\r\n        this._texture = this._nativeObj._renderTarget._textures[0];\r\n    }\r\n\r\n\r\n    /**\r\n     * 保存当前的RT信息。\r\n     */\r\n    static pushRT(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * 恢复上次保存的RT信息\r\n     */\r\n    static popRT(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * 开始绑定。\r\n     */\r\n    start(): void {\r\n        this._nativeObj.start();\r\n    }\r\n\r\n    /**\r\n     * 结束绑定。\r\n     */\r\n    end(): void {\r\n        this._nativeObj.end();\r\n    }\r\n\r\n    /**\r\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\r\n     */\r\n    restore(): void {\r\n        this._nativeObj.restore();\r\n    }\r\n\r\n\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n        this._nativeObj.clear(r, g, b, a);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获得像素数据。\r\n     * @param x X像素坐标。\r\n     * @param y Y像素坐标。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @return 像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return this._nativeObj.getData(x, y, width, height);\r\n    }\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        this._nativeObj._disposeResource();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\"\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\"\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n/**\r\n * <code>RenderTexture</code> 类用于创建渲染目标。\r\n */\r\nexport class RenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    /** @private */\r\n    private static _currentActive: RenderTexture2D;\r\n    static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    static _clearLinearColor: Color = new Color();\r\n    private _lastRT: RenderTexture2D;\r\n    private _lastWidth: number;\r\n    private _lastHeight: number;\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\r\n    /**\r\n     * 默认uv\r\n     */\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    /**\r\n     * 默认翻转uv\r\n     */\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * 获取当前激活的Rendertexture\r\n     */\r\n    static get currentActive(): RenderTexture2D {\r\n        return RenderTexture2D._currentActive;\r\n    }\r\n\r\n    /** @private */\r\n    private _depthStencilFormat: number;\r\n    /** @private */\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n    /**@internal */\r\n    _invertY: boolean = false;\r\n    /**\r\n     * 获取深度格式。\r\n     *@return 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * RenderTexture2D是否准备好\r\n     * @returns \r\n     */\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 获取offsetX。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /***\r\n     * 获取offsetY\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n    /**深度模板纹理 */\r\n    depthStencilTexture: BaseTexture;\r\n    \r\n    _renderTarget: InternalRenderTarget;\r\n    /**是否是CameraTarget */\r\n    _isCameraTarget: boolean;\r\n\r\n\r\n    /**\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     * 创建一个 <code>RenderTexture</code> 实例。\r\n     */\r\n    constructor(width: number, height: number, format: RenderTargetFormat = RenderTargetFormat.R8G8B8, depthStencilFormat: RenderTargetFormat = RenderTargetFormat.None) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**是否是RTCube */\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    /**采样 */\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    /**\r\n     * 是否生成Mipmap\r\n     */\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _create() {\r\n        // todo  mipmap\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, this._colorFormat, this.depthStencilFormat, false, false, 1);\r\n        this._texture = this._renderTarget._textures[0];\r\n        this._texture.gammaCorrection = 2.2;\r\n    }\r\n\r\n\r\n    /**\r\n     * 保存当前的RT信息。\r\n     */\r\n    static pushRT(): void {\r\n        RenderTexture2D.rtStack.push({ rt: RenderTexture2D._currentActive, w: RenderState2D.width, h: RenderState2D.height });\r\n    }\r\n    /**\r\n     * 恢复上次保存的RT信息\r\n     */\r\n    static popRT(): void {\r\n        var top: any = RenderTexture2D.rtStack.pop();\r\n        if (top) {\r\n            if (RenderTexture2D._currentActive != top.rt) {\r\n                if (top.rt) {\r\n                    LayaGL.textureContext.bindRenderTarget(top.rt._renderTarget);\r\n                    RenderState2D.InvertY = top.rt._invertY;\r\n                } else {\r\n                    LayaGL.textureContext.bindoutScreenTarget();\r\n                    RenderState2D.InvertY = false;\r\n                }\r\n                RenderTexture2D._currentActive = top.rt;\r\n            }\r\n            LayaGL.renderEngine.viewport(0, 0, top.w, top.h);\r\n            LayaGL.renderEngine.scissor(0, 0, top.w, top.h);\r\n            RenderState2D.width = top.w;\r\n            RenderState2D.height = top.h;\r\n        }\r\n    }\r\n    /**\r\n     * 开始绑定。\r\n     */\r\n    start(): void {\r\n        //(memorySize == 0) && recreateResource();\r\n        LayaGL.textureContext.bindRenderTarget(this._renderTarget);\r\n        this._lastRT = RenderTexture2D._currentActive;\r\n        RenderTexture2D._currentActive = this;\r\n        RenderState2D.InvertY = this._invertY;\r\n        //var gl:LayaGL = LayaGL.instance;//TODO:这段代码影响2D、3D混合\r\n        ////(memorySize == 0) && recreateResource();\r\n        //LayaGL.instance.bindFramebuffer(WebGLContext.FRAMEBUFFER, _frameBuffer);\r\n        //_lastRT = _currentActive;\r\n        //_currentActive = this;\r\n        ////_readyed = false;  \r\n        //_readyed = true;\t//这个没什么用。还会影响流程，比如我有时候并不调用end。所以直接改成true\r\n        //\r\n        ////if (_type == TYPE2D) {\r\n        LayaGL.renderEngine.viewport(0, 0, this._width, this._height);//外部设置\r\n        LayaGL.renderEngine.scissor(0, 0, this._width, this._height);//外部设置\r\n        this._lastWidth = RenderState2D.width;\r\n        this._lastHeight = RenderState2D.height;\r\n        RenderState2D.width = this._width;\r\n        RenderState2D.height = this._height;\r\n        BaseShader.activeShader = null;\r\n        ////}\r\n    }\r\n\r\n    /**\r\n     * 结束绑定。\r\n     */\r\n    end(): void {\r\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n        RenderTexture2D._currentActive = null;\r\n        RenderState2D.InvertY = false;\r\n    }\r\n\r\n    /**\r\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\r\n     */\r\n    restore(): void {\r\n        if (this._lastRT != RenderTexture2D._currentActive) {\r\n\r\n            if (this._lastRT) {\r\n                LayaGL.textureContext.bindRenderTarget(this._lastRT._renderTarget);\r\n                RenderState2D.InvertY = this._lastRT._invertY;\r\n            }\r\n            else {\r\n                LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n                RenderState2D.InvertY = false;\r\n            }\r\n\r\n            RenderTexture2D._currentActive = this._lastRT;\r\n        }\r\n        // this._readyed = true;\r\n        //if (_type == TYPE2D)//待调整\r\n        //{\r\n        LayaGL.renderEngine.viewport(0, 0, this._lastWidth, this._lastHeight);\r\n        LayaGL.renderEngine.scissor(0, 0, this._lastWidth, this._lastHeight);\r\n        RenderState2D.width = this._lastWidth;\r\n        RenderState2D.height = this._lastHeight;\r\n        BaseShader.activeShader = null;\r\n        //} else \r\n        //\tgl.viewport(0, 0, Laya.stage.width, Laya.stage.height);\r\n    }\r\n\r\n    /**\r\n     * 清理RT\r\n     * @param r \r\n     * @param g \r\n     * @param b \r\n     * @param a \r\n     */\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n\r\n        RenderTexture2D._clearColor.r = r;\r\n        RenderTexture2D._clearColor.g = g;\r\n        RenderTexture2D._clearColor.b = b;\r\n        RenderTexture2D._clearColor.a = a;\r\n        //RenderTexture2D._clearColor.toLinear(RenderTexture2D._clearLinearColor);\r\n        //@ts-ignore\r\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, RenderTexture2D._clearColor, 1);\r\n    }\r\n\r\n    /**\r\n     * 获得像素数据。\r\n     * @param x X像素坐标。\r\n     * @param y Y像素坐标。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @return 像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return LayaGL.textureContext.getRenderTextureData(this._renderTarget, x, y, width, height);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        //width 和height为0的时候不会创建资源\r\n        this._renderTarget && this._renderTarget.dispose();\r\n    }\r\n\r\n}\r\n\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n    //@ts-ignore\r\n    RenderTexture2D = NativeRenderTexture2D;\r\n}\r\n\r\n\r\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\n\r\n/**\r\n * WebGLRTMgr 管理WebGLRenderTarget的创建和回收\r\n * TODO 需求不大，管理成本高。先去掉。\r\n */\r\n\r\nexport class WebGLRTMgr {\r\n\r\n\tprivate static dict: any = {};\t\t//key=h*10000+w\r\n\t/**\r\n\t * 获得一个renderTarget\r\n\t * 暂时先按照严格大小判断。\r\n\t * \r\n\t * @param\tw\r\n\t * @param\th\r\n\t * @return\r\n\t */\r\n\tstatic getRT(w: number, h: number): RenderTexture2D {\r\n\t\tw = w | 0;\r\n\t\th = h | 0;\r\n\t\tif (w >= 10000) {\r\n\t\t\tconsole.error('getRT error! w too big');\r\n\t\t}\r\n\t\tvar ret: RenderTexture2D;\r\n\t\t/*\r\n\t\tvar key: number = h * 10000 + w;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[key];\r\n\t\tif (sw) {\r\n\t\t\tif (sw.length > 0) {\r\n\t\t\t\tret = sw.pop();\r\n\t\t\t\tret._mgrKey = key;\t//只有不再mgr中的才有key\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\tret = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n\t\t//ret._mgrKey = key;\r\n\t\treturn ret;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 回收一个renderTarget\r\n\t * @param\trt\r\n\t */\r\n\tstatic releaseRT(rt: RenderTexture2D): void {\r\n\t\trt.destroy();\r\n\t\t//rt._disposeResource();// 直接删除贴图。否则还要管理占用过多的时候的清理。  修改：去掉了，直接destroy，否则统计会以为没有释放掉。\r\n\t\treturn;\r\n\t\t/*\r\n\t\t//如果_mgrKey<=0表示已经加进来了。\r\n\t\tif (rt._mgrKey <= 0)\r\n\t\t\treturn;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[rt._mgrKey];\r\n\t\t!sw && (sw = [], WebGLRTMgr.dict[rt._mgrKey] = sw);\r\n\t\trt._mgrKey = 0;\r\n\t\tsw.push(rt);\r\n\t\t*/\r\n\t}\r\n}\r\n\r\n","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { StencilOperation } from \"../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { WebGLEngine } from \"./RenderEngine/WebGLEngine/WebGLEngine\";\r\n/**\r\n * @private\r\n */\r\nexport class RenderStateContext {\r\n    /**@internal */\r\n    static mainContext: any;\r\n    /**@internal */\r\n    static DepthTestCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static DepthMaskCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static DepthFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilTestCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilMaskCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilOpCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendEquationCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendEquationSeparateCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendFuncSeperateCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static CullFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static FrontFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilFuncArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blendEquationSeparateArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blenfunArray = new Array(2);\r\n    /**@internal */\r\n    static blendFuncSeperateArray = new Array(4);\r\n    /**@internal */\r\n    static stencilOpArray = new Array<number>(3);\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        RenderStateContext.DepthTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.DepthMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.DepthFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.stencilOpCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendEquationCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendEquationSeparateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendFuncSeperateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.CullFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.FrontFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthTest(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthMask(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthFunc(value: CompareFunction): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthFunc(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilTest(value);\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param gl \r\n     * @param value \r\n     */\r\n    static setStencilMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilMask(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilFunc(fun: CompareFunction, ref: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilFunc(fun, ref);\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    static setstencilOp(fail: StencilOperation, zfail: StencilOperation, zpass: StencilOperation) {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setstencilOp(fail, zfail, zpass);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlend(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlend(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquation(blendEquation: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquation(blendEquation);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquationSeparate(blendEquationRGB: BlendEquationSeparate, blendEquationAlpha: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFunc(sFactor: BlendFactor, dFactor: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFunc(sFactor, dFactor);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFuncSeperate(srcRGB: BlendFactor, dstRGB: BlendFactor, srcAlpha: BlendFactor, dstAlpha: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setCullFace(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setCullFace(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setFrontFace(value: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setFrontFace(value);\r\n    }\r\n}\r\n\r\n\r\n","import { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\n\r\n//export type BlendFunc = (gl:WebGLRenderingContext)=>void\r\nexport class BlendMode {\r\n    static activeBlendFunction: Function = null;\r\n    /** @internal 这个不直接暴露给开发者*/\r\n    static NAMES = [\r\n        \"normal\",\r\n        \"add\",\r\n        \"multiply\",\r\n        \"screen\",\r\n        \"overlay\",\r\n        \"light\",\r\n        \"mask\",\r\n        \"destination-out\",\r\n        \"add_old\"];\r\n\r\n    /** @internal */\r\n    static TOINT: { [key: string]: number } = {\r\n        \"normal\": 0,\r\n        \"add\": 1,\r\n        \"multiply\": 2,\r\n        \"screen\": 3,\r\n        \"overlay\": 4,\r\n        \"light\": 5,\r\n        \"mask\": 6,\r\n        \"destination-out\": 7,\r\n        \"lighter\": 1,\r\n        \"lighter_old\": 8,\r\n        \"add_old\": 8\r\n    };\r\n\r\n    static NORMAL = \"normal\";\t\t\t\t\t//0\r\n    static MASK = \"mask\";\t\t\t\t\t//6\r\n    static LIGHTER = \"lighter\";\t\t\t\t\t//1  \r\n\r\n    static fns: any[];\r\n    static targetFns: any[];\r\n    /**@internal */\r\n    static _init_(): void {\r\n        BlendMode.fns = [\r\n            BlendMode.BlendNormal,      //0\r\n            BlendMode.BlendAdd,         //1\r\n            BlendMode.BlendMultiply,    //2\r\n            BlendMode.BlendScreen,      //3\r\n            BlendMode.BlendOverlay,     //4\r\n            BlendMode.BlendLight,       //5\r\n            BlendMode.BlendMask,        //6\r\n            BlendMode.BlendDestinationOut,   //7\r\n            BlendMode.BlendAddOld,         //8\r\n            BlendMode.BlendSourceAlpha,            //9\r\n        ];\r\n\r\n        BlendMode.targetFns = [\r\n            BlendMode.BlendNormalTarget,    //0\r\n            BlendMode.BlendAddTarget,       //1\r\n            BlendMode.BlendMultiplyTarget,  //2\r\n            BlendMode.BlendScreenTarget,    //3\r\n            BlendMode.BlendOverlayTarget,   //4\r\n            BlendMode.BlendLightTarget,     //5\r\n            BlendMode.BlendMask,            //6\r\n            BlendMode.BlendDestinationOut,  //7\r\n            BlendMode.BlendAddTargetOld,    //8\r\n            BlendMode.BlendSourceAlpha             //9\r\n        ];\r\n    }\r\n\r\n    static BlendNormal(): void {\r\n        //为了避免黑边，和canvas作为贴图的黑边\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n\r\n    }\r\n\r\n    /**@internal 这个add感觉不合理，所以改成old了 */\r\n    static BlendAddOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n\r\n    static BlendAdd(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiply(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreen(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlay(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendLight(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendNormalTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    /**@internal add不应该是1+dst_α 所以改成old */\r\n    static BlendAddTargetOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n    static BlendAddTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiplyTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreenTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlayTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceColor);\r\n    }\r\n\r\n    static BlendLightTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMask(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.SourceAlpha);\r\n    }\r\n\r\n    static BlendDestinationOut(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.Zero);\r\n    }\r\n    static BlendSourceAlpha(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.SourceAlpha, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n}\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\n\r\nconst _rect1 = new Rectangle();\r\nconst _rect2 = new Rectangle();\r\n\r\n/**\r\n * <code>Texture</code> 是一个纹理处理类。\r\n */\r\nexport class Texture extends Resource {\r\n    /**@private 默认 UV 信息。*/\r\n    static readonly DEF_UV = new Float32Array([0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]);\r\n    /**@private */\r\n    static readonly NO_UV = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]);\r\n    /**@private 反转 UV 信息。*/\r\n    static readonly INV_UV = new Float32Array([0, 1, 1.0, 1, 1.0, 0.0, 0, 0.0]);\r\n\r\n    /**@private uv的范围*/\r\n    uvrect: number[] = [0, 0, 1, 1]; //startu,startv, urange,vrange\r\n    /**@private */\r\n    private _bitmap: BaseTexture;\r\n    /**@internal */\r\n    public _uv: ArrayLike<number>;\r\n    /** @private */\r\n    private _w: number = 0;\r\n    /** @private */\r\n    private _h: number = 0;\r\n\r\n    /**沿 X 轴偏移量。*/\r\n    offsetX: number = 0;\r\n    /**沿 Y 轴偏移量。*/\r\n    offsetY: number = 0;\r\n    /**原始宽度（包括被裁剪的透明区域）。*/\r\n    sourceWidth: number = 0;\r\n    /**原始高度（包括被裁剪的透明区域）。*/\r\n    sourceHeight: number = 0;\r\n    /**图片地址*/\r\n    url: string;\r\n    /** UUID */\r\n    uuid: string;\r\n    /** @private */\r\n    scaleRate: number = 1;\r\n\r\n    /**九宫格*/\r\n    _sizeGrid?: Array<number>;\r\n    /**状态数量*/\r\n    _stateNum?: number;\r\n\r\n    /**@internal */\r\n    _clipCache: Map<string, Texture>;\r\n\r\n    /**\r\n     *  根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\t就是[x,y]相对于原始小图片的位置。一般都是正的，表示裁掉了空白边的大小，如果是负的一般表示加了保护边\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): Texture {\r\n        return Texture._create(source, x, y, width, height, offsetX, offsetY, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture 对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @param\toutTexture 返回的Texture对象。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static _create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0, outTexture: Texture = null): Texture {\r\n        var btex: boolean = source instanceof Texture;\r\n        var uv = btex ? ((<Texture>source)).uv : Texture.DEF_UV;\r\n        var bitmap = btex ? ((<Texture>source)).bitmap : <Texture2D>source;\r\n\r\n        if (bitmap.width && (x + width) > bitmap.width)\r\n            width = bitmap.width - x;\r\n        if (bitmap.height && (y + height) > bitmap.height)\r\n            height = bitmap.height - y;\r\n        var tex: Texture;\r\n        if (outTexture) {\r\n            tex = outTexture;\r\n            tex.setTo(bitmap, null, sourceWidth || width, sourceHeight || height);\r\n        } else {\r\n            tex = new Texture(bitmap, null, sourceWidth || width, sourceHeight || height)\r\n        }\r\n        tex.width = width;\r\n        tex.height = height;\r\n        tex.offsetX = offsetX;\r\n        tex.offsetY = offsetY;\r\n\r\n        var dwidth: number = 1 / bitmap.width;\r\n        var dheight: number = 1 / bitmap.height;\r\n        x *= dwidth;\r\n        y *= dheight;\r\n        width *= dwidth;\r\n        height *= dheight;\r\n\r\n        var u1: number = tex.uv[0], v1: number = tex.uv[1], u2: number = tex.uv[4], v2: number = tex.uv[5];\r\n        var inAltasUVWidth: number = (u2 - u1), inAltasUVHeight: number = (v2 - v1);\r\n        var oriUV: any[] = moveUV(uv[0], uv[1], [x, y, x + width, y, x + width, y + height, x, y + height]);\r\n        tex.uv = new Float32Array([u1 + oriUV[0] * inAltasUVWidth, v1 + oriUV[1] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[2]) * inAltasUVWidth, v1 + oriUV[3] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[4]) * inAltasUVWidth, v2 - (1 - oriUV[5]) * inAltasUVHeight,\r\n        u1 + oriUV[6] * inAltasUVWidth, v2 - (1 - oriUV[7]) * inAltasUVHeight]);\r\n\r\n        var bitmapScale: number = ((<Texture>(bitmap as any))).scaleRate;\r\n        if (bitmapScale && bitmapScale != 1) {\r\n            tex.sourceWidth /= bitmapScale;\r\n            tex.sourceHeight /= bitmapScale;\r\n            tex.width /= bitmapScale;\r\n            tex.height /= bitmapScale;\r\n            tex.scaleRate = bitmapScale;\r\n            tex.offsetX /= bitmapScale;\r\n            tex.offsetY /= bitmapScale;\r\n        } else {\r\n            tex.scaleRate = 1;\r\n        }\r\n        return tex;\r\n    }\r\n\r\n    /**\r\n     * 截取Texture的一部分区域，生成新的Texture，如果两个区域没有相交，则返回null。\r\n     * @param\ttexture\t目标Texture。\r\n     * @param\tx\t\t相对于目标Texture的x位置。\r\n     * @param\ty\t\t相对于目标Texture的y位置。\r\n     * @param\twidth\t截取的宽度。\r\n     * @param\theight\t截取的高度。\r\n     * @return 返回一个新的Texture。\r\n     */\r\n    static createFromTexture(texture: Texture, x: number, y: number, width: number, height: number): Texture {\r\n        var texScaleRate: number = texture.scaleRate;\r\n        if (texScaleRate != 1) {\r\n            x *= texScaleRate;\r\n            y *= texScaleRate;\r\n            width *= texScaleRate;\r\n            height *= texScaleRate;\r\n        }\r\n        var rect: Rectangle = Rectangle.TEMP.setTo(x - texture.offsetX, y - texture.offsetY, width, height);\r\n        var result = rect.intersection(_rect1.setTo(0, 0, texture.width, texture.height), _rect2);\r\n        if (result)\r\n            return Texture.create(texture, result.x, result.y, result.width, result.height, result.x - rect.x, result.y - rect.y, width, height);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * uv\r\n     */\r\n    get uv(): ArrayLike<number> {\r\n        return this._uv;\r\n    }\r\n\r\n    set uv(value: ArrayLike<number>) {\r\n        this.uvrect[0] = Math.min(value[0], value[2], value[4], value[6]);\r\n        this.uvrect[1] = Math.min(value[1], value[3], value[5], value[7]);\r\n        this.uvrect[2] = Math.max(value[0], value[2], value[4], value[6]) - this.uvrect[0];\r\n        this.uvrect[3] = Math.max(value[1], value[3], value[5], value[7]) - this.uvrect[1];\r\n        this._uv = value;\r\n    }\r\n\r\n    /** 实际宽度。*/\r\n    get width(): number {\r\n        if (this._w)\r\n            return this._w;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._w = value;\r\n        this.sourceWidth || (this.sourceWidth = value);\r\n    }\r\n\r\n    /** 实际高度。*/\r\n    get height(): number {\r\n        if (this._h)\r\n            return this._h;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._h = value;\r\n        this.sourceHeight || (this.sourceHeight = value);\r\n    }\r\n\r\n    /**\r\n     * 获取位图。\r\n     * @return 位图。\r\n     */\r\n    get bitmap(): BaseTexture {\r\n        return this._bitmap;\r\n    }\r\n\r\n    /**\r\n     * 设置位图。\r\n     * @param 位图。\r\n     */\r\n    set bitmap(value: BaseTexture) {\r\n        if (this._bitmap == value)\r\n            return;\r\n        this._bitmap && this._bitmap._removeReference();\r\n        this._bitmap = value;\r\n        value && (value._addReference());\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Texture</code> 实例。\r\n     * @param bitmap 位图资源。\r\n     * @param uv UV 数据信息。\r\n     */\r\n    constructor(source: Texture | BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0) {\r\n        super(false);\r\n        let bitmap = (source instanceof Texture) ? source.bitmap : source;\r\n        this.setTo(bitmap, uv, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getSource(cb: () => void = null): any {\r\n        if (this._destroyed || !this._bitmap)\r\n            return null;\r\n        this.recoverBitmap(cb);\r\n        return this._bitmap.destroyed ? null : this.bitmap._getSource();\r\n    }\r\n\r\n    /**\r\n     * 设置此对象的位图资源、UV数据信息。\r\n     * @param\tbitmap 位图资源\r\n     * @param\tuv UV数据信息\r\n     */\r\n    setTo(bitmap: BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): void {\r\n        this.bitmap = bitmap;\r\n        this.sourceWidth = sourceWidth;\r\n        this.sourceHeight = sourceHeight;\r\n\r\n        if (bitmap) {\r\n            this._w = bitmap.width;\r\n            this._h = bitmap.height;\r\n            this.sourceWidth = this.sourceWidth || bitmap.width;\r\n            this.sourceHeight = this.sourceHeight || bitmap.height\r\n        }\r\n        this.uv = uv || Texture.DEF_UV;\r\n    }\r\n\r\n    /**\r\n     * 加载指定地址的图片。\r\n     * @param\turl 图片地址。\r\n     * @param\tcomplete 加载完成回调\r\n     */\r\n    load(url: string, complete?: Handler): Promise<void> {\r\n        if (this._destroyed)\r\n            return Promise.resolve();\r\n\r\n        return ILaya.loader.load(url).then((tex: Texture) => {\r\n            let bit = tex.bitmap;\r\n            this.bitmap = bit;\r\n            this.sourceWidth = this._w = bit.width;\r\n            this.sourceHeight = this._h = bit.height;\r\n            complete && complete.run();\r\n            this.event(Event.READY, this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获得像素数据\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @returns \r\n     */\r\n    getTexturePixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        var st: number, dst: number, i: number;\r\n        var tex2d = this.bitmap;\r\n        // 适配图集\r\n        var texw = this._w;\r\n        var texh = this._h;\r\n        var sourceWidth = this.sourceWidth;\r\n        var sourceHeight = this.sourceHeight;\r\n        var tex2dw = tex2d.width;\r\n        var tex2dh = tex2d.height;\r\n        var offsetX = this.offsetX;\r\n        var offsetY = this.offsetY;\r\n        let draww = width;\r\n        let drawh = height;\r\n        if (x + width > texw + offsetX) draww -= (x + width) - texw - offsetX;\r\n        if (x + width > sourceWidth) width -= (x + width) - sourceWidth;\r\n        if (y + height > texh + offsetY) drawh -= (y + height) - texh - offsetY;\r\n        if (y + height > sourceHeight) height -= (y + height) - sourceHeight;\r\n        if (width <= 0 || height <= 0) return null;\r\n        let marginL = offsetX > x ? offsetX - x : 0; // 考虑图集的情况，只渲染图集中的图片，左侧可能需要补充空白\r\n        let marginT = offsetY > y ? offsetY - y : 0;\r\n        let rePosX = x > offsetX ? x - offsetX : 0; // 考虑图集的情况，只渲染图集中的图片，不渲染 offset，需要重新定位 x 坐标\r\n        let rePosY = y > offsetY ? y - offsetY : 0;\r\n        draww -= marginL; // 考虑图集的情况，只渲染图集中的图片，其大小要减去空白\r\n        drawh -= marginT;\r\n\r\n        var wstride = width * 4;\r\n        var pix: Uint8Array = null;\r\n        try {\r\n            pix = <Uint8Array>(tex2d as Texture2D).getPixels();\r\n        } catch (e) {\r\n        }\r\n        if (pix) {\r\n            if (x == 0 && y == 0 && width == tex2dw && height == tex2dh)\r\n                return pix;\r\n            //否则只取一部分\r\n            let uv = (this._uv as Array<number>).slice();\r\n            let atlasPosX = Math.round(uv[0] * tex2dw); // 计算图片在图集中的位置\r\n            let atlasPosY = Math.round(uv[1] * tex2dh);\r\n            var ret: Uint8Array = new Uint8Array(width * height * 4);\r\n            wstride = tex2dw * 4;\r\n            dst = (atlasPosY + rePosY) * wstride;\r\n            st = atlasPosX * 4 + rePosX * 4 + dst;\r\n            for (i = 0; i < drawh; i++) {\r\n                ret.set(pix.slice(st, st + draww * 4), width * 4 * (i + marginT) + marginL * 4);\r\n                st += wstride;\r\n            }\r\n            return ret;\r\n        }\r\n\r\n        // 如果无法直接获取，只能先渲染出来\r\n        var ctx = new ILaya.Context();\r\n        ctx.size(width, height);\r\n        ctx.asBitmap = true;\r\n        var uv: number[] = null;\r\n        if (x != 0 || y != 0 || width != tex2dw || height != tex2dh) {\r\n            uv = (this._uv as number[]).slice();\t// 复制一份uv\r\n            var stu = uv[0];\r\n            var stv = uv[1];\r\n            var uvw = uv[2] - stu;\r\n            var uvh = uv[7] - stv;\r\n            var uk = uvw / texw;\r\n            var vk = uvh / texh;\r\n            uv = [stu + rePosX * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + (rePosY + drawh) * vk,\r\n            stu + rePosX * uk, stv + (rePosY + drawh) * vk];\r\n        }\r\n        ctx._drawTextureM(this, marginL, marginT, draww, drawh, null, 1.0, uv, 0xffffffff);\r\n        //ctx.drawTexture(value, -x, -y, x + width, y + height);\r\n        ctx._targets.start();\r\n        ctx.flush();\r\n        ctx._targets.end();\r\n        ctx._targets.restore();\r\n        var dt: Uint8Array = ctx._targets.getData(0, 0, width, height) as Uint8Array;\r\n        ctx.destroy();\r\n        // 上下颠倒一下\r\n        ret = new Uint8Array(width * height * 4);\r\n        st = 0;\r\n        dst = (height - 1) * wstride;\r\n        for (i = height - 1; i >= 0; i--) {\r\n            ret.set(dt.slice(dst, dst + wstride), st);\r\n            st += wstride;\r\n            dst -= wstride;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 获取Texture上的某个区域的像素点\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @return  返回像素点集合\r\n     */\r\n    getPixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        return this.getTexturePixels(x, y, width, height);\r\n        // canvas 不支持\r\n    }\r\n\r\n    /**\r\n     * 通过url强制恢复bitmap。\r\n     */\r\n    recoverBitmap(callback?: () => void): void {\r\n        var url = this._bitmap.url;\r\n        if (!this._destroyed && (!this._bitmap || this._bitmap.destroyed) && url) {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.bitmap = tex.bitmap;\r\n                callback && callback();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制释放Bitmap,无论是否被引用。\r\n     */\r\n    disposeBitmap(): void {\r\n        if (!this._destroyed && this._bitmap) {\r\n            this._bitmap.destroy();\r\n        }\r\n    }\r\n\r\n    get valid(): boolean {\r\n        return !this._destroyed && this._bitmap && !this._bitmap.destroyed;\r\n    }\r\n\r\n    /**\r\n     * obsolute\r\n     */\r\n    public get obsolute(): boolean {\r\n        return this._obsolute || !this._bitmap || this._bitmap.destroyed || this._bitmap.obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _disposeResource(): void {\r\n        let bit = this._bitmap;\r\n        this._bitmap = null;\r\n        if (bit)\r\n            bit._removeReference();\r\n    }\r\n\r\n    /**\r\n     * 获得clip贴图\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @returns \r\n     */\r\n    public getCachedClip(x: number, y: number, width: number, height: number): Texture {\r\n        let key = `${x}_${y}_${width}_${height}`;\r\n        if (!this._clipCache)\r\n            this._clipCache = new Map();\r\n\r\n        let tex = this._clipCache.get(key);\r\n        if (tex)\r\n            return tex;\r\n        tex = Texture.createFromTexture(this, x, y, width, height);\r\n        if (tex)\r\n            tex._sizeGrid = this._sizeGrid;\r\n\r\n        if (this._clipCache.size > 100)\r\n            this._clipCache.clear();\r\n\r\n        this._clipCache.set(key, tex);\r\n\r\n        return tex;\r\n    }\r\n}\r\n\r\n/**\r\n * 平移 UV。\r\n * @param offsetX 沿 X 轴偏移量。\r\n * @param offsetY 沿 Y 轴偏移量。\r\n * @param uv 需要平移操作的的 UV。\r\n * @return 平移后的UV。\r\n */\r\nfunction moveUV(offsetX: number, offsetY: number, uv: any[]): any[] {\r\n    for (var i: number = 0; i < 8; i += 2) {\r\n        uv[i] += offsetX;\r\n        uv[i + 1] += offsetY;\r\n    }\r\n    return uv;\r\n}\r\n","import { Utils } from \"../utils/Utils\";\r\n/**\r\n * 此类用来描述资源\r\n */\r\nexport class AssetDb {\r\n    /**\r\n     * 默认资源实例\r\n     */\r\n    static inst: AssetDb = new AssetDb();\r\n\r\n    /**\r\n     * uuid 数据\r\n     */\r\n    uuidMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * shaderName 数据\r\n     */\r\n    shaderNameMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * 元资源 数据\r\n     */\r\n    metaMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * uuid获得url\r\n     * @param uuid uuid\r\n     * @returns \r\n     */\r\n    UUID_to_URL(uuid: string): string {\r\n        return this.uuidMap[uuid];\r\n    }\r\n\r\n    /**\r\n     * 异步uuid获得Url\r\n     * @param uuid \r\n     * @returns \r\n     */\r\n    UUID_to_URL_async(uuid: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * Url获得uuid值\r\n     * @param url \r\n     * @returns \r\n     */\r\n    URL_to_UUID_async(url: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获取真实的Url\r\n     * @param url \r\n     * @param onResolve \r\n     * @returns \r\n     */\r\n    resolveURL(url: string, onResolve?: (url: string) => void): Promise<string> {\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            return AssetDb.inst.UUID_to_URL_async(uuid).then(url => {\r\n                if (onResolve)\r\n                    onResolve(url);\r\n                return url;\r\n            });\r\n        }\r\n        else {\r\n            if (onResolve)\r\n                onResolve(url);\r\n            return Promise.resolve(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 查找shadername的地址\r\n     * @param shaderName \r\n     * @returns \r\n     */\r\n    shaderName_to_URL(shaderName: string): string {\r\n        return this.shaderNameMap[shaderName];\r\n    }\r\n\r\n    shaderName_to_URL_async(shaderName: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获得元数据\r\n     * @param url \r\n     * @param uuid \r\n     * @returns \r\n     */\r\n    getMeta(url: string, uuid: string): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获得子资源路径\r\n     * @param url \r\n     * @param uuid \r\n     * @param subAssetName \r\n     * @param subAssetExt \r\n     * @returns \r\n     */\r\n    getSubAssetURL(url: string, uuid: string, subAssetName: string, subAssetExt: string): string {\r\n        if (subAssetName)\r\n            return `${Utils.replaceFileExtension(url, \"\")}@${subAssetName}.${subAssetExt}`;\r\n        else\r\n            return url;\r\n    }\r\n}","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <p><code>URL</code> 提供URL格式化，URL版本管理的类。</p>\r\n * <p>引擎加载资源的时候，会自动调用formatURL函数格式化URL路径</p>\r\n * <p>通过basePath属性可以设置网络基础路径</p>\r\n * <p>通过设置customFormat函数，可以自定义URL格式化的方式</p>\r\n */\r\nexport class URL {\r\n    /**URL地址版本映射表，比如{\"aaa/bb.png\":\"edcba\",\"aaa/bb.png\":\"1342a\"}，默认情况下，通过formatURL格式化后，会自动生成为\"aaa/bb-1342a.png\"的一个地址*/\r\n    static version: Record<string, string> = {};\r\n\r\n    /**基础路径。如果不设置，默认为当前网页的路径。最终地址将被格式化为 basePath+相对URL地址，*/\r\n    static basePath: string = \"\";\r\n    /**扩展的基础路径映射表，比如{\"aa/\":\"http://abc.com/\"},则把路径以aa/开头的资源映射到http://abc.com/下*/\r\n    static basePaths: Record<string, string> = {};\r\n\r\n    /**root路径。只针对'~'类型的url路径有效*/\r\n    static rootPath: string = \"\";\r\n\r\n    /**@private */\r\n    private _url: string;\r\n    /**@private */\r\n    private _path: string;\r\n\r\n    private static overrideFileExts: Record<string, string> = {};\r\n    private static hasExtOverrides: boolean;\r\n\r\n    static __init__() {\r\n        //xiaomi 没有location\r\n        //Vivo location.protocol是\"\"\r\n        //微信真机 location.protocol是undefined\r\n        URL.rootPath = URL.basePath = (location && location.protocol != undefined && location.protocol != \"\") ? URL.getPath(location.protocol + \"//\" + location.host + location.pathname) : \"\";\r\n    }\r\n\r\n    static initMiniGameExtensionOverrides() {\r\n        if (LayaEnv.isPreview)\r\n            return;\r\n\r\n        URL.overrideExtension([\"rendertexture\", \"videotexture\"], \"rt.json\");\r\n        URL.overrideExtension([\"controller\"], \"controller.json\");\r\n        URL.overrideExtension([\"mc\"], \"mc.bin\");\r\n        URL.overrideExtension([\"mcc\"], \"mcc.json\");\r\n        URL.overrideExtension([\"shader\"], \"shader.json\");\r\n        URL.overrideExtension([\"scene3d\", \"scene\", \"taa\", \"prefab\"], \"json\");\r\n        URL.overrideExtension([\"fui\"], \"fui.json\");\r\n        URL.overrideExtension([\"glsl\"], \"glsl.txt\");\r\n        URL.overrideExtension([\"skel\"], \"skel.bin\");\r\n    }\r\n\r\n    /**创建一个新的 <code>URL</code> 实例。*/\r\n    constructor(url: string) {\r\n        this._url = URL.formatURL(url);\r\n        this._path = URL.getPath(url);\r\n    }\r\n\r\n    /**格式化后的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**地址的文件夹路径（不包括文件名）。*/\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n    /** 自定义URL格式化的方式。例如： customFormat = function(url:String):String{} */\r\n    static customFormat: Function = function (url: string): string {\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 包含normalizedURL功能，并且合并base，如果base没有提供，则使用URL.basePath或者URL.rootPath。\r\n     * @param url 地址。\r\n     * @param base 基础路径，如果没有，则使用URL.basePath或者URL.rootPath。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static formatURL(url: string, base?: string): string {\r\n        if (!url)\r\n            return base || URL.basePath || \"\";\r\n\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            let url2 = AssetDb.inst.UUID_to_URL(uuid);\r\n            if (!url2)\r\n                return url;\r\n\r\n            url = url2;\r\n        }\r\n\r\n        let char1 = url.charCodeAt(0);\r\n        if (url.indexOf(\":\") == -1 && char1 !== 47) { //已经format过\r\n            //自定义路径格式化\r\n            if (URL.customFormat != null)\r\n                url = URL.customFormat(url);\r\n\r\n            let ver = URL.version[url];\r\n            if (ver != null) {\r\n                let i = url.lastIndexOf(\".\");\r\n                url = url.substring(0, i) + \"-\" + ver + url.substring(i);\r\n            }\r\n\r\n            if (char1 === 126) // ~\r\n                url = URL.join(URL.rootPath, url.substring(2));\r\n            else {\r\n                if (base == null) {\r\n                    base = URL.basePath;\r\n                    for (let k in URL.basePaths) {\r\n                        if (url.startsWith(k)) {\r\n                            base = URL.basePaths[k];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                url = URL.join(base, url);\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 处理扩展名的自动转换\r\n     * @param url 地址。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static postFormatURL(url: string): string {\r\n        if (URL.hasExtOverrides) {\r\n            let extold = Utils.getFileExtension(url);\r\n            let ext = URL.overrideFileExts[extold];\r\n            if (ext != null)\r\n                url = Utils.replaceFileExtension(url, ext);\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 格式化相对路径。主要是处理.和..这些情况。\r\n     */\r\n    static normalize(url: string): string {\r\n        if (url.indexOf(\"./\") == -1)\r\n            return url;\r\n\r\n        let parts = url.split(\"/\");\r\n        let len = parts.length;\r\n        let i = 0;\r\n        while (i < len) {\r\n            if (parts[i] == \".\") {\r\n                parts.splice(i, 1);\r\n                len--;\r\n                continue;\r\n            }\r\n            else if (parts[i] == '..') {\r\n                let index: number = i - 1;\r\n                if (index >= 0 && parts[index] !== '..') {\r\n                    parts.splice(index, 2);\r\n                    len -= 2;\r\n                    i--;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            i++;\r\n        }\r\n        parts.length = len;\r\n        return parts.join('/');\r\n    }\r\n\r\n    static getResURLByUUID(url: string): string {\r\n        if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\r\n            return \"res://\" + url;\r\n        else\r\n            return url;\r\n    }\r\n\r\n    /**\r\n    * 组合相对路径并格式化\r\n    * @param base\r\n    * @param path\r\n    */\r\n    static join(base: string, path: string): string {\r\n        if (!path) return \"\";\r\n\r\n        //如果是全路径，直接返回，提高性能\r\n        if (path.indexOf(\":\") > 0)\r\n            return path;\r\n\r\n        if (base) {\r\n            let char1 = path.charCodeAt(0);\r\n            if (char1 !== 126 && char1 !== 47) { // ~或者 /\r\n                if (base.charCodeAt(base.length - 1) !== 47)\r\n                    path = base + \"/\" + path;\r\n                else\r\n                    path = base + path;\r\n            }\r\n        }\r\n\r\n        return URL.normalize(path);\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件夹路径（不包括文件名）。\r\n     * <p><b>注意：</b>末尾有斜杠（/）。</p>\r\n     * @param url url地址。\r\n     * @return 返回文件夹路径。\r\n     */\r\n    static getPath(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(0, ofs + 1) : \"\";\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件名。\r\n     * @param url 地址。\r\n     * @return 返回文件名。\r\n     */\r\n    static getFileName(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(ofs + 1) : url;\r\n    }\r\n\r\n    /**\r\n     * 获取URL版本字符。\r\n     * @param url\r\n     * @return\r\n     */\r\n    static getURLVerion(url: string): string {\r\n        var index: number = url.indexOf(\"?\");\r\n        return index >= 0 ? url.substring(index) : null;\r\n    }\r\n\r\n    /**\r\n     * 下载时，转换URL的扩展名。\r\n     * @originalExts 原始扩展名。例如[\"scene\"]。\r\n     * @targetExt 要转换为的扩展名。例如\"json\"。\r\n     */\r\n    static overrideExtension(originalExts: Array<string>, targetExt: string) {\r\n        for (let ext of originalExts)\r\n            URL.overrideFileExts[ext] = targetExt;\r\n        URL.hasExtOverrides = true;\r\n    }\r\n}","import { ShaderCompile } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport class IncludeFile {\r\n    static splitToWords(str: string, block: ShaderNode): any[] {//这里要修改\r\n        var out: any[] = [];\r\n        /*\r\n           var words:Array = str.split(_splitToWordExps);\r\n           trace(str);\r\n           trace(words);\r\n         */\r\n        var c: string;\r\n        var ofs: number = -1;\r\n        var word: string;\r\n        for (var i: number = 0, n: number = str.length; i < n; i++) {\r\n            c = str.charAt(i);\r\n            if (\" \\t=+-*/&%!<>()'\\\",;\".indexOf(c) >= 0) {\r\n                if (ofs >= 0 && (i - ofs) > 1) {\r\n                    word = str.substr(ofs, i - ofs);\r\n                    out.push(word);\r\n                }\r\n                if (c == '\"' || c == \"'\") {\r\n                    var ofs2: number = str.indexOf(c, i + 1);\r\n                    if (ofs2 < 0) {\r\n                        throw \"Sharder err:\" + str;\r\n                    }\r\n                    out.push(str.substr(i + 1, ofs2 - i - 1));\r\n                    i = ofs2;\r\n                    ofs = -1;\r\n                    continue;\r\n                }\r\n                if (c == '(' && block && out.length > 0) {\r\n                    word = out[out.length - 1] + \";\";\r\n                    if (\"vec4;main;\".indexOf(word) < 0)\r\n                        block.useFuns += word;\r\n                }\r\n                ofs = -1;\r\n                continue;\r\n            }\r\n            if (ofs < 0) ofs = i;\r\n        }\r\n        if (ofs < n && (n - ofs) > 1) {\r\n            word = str.substr(ofs, n - ofs);\r\n            out.push(word);\r\n        }\r\n        return out;\r\n    }\r\n\r\n\r\n    script: string;\r\n    codes: any = {};\r\n    funs: any = {};\r\n    curUseID: number = -1;\r\n    funnames: string = \"\";\r\n\r\n    constructor(txt: string) {\r\n        this.script = txt;\r\n        var begin: number = 0, ofs: number, end: number;\r\n        while (true) {\r\n            begin = txt.indexOf(\"#begin\", begin);\r\n            if (begin < 0) break;\r\n\r\n            end = begin + 5;\r\n            while (true) {\r\n                end = txt.indexOf(\"#end\", end);\r\n                if (end < 0) break;\r\n                if (txt.charAt(end + 4) === 'i')\r\n                    end += 5;\r\n                else break;\r\n            }\r\n\r\n            if (end < 0) {\r\n                throw \"add include err,no #end:\" + txt;\r\n            }\r\n\r\n            ofs = txt.indexOf('\\n', begin);\r\n            var words: any[] = IncludeFile.splitToWords(txt.substr(begin, ofs - begin), null);\r\n            if (words[1] == 'code') {\r\n                this.codes[words[2]] = txt.substr(ofs + 1, end - ofs - 1);\r\n            } else if (words[1] == 'function')//#begin function void test()\r\n            {\r\n                ofs = txt.indexOf(\"function\", begin);\r\n                ofs += \"function\".length;\r\n                this.funs[words[3]] = txt.substr(ofs + 1, end - ofs - 1);\r\n                this.funnames += words[3] + \";\";\r\n            }\r\n\r\n            begin = end + 1;\r\n        }\r\n    }\r\n\r\n    getWith(name: string | null = null): string {\r\n        var r: string = name ? this.codes[name] : this.script;\r\n        if (!r) {\r\n            throw \"get with error:\" + name;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    getFunsScript(funsdef: string): string {\r\n        var r: string = \"\";\r\n        for (var i in this.funs) {\r\n            if (funsdef.indexOf(i + \";\") >= 0) {\r\n                r += this.funs[i];\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class ShaderNode {\r\n    private static __id: number = 1;\r\n    //是否删除无用代码\r\n    private static __noCompileEnable = true;\r\n\r\n    childs: any[] = [];\r\n    text: string = \"\";\r\n    parent: ShaderNode;\r\n    name: string;\r\n    noCompile: boolean;\r\n    includefiles: any[];\r\n    condition: any;\r\n    conditionType: number;\r\n    useFuns: string = \"\";\r\n    z: number = 0;\r\n    src: string;\r\n\r\n    constructor(includefiles: any[]) {\r\n        this.includefiles = includefiles;\r\n    }\r\n\r\n    setParent(parent: ShaderNode): void {\r\n        parent.childs.push(this);\r\n        this.z = parent.z + 1;\r\n        this.parent = parent;\r\n    }\r\n\r\n    setCondition(condition: string, type: number): void {\r\n        if (condition) {\r\n            this.conditionType = type;\r\n            condition = condition.replace(/(\\s*$)/g, \"\");\r\n            this.condition = function (): boolean {\r\n                return (this as any)[condition];\r\n            }\r\n            this.condition.__condition = condition;\r\n        }\r\n    }\r\n\r\n    toscript(def: any, out: any[]): any[] {\r\n        return this._toscript(def, out, ++ShaderNode.__id);\r\n    }\r\n\r\n    private _toscript(def: any, out: any[], id: number): any[] {\r\n        if (this.childs.length < 1 && !this.text) return out;\r\n        var outIndex: number = out.length;\r\n        if (this.condition) {\r\n            var ifdef: boolean = !!this.condition.call(def);\r\n            this.conditionType === 2&&(ifdef = !ifdef); //2 is ShaderCompile.IFDEF_ELSE && (ifdef = !ifdef);\r\n            if (!ifdef&&ShaderNode.__noCompileEnable) return out;\r\n        }\r\n        if(this.noCompile||!ShaderNode.__noCompileEnable)\r\n        this.text && out.push(this.text);\r\n        this.childs.length > 0 && this.childs.forEach(function (o: ShaderNode, index: number, arr: ShaderNode[]): void {\r\n            o._toscript(def, out, id);\r\n        });\r\n\r\n        if (this.includefiles.length > 0 && this.useFuns.length > 0) {\r\n            var funsCode: string;\r\n            for (var i: number = 0, n: number = this.includefiles.length; i < n; i++) {\r\n                //如果已经加入了，就不要再加\r\n                if (this.includefiles[i].curUseID == id) {\r\n                    continue;\r\n                }\r\n                funsCode = this.includefiles[i].file.getFunsScript(this.useFuns);\r\n                if (funsCode.length > 0) {\r\n                    this.includefiles[i].curUseID = id;\r\n                    out[0] = funsCode + out[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n}\r\n\r\n\r\n","import { ILaya } from \"../../../ILaya\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { IncludeFile } from \"./IncludeFile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport interface IShaderCompiledObj {\r\n    vsNode: ShaderNode;\r\n    psNode: ShaderNode;\r\n    includeNames: Set<string>;\r\n    defs: Set<string>;\r\n};\r\n\r\ntype IncludeItem = { name: string, node: ShaderNode, codeName: string, file: IncludeFile };\r\n\r\nconst _clearCR: RegExp = new RegExp(\"\\r\", \"g\");\r\nconst _removeAnnotation: RegExp = new RegExp(\"(/\\\\*([^*]|[\\\\r\\\\\\n]|(\\\\*+([^*/]|[\\\\r\\\\n])))*\\\\*+/)|(//.*)\", \"g\");\r\nconst _reg: RegExp = new RegExp(\"(\\\".*\\\")|('.*')|([#\\\\w\\\\*-\\\\.+/()=<>{}\\\\\\\\]+)|([,;:\\\\\\\\])\", \"g\");\r\nconst _splitToWordExps: RegExp = new RegExp(\"[(\\\".*\\\")]+|[('.*')]+|([ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;])\", \"g\");\r\nconst _splitToWordExps3: RegExp = new RegExp(\"[ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;\\\\|]\", \"g\");\r\n\r\n/**\r\n * @private\r\n * <code>ShaderCompile</code> 类用于实现Shader编译。\r\n */\r\nexport class ShaderCompile {\r\n    static IFDEF_NO: number = 0;\r\n    static IFDEF_YES: number = 1;\r\n    static IFDEF_ELSE: number = 2;\r\n    static IFDEF_PARENT: number = 3;\r\n\r\n    static includes: Record<string, IncludeFile> = {};\r\n\r\n    static loadIncludeFileSync: (fileName: string) => void;\r\n\r\n    static addInclude(fileName: string, txt: string, allowReplace?: boolean): IncludeFile {\r\n        if (!txt || txt.length === 0) {\r\n            console.error(\"shader include file err:\" + fileName);\r\n            return null;\r\n        }\r\n\r\n        if (!allowReplace && ShaderCompile.includes[fileName]) {\r\n            console.warn(\"shader include file already exists:\" + fileName);\r\n            return ShaderCompile.includes[fileName];\r\n        }\r\n\r\n        txt = txt.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        let file = new IncludeFile(txt);\r\n        ShaderCompile.includes[fileName] = file;\r\n        return file;\r\n    }\r\n\r\n    static compile(vs: string, ps: string, basePath?: string): IShaderCompiledObj {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        for (let inc of includes) {\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else\r\n                console.warn(`ShaderCompile missing file ${inc.name}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static compileAsync(vs: string, ps: string, basePath: string): Promise<IShaderCompiledObj> {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        return this._loadIncludesDeep(result, includes, 0);\r\n    }\r\n\r\n    private static _loadIncludesDeep(result: IShaderCompiledObj, includes: Array<IncludeItem>, index: number): Promise<IShaderCompiledObj> {\r\n        let toLoad: Array<IncludeItem>;\r\n        let includesCnt = includes.length;\r\n        for (let i = index; i < includesCnt; i++) {\r\n            let inc = includes[i];\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else {\r\n                if (!toLoad) toLoad = [];\r\n                toLoad.push(inc);\r\n            }\r\n        }\r\n\r\n        if (!toLoad)\r\n            return Promise.resolve(result);\r\n\r\n        return ILaya.loader.load(toLoad.map(tc => tc.name)).then(files => {\r\n            let cnt = toLoad.length;\r\n            for (let i = 0; i < cnt; i++) {\r\n                let inc = toLoad[i];\r\n                let file = files[i];\r\n                if (!file) {\r\n                    let childs = inc.node.parent.childs;\r\n                    childs.splice(childs.indexOf(inc.node), 1);\r\n                }\r\n                else {\r\n                    result.includeNames.add(inc.name);\r\n\r\n                    let text = file.getWith(inc.codeName);\r\n                    if (inc.node.condition)\r\n                        inc.node.text = text;\r\n                    else {\r\n                        ShaderCompile._compileToTree(inc.node, text, result.defs, includes, URL.getPath(inc.name));\r\n                        inc.node.text = \"\";\r\n                    }\r\n                }\r\n            }\r\n            if (includes.length > includesCnt)\r\n                return ShaderCompile._loadIncludesDeep(result, includes, includesCnt);\r\n            else\r\n                return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _compileToTree(parent: ShaderNode, script: string, defs: Set<string>, includes: Array<IncludeItem>, basePath: string): void {\r\n        let node: ShaderNode, preNode: ShaderNode;\r\n        let text: string, name: string, fname: string;\r\n        let ofs: number, words: any[];\r\n        let i: number, n: number, j: number;\r\n        let lines = script.split(\"\\n\");\r\n\r\n        for (i = 0; i < lines.length; i++) {\r\n            text = lines[i];\r\n            if (text.length < 1) continue;\r\n            ofs = text.indexOf(\"//\");\r\n            if (ofs === 0) continue;\r\n            if (ofs >= 0) text = text.substr(0, ofs);\r\n\r\n            if ((ofs = text.indexOf(\"#\")) < 0) {\r\n                preNode = parent.childs[parent.childs.length - 1];\r\n                let includefiles = parent.includefiles;\r\n                if (preNode && !preNode.name) {\r\n                    includefiles.length > 0 && IncludeFile.splitToWords(text, preNode);\r\n                    preNode.text += \"\\n\" + text;\r\n                    continue;\r\n                }\r\n\r\n                node = new ShaderNode(includefiles);\r\n                node.text = text;\r\n                node.noCompile = true;\r\n                includefiles.length > 0 && IncludeFile.splitToWords(text, node);\r\n                node.setParent(parent);\r\n                continue;\r\n            }\r\n\r\n            node = new ShaderNode(parent.includefiles);\r\n            node.text = text;\r\n            node.noCompile = true;\r\n\r\n            name = \"#\";\r\n            for (j = ofs + 1, n = text.length; j < n; j++) {\r\n                let c: string = text.charAt(j);\r\n                if (c === ' ' || c === '\\t' || c === '?') break;\r\n                name += c;\r\n            }\r\n            node.name = name;\r\n            switch (name) {\r\n                case \"#ifdef\":\r\n                case \"#ifndef\":\r\n                    node.src = text;\r\n                    node.noCompile = text.match(/[!&|()=<>]/) != null;\r\n                    if (!node.noCompile) {\r\n                        words = text.replace(/^\\s*/, '').split(/\\s+/);\r\n                        node.setCondition(words[1], name === \"#ifdef\" ? ShaderCompile.IFDEF_YES : ShaderCompile.IFDEF_ELSE);\r\n                        node.text = node.text;\r\n                    } else {\r\n                        console.log(\"function():Boolean{return \" + text.substr(ofs + node.name.length) + \"}\");\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#if\":\r\n                case \"#elif\":\r\n                    node.src = text;\r\n                    node.noCompile = true;\r\n                    if (name == \"#elif\") {\r\n                        parent = parent.parent;\r\n                        preNode = parent.childs[parent.childs.length - 1];\r\n                        //匹配\"#ifdef\"\r\n                        preNode.text = preNode.src;\r\n                        preNode.noCompile = true;\r\n                        preNode.condition = null;\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && text != \"defined\" && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#else\":\r\n                    node.src = text;\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.condition = preNode.condition;\r\n                        node.conditionType = preNode.conditionType == ShaderCompile.IFDEF_YES ? ShaderCompile.IFDEF_ELSE : ShaderCompile.IFDEF_YES;\r\n                        //node.text =  node.text + \" \" + preNode.text + \" \" + node.conditionType;\r\n                    }\r\n                    //递归节点树\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n                    break;\r\n\r\n                case \"#endif\":\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.text = node.text;\r\n                    }\r\n                    node.setParent(parent);\r\n                    break;\r\n\r\n                case \"#include\"://这里有问题,主要是空格\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    let includeName: string = words[1];\r\n                    let includeFile: IncludeFile;\r\n                    if (includeName.startsWith(\".\"))\r\n                        includeName = URL.join(basePath, includeName);\r\n                    else if (includeName.startsWith(\"/\"))\r\n                        includeName = URL.formatURL(includeName.substring(1));\r\n                    else {\r\n                        //check if builtin\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                        if (!includeFile)\r\n                            includeName = \"internal/\" + includeName;\r\n                    }\r\n                    includeFile = ShaderCompile.includes[includeName];\r\n\r\n                    if (!includeFile && ShaderCompile.loadIncludeFileSync) {\r\n                        ShaderCompile.loadIncludeFileSync(includeName);\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                    }\r\n\r\n                    let codeName = words[2] == 'with' ? words[3] : null;\r\n                    includes.push({ name: includeName, codeName: codeName, node: node, file: includeFile });\r\n                    node.setParent(parent);\r\n\r\n                    if ((ofs = words[0].indexOf(\"?\")) < 0) {\r\n                        if (includeFile) {\r\n                            text = includeFile.getWith(codeName);\r\n                            this._compileToTree(node, text, defs, includes, URL.getPath(includeName));\r\n                        }\r\n                        node.text = \"\";\r\n                    }\r\n                    else {\r\n                        node.setCondition(words[0].substr(ofs + 1), ShaderCompile.IFDEF_YES);\r\n\r\n                        if (includeFile)\r\n                            node.text = includeFile.getWith(codeName);\r\n                    }\r\n                    break;\r\n\r\n                case \"#import\":\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    fname = words[1];\r\n                    node.includefiles.push({ node: node, file: ShaderCompile.includes[fname], ofs: node.text.length });\r\n                    break;\r\n\r\n                default:\r\n                    node.setParent(parent);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IClone } from \"../../utils/IClone\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\n\r\n/**\r\n * <code>DefineDatas</code> 类用于创建宏定义数据集合。\r\n */\r\nexport class DefineDatas implements IClone {\r\n\t/** @internal */\r\n\t_mask: Array<number> = [];\r\n\t/** @internal */\r\n\t_length: number = 0;\r\n\r\n\t/**\r\n\t * 创建一个 <code>DefineDatas</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_intersectionDefineDatas(define: DefineDatas): void {\r\n\t\tvar unionMask: Array<number> = define._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tfor (var i: number = this._length - 1; i >= 0; i--) {\r\n\t\t\tvar value: number = mask[i] & unionMask[i];\r\n\t\t\tif (value == 0 && i == this._length - 1)\r\n\t\t\t\tthis._length--;\r\n\t\t\telse\r\n\t\t\t\tmask[i] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 添加宏定义值。\r\n\t * @param define 宏定义值。\r\n\t */\r\n\tadd(define: ShaderDefine): void {\r\n\t\tvar index: number = define._index;\r\n\t\tvar size: number = index + 1;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar maskStart: number = this._length;//must from this._length because this._length maybe less than mask.length and have dirty data should clear.\r\n\t\tif (maskStart < size) {\r\n\t\t\t(mask.length < size) && (mask.length = size);//mask.length maybe small than size,maybe not.\r\n\t\t\tfor (; maskStart < index; maskStart++)\r\n\t\t\t\tmask[maskStart] = 0;\r\n\t\t\tmask[index] = define._value;\r\n\t\t\tthis._length = size;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmask[index] |= define._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 移除宏定义。\r\n\t * @param define 宏定义。\r\n\t */\r\n\tremove(define: ShaderDefine): void {\r\n\t\tvar index: number = define._index;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar endIndex: number = this._length - 1;\r\n\t\tif (index > endIndex)//不重置Length,避免经常扩充\r\n\t\t\treturn;\r\n\t\tvar newValue = mask[index] & ~define._value;\r\n\t\tif (index == endIndex && newValue === 0)\r\n\t\t\tthis._length--;\r\n\t\telse\r\n\t\t\tmask[index] = newValue;\r\n\t}\r\n\r\n\t/**\r\n\t * 添加宏定义集合。\r\n\t * @param define 宏定义集合。\r\n\t */\r\n\taddDefineDatas(define: DefineDatas): void {\r\n\t\tvar addMask: Array<number> = define._mask;\r\n\t\tvar size: number = define._length;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar maskStart: number = this._length;\r\n\t\tif (maskStart < size) {\r\n\t\t\tmask.length = size;\r\n\t\t\tfor (var i: number = 0; i < maskStart; i++)\r\n\t\t\t\tmask[i] |= addMask[i];\r\n\t\t\tfor (; i < size; i++)\r\n\t\t\t\tmask[i] = addMask[i];\r\n\t\t\tthis._length = size;\r\n\t\t} else {\r\n\t\t\tfor (var i: number = 0; i < size; i++) {\r\n\t\t\t\tmask[i] |= addMask[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 移除宏定义集合。\r\n\t * @param define 宏定义集合。\r\n\t */\r\n\tremoveDefineDatas(define: DefineDatas): void {\r\n\t\tvar removeMask: Array<number> = define._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar endIndex: number = this._length - 1;\r\n\t\tvar i = Math.min(define._length, endIndex);\r\n\t\tfor (; i >= 0; i--) {\r\n\t\t\tvar newValue = mask[i] & ~removeMask[i];\r\n\t\t\tif (i == endIndex && newValue === 0) {\r\n\t\t\t\tendIndex--;\r\n\t\t\t\tthis._length--;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmask[i] = newValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 是否有宏定义。\r\n\t * @param define 宏定义。\r\n\t */\r\n\thas(define: ShaderDefine): boolean {\r\n\t\tvar index: number = define._index;\r\n\t\tif (index >= this._length)\r\n\t\t\treturn false;\r\n\t\treturn (this._mask[index] & define._value) !== 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 清空宏定义。\r\n\t */\r\n\tclear(): void {\r\n\t\tthis._length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: any): void {\r\n\t\tvar destDefineData: DefineDatas = (<DefineDatas>destObject);\r\n\t\tvar destMask: Array<number> = destDefineData._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar count: number = this._length;\r\n\t\tdestMask.length = count;\r\n\t\tfor (var i: number = 0; i < count; i++)\r\n\t\t\tdestMask[i] = mask[i];\r\n\t\tdestDefineData._length = count;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: DefineDatas = new DefineDatas();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tdelete this._mask;\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n * <code>ShaderDefine</code> 类用于定义宏数据。\r\n */\r\nexport class ShaderDefine {\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 存储 texture uniform gamma define\r\n\t */\r\n\tstatic _texGammaDefine: { [key: string]: ShaderDefine } = {};\r\n\r\n\t/**@internal */\r\n\t_index: number;\r\n\t/**@internal */\r\n\t_value: number;\r\n\t/**\r\n\t * 创建一个宏定义的实例\r\n\t * @param index 宏索引\r\n\t * @param value 宏值\r\n\t */\r\n\tconstructor(index: number, value: number) {\r\n\t\tthis._index = index;\r\n\t\tthis._value = value;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { DefineDatas } from \"./DefineDatas\";\r\nimport { Shader3D } from \"./Shader3D\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\n/**\r\n * 着色器变种。\r\n */\r\nexport class ShaderVariant {\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @internal */\r\n    _subShaderIndex: number = 0;\r\n    /** @internal */\r\n    _passIndex: number = 0;\r\n    /** @internal */\r\n    _defineNames: string[];\r\n\r\n    /**\r\n     * 着色器。\r\n     */\r\n    public get shader(): Shader3D {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * 子着色器索引。\r\n     */\r\n    public get subShaderIndex(): number {\r\n        return this._subShaderIndex;\r\n    }\r\n\r\n    /**\r\n     * 通道索引。\r\n     */\r\n    public get passIndex(): number {\r\n        return this._passIndex;\r\n    }\r\n\r\n    /**\r\n     * 宏定义集合。\r\n     */\r\n    public get defineNames(): Readonly<string[]> {\r\n        return this._defineNames;\r\n    }\r\n\r\n    /**\r\n     * 创建着色器变种。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defines 宏定义集合\r\n     */\r\n    constructor(shader: Shader3D, subShaderIndex: number, passIndex: number, defines: string[]) {\r\n        this.setValue(shader, subShaderIndex, passIndex, defines);\r\n    }\r\n\r\n    /**\r\n     * 给着色器变种赋值。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defineNames 宏定义集合\r\n     */\r\n    setValue(shader: Shader3D, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                if (pass) {\r\n                    var validDefine: DefineDatas = pass._validDefine;\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++) {\r\n                        var defname: string = defineNames[i];\r\n                        if (!validDefine.has(Shader3D.getDefineByName(defname)))\r\n                            throw `ShaderVariantInfo:Invalid defineName ${defname} in ${shader._name} subShaderIndex of ${subShaderIndex} passIndex of ${passIndex}.`;\r\n                    }\r\n                }\r\n                else {\r\n                    throw `ShaderVariantInfo:Shader don't have passIndex of ${passIndex}.`;\r\n                }\r\n            }\r\n            else {\r\n                throw `ShaderVariantInfo:Shader don't have subShaderIndex of ${subShaderIndex}.`;\r\n            }\r\n        }\r\n        else {\r\n            throw `ShaderVariantInfo:Shader can't be null.`;\r\n        }\r\n        this._shader = shader;\r\n        this._subShaderIndex = subShaderIndex;\r\n        this._passIndex = passIndex;\r\n        this._defineNames = defineNames;\r\n    }\r\n\r\n    /**\r\n     * 是否相等。\r\n     * @param other 其它着色器变种\r\n     * @return 是否相等。\r\n     */\r\n    equal(other: ShaderVariant): boolean {\r\n        if (this._shader !== other._shader || this._subShaderIndex !== other._subShaderIndex || this._passIndex !== other._passIndex)\r\n            return false;\r\n\r\n        var defines: string[] = this._defineNames;\r\n        var otherDefines: string[] = other._defineNames;\r\n        if (defines.length !== otherDefines.length)\r\n            return false;\r\n        for (var i: number = 0, n: number = this._defineNames.length; i < n; i++) {\r\n            if (defines[i] !== otherDefines[i])\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return 着色器变种。 \r\n     */\r\n    clone(): ShaderVariant {\r\n        var dest: ShaderVariant = new ShaderVariant(this._shader, this._subShaderIndex, this._passIndex, this._defineNames.slice());\r\n        return dest;\r\n    }\r\n}\r\n\r\n/**\r\n * 着色器变种集合。\r\n */\r\nexport class ShaderVariantCollection {\r\n    /** @internal */\r\n    private _allCompiled: boolean = false;\r\n    /** @internal */\r\n    private _variants: ShaderVariant[] = [];\r\n\r\n    /**\r\n     * 是否已经全部编译。\r\n     */\r\n    get allCompiled(): boolean {\r\n        return this._allCompiled;\r\n    }\r\n\r\n    /**\r\n     * 包含的变种数量。\r\n     */\r\n    get variantCount(): number {\r\n        return this._variants.length;\r\n    }\r\n\r\n    /**\r\n     * 添加着色器变种。\r\n     * @param variant 着色器变种。\r\n     * @param 是否添加成功。\r\n     */\r\n    add(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant))\r\n                return false;\r\n        }\r\n        this._variants.push(variant.clone());\r\n        this._allCompiled = false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 移除着色器变种。\r\n     * @param variant 着色器变种。\r\n     * @return 是否移除成功。\r\n     */\r\n    remove(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant)) {\r\n                this._variants.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 是否包含着色器变种。\r\n     * @param variant 着色器变种。\r\n     */\r\n    contatins(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取着色器变种。\r\n     * @param index 索引。\r\n     * @returns 着色器变种。\r\n     */\r\n    getByIndex(index: number): ShaderVariant {\r\n        return this._variants[index];\r\n    }\r\n\r\n    /**\r\n     * 清空。\r\n     */\r\n    clear(): void {\r\n        this._variants.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 执行编译。\r\n     */\r\n    compile(): void {\r\n        if (!this._allCompiled) {\r\n            var variants: ShaderVariant[] = this._variants;\r\n            for (var i: number = 0, n: number = variants.length; i < n; i++) {\r\n                var variant: ShaderVariant = variants[i];\r\n                Shader3D.compileShaderByDefineNames(variant._shader._name, variant._subShaderIndex, variant._passIndex, variant._defineNames,[]);\r\n            }\r\n            this._allCompiled = true;\r\n        }\r\n    }\r\n}","/**\r\n * <code>MathUtils3D</code> 类用于创建数学工具。\r\n */\r\nexport class MathUtils3D {\r\n\t/**单精度浮点(float)零的容差*/\r\n\tstatic zeroTolerance: number = 1e-6;\r\n\t/**浮点数默认最大值*/\r\n\tstatic MaxValue: number = 3.40282347e+38;\r\n\t/**浮点数默认最小值*/\r\n\tstatic MinValue: number = -3.40282347e+38;\r\n\t/**角度转弧度系数*/\r\n\tstatic Deg2Rad: number = Math.PI / 180;\r\n\r\n\t/**\r\n\t * 创建一个 <code>MathUtils</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 是否在容差的范围内近似于0\r\n\t * @param  判断值\r\n\t * @return  是否近似于0\r\n\t */\r\n\tstatic isZero(v: number): boolean {\r\n\t\treturn Math.abs(v) < MathUtils3D.zeroTolerance;\r\n\t}\r\n\r\n\t/**\r\n\t * 两个值是否在容差的范围内近似相等Sqr Magnitude\r\n\t * @param  判断值\r\n\t * @return  是否近似于0\r\n\t */\r\n\tstatic nearEqual(n1: number, n2: number): boolean {\r\n\t\tif (MathUtils3D.isZero(n1 - n2))\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tstatic fastInvSqrt(value: number): number {\r\n\t\tif (MathUtils3D.isZero(value))\r\n\t\t\treturn value;\r\n\t\treturn 1.0 / Math.sqrt(value);\r\n\t}\r\n}\r\n\r\n\r\n","import { IClone } from \"../utils/IClone\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\n\r\nexport interface IV2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n/**\r\n * <code>Vector2</code> 类用于创建二维向量。\r\n */\r\nexport class Vector2 implements IClone {\r\n    /**零向量,禁止修改*/\r\n    static readonly ZERO: Readonly<Vector2> = new Vector2(0.0, 0.0);\r\n    /**一向量,禁止修改*/\r\n    static readonly ONE: Readonly<Vector2> = new Vector2(1.0, 1.0);\r\n    static TempVector2 = new Vector2();\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector2</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    /**\r\n     * 设置xy值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     */\r\n    setValue(x: number, y: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * 缩放二维向量。\r\n     * @param\ta 源二维向量。\r\n     * @param\tb 缩放值。\r\n     * @param\tout 输出二维向量。\r\n     */\r\n    static scale(a: Vector2, b: number, out: Vector2): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n    }\r\n\r\n    /**\r\n     * 判断两个二维向量是否相等。\r\n     * @param\ta 三维向量。\r\n     * @param\tb 三维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector2, b: Vector2): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y);\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y];\r\n    }\r\n\r\n    /**\r\n     * 写入Float32Array数组\r\n     * @param array 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(array: Float32Array, offset: number = 0): void {\r\n        array[offset + 0] = this.x;\r\n        array[offset + 1] = this.y;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector2: Vector2 = (<Vector2>destObject);\r\n        destVector2.x = this.x;\r\n        destVector2.y = this.y;\r\n    }\r\n\r\n    /**\r\n     * 求两个二维向量的点积。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @return   点积。\r\n     */\r\n    static dot(a: Vector2, b: Vector2): number {\r\n        return (a.x * b.x) + (a.y * b.y);\r\n    }\r\n\r\n    /**\r\n     * 归一化二维向量。\r\n     * @param\ts 源三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static normalize(s: Vector2, out: Vector2): void {\r\n        var x: number = s.x, y: number = s.y;\r\n        var len: number = x * x + y * y;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度。\r\n     */\r\n    static scalarLength(a: Vector2): number {\r\n        var x: number = a.x, y: number = a.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector2: Vector2 = new Vector2();\r\n        this.cloneTo(destVector2);\r\n        return destVector2;\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array | null = null): void//[NATIVE_TS]\r\n    {\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n    }\r\n\r\n    static rewriteNumProperty(proto: any, name: string, index: number): void {\r\n        Object[\"defineProperty\"](proto, name, {\r\n            \"get\": function (): any {\r\n                return this.elements[index];\r\n            },\r\n            \"set\": function (v: any): void {\r\n                this.elements[index] = v;\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * <code>Vector4</code> 类用于创建四维向量。\r\n */\r\nexport class Vector4 implements IClone {\r\n\r\n    /**零向量*/\r\n    static readonly ZERO: Readonly<Vector4> = new Vector4();\r\n\r\n    /*一向量*/\r\n    static readonly ONE: Readonly<Vector4> = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\r\n    /*X单位向量*/\r\n    static readonly UnitX: Readonly<Vector4> = new Vector4(1.0, 0.0, 0.0, 0.0);\r\n\r\n    /*Y单位向量*/\r\n    static readonly UnitY: Readonly<Vector4> = new Vector4(0.0, 1.0, 0.0, 0.0);\r\n\r\n    /*Z单位向量*/\r\n    static readonly UnitZ: Readonly<Vector4> = new Vector4(0.0, 0.0, 1.0, 0.0);\r\n\r\n    /*W单位向量*/\r\n    static readonly UnitW: Readonly<Vector4> = new Vector4(0.0, 0.0, 0.0, 1.0);\r\n\r\n    /** @internal */\r\n    static tempVec4: Vector4 = new Vector4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n    /**W轴坐标*/\r\n    w: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector4</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     * @param\tz  Z轴坐标。\r\n     * @param\tw  W轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置xyzw值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @param\tw W值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  arr 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n        this.w = arr[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n\r\n    /**\r\n     * 写入Float32Array数组\r\n     * @param arr 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n        arr[offset + 3] = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector4: Vector4 = (<Vector4>destObject);\r\n        destVector4.x = this.x;\r\n        destVector4.y = this.y;\r\n        destVector4.z = this.z;\r\n        destVector4.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector4: Vector4 = new Vector4();\r\n        this.cloneTo(destVector4);\r\n        return destVector4;\r\n    }\r\n\r\n    /**\r\n     * 插值四维向量。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\tt 插值比例。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static lerp(a: Vector4, b: Vector4, t: number, out: Vector4): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, aw: number = a.w;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n        out.w = aw + t * (b.w - aw);\r\n    }\r\n\r\n    /**\r\n     * 通过4x4矩阵把一个四维向量转换为另一个四维向量\r\n     * @param\tvector4 带转换四维向量。\r\n     * @param\tM4x4    4x4矩阵。\r\n     * @param\tout     转换后四维向量。\r\n     */\r\n    static transformByM4x4(vector4: Vector4, m4x4: Matrix4x4, out: Vector4): void {\r\n        var vx: number = vector4.x;\r\n        var vy: number = vector4.y;\r\n        var vz: number = vector4.z;\r\n        var vw: number = vector4.w;\r\n\r\n        var me: Float32Array = m4x4.elements;\r\n\r\n        out.x = vx * me[0] + vy * me[4] + vz * me[8] + vw * me[12];\r\n        out.y = vx * me[1] + vy * me[5] + vz * me[9] + vw * me[13];\r\n        out.z = vx * me[2] + vy * me[6] + vz * me[10] + vw * me[14];\r\n        out.w = vx * me[3] + vy * me[7] + vz * me[11] + vw * me[15];\r\n    }\r\n\r\n    /**\r\n     * 判断两个四维向量是否相等。\r\n     * @param\ta 四维向量。\r\n     * @param\tb 四维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector4, b: Vector4): boolean {\r\n        return MathUtils3D.nearEqual(Math.abs(a.x), Math.abs(b.x)) && MathUtils3D.nearEqual(Math.abs(a.y), Math.abs(b.y)) && MathUtils3D.nearEqual(Math.abs(a.z), Math.abs(b.z)) && MathUtils3D.nearEqual(Math.abs(a.w), Math.abs(b.w));\r\n    }\r\n\r\n    /**\r\n     * 求四维向量是否相等\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value: Vector4) {\r\n        return Vector4.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * 求四维向量的长度。\r\n     * @return  长度。\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 求四维向量长度的平方。\r\n     * @return  长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n\r\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n    }\r\n\r\n    /**\r\n     * 归一化四维向量。\r\n     * @param\ts   源四维向量。\r\n     * @param\tout 输出四维向量。\r\n     */\r\n    static normalize(s: Vector4, out: Vector4): void {\r\n        var len: number = s.length();\r\n        if (len > 0) {\r\n            var inverse: number = 1.0 / len;\r\n            out.x = s.x * inverse;\r\n            out.y = s.y * inverse;\r\n            out.z = s.z * inverse;\r\n            out.w = s.w * inverse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的和。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static add(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n        out.w = a.w + b.w;\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的差。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static subtract(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n        out.w = a.w - b.w;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四维向量的乘积。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static multiply(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n        out.w = a.w * b.w;\r\n    }\r\n\r\n    /**\r\n     * 缩放四维向量。\r\n     * @param\ta   源四维向量。\r\n     * @param\tb   缩放值。\r\n     * @param\tout 输出四维向量。\r\n     */\r\n    static scale(a: Vector4, b: number, out: Vector4): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        out.w = a.w * b;\r\n    }\r\n\r\n    /**\r\n     * 求一个指定范围的四维向量\r\n     * @param\tvalue clamp向量\r\n     * @param\tmin   最小\r\n     * @param\tmax   最大\r\n     * @param   out   输出向量\r\n     */\r\n    static Clamp(value: Vector4, min: Vector4, max: Vector4, out: Vector4): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n        var w: number = value.w;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n        var mineW: number = min.w;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n        var maxeW: number = max.w;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        w = (w > maxeW) ? maxeW : w;\r\n        w = (w < mineW) ? mineW : w;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        out.w = w;\r\n    }\r\n\r\n    /**\r\n     * 两个四维向量距离的平方。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return (x * x) + (y * y) + (z * z) + (w * w);\r\n    }\r\n\r\n    /**\r\n     * 两个四维向量距离。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离。\r\n     */\r\n    static distance(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return Math.sqrt((x * x) + (y * y) + (z * z) + (w * w));\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的点积。\r\n     * @param\ta 向量。\r\n     * @param\tb 向量。\r\n     * @return  点积。\r\n     */\r\n    static dot(a: Vector4, b: Vector4): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个四维向量x、y、z的最小值计算新的四维向量。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static min(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n        out.w = Math.min(a.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个四维向量x、y、z的最大值计算新的四维向量。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static max(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n        out.w = Math.max(a.w, b.w);\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array = null): void {\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n            (<any>this).elements[2] = this.z;\r\n            (<any>this).elements[3] = this.w;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n        Vector2.rewriteNumProperty(this, \"z\", 2);\r\n        Vector2.rewriteNumProperty(this, \"w\", 3);\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Vector4 } from \"./Vector4\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Quaternion } from \"./Quaternion\";\r\n\r\n/**\r\n * <code>Vector3</code> 类用于创建三维向量。\r\n */\r\nexport class Vector3 implements IClone {\r\n    /**@internal\t*/\r\n    static _tempVector4 = new Vector4();\r\n    static _tempVector3 = new Vector3();\r\n\r\n    static readonly ZERO: Readonly<Vector3> = new Vector3(0.0, 0.0, 0.0);\r\n    static readonly ONE: Readonly<Vector3> = new Vector3(1.0, 1.0, 1.0);\r\n    static readonly NegativeUnitX: Readonly<Vector3> = new Vector3(-1, 0, 0);\r\n    static readonly UnitX: Readonly<Vector3> = new Vector3(1, 0, 0);\r\n    static readonly UnitY: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n    static readonly UnitZ: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    static readonly ForwardRH: Readonly<Vector3> = new Vector3(0, 0, -1);\r\n    static readonly ForwardLH: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    static readonly Up: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n\r\n    /**\r\n     * 两个三维向量距离的平方。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return (x * x) + (y * y) + (z * z);\r\n    }\r\n\r\n    /**\r\n     * 两个三维向量距离。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离。\r\n     */\r\n    static distance(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return Math.sqrt((x * x) + (y * y) + (z * z));\r\n    }\r\n\r\n    /**\r\n     * 分别取两个三维向量x、y、z的最小值计算新的三维向量。\r\n     * @param\ta。\r\n     * @param\tb。\r\n     * @param\tout。\r\n     */\r\n    static min(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个三维向量x、y、z的最大值计算新的三维向量。\r\n     * @param\ta a三维向量。\r\n     * @param\tb b三维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static max(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * 根据四元数旋转三维向量。\r\n     * @param\tsource 源三维向量。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static transformQuat(source: Vector3, rotation: Quaternion, out: Vector3): void {\r\n        var x: number = source.x, y: number = source.y, z: number = source.z, qx: number = rotation.x, qy: number = rotation.y, qz: number = rotation.z, qw: number = rotation.w,\r\n\r\n            ix: number = qw * x + qy * z - qz * y, iy: number = qw * y + qz * x - qx * z, iz: number = qw * z + qx * y - qy * x, iw: number = -qx * x - qy * y - qz * z;\r\n\r\n        out.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        out.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        out.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度。\r\n     */\r\n    static scalarLength(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度的平方。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度的平方。\r\n     */\r\n    static scalarLengthSquared(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * 归一化三维向量。\r\n     * @param\ts 源三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static normalize(s: Vector3, out: Vector3): void {\r\n        var x: number = s.x, y: number = s.y, z: number = s.z;\r\n        var len: number = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n            out.z = z * len;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 计算两个三维向量的乘积。\r\n     * @param\ta left三维向量。\r\n     * @param\tb right三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static multiply(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n    }\r\n\r\n    /**\r\n     * 缩放三维向量。\r\n     * @param\ta 源三维向量。\r\n     * @param\tb 缩放值。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static scale(a: Vector3, b: number, out: Vector3): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n    }\r\n\r\n    /**\r\n     * 插值三维向量。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\tt 插值比例。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static lerp(a: Vector3, b: Vector3, t: number, out: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个三维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出三维向量。\r\n     */\r\n    static transformV3ToV3(vector: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var intermediate: Vector4 = Vector3._tempVector4;\r\n        Vector3.transformV3ToV4(vector, transform, intermediate);\r\n        result.x = intermediate.x;\r\n        result.y = intermediate.y;\r\n        result.z = intermediate.z;\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个四维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出四维向量。\r\n     */\r\n    static transformV3ToV4(vector: Vector3, transform: Matrix4x4, result: Vector4): void {\r\n        var vectorX: number = vector.x;\r\n        var vectorY: number = vector.y;\r\n        var vectorZ: number = vector.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (vectorX * transformElem[0]) + (vectorY * transformElem[4]) + (vectorZ * transformElem[8]) + transformElem[12];\r\n        result.y = (vectorX * transformElem[1]) + (vectorY * transformElem[5]) + (vectorZ * transformElem[9]) + transformElem[13];\r\n        result.z = (vectorX * transformElem[2]) + (vectorY * transformElem[6]) + (vectorZ * transformElem[10]) + transformElem[14];\r\n        result.w = (vectorX * transformElem[3]) + (vectorY * transformElem[7]) + (vectorZ * transformElem[11]) + transformElem[15];\r\n    }\r\n\r\n    /**\r\n     * 通过法线矩阵转换一个法线三维向量到另外一个三维向量。\r\n     * @param\tnormal 源法线三维向量。\r\n     * @param\ttransform  法线变换矩阵。\r\n     * @param\tresult 输出法线三维向量。\r\n     */\r\n    static TransformNormal(normal: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var normalX: number = normal.x;\r\n        var normalY: number = normal.y;\r\n        var normalZ: number = normal.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (normalX * transformElem[0]) + (normalY * transformElem[4]) + (normalZ * transformElem[8]);\r\n        result.y = (normalX * transformElem[1]) + (normalY * transformElem[5]) + (normalZ * transformElem[9]);\r\n        result.z = (normalX * transformElem[2]) + (normalY * transformElem[6]) + (normalZ * transformElem[10]);\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个归一化的三维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出三维向量。\r\n     */\r\n    static transformCoordinate(coordinate: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var coordinateX: number = coordinate.x;\r\n        var coordinateY: number = coordinate.y;\r\n        var coordinateZ: number = coordinate.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        var w: number = coordinateX * transformElem[3] + coordinateY * transformElem[7] + coordinateZ * transformElem[11] + transformElem[15];\r\n        result.x = (coordinateX * transformElem[0] + coordinateY * transformElem[4] + coordinateZ * transformElem[8] + transformElem[12]) / w;\r\n        result.y = (coordinateX * transformElem[1] + coordinateY * transformElem[5] + coordinateZ * transformElem[9] + transformElem[13]) / w;\r\n        result.z = (coordinateX * transformElem[2] + coordinateY * transformElem[6] + coordinateZ * transformElem[10] + transformElem[14]) / w;\r\n    }\r\n\r\n    /**\r\n     * 求一个指定范围的向量\r\n     * @param\tvalue clamp向量\r\n     * @param\tmin  最小\r\n     * @param\tmax  最大\r\n     * @param   out 输出向量\r\n     */\r\n    static Clamp(value: Vector3, min: Vector3, max: Vector3, out: Vector3): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的和。\r\n     * @param\ta left三维向量。\r\n     * @param\tb right三维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static add(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的差。\r\n     * @param\ta  left三维向量。\r\n     * @param\tb  right三维向量。\r\n     * @param\to out 输出向量。\r\n     */\r\n    static subtract(a: Vector3, b: Vector3, o: Vector3): void {\r\n        o.x = a.x - b.x;\r\n        o.y = a.y - b.y;\r\n        o.z = a.z - b.z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的叉乘。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\to 输出向量。\r\n     */\r\n    static cross(a: Vector3, b: Vector3, o: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, bx: number = b.x, by: number = b.y, bz: number = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的点积。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @return   点积。\r\n     */\r\n    static dot(a: Vector3, b: Vector3): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * 判断两个三维向量是否相等。\r\n     * @param\ta 三维向量。\r\n     * @param\tb 三维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector3, b: Vector3): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y) && MathUtils3D.nearEqual(a.z, b.z);\r\n    }\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector3</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     * @param\tz  Z轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    /**\r\n     * 求四维向量是否相等\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value: Vector3) {\r\n        return Vector3.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * 设置xyz值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number): Vector3 {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 设置xyz值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @return 返回Vector3\r\n     */\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  arr 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n\r\n    /**\r\n     * 写入Array数组\r\n     * @param arr 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n    }\r\n\r\n    /**\r\n     * 计算长度。\r\n     * @return 长度。\r\n     */\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    /**\r\n     * 计算平方。\r\n     * @return 返回向量长度的平方。\r\n     */\r\n    lengthSquared() {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n\r\n    /**\r\n     * 向量相减\r\n     * @param b 被减向量\r\n     * @param out \r\n     * @returns \r\n     */\r\n    vsub(b: Vector3, out: Vector3) {\r\n        out.x = this.x - b.x;\r\n        out.y = this.y - b.y;\r\n        out.z = this.z - b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 向量相加\r\n     * @param b 加向量\r\n     * @param out \r\n     * @returns \r\n     */\r\n    vadd(b: Vector3, out: Vector3) {\r\n        out.x = this.x + b.x;\r\n        out.y = this.y + b.y;\r\n        out.z = this.z + b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 缩放向量\r\n     * @param s 缩放值\r\n     * @param out\r\n     * @returns 返回缩放向量\r\n     */\r\n    scale(s: number, out: Vector3) {\r\n        out.x = this.x * s;\r\n        out.y = this.y * s;\r\n        out.z = this.z * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 归一化向量\r\n     * @returns \r\n     */\r\n    normalize() {\r\n        let x = this.x, y = this.y, z = this.z;\r\n        var len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            this.x = x * len;\r\n            this.y = y * len;\r\n            this.z = z * len;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 向量点乘\r\n     * @param b \r\n     * @returns \r\n     */\r\n    dot(b: Vector3): number {\r\n        return (this.x * b.x) + (this.y * b.y) + (this.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * 向量叉乘\r\n     * @param b \r\n     * @param o \r\n     * @returns \r\n     */\r\n    cross(b: Vector3, o: Vector3): Vector3 {\r\n        var ax = this.x, ay = this.y, az = this.z, bx = b.x, by = b.y, bz = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector3: Vector3 = (<Vector3>destObject);\r\n        destVector3.x = this.x;\r\n        destVector3.y = this.y;\r\n        destVector3.z = this.z;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector3: Vector3 = new Vector3();\r\n        this.cloneTo(destVector3);\r\n        return destVector3;\r\n    }\r\n\r\n    /**\r\n     * 设置默认值\r\n     */\r\n    toDefault(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n}\r\n\r\n","import { Vector3 } from \"./Vector3\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _DEFAULTELEMENTS = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\nconst _tempV30 = new Vector3();\r\nconst _tempV31 = new Vector3();\r\nconst _tempV32 = new Vector3();\r\n\r\n/**\r\n * <code>Matrix3x3</code> 类用于创建3x3矩阵。\r\n */\r\nexport class Matrix3x3 implements IClone {\r\n    static readonly DEFAULT: Readonly<Matrix3x3> = new Matrix3x3();\r\n    static Temp: Matrix3x3 = new Matrix3x3();\r\n    /**\r\n     * 通过四元数创建旋转矩阵。\r\n     * @param rotation 旋转四元数。\r\n     * @param out 旋转矩阵。\r\n     */\r\n\r\n    static createRotationQuaternion(rotation: Quaternion, out: Matrix3x3) {\r\n        var rotX: number = rotation.x;\r\n        var rotY: number = rotation.y;\r\n        var rotZ: number = rotation.z;\r\n        var rotW: number = rotation.w;\r\n\r\n        var xx: number = rotX * rotX;\r\n        var yy: number = rotY * rotY;\r\n        var zz: number = rotZ * rotZ;\r\n        var xy: number = rotX * rotY;\r\n        var zw: number = rotZ * rotW;\r\n        var zx: number = rotZ * rotX;\r\n        var yw: number = rotY * rotW;\r\n        var yz: number = rotY * rotZ;\r\n        var xw: number = rotX * rotW;\r\n\r\n        var resultE: Float32Array = out.elements;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[3] = 2.0 * (xy - zw);\r\n        resultE[4] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[5] = 2.0 * (yz + xw);\r\n        resultE[6] = 2.0 * (zx + yw);\r\n        resultE[7] = 2.0 * (yz - xw);\r\n        resultE[8] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 根据指定平移生成3x3矩阵\r\n     * @param\ttra 平移\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromTranslation(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = trans.x;\r\n        e[7] = trans.y;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * 根据指定旋转生成3x3矩阵\r\n     * @param\trad  旋转值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromRotation(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        e[0] = c;\r\n        e[1] = s;\r\n        e[2] = 0;\r\n\r\n        e[3] = -s;\r\n        e[4] = c;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * 根据制定缩放生成3x3矩阵\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromScaling(scale: Vector3, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        e[0] = scale.x;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n\r\n        e[3] = 0;\r\n        e[4] = scale.y;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = scale.z;\r\n    }\r\n\r\n    /**\r\n     * 从4x4矩阵转换为一个3x3的矩阵（原则为upper-left,忽略第四行四列）\r\n     * @param\tsou 4x4源矩阵\r\n     * @param\tout 3x3输出矩阵\r\n     */\r\n    static createFromMatrix4x4(sou: Matrix4x4, out: Matrix3x3): void {\r\n        var souE: Float32Array = sou.elements;\r\n        var outE: Float32Array = out.elements;\r\n        outE[0] = souE[0];\r\n        outE[1] = souE[1];\r\n        outE[2] = souE[2];\r\n        outE[3] = souE[4];\r\n        outE[4] = souE[5];\r\n        outE[5] = souE[6];\r\n        outE[6] = souE[8];\r\n        outE[7] = souE[9];\r\n        outE[8] = souE[10];\r\n    }\r\n\r\n    /**\r\n     *  两个3x3矩阵的相乘\r\n     * @param\tleft 左矩阵\r\n     * @param\tright  右矩阵\r\n     * @param\tout  输出矩阵\r\n     */\r\n    static multiply(left: Matrix3x3, right: Matrix3x3, out: Matrix3x3): void {\r\n        var l: Float32Array = left.elements;\r\n        var r: Float32Array = right.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2];\r\n        var l21: number = l[3], l22: number = l[4], l23: number = l[5];\r\n        var l31: number = l[6], l32: number = l[7], l33: number = l[8];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2];\r\n        var r21: number = r[3], r22: number = r[4], r23: number = r[5];\r\n        var r31: number = r[6], r32: number = r[7], r33: number = r[8];\r\n\r\n        e[0] = r11 * l11 + r12 * l21 + r13 * l31;\r\n        e[1] = r11 * l12 + r12 * l22 + r13 * r32;\r\n        e[2] = r11 * l13 + r12 * l23 + r13 * l33;\r\n\r\n        e[3] = r21 * l11 + r22 * l21 + r23 * l31;\r\n        e[4] = r21 * l12 + r22 * l22 + r23 * l32;\r\n        e[5] = r21 * l13 + r22 * l23 + r23 * l33;\r\n\r\n        e[6] = r31 * l11 + r32 * l21 + r33 * l31;\r\n        e[7] = r31 * l12 + r32 * l22 + r33 * l32;\r\n        e[8] = r31 * l13 + r32 * l23 + r33 * l33;\r\n    }\r\n\r\n    /**矩阵元素数组*/\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * 创建一个 <code>Matrix3x3</code> 实例。\r\n     */\r\n    constructor(createElement: boolean = true) {\r\n        createElement && (this.elements = _DEFAULTELEMENTS.slice());\r\n    }\r\n    /**\r\n     * 克隆\r\n     * @param destObject \r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n    /**\r\n     * 计算3x3矩阵的行列式\r\n     * @return    矩阵的行列式\r\n     */\r\n    determinant(): number {\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n\r\n    /**\r\n     * 通过一个二维向量转换3x3矩阵\r\n     * @param\ttra 转换向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    translate(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n        var x: number = trans.x, y: number = trans.y;\r\n\r\n        e[0] = a00;\r\n        e[1] = a01;\r\n        e[2] = a02;\r\n\r\n        e[3] = a10;\r\n        e[4] = a11;\r\n        e[5] = a12;\r\n\r\n        e[6] = x * a00 + y * a10 + a20;\r\n        e[7] = x * a01 + y * a11 + a21;\r\n        e[8] = x * a02 + y * a12 + a22;\r\n    }\r\n\r\n    /**\r\n     * 根据指定角度旋转3x3矩阵\r\n     * @param\trad 旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    rotate(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        var s: number = Math.sin(rad);\r\n        var c: number = Math.cos(rad);\r\n\r\n        e[0] = c * a00 + s * a10;\r\n        e[1] = c * a01 + s * a11;\r\n        e[2] = c * a02 + s * a12;\r\n\r\n        e[3] = c * a10 - s * a00;\r\n        e[4] = c * a11 - s * a01;\r\n        e[5] = c * a12 - s * a02;\r\n\r\n        e[6] = a20;\r\n        e[7] = a21;\r\n        e[8] = a22;\r\n    }\r\n\r\n    /**\r\n     *根据制定缩放3x3矩阵\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    scale(scale: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var x: number = scale.x, y: number = scale.y;\r\n\r\n        e[0] = x * f[0];\r\n        e[1] = x * f[1];\r\n        e[2] = x * f[2];\r\n\r\n        e[3] = y * f[3];\r\n        e[4] = y * f[4];\r\n        e[5] = y * f[5];\r\n\r\n        e[6] = f[6];\r\n        e[7] = f[7];\r\n        e[8] = f[8];\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的逆矩阵\r\n     * @param\tout 输出的逆矩阵\r\n     */\r\n    invert(out: Matrix3x3): void {\r\n        var e = out.elements;\r\n        var f = this.elements;\r\n\r\n        var a00 = f[0], a01 = f[1], a02 = f[2];\r\n        var a10 = f[3], a11 = f[4], a12 = f[5];\r\n        var a20 = f[6], a21 = f[7], a22 = f[8];\r\n\r\n        var b01: number = a22 * a11 - a12 * a21;\r\n        var b11: number = -a22 * a10 + a12 * a20;\r\n        var b21: number = a21 * a10 - a11 * a20;\r\n\r\n        // Calculate the determinant\r\n        var det: number = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (!det) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        e[0] = b01 * det;\r\n        e[1] = (-a22 * a01 + a02 * a21) * det;\r\n        e[2] = (a12 * a01 - a02 * a11) * det;\r\n        e[3] = b11 * det;\r\n        e[4] = (a22 * a00 - a02 * a20) * det;\r\n        e[5] = (-a12 * a00 + a02 * a10) * det;\r\n        e[6] = b21 * det;\r\n        e[7] = (-a21 * a00 + a01 * a20) * det;\r\n        e[8] = (a11 * a00 - a01 * a10) * det;\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的转置矩阵\r\n     * @param \tout 输出矩阵\r\n     */\r\n    transpose(out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        if (out === this) {\r\n            var a01: number = f[1], a02: number = f[2], a12: number = f[5];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = a01;\r\n            e[5] = f[7];\r\n            e[6] = a02;\r\n            e[7] = a12;\r\n        } else {\r\n            e[0] = f[0];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = f[1];\r\n            e[4] = f[4];\r\n            e[5] = f[7];\r\n            e[6] = f[2];\r\n            e[7] = f[5];\r\n            e[8] = f[8];\r\n        }\r\n    }\r\n\r\n    /** 设置已有的矩阵为单位矩阵*/\r\n    identity(): void {\r\n        this.elements.set(_DEFAULTELEMENTS);\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;*/\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        d.set(s);\r\n        /*\r\n        for (i = 0; i < 9; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix3x3 = new Matrix3x3(false);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * 计算观察3x3矩阵\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出3x3矩阵\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        Vector3.subtract(eye, target, _tempV30);//WebGL为右手坐标系统\r\n        Vector3.normalize(_tempV30, _tempV30);\r\n\r\n        Vector3.cross(up, _tempV30, _tempV31);\r\n        Vector3.normalize(_tempV31, _tempV31);\r\n\r\n        Vector3.cross(_tempV30, _tempV31, _tempV32);\r\n\r\n        var v0: Vector3 = _tempV30;\r\n        var v1: Vector3 = _tempV31;\r\n        var v2: Vector3 = _tempV32;\r\n\r\n        var me: Float32Array = out.elements;\r\n        me[0] = v1.x;\r\n        me[3] = v1.y;\r\n        me[6] = v1.z;\r\n\r\n        me[1] = v2.x;\r\n        me[4] = v2.y;\r\n        me[7] = v2.z;\r\n\r\n        me[2] = v0.x;\r\n        me[5] = v0.y;\r\n        me[8] = v0.z;\r\n    }\r\n\r\n    /**\r\n     * forward看向target\r\n     * forward在这里规定为z轴\r\n     * @param eye \r\n     * @param target 目标\r\n     * @param up \r\n     * @param out \r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        var vx = _tempV31;\r\n        var vy = _tempV32;\r\n        var vz = _tempV30;\r\n\r\n        target.vsub(eye, vz).normalize();\r\n        up.cross(vz, vx).normalize();\r\n        vz.cross(vx, vy);\r\n\r\n        var m = out.elements;\r\n        m[0] = vx.x; m[1] = vx.y; m[2] = vx.z;\r\n        m[3] = vy.x; m[4] = vy.y; m[5] = vy.z;\r\n        m[6] = vz.x; m[7] = vz.y; m[8] = vz.z;\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Matrix3x3 } from \"./Matrix3x3\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst TEMPVector30 = new Vector3();\r\nconst TEMPVector31 = new Vector3();\r\nconst TEMPVector32 = new Vector3();\r\nconst TEMPVector33 = new Vector3();\r\nconst _tempMatrix3x3 = new Matrix3x3();\r\n\r\n/**\r\n * <code>Quaternion</code> 类用于创建四元数。\r\n */\r\nexport class Quaternion implements IClone {\r\n\r\n    /**@internal */\r\n    static TEMP = new Quaternion();\r\n\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly DEFAULT: Readonly<Quaternion> = new Quaternion();\r\n    /**无效矩阵,禁止修改*/\r\n    static readonly NAN: Readonly<Quaternion> = new Quaternion(NaN, NaN, NaN, NaN);\r\n\r\n    /**\r\n     *  从欧拉角生成四元数（顺序为Yaw、Pitch、Roll）\r\n     * @param\tyaw yaw值\r\n     * @param\tpitch pitch值\r\n     * @param\troll roll值\r\n     * @param\tout 输出四元数\r\n     */\r\n    static createFromYawPitchRoll(yaw: number, pitch: number, roll: number, out: Quaternion): void {\r\n        var halfRoll: number = roll * 0.5;\r\n        var halfPitch: number = pitch * 0.5;\r\n        var halfYaw: number = yaw * 0.5;\r\n\r\n        var sinRoll: number = Math.sin(halfRoll);\r\n        var cosRoll: number = Math.cos(halfRoll);\r\n        var sinPitch: number = Math.sin(halfPitch);\r\n        var cosPitch: number = Math.cos(halfPitch);\r\n        var sinYaw: number = Math.sin(halfYaw);\r\n        var cosYaw: number = Math.cos(halfYaw);\r\n\r\n\r\n        out.x = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\r\n        out.y = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\r\n        out.z = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\r\n        out.w = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数相乘\r\n     * @param\tleft left四元数\r\n     * @param\tright  right四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    static multiply(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        var lx: number = left.x;\r\n        var ly: number = left.y;\r\n        var lz: number = left.z;\r\n        var lw: number = left.w;\r\n        var rx: number = right.x;\r\n        var ry: number = right.y;\r\n        var rz: number = right.z;\r\n        var rw: number = right.w;\r\n        var a: number = (ly * rz - lz * ry);\r\n        var b: number = (lz * rx - lx * rz);\r\n        var c: number = (lx * ry - ly * rx);\r\n        var d: number = (lx * rx + ly * ry + lz * rz);\r\n        out.x = (lx * rw + rx * lw) + a;\r\n        out.y = (ly * rw + ry * lw) + b;\r\n        out.z = (lz * rw + rz * lw) + c;\r\n        out.w = lw * rw - d;\r\n    }\r\n\r\n    /**\r\n   * Calculate a quaternion rotates around an arbitrary axis.\r\n   * @param axis - The axis\r\n   * @param rad - The rotation angle in radians\r\n   * @param out - The quaternion after rotate\r\n   */\r\n    static rotationAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        const normalAxis = Vector3._tempVector3\r\n        Vector3.normalize(axis, normalAxis);\r\n        rad *= 0.5;\r\n        const s = Math.sin(rad);\r\n        out.x = normalAxis.x * s;\r\n        out.y = normalAxis.y * s;\r\n        out.z = normalAxis.z * s;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n    private static arcTanAngle(x: number, y: number): number {\r\n        if (x == 0) {\r\n            if (y == 1)\r\n                return Math.PI / 2;\r\n            return -Math.PI / 2;\r\n        }\r\n        if (x > 0)\r\n            return Math.atan(y / x);\r\n        if (x < 0) {\r\n            if (y > 0)\r\n                return Math.atan(y / x) + Math.PI;\r\n            return Math.atan(y / x) - Math.PI;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private static angleTo(from: Vector3, location: Vector3, angle: Vector3): void {\r\n        Vector3.subtract(location, from, TEMPVector30);\r\n        Vector3.normalize(TEMPVector30, TEMPVector30);\r\n\r\n        angle.x = Math.asin(TEMPVector30.y);\r\n        angle.y = Quaternion.arcTanAngle(-TEMPVector30.z, -TEMPVector30.x);\r\n    }\r\n\r\n    /**\r\n     * 从指定的轴和角度计算四元数\r\n     * @param\taxis  轴\r\n     * @param\trad  角度\r\n     * @param\tout  输出四元数\r\n     */\r\n    static createFromAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        rad = rad * 0.5;\r\n        var s: number = Math.sin(rad);\r\n        out.x = s * axis.x;\r\n        out.y = s * axis.y;\r\n        out.z = s * axis.z;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n\r\n    /**\r\n     *  从旋转矩阵计算四元数\r\n     * @param\tmat 旋转矩阵\r\n     * @param\tout  输出四元数\r\n     */\r\n    static createFromMatrix4x4(mat: Matrix4x4, out: Quaternion): void {\r\n        var me: Float32Array = mat.elements;\r\n\r\n        var sqrt: number;\r\n        var half: number;\r\n        var scale: number = me[0] + me[5] + me[10];\r\n\r\n        if (scale > 0.0) {\r\n            sqrt = Math.sqrt(scale + 1.0);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (me[6] - me[9]) * sqrt;\r\n            out.y = (me[8] - me[2]) * sqrt;\r\n            out.z = (me[1] - me[4]) * sqrt;\r\n        } else if ((me[0] >= me[5]) && (me[0] >= me[10])) {\r\n            sqrt = Math.sqrt(1.0 + me[0] - me[5] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (me[1] + me[4]) * half;\r\n            out.z = (me[2] + me[8]) * half;\r\n            out.w = (me[6] - me[9]) * half;\r\n        } else if (me[5] > me[10]) {\r\n            sqrt = Math.sqrt(1.0 + me[5] - me[0] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[4] + me[1]) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (me[9] + me[6]) * half;\r\n            out.w = (me[8] - me[2]) * half;\r\n        } else {\r\n            sqrt = Math.sqrt(1.0 + me[10] - me[0] - me[5]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[8] + me[2]) * half;\r\n            out.y = (me[9] + me[6]) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (me[1] - me[4]) * half;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 球面插值\r\n     * @param\tleft left四元数\r\n     * @param\tright  right四元数\r\n     * @param\tt 插值比例\r\n     * @param\tout 输出四元数\r\n     * @returns 输出Float32Array\r\n     */\r\n    static slerp(left: Quaternion, right: Quaternion, t: number, out: Quaternion): Quaternion {\r\n        var ax: number = left.x, ay: number = left.y, az: number = left.z, aw: number = left.w, bx: number = right.x, by: number = right.y, bz: number = right.z, bw: number = right.w;\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out.x = scale0 * ax + scale1 * bx;\r\n        out.y = scale0 * ay + scale1 * by;\r\n        out.z = scale0 * az + scale1 * bz;\r\n        out.w = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的线性插值\r\n     * @param\tleft left四元数\r\n     * @param\tright right四元数b\r\n     * @param\tt 插值比例\r\n     * @param\tout 输出四元数\r\n     */\r\n    static lerp(left: Quaternion, right: Quaternion, amount: number, out: Quaternion): void {\r\n        var inverse: number = 1.0 - amount;\r\n        if (Quaternion.dot(left, right) >= 0) {\r\n            out.x = (inverse * left.x) + (amount * right.x);\r\n            out.y = (inverse * left.y) + (amount * right.y);\r\n            out.z = (inverse * left.z) + (amount * right.z);\r\n            out.w = (inverse * left.w) + (amount * right.w);\r\n        } else {\r\n            out.x = (inverse * left.x) - (amount * right.x);\r\n            out.y = (inverse * left.y) - (amount * right.y);\r\n            out.z = (inverse * left.z) - (amount * right.z);\r\n            out.w = (inverse * left.w) - (amount * right.w);\r\n        }\r\n        out.normalize(out);\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的和\r\n     * @param\tleft  left四元数\r\n     * @param\tright right 四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    static add(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        out.x = left.x + right.x;\r\n        out.y = left.y + right.y;\r\n        out.z = left.z + right.z;\r\n        out.w = left.w + right.w;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的点积\r\n     * @param\tleft left四元数\r\n     * @param\tright right四元数\r\n     * @return  点积\r\n     */\r\n    static dot(left: Quaternion, right: Quaternion): number {\r\n        return left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\r\n    }\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n    /**W轴坐标*/\r\n    w: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Quaternion</code> 实例。\r\n     * @param\tx 四元数的x值\r\n     * @param\ty 四元数的y值\r\n     * @param\tz 四元数的z值\r\n     * @param\tw 四元数的w值\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置四元数的值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置四元数的值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @return 返回四元数\r\n     */\r\n    set(x: number, y: number, z: number, w: number) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n        return this;\r\n    }\r\n    /**\r\n     * 根据缩放值缩放四元数\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出四元数\r\n     */\r\n    scaling(scaling: number, out: Quaternion): void {\r\n        out.x = this.x * scaling;\r\n        out.y = this.y * scaling;\r\n        out.z = this.z * scaling;\r\n        out.w = this.w * scaling;\r\n    }\r\n\r\n    /**\r\n     * 归一化四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    normalize(out: Quaternion): void {\r\n        var len: number = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = this.x * len;\r\n            out.y = this.y * len;\r\n            out.z = this.z * len;\r\n            out.w = this.w * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算四元数的长度\r\n     * @return  长度\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 根据绕X轴的角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateX(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var bx: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.w * bx;\r\n        out.y = this.y * bw + this.z * bx;\r\n        out.z = this.z * bw - this.y * bx;\r\n        out.w = this.w * bw - this.x * bx;\r\n    }\r\n\r\n    /**\r\n     * 根据绕Y轴的制定角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateY(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var by: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw - this.z * by;\r\n        out.y = this.y * bw + this.w * by;\r\n        out.z = this.z * bw + this.x * by;\r\n        out.w = this.w * bw - this.y * by;\r\n    }\r\n\r\n    /**\r\n     * 根据绕Z轴的制定角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateZ(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n        var bz: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.y * bz;\r\n        out.y = this.y * bw - this.x * bz;\r\n        out.z = this.z * bw + this.w * bz;\r\n        out.w = this.w * bw - this.z * bz;\r\n    }\r\n\r\n    /**\r\n     * 分解四元数到欧拉角（顺序为Yaw、Pitch、Roll），参考自http://xboxforums.create.msdn.com/forums/p/4574/23988.aspx#23988,问题绕X轴翻转超过±90度时有，会产生瞬间反转\r\n     * @param\tquaternion 源四元数\r\n     * @param\tout 欧拉角值\r\n     */\r\n    getYawPitchRoll(out: Vector3): void {\r\n\r\n        Vector3.transformQuat(Vector3.ForwardRH, this, TEMPVector31/*forwarldRH*/);\r\n\r\n        Vector3.transformQuat(Vector3.Up, this, TEMPVector32/*up*/);\r\n        var upe: Vector3 = TEMPVector32;\r\n\r\n        Quaternion.angleTo(Vector3.ZERO, TEMPVector31, TEMPVector33/*angle*/);\r\n        var angle: Vector3 = TEMPVector33;\r\n\r\n        if (angle.x == Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(upe.z, upe.x);\r\n            angle.z = 0;\r\n        } else if (angle.x == -Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(-upe.z, -upe.x);\r\n            angle.z = 0;\r\n        } else {\r\n            Matrix4x4.createRotationY(-angle.y, Matrix4x4.TEMPMatrix0);\r\n            Matrix4x4.createRotationX(-angle.x, Matrix4x4.TEMPMatrix1);\r\n\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix0, TEMPVector32);\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix1, TEMPVector32);\r\n            angle.z = Quaternion.arcTanAngle(upe.y, -upe.x);\r\n        }\r\n\r\n        // Special cases.\r\n        if (angle.y <= -Math.PI)\r\n            angle.y = Math.PI;\r\n        if (angle.z <= -Math.PI)\r\n            angle.z = Math.PI;\r\n\r\n        if (angle.y >= Math.PI && angle.z >= Math.PI) {\r\n            angle.y = 0;\r\n            angle.z = 0;\r\n            angle.x = Math.PI - angle.x;\r\n        }\r\n\r\n        var oe: Vector3 = out;\r\n        oe.x = angle.y;\r\n        oe.y = angle.x;\r\n        oe.z = angle.z;\r\n    }\r\n\r\n    /**\r\n     * 求四元数的逆\r\n     * @param\tout  输出四元数\r\n     */\r\n    invert(out: Quaternion): void {\r\n        var a0: number = this.x, a1: number = this.y, a2: number = this.z, a3: number = this.w;\r\n        var dot: number = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n        var invDot: number = dot ? 1.0 / dot : 0;\r\n\r\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n        out.x = -a0 * invDot;\r\n        out.y = -a1 * invDot;\r\n        out.z = -a2 * invDot;\r\n        out.w = a3 * invDot;\r\n    }\r\n\r\n    /**\r\n     *设置四元数为单位算数\r\n     * @param out  输出四元数\r\n     */\r\n    identity(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 1;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n        this.w = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        if (this === destObject) {\r\n            return;\r\n        }\r\n        destObject.x = this.x;\r\n        destObject.y = this.y;\r\n        destObject.z = this.z;\r\n        destObject.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Quaternion = new Quaternion();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    equals(b: Quaternion): boolean {\r\n        return MathUtils3D.nearEqual(this.x, b.x) && MathUtils3D.nearEqual(this.y, b.y) && MathUtils3D.nearEqual(this.z, b.z) && MathUtils3D.nearEqual(this.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * 计算旋转观察四元数\r\n     * @param\tforward 方向\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static rotationLookAt(forward: Vector3, up: Vector3, out: Quaternion): void {\r\n        Quaternion.lookAt(Vector3.ZERO, forward, up, out);\r\n    }\r\n\r\n    /**\r\n     * 计算观察四元数（适用Camera 灯光）\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.lookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * 计算观察四元数（适用gameObject）\r\n     * @param eye 观察者位置\r\n     * @param target 目标位置\r\n     * @param up 上向量\r\n     * @param out 输出四元数\r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.forwardLookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * 计算长度的平方。\r\n     * @return 长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z) + (this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 计算四元数的逆四元数。\r\n     * @param\tvalue 四元数。\r\n     * @param\tout 逆四元数。\r\n     */\r\n    static invert(value: Quaternion, out: Quaternion): void {\r\n        var lengthSq: number = value.lengthSquared();\r\n        if (!MathUtils3D.isZero(lengthSq)) {\r\n            lengthSq = 1.0 / lengthSq;\r\n\r\n            out.x = -value.x * lengthSq;\r\n            out.y = -value.y * lengthSq;\r\n            out.z = -value.z * lengthSq;\r\n            out.w = value.w * lengthSq;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过一个3x3矩阵创建一个四元数\r\n     * @param\tmatrix3x3  3x3矩阵\r\n     * @param\tout        四元数\r\n     */\r\n    static rotationMatrix(matrix3x3: Matrix3x3, out: Quaternion): void {\r\n        var me: Float32Array = matrix3x3.elements;\r\n        var m11: number = me[0];\r\n        var m12: number = me[1];\r\n        var m13: number = me[2];\r\n        var m21: number = me[3];\r\n        var m22: number = me[4];\r\n        var m23: number = me[5];\r\n        var m31: number = me[6];\r\n        var m32: number = me[7];\r\n        var m33: number = me[8];\r\n\r\n        var sqrt: number, half: number;\r\n        var scale: number = m11 + m22 + m33;\r\n\r\n        if (scale > 0) {\r\n\r\n            sqrt = Math.sqrt(scale + 1);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (m23 - m32) * sqrt;\r\n            out.y = (m31 - m13) * sqrt;\r\n            out.z = (m12 - m21) * sqrt;\r\n\r\n        } else if ((m11 >= m22) && (m11 >= m33)) {\r\n\r\n            sqrt = Math.sqrt(1 + m11 - m22 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (m12 + m21) * half;\r\n            out.z = (m13 + m31) * half;\r\n            out.w = (m23 - m32) * half;\r\n        } else if (m22 > m33) {\r\n\r\n            sqrt = Math.sqrt(1 + m22 - m11 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m21 + m12) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (m32 + m23) * half;\r\n            out.w = (m31 - m13) * half;\r\n        } else {\r\n\r\n            sqrt = Math.sqrt(1 + m33 - m11 - m22);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m31 + m13) * half;\r\n            out.y = (m32 + m23) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (m12 - m21) * half;\r\n        }\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array = null): void//[NATIVE_TS]\r\n    {\r\n\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n            (<any>this).elements[2] = this.z;\r\n            (<any>this).elements[3] = this.w;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n        Vector2.rewriteNumProperty(this, \"z\", 2);\r\n        Vector2.rewriteNumProperty(this, \"w\", 3);\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _tempVector0 = new Vector3();\r\nconst _tempVector1 = new Vector3();\r\nconst _tempVector2 = new Vector3();\r\nconst _tempVector3 = new Vector3();\r\nconst DEFAULTARRAY = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n\r\n/**\r\n * <code>Matrix4x4</code> 类用于创建4x4矩阵。\r\n */\r\nexport class Matrix4x4 implements IClone {\r\n    /**@internal */\r\n    static TEMPMatrix0: Matrix4x4 = new Matrix4x4();\r\n    /**@internal */\r\n    static TEMPMatrix1: Matrix4x4 = new Matrix4x4();\r\n\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly DEFAULT: Readonly<Matrix4x4> = new Matrix4x4();\r\n    static readonly DEFAULTINVERT: Readonly<Matrix4x4> = new Matrix4x4(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly ZERO: Readonly<Matrix4x4> = new Matrix4x4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\r\n    /**\r\n     * 绕X轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationX(rad: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[7] = oe[8] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[0] = oe[15] = 1;\r\n        oe[5] = oe[10] = c;\r\n        oe[6] = s;\r\n        oe[9] = -s;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * 绕Y轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationY(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[3] = oe[4] = oe[6] = oe[7] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[5] = oe[15] = 1;\r\n        oe[0] = oe[10] = c;\r\n        oe[2] = -s;\r\n        oe[8] = s;\r\n    }\r\n\r\n    /**\r\n     * 绕Z轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationZ(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[2] = oe[3] = oe[6] = oe[7] = oe[8] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[10] = oe[15] = 1;\r\n        oe[0] = oe[5] = c;\r\n        oe[1] = s;\r\n        oe[4] = -s;\r\n    }\r\n\r\n    /**\r\n     * 通过yaw pitch roll旋转创建旋转矩阵。\r\n     * @param\tyaw\r\n     * @param\tpitch\r\n     * @param\troll\r\n     * @param\tresult\r\n     */\r\n    static createRotationYawPitchRoll(yaw: number, pitch: number, roll: number, result: Matrix4x4): void {\r\n        Quaternion.createFromYawPitchRoll(yaw, pitch, roll, Quaternion.TEMP);\r\n        Matrix4x4.createRotationQuaternion(Quaternion.TEMP, result);\r\n    }\r\n\r\n    /**\r\n     * 通过旋转轴axis和旋转角度angle计算旋转矩阵。\r\n     * @param\taxis 旋转轴,假定已经归一化。\r\n     * @param\tangle 旋转角度。\r\n     * @param\tresult 结果矩阵。\r\n     */\r\n    static createRotationAxis(axis: Vector3, angle: number, result: Matrix4x4): void {\r\n        var x: number = axis.x;\r\n        var y: number = axis.y;\r\n        var z: number = axis.z;\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var xx: number = x * x;\r\n        var yy: number = y * y;\r\n        var zz: number = z * z;\r\n        var xy: number = x * y;\r\n        var xz: number = x * z;\r\n        var yz: number = y * z;\r\n\r\n        var resultE: Float32Array = result.elements;\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = xx + (cos * (1.0 - xx));\r\n        resultE[1] = (xy - (cos * xy)) + (sin * z);\r\n        resultE[2] = (xz - (cos * xz)) - (sin * y);\r\n        resultE[4] = (xy - (cos * xy)) - (sin * z);\r\n        resultE[5] = yy + (cos * (1.0 - yy));\r\n        resultE[6] = (yz - (cos * yz)) + (sin * x);\r\n        resultE[8] = (xz - (cos * xz)) + (sin * y);\r\n        resultE[9] = (yz - (cos * yz)) - (sin * x);\r\n        resultE[10] = zz + (cos * (1.0 - zz));\r\n    }\r\n\r\n    /**\r\n     * 通过四元数创建旋转矩阵。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tresult 输出旋转矩阵\r\n     */\r\n    static createRotationQuaternion(rotation: Quaternion, result: Matrix4x4): void {\r\n        var resultE: Float32Array = result.elements;\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[4] = 2.0 * (xy - zw);\r\n        resultE[5] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[6] = 2.0 * (yz + xw);\r\n        resultE[8] = 2.0 * (zx + yw);\r\n        resultE[9] = 2.0 * (yz - xw);\r\n        resultE[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 根据平移计算输出矩阵\r\n     * @param\ttrans  平移向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createTranslate(trans: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[4] = oe[8] = oe[1] = oe[9] = oe[2] = oe[6] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n    }\r\n\r\n    /**\r\n     * 根据缩放计算输出矩阵\r\n     * @param\tscale  缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createScaling(scale: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = scale.x;\r\n        oe[5] = scale.y;\r\n        oe[10] = scale.z;\r\n        oe[1] = oe[4] = oe[8] = oe[12] = oe[9] = oe[13] = oe[2] = oe[6] = oe[14] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算两个矩阵的乘法\r\n     * @param\tleft left矩阵\r\n     * @param\tright  right矩阵\r\n     * @param\tout  输出矩阵\r\n     */\r\n    static multiply(left: Matrix4x4, right: Matrix4x4, out: Matrix4x4): void {\r\n        var l: Float32Array = right.elements;\r\n        var r: Float32Array = left.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2], l14: number = l[3];\r\n        var l21: number = l[4], l22: number = l[5], l23: number = l[6], l24: number = l[7];\r\n        var l31: number = l[8], l32: number = l[9], l33: number = l[10], l34: number = l[11];\r\n        var l41: number = l[12], l42: number = l[13], l43: number = l[14], l44: number = l[15];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2], r14: number = r[3];\r\n        var r21: number = r[4], r22: number = r[5], r23: number = r[6], r24: number = r[7];\r\n        var r31: number = r[8], r32: number = r[9], r33: number = r[10], r34: number = r[11];\r\n        var r41: number = r[12], r42: number = r[13], r43: number = r[14], r44: number = r[15];\r\n\r\n        e[0] = (l11 * r11) + (l12 * r21) + (l13 * r31) + (l14 * r41);\r\n        e[1] = (l11 * r12) + (l12 * r22) + (l13 * r32) + (l14 * r42);\r\n        e[2] = (l11 * r13) + (l12 * r23) + (l13 * r33) + (l14 * r43);\r\n        e[3] = (l11 * r14) + (l12 * r24) + (l13 * r34) + (l14 * r44);\r\n        e[4] = (l21 * r11) + (l22 * r21) + (l23 * r31) + (l24 * r41);\r\n        e[5] = (l21 * r12) + (l22 * r22) + (l23 * r32) + (l24 * r42);\r\n        e[6] = (l21 * r13) + (l22 * r23) + (l23 * r33) + (l24 * r43);\r\n        e[7] = (l21 * r14) + (l22 * r24) + (l23 * r34) + (l24 * r44);\r\n        e[8] = (l31 * r11) + (l32 * r21) + (l33 * r31) + (l34 * r41);\r\n        e[9] = (l31 * r12) + (l32 * r22) + (l33 * r32) + (l34 * r42);\r\n        e[10] = (l31 * r13) + (l32 * r23) + (l33 * r33) + (l34 * r43);\r\n        e[11] = (l31 * r14) + (l32 * r24) + (l33 * r34) + (l34 * r44);\r\n        e[12] = (l41 * r11) + (l42 * r21) + (l43 * r31) + (l44 * r41);\r\n        e[13] = (l41 * r12) + (l42 * r22) + (l43 * r32) + (l44 * r42);\r\n        e[14] = (l41 * r13) + (l42 * r23) + (l43 * r33) + (l44 * r43);\r\n        e[15] = (l41 * r14) + (l42 * r24) + (l43 * r34) + (l44 * r44);\r\n    }\r\n\r\n    /**\r\n     * 从四元数计算旋转矩阵\r\n     * @param\trotation 四元数\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromQuaternion(rotation: Quaternion, out: Matrix4x4): void {\r\n        var e: Float32Array = out.elements;\r\n        var x: number = rotation.x, y: number = rotation.y, z: number = rotation.z, w: number = rotation.w;\r\n        var x2: number = x + x;\r\n        var y2: number = y + y;\r\n        var z2: number = z + z;\r\n\r\n        var xx: number = x * x2;\r\n        var yx: number = y * x2;\r\n        var yy: number = y * y2;\r\n        var zx: number = z * x2;\r\n        var zy: number = z * y2;\r\n        var zz: number = z * z2;\r\n        var wx: number = w * x2;\r\n        var wy: number = w * y2;\r\n        var wz: number = w * z2;\r\n\r\n        e[0] = 1 - yy - zz;\r\n        e[1] = yx + wz;\r\n        e[2] = zx - wy;\r\n        e[3] = 0;\r\n\r\n        e[4] = yx - wz;\r\n        e[5] = 1 - xx - zz;\r\n        e[6] = zy + wx;\r\n        e[7] = 0;\r\n\r\n        e[8] = zx + wy;\r\n        e[9] = zy - wx;\r\n        e[10] = 1 - xx - yy;\r\n        e[11] = 0;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算仿射矩阵\r\n     * @param\ttrans 平移\r\n     * @param\trot 旋转\r\n     * @param\tscale 缩放\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createAffineTransformation(trans: Vector3, rot: Quaternion, scale: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n\r\n        var x: number = rot.x, y: number = rot.y, z: number = rot.z, w: number = rot.w, x2: number = x + x, y2: number = y + y, z2: number = z + z;\r\n        var xx: number = x * x2, xy: number = x * y2, xz: number = x * z2, yy: number = y * y2, yz: number = y * z2, zz: number = z * z2;\r\n        var wx: number = w * x2, wy: number = w * y2, wz: number = w * z2, sx: number = scale.x, sy: number = scale.y, sz: number = scale.z;\r\n\r\n        oe[0] = (1 - (yy + zz)) * sx;\r\n        oe[1] = (xy + wz) * sx;\r\n        oe[2] = (xz - wy) * sx;\r\n        oe[3] = 0;\r\n        oe[4] = (xy - wz) * sy;\r\n        oe[5] = (1 - (xx + zz)) * sy;\r\n        oe[6] = (yz + wx) * sy;\r\n        oe[7] = 0;\r\n        oe[8] = (xz + wy) * sz;\r\n        oe[9] = (yz - wx) * sz;\r\n        oe[10] = (1 - (xx + yy)) * sz;\r\n        oe[11] = 0;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算观察矩阵\r\n     * @param\teye 视点位置\r\n     * @param\ttarget 视点目标\r\n     * @param\tup 向上向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4x4): void {\r\n        var oE: Float32Array = out.elements;\r\n        var xaxis: Vector3 = _tempVector0;\r\n        var yaxis: Vector3 = _tempVector1;\r\n        var zaxis: Vector3 = _tempVector2;\r\n        Vector3.subtract(eye, target, zaxis);\r\n        Vector3.normalize(zaxis, zaxis);\r\n        Vector3.cross(up, zaxis, xaxis);\r\n        Vector3.normalize(xaxis, xaxis);\r\n        Vector3.cross(zaxis, xaxis, yaxis);\r\n\r\n        oE[3] = oE[7] = oE[11] = 0;\r\n        oE[15] = 1;\r\n        oE[0] = xaxis.x;\r\n        oE[4] = xaxis.y;\r\n        oE[8] = xaxis.z;\r\n        oE[1] = yaxis.x;\r\n        oE[5] = yaxis.y;\r\n        oE[9] = yaxis.z;\r\n        oE[2] = zaxis.x;\r\n        oE[6] = zaxis.y;\r\n        oE[10] = zaxis.z;\r\n\r\n        oE[12] = -Vector3.dot(xaxis, eye);\r\n        oE[13] = -Vector3.dot(yaxis, eye);\r\n        oE[14] = -Vector3.dot(zaxis, eye);\r\n    }\r\n\r\n    /**\r\n     * 通过FOV创建透视投影矩阵。\r\n     * @param\tfov  视角。\r\n     * @param\taspect 横纵比。\r\n     * @param\tnear 近裁面。\r\n     * @param\tfar 远裁面。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createPerspective(fov: number, aspect: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var yScale: number = 1.0 / Math.tan(fov * 0.5);\r\n        var xScale: number = yScale / aspect;\r\n\r\n        var halfWidth: number = znear / xScale;\r\n        var halfHeight: number = znear / yScale;\r\n        Matrix4x4.createPerspectiveOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, znear, zfar, out);\r\n    }\r\n\r\n    /**\r\n     * 创建透视投影矩阵。\r\n     * @param\tleft 视椎左边界。\r\n     * @param\tright 视椎右边界。\r\n     * @param\tbottom 视椎底边界。\r\n     * @param\ttop 视椎顶边界。\r\n     * @param\tznear 视椎近边界。\r\n     * @param\tzfar 视椎远边界。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createPerspectiveOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = zfar / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[7] = oe[12] = oe[13] = oe[15] = 0;\r\n        oe[0] = 2.0 * znear / (right - left);\r\n        oe[5] = 2.0 * znear / (top - bottom);\r\n        oe[8] = (left + right) / (right - left);\r\n        oe[9] = (top + bottom) / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[11] = -1.0;\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**\r\n     * 计算正交投影矩阵。\r\n     * @param\tleft 视椎左边界。\r\n     * @param\tright 视椎右边界。\r\n     * @param\tbottom 视椎底边界。\r\n     * @param\ttop 视椎顶边界。\r\n     * @param\tnear 视椎近边界。\r\n     * @param\tfar 视椎远边界。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createOrthoOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = 1.0 / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[8] = oe[7] = oe[9] = oe[11] = 0;\r\n        oe[15] = 1;\r\n        oe[0] = 2.0 / (right - left);\r\n        oe[5] = 2.0 / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[12] = (left + right) / (left - right);\r\n        oe[13] = (top + bottom) / (bottom - top);\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**矩阵元素数组*/\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * 创建一个 <code>Matrix4x4</code> 实例。\r\n     * @param\t4x4矩阵的各元素\r\n     */\r\n    constructor(m11: number = 1, m12: number = 0, m13: number = 0, m14: number = 0, m21: number = 0, m22: number = 1, m23: number = 0, m24: number = 0, m31: number = 0, m32: number = 0, m33: number = 1, m34: number = 0, m41: number = 0, m42: number = 0, m43: number = 0, m44: number = 1, elements: Float32Array = null) {\r\n        if (arguments.length == 0) {\r\n            this.elements = DEFAULTARRAY.slice();\r\n            return;\r\n        }\r\n        if (arguments.length === 1 && arguments[0] === null)\r\n            return;\r\n\r\n        var e: Float32Array = elements ? this.elements = elements : this.elements = new Float32Array(16);//TODO:[NATIVE]临时\r\n        e[0] = m11;\r\n        e[1] = m12;\r\n        e[2] = m13;\r\n        e[3] = m14;\r\n        e[4] = m21;\r\n        e[5] = m22;\r\n        e[6] = m23;\r\n        e[7] = m24;\r\n        e[8] = m31;\r\n        e[9] = m32;\r\n        e[10] = m33;\r\n        e[11] = m34;\r\n        e[12] = m41;\r\n        e[13] = m42;\r\n        e[14] = m43;\r\n        e[15] = m44;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param row \r\n     * @param column \r\n     * @returns \r\n     */\r\n    getElementByRowColumn(row: number, column: number): number {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        return this.elements[(row * 4) + column];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param row \r\n     * @param column \r\n     * @param value \r\n     */\r\n    setElementByRowColumn(row: number, column: number, value: number): void {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        this.elements[(row * 4) + column] = value;\r\n    }\r\n\r\n    /**\r\n  * 四元数生成矩阵\r\n  * @param rotation \r\n  */\r\n    setRotation(rotation: Quaternion): void {\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1.0 - (2.0 * (yy + zz));\r\n        e[1] = 2.0 * (xy + zw);\r\n        e[2] = 2.0 * (zx - yw);\r\n        e[4] = 2.0 * (xy - zw);\r\n        e[5] = 1.0 - (2.0 * (zz + xx));\r\n        e[6] = 2.0 * (yz + xw);\r\n        e[8] = 2.0 * (zx + yw);\r\n        e[9] = 2.0 * (yz - xw);\r\n        e[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 位置\r\n     * @param position \r\n     */\r\n    setPosition(position: Vector3): void {\r\n        var e: Float32Array = this.elements;\r\n        e[12] = position.x;\r\n        e[13] = position.y;\r\n        e[14] = position.z;\r\n    }\r\n\r\n\r\n    /**\r\n     * 判断两个4x4矩阵的值是否相等。\r\n     * @param\tother 4x4矩阵\r\n     */\r\n    equalsOtherMatrix(other: Matrix4x4): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var oe: Float32Array = other.elements;\r\n\r\n        return (MathUtils3D.nearEqual(e[0], oe[0]) && MathUtils3D.nearEqual(e[1], oe[1]) && MathUtils3D.nearEqual(e[2], oe[2]) && MathUtils3D.nearEqual(e[3], oe[3]) && MathUtils3D.nearEqual(e[4], oe[4]) && MathUtils3D.nearEqual(e[5], oe[5]) && MathUtils3D.nearEqual(e[6], oe[6]) && MathUtils3D.nearEqual(e[7], oe[7]) && MathUtils3D.nearEqual(e[8], oe[8]) && MathUtils3D.nearEqual(e[9], oe[9]) && MathUtils3D.nearEqual(e[10], oe[10]) && MathUtils3D.nearEqual(e[11], oe[11]) && MathUtils3D.nearEqual(e[12], oe[12]) && MathUtils3D.nearEqual(e[13], oe[13]) && MathUtils3D.nearEqual(e[14], oe[14]) && MathUtils3D.nearEqual(e[15], oe[15]));\r\n    }\r\n\r\n    /**\r\n     * 分解矩阵为平移向量、旋转四元数、缩放向量。\r\n     * @param\ttranslation 平移向量。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tscale 缩放向量。\r\n     * @return 是否分解成功。\r\n     */\r\n    decomposeTransRotScale(translation: Vector3, rotation: Quaternion, scale: Vector3): boolean {\r\n        var rotationMatrix: Matrix4x4 = _tempMatrix4x4;\r\n        if (this.decomposeTransRotMatScale(translation, rotationMatrix, scale)) {\r\n            Quaternion.createFromMatrix4x4(rotationMatrix, rotation);\r\n            return true;\r\n        } else {\r\n            rotation.identity();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 分解矩阵为平移向量、旋转矩阵、缩放向量。\r\n     * @param\ttranslation 平移向量。\r\n     * @param\trotationMatrix 旋转矩阵。\r\n     * @param\tscale 缩放向量。\r\n     * @return 是否分解成功。\r\n     */\r\n    decomposeTransRotMatScale(translation: Vector3, rotationMatrix: Matrix4x4, scale: Vector3): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var te: Vector3 = translation;\r\n        var re: Float32Array = rotationMatrix.elements;\r\n        var se: Vector3 = scale;\r\n\r\n        //Get the translation. \r\n        te.x = e[12];\r\n        te.y = e[13];\r\n        te.z = e[14];\r\n\r\n        //Scaling is the length of the rows. \r\n        var m11: number = e[0], m12: number = e[1], m13: number = e[2];\r\n        var m21: number = e[4], m22: number = e[5], m23: number = e[6];\r\n        var m31: number = e[8], m32: number = e[9], m33: number = e[10];\r\n\r\n        var sX: number = se.x = Math.sqrt((m11 * m11) + (m12 * m12) + (m13 * m13));\r\n        var sY: number = se.y = Math.sqrt((m21 * m21) + (m22 * m22) + (m23 * m23));\r\n        var sZ: number = se.z = Math.sqrt((m31 * m31) + (m32 * m32) + (m33 * m33));\r\n\r\n        //If any of the scaling factors are zero, than the rotation matrix can not exist. \r\n        if (MathUtils3D.isZero(sX) || MathUtils3D.isZero(sY) || MathUtils3D.isZero(sZ)) {\r\n            re[1] = re[2] = re[3] = re[4] = re[6] = re[7] = re[8] = re[9] = re[11] = re[12] = re[13] = re[14] = 0;\r\n            re[0] = re[5] = re[10] = re[15] = 1;\r\n            return false;\r\n        }\r\n\r\n        // Calculate an perfect orthonormal matrix (no reflections)\r\n        var at: Vector3 = _tempVector0;\r\n        at.x = m31 / sZ;\r\n        at.y = m32 / sZ;\r\n        at.z = m33 / sZ;\r\n        var tempRight: Vector3 = _tempVector1;\r\n        tempRight.x = m11 / sX;\r\n        tempRight.y = m12 / sX;\r\n        tempRight.z = m13 / sX;\r\n        var up: Vector3 = _tempVector2;\r\n        Vector3.cross(at, tempRight, up);\r\n        var right: Vector3 = _tempVector1;\r\n        Vector3.cross(up, at, right);\r\n\r\n        re[3] = re[7] = re[11] = re[12] = re[13] = re[14] = 0;\r\n        re[15] = 1;\r\n        re[0] = right.x;\r\n        re[1] = right.y;\r\n        re[2] = right.z;\r\n\r\n        re[4] = up.x;\r\n        re[5] = up.y;\r\n        re[6] = up.z;\r\n\r\n        re[8] = at.x;\r\n        re[9] = at.y;\r\n        re[10] = at.z;\r\n\r\n        // In case of reflexions//TODO:是否不用计算dot后的值即为结果\r\n        ((re[0] * m11 + re[1] * m12 + re[2] * m13)/*Vector3.dot(right,Right)*/ < 0.0) && (se.x = -sX);\r\n        ((re[4] * m21 + re[5] * m22 + re[6] * m23)/* Vector3.dot(up, Up)*/ < 0.0) && (se.y = -sY);\r\n        ((re[8] * m31 + re[9] * m32 + re[10] * m33)/*Vector3.dot(at, Backward)*/ < 0.0) && (se.z = -sZ);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 分解旋转矩阵的旋转为YawPitchRoll欧拉角。\r\n     * @param\tout float yaw\r\n     * @param\tout float pitch\r\n     * @param\tout float roll\r\n     * @return\r\n     */\r\n    decomposeYawPitchRoll(yawPitchRoll: Vector3): void {//TODO:经飞仙测试,好像有BUG。\r\n        var pitch: number = Math.asin(-this.elements[9]);\r\n        yawPitchRoll.y = pitch;\r\n        // Hardcoded constant - burn him, he's a witch\r\n        // double threshold = 0.001; \r\n        var test: number = Math.cos(pitch);\r\n        if (test > MathUtils3D.zeroTolerance) {\r\n            yawPitchRoll.z = Math.atan2(this.elements[1], this.elements[5]);\r\n            yawPitchRoll.x = Math.atan2(this.elements[8], this.elements[10]);\r\n        } else {\r\n            yawPitchRoll.z = Math.atan2(-this.elements[4], this.elements[0]);\r\n            yawPitchRoll.x = 0.0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 归一化矩阵 \r\n     */\r\n    normalize(): void {\r\n        var v: Float32Array = this.elements;\r\n        var c: number = v[0], d: number = v[1], e: number = v[2], g: number = Math.sqrt(c * c + d * d + e * e);\r\n        if (g) {\r\n            if (g == 1)\r\n                return;\r\n        } else {\r\n            v[0] = 0;\r\n            v[1] = 0;\r\n            v[2] = 0;\r\n            return;\r\n        }\r\n        g = 1 / g;\r\n        v[0] = c * g;\r\n        v[1] = d * g;\r\n        v[2] = e * g;\r\n    }\r\n\r\n    /**\r\n     * 计算矩阵的转置矩阵\r\n     */\r\n    transpose(): Matrix4x4 {\r\n        var e: Float32Array, t: number;\r\n        e = this.elements;\r\n        t = e[1];\r\n        e[1] = e[4];\r\n        e[4] = t;\r\n        t = e[2];\r\n        e[2] = e[8];\r\n        e[8] = t;\r\n        t = e[3];\r\n        e[3] = e[12];\r\n        e[12] = t;\r\n        t = e[6];\r\n        e[6] = e[9];\r\n        e[9] = t;\r\n        t = e[7];\r\n        e[7] = e[13];\r\n        e[13] = t;\r\n        t = e[11];\r\n        e[11] = e[14];\r\n        e[14] = t;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 计算一个矩阵的逆矩阵\r\n     * @param\tout 输出矩阵\r\n     */\r\n    invert(out: Matrix4x4): void {\r\n\r\n        var ae: Float32Array = this.elements;\r\n        var oe: Float32Array = out.elements;\r\n        var a00: number = ae[0], a01: number = ae[1], a02: number = ae[2], a03: number = ae[3], a10: number = ae[4], a11: number = ae[5], a12: number = ae[6], a13: number = ae[7], a20: number = ae[8], a21: number = ae[9], a22: number = ae[10], a23: number = ae[11], a30: number = ae[12], a31: number = ae[13], a32: number = ae[14], a33: number = ae[15],\r\n\r\n            b00: number = a00 * a11 - a01 * a10, b01: number = a00 * a12 - a02 * a10, b02: number = a00 * a13 - a03 * a10, b03: number = a01 * a12 - a02 * a11, b04: number = a01 * a13 - a03 * a11, b05: number = a02 * a13 - a03 * a12, b06: number = a20 * a31 - a21 * a30, b07: number = a20 * a32 - a22 * a30, b08: number = a20 * a33 - a23 * a30, b09: number = a21 * a32 - a22 * a31, b10: number = a21 * a33 - a23 * a31, b11: number = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant \r\n            det: number = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (Math.abs(det) === 0.0) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        oe[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        oe[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        oe[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        oe[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        oe[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        oe[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        oe[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        oe[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        oe[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        oe[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        oe[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        oe[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        oe[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        oe[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        oe[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        oe[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n    }\r\n\r\n    /**\r\n     * 计算BlillBoard矩阵\r\n     * @param\tobjectPosition 物体位置\r\n     * @param\tcameraPosition 相机位置\r\n     * @param\tcameraUp       相机上向量\r\n     * @param\tcameraForward  相机前向量\r\n     * @param\tmat            变换矩阵\r\n     */\r\n    static billboard(objectPosition: Vector3, cameraPosition: Vector3, cameraUp: Vector3, cameraForward: Vector3, mat: Matrix4x4): void {\r\n\r\n        Vector3.subtract(objectPosition, cameraPosition, _tempVector0);\r\n\r\n        var lengthSq: number = Vector3.scalarLengthSquared(_tempVector0);\r\n\r\n        if (MathUtils3D.isZero(lengthSq)) {\r\n            Vector3.scale(cameraForward, -1, _tempVector1);\r\n            _tempVector1.cloneTo(_tempVector0);\r\n        } else {\r\n            Vector3.scale(_tempVector0, 1 / Math.sqrt(lengthSq), _tempVector0);\r\n        }\r\n\r\n        Vector3.cross(cameraUp, _tempVector0, _tempVector2);\r\n        Vector3.normalize(_tempVector2, _tempVector2);\r\n        Vector3.cross(_tempVector0, _tempVector2, _tempVector3);\r\n\r\n        var crosse: Vector3 = _tempVector2;\r\n        var finale: Vector3 = _tempVector3;\r\n        var diffee: Vector3 = _tempVector0;\r\n        var obpose: Vector3 = objectPosition;\r\n\r\n        var mate: Float32Array = mat.elements;\r\n        mate[0] = crosse.x;\r\n        mate[1] = crosse.y;\r\n        mate[2] = crosse.z;\r\n        mate[3] = 0.0;\r\n        mate[4] = finale.x;\r\n        mate[5] = finale.y;\r\n        mate[6] = finale.z;\r\n        mate[7] = 0.0;\r\n        mate[8] = diffee.x;\r\n        mate[9] = diffee.y;\r\n        mate[10] = diffee.z;\r\n        mate[11] = 0.0;\r\n        mate[12] = obpose.x;\r\n        mate[13] = obpose.y;\r\n        mate[14] = obpose.z;\r\n        mate[15] = 1.0;\r\n    }\r\n\r\n    /**\r\n     * 归一化\r\n     */\r\n    identity(): void {\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[1] = e[2] = e[3] = e[4] = e[6] = e[7] = e[8] = e[9] = e[11] = e[12] = e[13] = e[14] = 0;\r\n        e[0] = e[5] = e[10] = e[15] = 1;\r\n        */\r\n        this.elements.set(DEFAULTARRAY);\r\n    }\r\n\r\n    /**判断是否是单位矩阵 */\r\n    isIdentity(): boolean {\r\n        let delty = function (num0: number, num1: number) {\r\n            return Math.abs(num0 - num1) < 1e-7;\r\n        }\r\n        let e = this.elements;\r\n        let defined = Matrix4x4.DEFAULT.elements;\r\n        for (let i = 0, n = e.length; i < n; i++) {\r\n            if (!delty(e[i], defined[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        destObject.elements.set(this.elements);\r\n        /*for (i = 0; i < 16; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @param destObject \r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix4x4 = new Matrix4x4(null);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    static translation(v3: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = v3.x;\r\n        oe[13] = v3.y;\r\n        oe[14] = v3.z;\r\n    }\r\n\r\n    /**\r\n     * 获取平移向量。\r\n     * @param\tout 平移向量。\r\n     */\r\n    getTranslationVector(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = me[12];\r\n        out.y = me[13];\r\n        out.z = me[14];\r\n    }\r\n\r\n    /**\r\n     * 设置平移向量。\r\n     * @param\ttranslate 平移向量。\r\n     */\r\n    setTranslationVector(translate: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        var ve: Vector3 = translate;\r\n        me[12] = ve.x;\r\n        me[13] = ve.y;\r\n        me[14] = ve.z;\r\n    }\r\n\r\n    /**\r\n     * 获取前向量。\r\n     * @param\tout 前向量。\r\n     */\r\n    getForward(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = -me[8];\r\n        out.y = -me[9];\r\n        out.z = -me[10];\r\n    }\r\n\r\n    /**\r\n     * 设置前向量。\r\n     * @param\tforward 前向量。\r\n     */\r\n    setForward(forward: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        me[8] = -forward.x;\r\n        me[9] = -forward.y;\r\n        me[10] = -forward.z;\r\n    }\r\n\r\n    /**\r\n     * 判断此矩阵是否是反向矩阵\r\n     */\r\n    getInvertFront(): boolean {\r\n        this.decomposeTransRotScale(_tempVector0, Quaternion.TEMP, _tempVector1);\r\n        var scale: Vector3 = _tempVector1;\r\n        var isInvert: boolean = scale.x < 0;\r\n        (scale.y < 0) && (isInvert = !isInvert);\r\n        (scale.z < 0) && (isInvert = !isInvert);\r\n        return isInvert;\r\n    }\r\n}\r\n\r\nconst _tempMatrix4x4 = new Matrix4x4();","import { BaseTexture } from \"../../resource/BaseTexture\";\r\nimport { Resource } from \"../../resource/Resource\";\r\nimport { DefineDatas } from \"./DefineDatas\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\nimport { IClone } from \"../../utils/IClone\";\r\nimport { UniformBufferObject } from \"../UniformBufferObject\";\r\nimport {\r\n\tUniformBufferParamsType,\r\n\tUnifromBufferData,\r\n} from \"../UniformBufferData\";\r\nimport { Color } from \"../../maths/Color\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Quaternion } from \"../../maths/Quaternion\";\r\nimport { Vector2 } from \"../../maths/Vector2\";\r\nimport { Vector3 } from \"../../maths/Vector3\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { Matrix3x3 } from \"../../maths/Matrix3x3\";\r\ntype uboParams = { ubo: UniformBufferObject; uboBuffer: UnifromBufferData };\r\nexport enum ShaderDataType {\r\n\tInt,\r\n\tBool,\r\n\tFloat,\r\n\tVector2,\r\n\tVector3,\r\n\tVector4,\r\n\tColor,\r\n\tMatrix4x4,\r\n\tTexture2D,\r\n\tTextureCube,\r\n\tBuffer,\r\n\tMatrix3x3,\r\n}\r\n\r\nexport type ShaderDataItem = number | boolean | Vector2 | Vector3 | Vector4 | Color | Matrix4x4 | BaseTexture | Float32Array | Matrix3x3;\r\n\r\nexport function ShaderDataDefaultValue(type: ShaderDataType) {\r\n\tswitch (type) {\r\n\t\tcase ShaderDataType.Int:\r\n\t\t\treturn 0;\r\n\t\tcase ShaderDataType.Bool:\r\n\t\t\treturn false;\r\n\t\tcase ShaderDataType.Float:\r\n\t\t\treturn 0;\r\n\t\tcase ShaderDataType.Vector2:\r\n\t\t\treturn Vector2.ZERO;\r\n\t\tcase ShaderDataType.Vector3:\r\n\t\t\treturn Vector3.ZERO;\r\n\t\tcase ShaderDataType.Vector4:\r\n\t\t\treturn Vector4.ZERO;\r\n\t\tcase ShaderDataType.Color:\r\n\t\t\treturn Color.BLACK;\r\n\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\treturn Matrix4x4.DEFAULT;\r\n\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\treturn Matrix3x3.DEFAULT;\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * 着色器数据类。\r\n */\r\nexport class ShaderData implements IClone {\r\n\t/**@internal 反向找Material*/\r\n\tprotected _ownerResource: Resource = null;\r\n\r\n\t/**@internal */\r\n\tprotected _gammaColorMap: Map<number, Color>;\r\n\t/**@internal */\r\n\tapplyUBO: boolean = false;\r\n\t/**@internal */\r\n\t_data: any = null;\r\n\r\n\t/** @internal */\r\n\t_defineDatas: DefineDatas = new DefineDatas();\r\n\r\n\t/**@internal */\r\n\t_uniformBufferDatas: Map<string, uboParams>;\r\n\r\n\t/**\r\n\t * @internal\r\n\t * key: uniform property id\r\n\t * value: UniformBufferObject\r\n\t * 保存 每个 uniform id 所在的 ubo\r\n\t */\r\n\t_uniformBuffersMap: Map<number, UniformBufferObject>;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget uniformBufferDatas() {\r\n\t\treturn this._uniformBufferDatas;\r\n\t}\r\n\r\n\tget uniformBuffersMap(): Map<number, UniformBufferObject> {\r\n\t\treturn this._uniformBuffersMap;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\t\r\n\t */\r\n\tconstructor(ownerResource: Resource = null) {\r\n\t\tthis._ownerResource = ownerResource;\r\n\t\tthis._initData();\r\n\r\n\t\tthis._uniformBufferDatas = new Map();\r\n\t\tthis._uniformBuffersMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param key \r\n\t * @param ubo \r\n\t * @param uboData \r\n\t */\r\n\t_addCheckUBO(key: string, ubo: UniformBufferObject, uboData: UnifromBufferData) {\r\n\t\tthis._uniformBufferDatas.set(key, { ubo: ubo, uboBuffer: uboData });\r\n\t\tuboData._uniformParamsState.forEach(\r\n\t\t\t(value: UniformBufferParamsType, id: number) => {\r\n\t\t\t\tthis.uniformBuffersMap.set(id, ubo);\r\n\t\t\t}\r\n\t\t);\r\n\t\tubo.setDataByUniformBufferData(uboData);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_initData(): void {\r\n\t\tthis._data = {};\r\n\t\tthis._gammaColorMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tgetData(): any {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tapplyUBOData() {\r\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\r\n\t\t\tvalue.ubo.setDataByUniformBufferData(value.uboBuffer);\r\n\t\t});\r\n\t\tthis.applyUBO = false;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\taddDefine(define: ShaderDefine): void {\r\n\t\tthis._defineDatas.add(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 移除Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\tremoveDefine(define: ShaderDefine): void {\r\n\t\tthis._defineDatas.remove(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 是否包含Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\thasDefine(define: ShaderDefine): boolean {\r\n\t\treturn this._defineDatas.has(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 清空宏定义。\r\n\t */\r\n\tclearDefine(): void {\r\n\t\tthis._defineDatas.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * 获取布尔。\r\n\t * @param\tindex shader索引。\r\n\t * @return  布尔。\r\n\t */\r\n\tgetBool(index: number): boolean {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置布尔。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 布尔。\r\n\t */\r\n\tsetBool(index: number, value: boolean): void {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取整形。\r\n\t * @param\tindex shader索引。\r\n\t * @return  整形。\r\n\t */\r\n\tgetInt(index: number): number {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置整型。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 整形。\r\n\t */\r\n\tsetInt(index: number, value: number): void {\r\n\t\tthis._data[index] = value;\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getInt(index));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取浮点。\r\n\t * @param\tindex shader索引。\r\n\t * @return\t浮点。\r\n\t */\r\n\tgetNumber(index: number): number {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置浮点。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 浮点。\r\n\t */\r\n\tsetNumber(index: number, value: number): void {\r\n\t\tthis._data[index] = value;\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getNumber(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Vector2向量。\r\n\t * @param\tindex shader索引。\r\n\t * @return Vector2向量。\r\n\t */\r\n\tgetVector2(index: number): Vector2 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Vector2向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue Vector2向量。\r\n\t */\r\n\tsetVector2(index: number, value: Vector2): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector2(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Vector3向量。\r\n\t * @param\tindex shader索引。\r\n\t * @return Vector3向量。\r\n\t */\r\n\tgetVector3(index: number): Vector3 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Vector3向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue Vector3向量。\r\n\t */\r\n\tsetVector3(index: number, value: Vector3): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector3(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取颜色。\r\n\t * @param \tindex shader索引。\r\n\t * @return  向量。\r\n\t */\r\n\tgetVector(index: number): Vector4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 向量。\r\n\t */\r\n\tsetVector(index: number, value: Vector4): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取颜色\r\n\t * @param index 索引\r\n\t * @returns 颜色\r\n\t */\r\n\tgetColor(index: number): Color {\r\n\t\treturn this._gammaColorMap.get(index);\r\n\t}\r\n\r\n\t/**\r\n\t * 设置颜色\r\n\t * @param index 索引\r\n\t * @param value 颜色值\r\n\t */\r\n\tsetColor(index: number, value: Color): void {\r\n\t\tif (!value)\r\n\t\t\treturn;\r\n\t\tif (this._data[index]) {\r\n\t\t\tlet gammaColor = this._gammaColorMap.get(index);\r\n\t\t\tvalue.cloneTo(gammaColor);\r\n\t\t\tlet linearColor = this._data[index];\r\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\r\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\r\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\r\n\t\t\tlinearColor.w = value.a;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linearColor = new Vector4();\r\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\r\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\r\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\r\n\t\t\tlinearColor.w = value.a;\r\n\t\t\tthis._data[index] = linearColor;\r\n\t\t\tthis._gammaColorMap.set(index, value.clone());\r\n\t\t}\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getLinearColor(index));\r\n\t\t\tthis.applyUBO = true;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param index \r\n\t */\r\n\tgetLinearColor(index: number): Vector4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 获取矩阵。\r\n\t * @param\tindex shader索引。\r\n\t * @return  矩阵。\r\n\t */\r\n\tgetMatrix4x4(index: number): Matrix4x4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置矩阵。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue  矩阵。\r\n\t */\r\n\tsetMatrix4x4(index: number, value: Matrix4x4): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t}\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix4x4(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取矩阵\r\n\t * @param index \r\n\t * @returns \r\n\t */\r\n\tgetMatrix3x3(index: number): Matrix3x3 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置矩阵。\r\n\t * @param index \r\n\t * @param value \r\n\t */\r\n\tsetMatrix3x3(index: number, value: Matrix3x3): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t}\r\n\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix3x3(index));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Buffer。\r\n\t * @param\tindex shader索引。\r\n\t * @return\r\n\t */\r\n\tgetBuffer(index: number): Float32Array {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Buffer。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue  buffer数据。\r\n\t */\r\n\tsetBuffer(index: number, value: Float32Array): void {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置纹理。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 纹理。\r\n\t */\r\n\tsetTexture(index: number, value: BaseTexture): void {\r\n\t\tvar lastValue: BaseTexture = this._data[index];\r\n\t\tif (value) {\r\n\t\t\tlet shaderDefine = ShaderDefine._texGammaDefine[index];\r\n\t\t\tif (shaderDefine && value && value.gammaCorrection > 1) {\r\n\t\t\t\tthis.addDefine(shaderDefine);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// todo 自动的\r\n\t\t\t\tshaderDefine && this.removeDefine(shaderDefine);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//维护Reference\r\n\t\tthis._data[index] = value;\r\n\t\tlastValue && lastValue._removeReference();\r\n\t\tvalue && value._addReference();\r\n\t}\r\n\t/**\r\n\t * 获取纹理。\r\n\t * @param\tindex shader索引。\r\n\t * @return  纹理。\r\n\t */\r\n\tgetTexture(index: number): BaseTexture {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tgetSourceIndex(value: any) {\r\n\t\tfor (var i in this._data) {\r\n\t\t\tif (this._data[i] == value)\r\n\t\t\t\treturn Number(i);\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * set shader data\r\n\t * @deprecated\r\n\t * @param index uniformID\r\n\t * @param value data\r\n\t */\r\n\tsetValueData(index: number, value: any) {\r\n\t\t//Color 需要特殊处理\r\n\t\tif (value instanceof Color) {\r\n\t\t\tthis.setColor(index, value);\r\n\t\t\treturn;\r\n\t\t} else if (!value) {\r\n\t\t\t//value null\r\n\t\t\tthis._data[index] = value;\r\n\t\t} else if (!!value.clone) {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t} else this._data[index] = value;\r\n\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getValueData(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param index \r\n\t * @param value \r\n\t */\r\n\tsetUniformBuffer(index: number, value: UniformBufferObject) {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\tgetUniformBuffer(index: number): UniformBufferObject {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tsetShaderData(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem | Quaternion) {\r\n\t\tswitch (type) {\r\n\t\t\tcase ShaderDataType.Int:\r\n\t\t\t\tthis.setInt(uniformIndex, <number>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Bool:\r\n\t\t\t\tthis.setBool(uniformIndex, <boolean>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Float:\r\n\t\t\t\tthis.setNumber(uniformIndex, <number>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector2:\r\n\t\t\t\tthis.setVector2(uniformIndex, <Vector2>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector3:\r\n\t\t\t\tthis.setVector3(uniformIndex, <Vector3>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector4:\r\n\t\t\t\tthis.setVector(uniformIndex, <Vector4>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Color:\r\n\t\t\t\tthis.setColor(uniformIndex, <Color>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\tthis.setMatrix4x4(uniformIndex, <Matrix4x4>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\t\tthis.setMatrix3x3(uniformIndex, <Matrix3x3>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Texture2D:\r\n\t\t\tcase ShaderDataType.TextureCube:\r\n\t\t\t\tthis.setTexture(uniformIndex, <BaseTexture>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Buffer:\r\n\t\t\t\tthis.setBuffer(uniformIndex, <Float32Array>value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`unkown shader data type: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n\tgetShaderData(uniformIndex: number, type: ShaderDataType) {\r\n\t\tswitch (type) {\r\n\t\t\tcase ShaderDataType.Int:\r\n\t\t\t\treturn this.getInt(uniformIndex);\r\n\t\t\tcase ShaderDataType.Bool:\r\n\t\t\t\treturn this.getBool(uniformIndex);\r\n\t\t\tcase ShaderDataType.Float:\r\n\t\t\t\treturn this.getNumber(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector2:\r\n\t\t\t\treturn this.getVector2(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector3:\r\n\t\t\t\treturn this.getVector3(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector4:\r\n\t\t\t\treturn this.getVector(uniformIndex);\r\n\t\t\tcase ShaderDataType.Color:\r\n\t\t\t\treturn this.getColor(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\r\n\t\t\tcase ShaderDataType.Texture2D:\r\n\t\t\tcase ShaderDataType.TextureCube:\r\n\t\t\t\treturn this.getTexture(uniformIndex);\r\n\t\t\tcase ShaderDataType.Buffer:\r\n\t\t\t\treturn this.getBuffer(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\t\treturn this.getMatrix3x3(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"unkone shader data type.\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get shader data\r\n\t * @deprecated\r\n\t * @param index uniform ID\r\n\t * @returns \r\n\t */\r\n\tgetValueData(index: number): any {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: ShaderData): void {\r\n\t\tvar dest: ShaderData = <ShaderData>destObject;\r\n\t\tvar destData: { [key: string]: number | boolean | Vector2 | Vector3 | Vector4 | Matrix3x3 | Matrix4x4 | BaseTexture } = dest._data;\r\n\t\tfor (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value != null) {\r\n\t\t\t\tif (typeof value == \"number\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (typeof value == \"number\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (typeof value == \"boolean\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (value instanceof Vector2) {\r\n\t\t\t\t\tvar v2 = destData[k] || (destData[k] = new Vector2());\r\n\t\t\t\t\t(<Vector2>value).cloneTo(v2);\r\n\t\t\t\t\tdestData[k] = v2;\r\n\t\t\t\t} else if (value instanceof Vector3) {\r\n\t\t\t\t\tvar v3 = destData[k] || (destData[k] = new Vector3());\r\n\t\t\t\t\t(<Vector3>value).cloneTo(v3);\r\n\t\t\t\t\tdestData[k] = v3;\r\n\t\t\t\t} else if (value instanceof Vector4) {\r\n\t\t\t\t\tlet color = this.getColor(parseInt(k));\r\n\t\t\t\t\tif (color) {\r\n\t\t\t\t\t\tlet clonecolor = color.clone();\r\n\t\t\t\t\t\tdestObject.setColor(parseInt(k), clonecolor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar v4 = destData[k] || (destData[k] = new Vector4());\r\n\t\t\t\t\t\t(<Vector4>value).cloneTo(v4);\r\n\t\t\t\t\t\tdestData[k] = v4;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (value instanceof Matrix3x3) {\r\n\t\t\t\t\tlet mat = destData[k] || (destData[k] = new Matrix3x3());\r\n\t\t\t\t\tvalue.cloneTo(mat);\r\n\t\t\t\t\tdestData[k] = mat;\r\n\t\t\t\t}\r\n\t\t\t\telse if (value instanceof Matrix4x4) {\r\n\t\t\t\t\tvar mat = destData[k] || (destData[k] = new Matrix4x4());\r\n\t\t\t\t\t(<Matrix4x4>value).cloneTo(mat);\r\n\t\t\t\t\tdestData[k] = mat;\r\n\t\t\t\t} else if (value instanceof BaseTexture) {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t\tvalue._addReference();\r\n\t\t\t\t} else if (value instanceof Resource) {\r\n\t\t\t\t\tdestData[k] = value as any;\r\n\t\t\t\t\tvalue._addReference();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._defineDatas.cloneTo(dest._defineDatas);\r\n\t\tthis._gammaColorMap.forEach((color, index) => {\r\n\t\t\tdestObject._gammaColorMap.set(index, color.clone());\r\n\t\t});\r\n\r\n\t\t//UBO Clone\r\n\t\tthis._cloneUBO(dest._uniformBufferDatas);\r\n\t\tdest.applyUBO = true;\r\n\t}\r\n\r\n\t/**\r\n\t * clone UBO Data\r\n\t * @internal\r\n\t * @param uboDatas \r\n\t */\r\n\t_cloneUBO(uboDatas: Map<string, uboParams>) {\r\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\r\n\t\t\tuboDatas.has(key) && (value.uboBuffer.cloneTo(uboDatas.get(key).uboBuffer));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: ShaderData = new ShaderData();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\treset() {\r\n\t\tfor (var k in this._data) {\r\n\t\t\t//维护Refrence\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value instanceof Resource) {\r\n\t\t\t\tvalue._removeReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._data = {};\r\n\t\tthis._gammaColorMap.clear();\r\n\t\tthis._uniformBufferDatas.clear();\r\n\t\tthis.applyUBO = false;\r\n\t\tthis._uniformBuffersMap.clear();\r\n\t\tthis._defineDatas.clear();\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tthis._defineDatas.destroy();\r\n\t\tthis._defineDatas = null;\r\n\t\tfor (var k in this._data) {\r\n\t\t\t//维护Refrence\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value instanceof Resource) {\r\n\t\t\t\tvalue._removeReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._data = null;\r\n\t\tthis._gammaColorMap.clear();\r\n\t\tthis._gammaColorMap = null;\r\n\t\t// // 使用对象解析\r\n\t\tdelete this._uniformBufferDatas;\r\n\t\tdelete this._uniformBuffersMap;\r\n\t\tthis._uniformBufferDatas = null;\r\n\t\tthis._uniformBuffersMap = null;\r\n\t}\r\n\r\n}\r\n","import { Color } from \"../maths/Color\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Shader3D } from \"./RenderShader/Shader3D\";\r\n\r\n/**\r\n *描述UniformBuffer参数类型\r\n */\r\nexport enum UniformBufferParamsType {\r\n    Number,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Matrix4x4,\r\n    Vector4Array,//Numberarray, vec2array and vec3array occupy the same memory as vec4array, so only vector4 is provided\r\n    MatrixArray\r\n}\r\n\r\n/**\r\n * 实例化UniformBuffer数据\r\n * 注：要与glsl中Uniform block结构相同\r\n */\r\nexport class UnifromBufferData {\r\n\r\n    /**\r\n     * @internal\r\n     * key: UniformID,value: x:offset y:length z:\r\n     */\r\n    protected _layoutMap: any;\r\n\r\n    /**\r\n     * @internal\r\n     * data length\r\n     */\r\n    protected _bytelength: number;\r\n\r\n    /**\r\n     * @internal\r\n     * params describe\r\n     */\r\n    _uniformParamsState: Map<number, UniformBufferParamsType>;\r\n\r\n    /**\r\n     * @internal\r\n     * update frome x to max,x:min,y:max\r\n     */\r\n    _updateFlag: Vector2;\r\n\r\n    /**\r\n     * Buffer Data\r\n     */\r\n    _buffer: Float32Array;\r\n\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>) {\r\n        // todo 后面改掉 不用map 初始化\r\n        this._uniformParamsState = new Map(uniformParamsStat);\r\n        this._createBuffer();\r\n        this._updateFlag = new Vector2();\r\n        this._resetUpdateFlag();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * createBuffer\r\n     */\r\n    protected _createBuffer() {\r\n        var dataPos = 0;\r\n        this._layoutMap = {};\r\n        const elementSize = 4;\r\n        this._uniformParamsState.forEach((key, value) => {\r\n            dataPos += this._addUniformParams(value, key, dataPos);\r\n        });\r\n        //这里需要对手机平台做兼容\r\n        //this._bytelength = dataPos * elementSize;\r\n        this._bytelength = Math.ceil(dataPos / 4) * 4 * elementSize;\r\n        this._buffer = new Float32Array(dataPos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _getArraySize(key: string) {\r\n        let left = key.indexOf(\"[\");\r\n        let right = key.indexOf(\"]\");\r\n        if (left != -1 && right != -1 && left < right) {\r\n            return parseFloat(key.substring(left + 1, right));\r\n        } else\r\n            throw key + \" is illegal \"\r\n    }\r\n\r\n    /**\r\n     * @interanl\r\n     * layout UniformBuffer pitch std140\r\n     */\r\n    protected _addUniformParams(uniformID: number, value: UniformBufferParamsType, offset: number): number {\r\n        let size: number = 0;\r\n        let posAdd: number = 0;\r\n        let posG = offset % 4;\r\n        let offsetadd;\r\n        switch (value) {\r\n            case UniformBufferParamsType.Number:\r\n                size = 1;\r\n                posAdd = 1;\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                size = 2;\r\n                switch (posG) {\r\n                    case 0:\r\n                    case 2:\r\n                        posAdd = 2;\r\n                        break;\r\n                    case 1:\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                size = 3;\r\n                posAdd = 3;\r\n                switch (posG) {\r\n                    case 1:\r\n                    case 2:\r\n                    case 3:\r\n                        offset += (4 - posG);\r\n                        posAdd = (4 - posG) + 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                //case UniformBufferParamsType.Color:\r\n                size = 4;\r\n                switch (posG) {\r\n                    case 0:\r\n                        posAdd = 4;\r\n                        break;\r\n                    case 1:\r\n                        offset += 3;\r\n                        posAdd = 7;\r\n                        break;\r\n                    case 2:\r\n                        offset += 2;\r\n                        posAdd = 6;\r\n                        break;\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 5;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                size = 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 4;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            default:\r\n                throw \"Unifrom Buffer Params Type is illegal \"\r\n        }\r\n        const paramsInfo = new Vector2(offset, size);\r\n        this._layoutMap[uniformID] = paramsInfo;\r\n        return posAdd;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getParamsInfo(key: number): Vector2 {\r\n        return this._layoutMap[key];\r\n    }\r\n\r\n    /**\r\n     * @interanl\r\n     * set upload range\r\n     */\r\n    private _setUpdateFlag(min: number, max: number) {\r\n        if (min < this._updateFlag.x)\r\n            this._updateFlag.x = min;\r\n        if (max > this._updateFlag.y)\r\n            this._updateFlag.y = max;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        delete this._buffer;\r\n        this._uniformParamsState.clear();\r\n        this._uniformParamsState = null;\r\n        this._layoutMap = null;\r\n        this._updateFlag = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetUpdateFlag() {\r\n        this._updateFlag.setValue(this._buffer.length, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param uniformID \r\n     * @returns \r\n     */\r\n    _has(uniformID: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        return !!info;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * set buffer params Data\r\n     */\r\n    _setData(uniformID: number, value: any) {\r\n\r\n        let uniformType = this._uniformParamsState.get(uniformID);\r\n\r\n        switch (uniformType) {\r\n            case UniformBufferParamsType.Number:\r\n                this.setNumberbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                this.setVector2byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                this.setVector3byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                this.setVector4byIndex(uniformID, value);\r\n                break;\r\n            // case UniformBufferParamsType.Color:\r\n            //     this.setColorbyIndex(uniformID, value);\r\n            //     break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                this.setMatrixbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                this.setVector4ArraybyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                this.setMatrixArraybyIndex(uniformID, value);\r\n                break;\r\n            // todo\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Buffer byte length\r\n     * @returns \r\n     */\r\n    getbyteLength(): number {\r\n        return this._bytelength;\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsName\r\n     * @param name uniform params name\r\n     * @param value vector4Array data\r\n     */\r\n    setVector4Array(name: string, value: Vector4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4ArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value vector4Array data\r\n     * @returns \r\n     */\r\n    setVector4ArraybyIndex(uniformID: number, value: Vector4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let vec = value[i];\r\n            this._buffer[pos++] = vec.x;\r\n            this._buffer[pos++] = vec.y;\r\n            this._buffer[pos++] = vec.z;\r\n            this._buffer[pos++] = vec.w;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsName\r\n     * @param name uniform params name\r\n     * @param value MatrixArray data\r\n     */\r\n    setMatrixArray(name: string, value: Matrix4x4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value MatrixArray data\r\n     * @returns \r\n     */\r\n    setMatrixArraybyIndex(uniformID: number, value: Matrix4x4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let mat = value[i];\r\n            this._buffer.set(mat.elements, pos);\r\n            pos += 16;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsName\r\n     * @param name uniform params name\r\n     * @param value Number data\r\n     */\r\n    setNumber(name: string, value: number) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setNumberbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Number data\r\n     * @returns \r\n     */\r\n    setNumberbyIndex(uniformID: number, value: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector2 data\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector2byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector2 data\r\n     * @returns \r\n     */\r\n    setVector2byIndex(uniformID: number, value: Vector2) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector3 data\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector3byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by uniformID\r\n     * @param uniformID uniform params index\r\n     * @param value Vector3 data\r\n     * @returns \r\n     */\r\n    setVector3byIndex(uniformID: number, value: Vector3) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector4 data\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector4 data\r\n     * @returns \r\n     */\r\n    setVector4byIndex(uniformID: number, value: Vector4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._buffer[pos++] = value.w;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Color by paramsName\r\n     * @param name uniform params name\r\n     * @param value Color data\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setColorbyIndex(uniformID, value);\r\n    }\r\n\r\n    setColorbyIndex(uniformID: number, value: Color) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.r);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.g);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.b);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.a);\r\n        this._setUpdateFlag(info.x, pos);\r\n\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsName\r\n     * @param name uniform params name\r\n     * @param value Matrix data\r\n     */\r\n    setMatrix(name: string, value: Matrix4x4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Matrix data\r\n     * @returns \r\n     */\r\n    setMatrixbyIndex(uniformID: number, value: Matrix4x4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer.set(value.elements, pos);\r\n        pos += 16;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n\r\n    clone(): UnifromBufferData {\r\n        // todo clone 更改\r\n        let ubd = new UnifromBufferData(this._uniformParamsState);\r\n        this.cloneTo(ubd);\r\n        return ubd\r\n    }\r\n\r\n    cloneTo(destObject: UnifromBufferData) {\r\n        if (destObject._bytelength == this._bytelength) {\r\n            destObject._buffer = Float32Array.from(this._buffer);\r\n            this._updateFlag.setValue(0, this._buffer.length);\r\n        }\r\n    }\r\n}","export enum RenderParams{\r\n    Max_Active_Texture_Count,//可激活的纹理数量，即shader中的最大纹理数量\r\n    Max_Uniform_Count,//最大Uniform数量\r\n    Max_AnisoLevel_Count,//最大各向异性数量\r\n    MAX_Texture_Size,//Shader中的最大纹理\r\n    MAX_Texture_Image_Uint,//图形设备支持的最大纹理数量。\r\n    SHADER_CAPAILITY_LEVEL,//Shader质量\r\n    FLOAT,\r\n    UNSIGNED_BYTE,\r\n    BYTE,\r\n    UNSIGNED_SHORT,\r\n}","/**\r\n * 纹理寻址模式。\r\n */\r\nexport enum WrapMode {\r\n    /** 循环平铺。*/\r\n    Repeat = 0,\r\n    /** 超过UV边界后采用最后一个像素。*/\r\n    Clamp = 1,\r\n    /** 镜像采样 */\r\n    Mirrored = 2\r\n}","import { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { SubShader, UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IShaderCompiledObj } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\nexport class ShaderProcessInfo {\r\n    defineString: string[];\r\n    vs: ShaderNode;\r\n    ps: ShaderNode;\r\n    attributeMap: { [name: string]: [number, ShaderDataType] };\r\n    uniformMap: UniformMapType;\r\n    is2D: boolean;\r\n    //....其他数据\r\n};\r\nexport class ShaderCompileDefineBase {\r\n    /** @internal */\r\n    static _defineString: Array<string> = [];\r\n    /** @internal */\r\n    static _debugDefineString: string[] = [];\r\n    /** @internal */\r\n    static _debugDefineMask: number[] = [];\r\n    /** @internal */\r\n    public _VS: ShaderNode;\r\n    /** @internal */\r\n    public _PS: ShaderNode;\r\n    /** @internal */\r\n    _defs: Set<string>;\r\n    /** @internal */\r\n    _validDefine: DefineDatas = new DefineDatas();\r\n    /** @internal */\r\n    protected _cacheShaderHierarchy: number = 1;\r\n    /** @internal */\r\n    protected _owner: SubShader;\r\n    /** @internal */\r\n    name: string;\r\n\r\n    nodeCommonMap: Array<string>;\r\n    /** @internal */\r\n    protected _cacheSharders: { [key: number]: { [key: number]: { [key: number]: ShaderInstance } } } = {};\r\n\r\n    constructor(owner: any, name: string, compiledObj: IShaderCompiledObj) {\r\n        this._owner = owner;\r\n        this.name = name;\r\n        this._VS = compiledObj.vsNode;\r\n        this._PS = compiledObj.psNode;\r\n        this._defs = compiledObj.defs;\r\n        for (let k of compiledObj.defs)\r\n            this._validDefine.add(Shader3D.getDefineByName(k));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resizeCacheShaderMap(cacheMap: any, hierarchy: number, resizeLength: number): void {\r\n        var end: number = this._cacheShaderHierarchy - 1;\r\n        if (hierarchy == end) {\r\n            for (var k in cacheMap) {\r\n                var shader = cacheMap[k];\r\n                for (var i: number = 0, n: number = resizeLength - end; i < n; i++) {\r\n                    if (i == n - 1)\r\n                        cacheMap[0] = shader;//0替代(i == 0 ? k : 0),只扩不缩\r\n                    else\r\n                        cacheMap = cacheMap[i == 0 ? k : 0] = {};\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            ++hierarchy;\r\n            for (var k in cacheMap)\r\n                this._resizeCacheShaderMap(cacheMap[k], hierarchy, resizeLength);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: DefineDatas): ShaderInstance {\r\n        var debugDefineString: string[] = ShaderCompileDefineBase._debugDefineString;\r\n        var debugDefineMask: number[] = ShaderCompileDefineBase._debugDefineMask;\r\n        var debugMaskLength: number;\r\n        compileDefine._intersectionDefineDatas(this._validDefine);\r\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\r\n            debugMaskLength = compileDefine._length;\r\n        }\r\n        //compileDefine.addDefineDatas(Scene3D._configDefineValues);\r\n\r\n        var cacheShaders: any = this._cacheSharders;\r\n        var maskLength: number = compileDefine._length;\r\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\r\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\r\n            this._cacheShaderHierarchy = maskLength;\r\n        }\r\n\r\n        var mask: Array<number> = compileDefine._mask;\r\n        var endIndex: number = compileDefine._length - 1;\r\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\r\n        for (var i: number = 0; i < maxEndIndex; i++) {\r\n            var subMask: number = endIndex < i ? 0 : mask[i];\r\n            var subCacheShaders = cacheShaders[subMask];\r\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\r\n            cacheShaders = subCacheShaders;\r\n        }\r\n\r\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\r\n        var shader: ShaderInstance = cacheShaders[cacheKey];\r\n        if (shader)\r\n            return shader;\r\n\r\n        var defineString: string[] = ShaderCompileDefineBase._defineString;\r\n        //TODO\r\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\r\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\r\n        shaderProcessInfo.is2D = true;\r\n        shaderProcessInfo.vs = this._VS;\r\n        shaderProcessInfo.ps = this._PS;\r\n        shaderProcessInfo.attributeMap = this._owner._attributeMap;\r\n        shaderProcessInfo.uniformMap = this._owner._uniformMap;\r\n        shaderProcessInfo.defineString = defineString;\r\n\r\n        shader = LayaGL.renderOBJCreate.createShaderInstance(shaderProcessInfo, this);\r\n\r\n        cacheShaders[cacheKey] = shader;\r\n\r\n        if (Shader3D.debugMode) {\r\n            var defStr: string = \"\";\r\n            var defMask: string = \"\";\r\n\r\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++)\r\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\r\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++)\r\n                (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\r\n\r\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this.name + \" \" + \" DefineMask:[\" + defMask + \"]\" + \" DefineNames:[\" + defStr + \"]\", \"color:green\");\r\n        }\r\n\r\n        return shader;\r\n    }\r\n}","import { SubShader } from \"./SubShader\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderVariant } from \"../../RenderEngine/RenderShader/ShaderVariantCollection\";\r\nimport { IShaderCompiledObj } from \"../../webgl/utils/ShaderCompile\";\r\nimport { RenderState } from \"./RenderState\";\r\nimport { ShaderInstance } from \"./ShaderInstance\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * <code>ShaderPass</code> 类用于实现ShaderPass。\r\n */\r\nexport class ShaderPass extends ShaderCompileDefineBase {\r\n\r\n    /** @internal */\r\n    private static _defineStrings: Array<string> = [];\r\n    /** @internal */\r\n    private static _debugDefineStrings: string[] = [];\r\n    /** @internal */\r\n    private static _debugDefineMasks: number[] = [];\r\n    /** @internal */\r\n    private _renderState: RenderState;\r\n    /** @internal */\r\n    _tags: any = {};\r\n    /** @internal */\r\n    _pipelineMode: string;\r\n    /**@internal */\r\n    _nodeUniformCommonMap: Array<string>;\r\n    /** 优先 ShaderPass 渲染状态 */\r\n    statefirst: boolean = false;\r\n\r\n    /**\r\n     * 渲染状态。\r\n     */\r\n    get renderState(): RenderState {\r\n        return this._renderState;\r\n    }\r\n\r\n    constructor(owner: SubShader, compiledObj: IShaderCompiledObj) {\r\n        super(owner, null, compiledObj);\r\n        this._renderState = LayaGL.renderOBJCreate.createRenderState();\r\n        this._renderState.setNull();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addDebugShaderVariantCollection(compileDefine: DefineDatas, outDebugDefines: string[], outDebugDefineMask: number[]): void {\r\n        var dbugShaderVariantInfo: ShaderVariant = Shader3D._debugShaderVariantInfo;\r\n        var debugSubShader: SubShader = this._owner;\r\n        var debugShader: Shader3D = debugSubShader._owner;\r\n        var mask: number[] = compileDefine._mask;\r\n        Shader3D._getNamesByDefineData(compileDefine, outDebugDefines);\r\n        outDebugDefineMask.length = mask.length;\r\n        for (var i: number = 0, n: number = mask.length; i < n; i++)\r\n            outDebugDefineMask[i] = mask[i];\r\n\r\n        if (dbugShaderVariantInfo)\r\n            dbugShaderVariantInfo.setValue(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\r\n        else\r\n            Shader3D._debugShaderVariantInfo = dbugShaderVariantInfo = new ShaderVariant(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\r\n        Shader3D.debugShaderVariantCollection.add(dbugShaderVariantInfo);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: DefineDatas, IS2d: boolean = false): ShaderInstance {\r\n        var debugDefineString: string[] = ShaderPass._debugDefineStrings;\r\n        var debugDefineMask: number[] = ShaderPass._debugDefineMasks;\r\n        var debugMaskLength: number;\r\n        compileDefine._intersectionDefineDatas(this._validDefine);\r\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\r\n            debugMaskLength = compileDefine._length;\r\n            this._addDebugShaderVariantCollection(compileDefine, debugDefineString, debugDefineMask);\r\n        }\r\n\r\n        var cacheShaders: any = this._cacheSharders;\r\n        var maskLength: number = compileDefine._length;\r\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\r\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\r\n            this._cacheShaderHierarchy = maskLength;\r\n        }\r\n\r\n        var mask: Array<number> = compileDefine._mask;\r\n        var endIndex: number = compileDefine._length - 1;\r\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\r\n        for (var i: number = 0; i < maxEndIndex; i++) {\r\n            var subMask: number = endIndex < i ? 0 : mask[i];\r\n            var subCacheShaders = cacheShaders[subMask];\r\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\r\n            cacheShaders = subCacheShaders;\r\n        }\r\n\r\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\r\n        var shader: ShaderInstance = cacheShaders[cacheKey];\r\n        if (shader)\r\n            return shader;\r\n\r\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\r\n        shaderProcessInfo.is2D = IS2d;\r\n        shaderProcessInfo.vs = this._VS;\r\n        shaderProcessInfo.ps = this._PS;\r\n        shaderProcessInfo.attributeMap = this._owner._attributeMap;\r\n        shaderProcessInfo.uniformMap = this._owner._uniformMap;\r\n\r\n        var defineString: string[] = ShaderPass._defineStrings;\r\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\r\n        shaderProcessInfo.defineString = defineString;\r\n\r\n        shader = LayaGL.renderOBJCreate.createShaderInstance(shaderProcessInfo, this);\r\n\r\n        cacheShaders[cacheKey] = shader;\r\n\r\n        if (Shader3D.debugMode) {\r\n            var defStr: string = \"\";\r\n            var defCommonStr: string = \"\";\r\n            var defMask: string = \"\";\r\n            var spriteCommonNode: string = \"\";\r\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++) {\r\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\r\n            }\r\n            // for (var i: number = 0, n: number = debugDefineString.length; i < n; i++){}\r\n            //     (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\r\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++) {\r\n                if (Shader3D._configDefineValues.has(Shader3D.getDefineByName(debugDefineString[i])))\r\n                    defCommonStr += debugDefineString[i] + \",\";\r\n                else\r\n                    defStr += debugDefineString[i] + \",\";\r\n            }\r\n            if (this.nodeCommonMap) {\r\n                for (var j = 0; j < this.nodeCommonMap.length; j++) {\r\n                    spriteCommonNode += this.nodeCommonMap[j] + \",\";\r\n                }\r\n            }\r\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this._owner._owner._name +\r\n                \" SubShaderIndex:\" + this._owner._owner._subShaders.indexOf(this._owner) +\r\n                \" PassIndex:\" + this._owner._passes.indexOf(this) +\r\n                \" DefineMask:[\" + defMask + \"]\" +\r\n                \" DefineNames:[\" + defStr + \"]\" +\r\n                \" Environment Macro DefineNames:[\" + defCommonStr + \"]\" +\r\n                \"Sprite CommonNode:[\" + spriteCommonNode + \"]\",\r\n                \"color:green\");\r\n        }\r\n        return shader;\r\n    }\r\n}\r\n\r\n","/**\r\n* <code>VertexElement</code> 类用于创建顶点结构分配。\r\n*/\r\nexport class VertexElement {\r\n    /**@internal */\r\n    _offset: number;\r\n    /**@internal */\r\n    _elementFormat: string;\r\n    /**@internal */\r\n    _elementUsage: number;\r\n    //usageIndex:int;//TODO:待确定是否添加\r\n\r\n    /**\r\n     * 顶点偏移\r\n     */\r\n    get offset(): number {\r\n        return this._offset;\r\n    }\r\n    /**\r\n     * 顶点信息名称\r\n     */\r\n    get elementFormat(): string {\r\n        return this._elementFormat;\r\n    }\r\n\r\n    /**\r\n     * 顶点宏标记\r\n     */\r\n    get elementUsage(): number {\r\n        return this._elementUsage;\r\n    }\r\n\r\n    /**\r\n     * 创建顶点结构分配实例\r\n     * @param offset 顶点偏移\r\n     * @param elementFormat 顶点数据格式名称\r\n     * @param elementUsage 顶点宏标记\r\n     */\r\n    constructor(offset: number, elementFormat: string, elementUsage: number) {\r\n        this._offset = offset;\r\n        this._elementFormat = elementFormat;\r\n        this._elementUsage = elementUsage;\r\n        //this.usageIndex = usageIndex;\r\n    }\r\n}\r\n\r\n","import { RenderParams } from \"../RenderEngine/RenderEnum/RenderParams\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * 类用来定义顶点元素格式\r\n */\r\nexport class VertexElementFormat {\r\n\t/**单精度浮点数 */\r\n\tstatic Single: string = \"single\";\r\n\t/**vec2 数据*/\r\n\tstatic Vector2: string = \"vector2\";\r\n\t/**vec3 数据*/\r\n\tstatic Vector3: string = \"vector3\";\r\n\t/**vec4 数据 */\r\n\tstatic Vector4: string = \"vector4\";\r\n\t/**颜色 */\r\n\tstatic Color: string = \"color\";\r\n\t/**字节数组4 */\r\n\tstatic Byte4: string = \"byte4\";\r\n\t/**字节数组3 */\r\n\tstatic Byte3: string = \"byte3\";\r\n\t/**字节数组2 */\r\n\tstatic Byte2: string = \"byte2\";\r\n\t/**字节数组1 */\r\n\tstatic ByteOne:string = \"byte\";\r\n\t/**半精度浮点数数组2 */\r\n\tstatic Short2: string = \"short2\";\r\n\t/**半精度浮点数数组4 */\r\n\tstatic Short4: string = \"short4\";\r\n\t/**归一化半精度浮点数组2 */\r\n\tstatic NormalizedShort2: string = \"normalizedshort2\";\r\n\t/**归一化半精度浮点数组4 */\r\n\tstatic NormalizedShort4: string = \"normalizedshort4\";\r\n\t/**@internal */\r\n\tstatic HalfVector2: string = \"halfvector2\";\r\n\t/**@internal */\r\n\tstatic HalfVector4: string = \"halfvector4\";\r\n\t/**@internal */\r\n\tstatic NorByte4: string = \"nbyte4\";\r\n\r\n\t/** @internal [组数量,数据类型,是否归一化:0为false]。*/\r\n\tprivate static _elementInfos: any;\r\n\t/**@internal */\r\n\tstatic __init__(): void {\r\n\t\tVertexElementFormat._elementInfos = {\r\n\t\t\t\"single\": [1, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector3\": [3, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"color\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"byte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte3\": [3,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte2\": [2,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte\": [1,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"short2\": [2,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"short4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"normalizedshort2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"normalizedshort4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"halfvector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"halfvector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"nbyte4\":[4,LayaGL.renderEngine.getParams(RenderParams.BYTE),1],\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点元素格式信息。\r\n\t * @param element 元素名称\r\n\t * @returns 返回顶点元素信息\r\n\t */\r\n\tstatic getElementInfos(element: string): any[] {\r\n\t\tvar info: any[] = VertexElementFormat._elementInfos[element];\r\n\t\tif (info)\r\n\t\t\treturn info;\r\n\t\telse\r\n\t\t\tthrow \"VertexElementFormat: this vertexElementFormat is not implement.\";\r\n\t}\r\n}\r\n\r\n","import { VertexElement } from \"../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../renders/VertexElementFormat\";\r\nimport { VAElement } from \"./VertexAttributeLayout\"\r\n/**\r\n * <code>VertexDeclaration</code> 类用于生成顶点声明。\r\n */\r\nexport class VertexDeclaration {\r\n    /**@internal */\r\n    private static _uniqueIDCounter: number = 1;\r\n\r\n    /**@internal */\r\n    private _id: number;\r\n    /**@internal */\r\n    private _vertexStride: number;\r\n    /**@internal */\r\n    private _vertexElementsDic: { [key: string]: VertexElement };\r\n    /**@internal */\r\n    _shaderValues: { [key: number]: Int32Array };\r\n\r\n    /**@internal [只读]*/\r\n    _vertexElements: Array<VertexElement>;\r\n    /**@internal */\r\n    _VAElements: Array<VAElement>;\r\n    /**\r\n     * 获取唯一标识ID(通常用于优化或识别)。\r\n     * @return 唯一标识ID\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 顶点跨度，以字节为单位。\r\n     */\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    /**\r\n     * 顶点元素的数量。\r\n     */\r\n    get vertexElementCount(): number {\r\n        return this._vertexElements.length;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>VertexDeclaration</code> 实例。\r\n     * @param\tvertexStride 顶点跨度。\r\n     * @param\tvertexElements 顶点元素集合。\r\n     */\r\n    constructor(vertexStride: number, vertexElements: Array<VertexElement>) {\r\n        this._id = ++VertexDeclaration._uniqueIDCounter;\r\n        this._vertexElementsDic = {};\r\n        this._vertexStride = vertexStride;\r\n        this._vertexElements = vertexElements;\r\n        this._VAElements = [];\r\n        var count: number = vertexElements.length;\r\n        this._shaderValues = {};\r\n\r\n        for (var j: number = 0; j < count; j++) {\r\n            var vertexElement: VertexElement = vertexElements[j];\r\n            var name: number = vertexElement._elementUsage;\r\n            this._vertexElementsDic[name] = vertexElement;\r\n            var value: Int32Array = new Int32Array(5);\r\n            var elmentInfo: any[] = VertexElementFormat.getElementInfos(vertexElement._elementFormat);\r\n            value[0] = elmentInfo[0];\r\n            value[1] = elmentInfo[1];\r\n            value[2] = elmentInfo[2];\r\n            value[3] = this._vertexStride;\r\n            value[4] = vertexElement._offset;\r\n            this._shaderValues[name] = value;\r\n\r\n            //VAElement\r\n            this._VAElements.push({ format: vertexElement._elementFormat, stride: vertexElement._offset, shaderLocation: name })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取顶点元素。\r\n     * @param index 索引。\r\n     */\r\n    getVertexElementByIndex(index: number): VertexElement {\r\n        return this._vertexElements[index];\r\n    }\r\n\r\n    /**\r\n     * get vertexElement by usage\r\n     */\r\n    getVertexElementByUsage(usage: number): VertexElement {\r\n        return this._vertexElementsDic[usage];\r\n    }\r\n}\r\n\r\n\r\n","import { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexDeclaration } from \"../VertexDeclaration\";\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class VertexMesh {\r\n\t/**顶点位置数据 */\r\n\tstatic MESH_POSITION0: number = 0;\r\n\t/**顶点顶点色数据 */\r\n\tstatic MESH_COLOR0: number = 1;\r\n\t/**顶点UV0数据 */\r\n\tstatic MESH_TEXTURECOORDINATE0: number = 2;\r\n\t/**顶点法线数据 */\r\n\tstatic MESH_NORMAL0: number = 3;\r\n\t/**顶点切线数据 */\r\n\tstatic MESH_TANGENT0: number = 4;\r\n\t/**顶点骨骼索引数据 */\r\n\tstatic MESH_BLENDINDICES0: number = 5;\r\n\t/**顶点骨骼权重数据 */\r\n\tstatic MESH_BLENDWEIGHT0: number = 6;\r\n\t/**顶点UV1数据 */\r\n\tstatic MESH_TEXTURECOORDINATE1: number = 7;\r\n\t/**顶点世界矩阵数据Row0 */\r\n\tstatic MESH_WORLDMATRIX_ROW0: number = 8;\r\n\t/**顶点世界矩阵数据Row1 */\r\n\tstatic MESH_WORLDMATRIX_ROW1: number = 9;\r\n\t/**顶点世界矩阵数据Row2 */\r\n\tstatic MESH_WORLDMATRIX_ROW2: number = 10;\r\n\t/**顶点世界矩阵数据Row3 */\r\n\tstatic MESH_WORLDMATRIX_ROW3: number = 11;\r\n\r\n\r\n\t//TODO：location不够\r\n\t/**简单数据动画数据 */\r\n\tstatic MESH_SIMPLEANIMATOR: number = 12;\r\n\r\n\t/**光照贴图的缩放和偏移 */\r\n\tstatic MESH_LIGHTMAPSCALEOFFSET: number = 13;\r\n\t/**instanceworld顶点描述 */\r\n\tstatic instanceWorldMatrixDeclaration: VertexDeclaration;\r\n\t/**instanceSimple动画数据顶点描述 */\r\n\tstatic instanceSimpleAnimatorDeclaration: VertexDeclaration;\r\n\t/**instanceLightMap光照贴图的缩放和偏移顶点描述 */\r\n\tstatic instanceLightMapScaleOffsetDeclaration: VertexDeclaration;\r\n\r\n\r\n\t/**自定义attribute instance 预留位*/\r\n\t/**顶点自定义数据0 */\r\n\tstatic MESH_CUSTOME0: number = 12;\r\n\t/**顶点自定义数据1 */\r\n\tstatic MESH_CUSTOME1: number = 13;\r\n\t/**顶点自定义数据2 */\r\n\tstatic MESH_CUSTOME2: number = 14;\r\n\t/**顶点自定义数据3 */\r\n\tstatic MESH_CUSTOME3: number = 15;\r\n\r\n\r\n\r\n\r\n\t/**@internal */\r\n\tprivate static _vertexDeclarationMap: any = {};\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __init__(): void {\r\n\t\tVertexMesh.instanceWorldMatrixDeclaration = new VertexDeclaration(64,\r\n\t\t\t[new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW0),\r\n\t\t\tnew VertexElement(16, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW1),\r\n\t\t\tnew VertexElement(32, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW2),\r\n\t\t\tnew VertexElement(48, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW3)]);\r\n\r\n\t\tVertexMesh.instanceSimpleAnimatorDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_SIMPLEANIMATOR)]);\r\n\t\tVertexMesh.instanceLightMapScaleOffsetDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_LIGHTMAPSCALEOFFSET)]);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\r\n\t * @return 顶点声明。\r\n\t */\r\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\r\n\t\tvar verDec: VertexDeclaration = VertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\r\n\t\tif (!verDec) {\r\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar offset: number = 0;\r\n\t\t\tvar elements: any[] = [];\r\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\r\n\t\t\t\tvar element: VertexElement;\r\n\t\t\t\tswitch (subFlags[i]) {\r\n\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE1);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDWEIGHT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\tif (compatible) {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDINDICES0);//兼容\r\n\t\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, VertexMesh.MESH_BLENDINDICES0);\r\n\t\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_TANGENT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL_BYTE\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.NorByte4, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\r\n\t\t\t\t}\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t\tverDec = new VertexDeclaration(offset, elements);\r\n\t\t\tVertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\r\n\t\t}\r\n\t\treturn verDec;\r\n\t}\r\n}\r\n\r\n\r\n","import { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataItem, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { UniformBufferParamsType, UnifromBufferData } from \"../../RenderEngine/UniformBufferData\";\r\nimport { IShaderCompiledObj, ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { VertexMesh } from \"./VertexMesh\";\r\n\r\n// todo 初始化 uniformMap 提取出来 供 Scene, Camera, Sprite3D 生成 uniform shader代码 ?\r\n// export type UniformItem = { [uniformName: string]: ShaderDataType } | { type: ShaderDataType, value?: ShaderDataItem };\r\n\r\nexport type UniformMapType = { [blockName: string]: { [uniformName: string]: ShaderDataType } | ShaderDataType };\r\n\r\nexport type AttributeMapType = { [name: string]: [number, ShaderDataType] };\r\n\r\n/**\r\n * <code>SubShader</code> 类用于创建SubShader。\r\n */\r\nexport class SubShader {\r\n    public static IncludeUniformMap: any = {};\r\n\r\n    /**\r\n     * 注册glsl所用到的Uniform\r\n     * 会在生成Uniformmap的时候根据包含的Include文件，添加所需要的uniform因素\r\n     * @param includeName \r\n     * @param uniformInfo \r\n     * @param defaultUniformData \r\n     */\r\n    public static regIncludeBindUnifrom(includeName: string, uniformMap: { [name: string]: ShaderDataType }, defaultValue: { [key: string]: any }) {\r\n        let obj: any = {};\r\n        let data: any = obj[includeName] = {};\r\n        data[\"uniformMap\"] = uniformMap;\r\n        data[\"defaultValue\"] = defaultValue;\r\n        Object.assign(SubShader.IncludeUniformMap, obj);\r\n    }\r\n\r\n    public static readonly DefaultAttributeMap: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_Position': [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4],\r\n        'a_Normal': [VertexMesh.MESH_NORMAL0, ShaderDataType.Vector3],\r\n        'a_Tangent0': [VertexMesh.MESH_TANGENT0, ShaderDataType.Vector4],\r\n        'a_Texcoord0': [VertexMesh.MESH_TEXTURECOORDINATE0, ShaderDataType.Vector2],\r\n        'a_Texcoord1': [VertexMesh.MESH_TEXTURECOORDINATE1, ShaderDataType.Vector2],\r\n        'a_Color': [VertexMesh.MESH_COLOR0, ShaderDataType.Vector4],\r\n        'a_BoneWeights': [VertexMesh.MESH_BLENDWEIGHT0, ShaderDataType.Vector4],\r\n        'a_BoneIndices': [VertexMesh.MESH_BLENDINDICES0, ShaderDataType.Vector4],\r\n        'a_WorldMat': [VertexMesh.MESH_WORLDMATRIX_ROW0, ShaderDataType.Matrix4x4],\r\n        'a_SimpleTextureParams': [VertexMesh.MESH_SIMPLEANIMATOR, ShaderDataType.Vector2],\r\n        'a_LightmapScaleOffset': [VertexMesh.MESH_LIGHTMAPSCALEOFFSET, ShaderDataType.Vector4]\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _attributeMap: AttributeMapType;\r\n\r\n    /**@internal */\r\n    _uniformMap: UniformMapType;\r\n\r\n    // todo uniform 相关信息统一用结构体存储？ 合并 value type map\r\n    /**\r\n     * @internal\r\n     * uniform 默认值\r\n     */\r\n    readonly _uniformDefaultValue: { [name: string]: ShaderDataItem };\r\n    /**\r\n     * @internal\r\n     * uniform 数据类型\r\n     */\r\n    readonly _uniformTypeMap: Map<string, ShaderDataType>;\r\n\r\n    /**@internal */\r\n    readonly _uniformBufferDataMap: Map<string, UnifromBufferData> = new Map();\r\n\r\n    /**@internal */\r\n    _owner: Shader3D;\r\n    /**@internal */\r\n    _flags: any = {};\r\n    /**@internal */\r\n    _passes: ShaderPass[] = [];\r\n\r\n    /**\r\n     * 创建一个 <code>SubShader</code> 实例。\r\n     * @param\tattributeMap  顶点属性表。\r\n     * @param\tuniformMap  uniform属性表。\r\n     */\r\n    constructor(attributeMap: { [name: string]: [number, ShaderDataType] } = SubShader.DefaultAttributeMap, uniformMap: UniformMapType = {}, uniformDefaultValue: { [name: string]: ShaderDataItem } = null) {\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = uniformMap;\r\n        this._uniformDefaultValue = uniformDefaultValue;\r\n        this._uniformTypeMap = new Map();\r\n        for (const key in uniformMap) {\r\n            if (typeof uniformMap[key] == \"object\") {\r\n                let block = <{ [uniformName: string]: ShaderDataType }>(uniformMap[key]);\r\n                let blockUniformMap = new Map<string, UniformBufferParamsType>();\r\n                for (const uniformName in block) {\r\n                    let uniformType = ShaderDataTypeToUniformBufferType(block[uniformName]);\r\n                    blockUniformMap.set(uniformName, uniformType);\r\n\r\n                    this._uniformTypeMap.set(uniformName, block[uniformName]);\r\n                }\r\n\r\n                let blockUniformIndexMap = new Map<number, UniformBufferParamsType>();\r\n                blockUniformMap.forEach((value, key) => {\r\n                    blockUniformIndexMap.set(Shader3D.propertyNameToID(key), value);\r\n                });\r\n                let blockData = new UnifromBufferData(blockUniformIndexMap);\r\n                this._uniformBufferDataMap.set(key, blockData);\r\n            }\r\n            else {\r\n                let unifromType = <ShaderDataType>uniformMap[key];\r\n                this._uniformTypeMap.set(key, unifromType);\r\n                if (unifromType == ShaderDataType.Texture2D || unifromType == ShaderDataType.TextureCube) {\r\n                    let textureGammaDefine = Shader3D.getDefineByName(`Gamma_${key}`);\r\n                    let uniformIndex = Shader3D.propertyNameToID(key);\r\n                    ShaderDefine._texGammaDefine[uniformIndex] = textureGammaDefine;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加标记。\r\n     * @param key 标记键。\r\n     * @param value 标记值。\r\n     */\r\n    setFlag(key: string, value: string): void {\r\n        if (value)\r\n            this._flags[key] = value;\r\n        else\r\n            delete this._flags[key];\r\n    }\r\n\r\n    /**\r\n     * 获取标记值。\r\n     * @return key 标记键。\r\n     */\r\n    getFlag(key: string): string {\r\n        return this._flags[key];\r\n    }\r\n\r\n    /**\r\n     * 添加着色器Pass\r\n     * @param vs \r\n     * @param ps \r\n     * @param stateMap \r\n     * @param pipelineMode 渲染管线模式。 \r\n     */\r\n    addShaderPass(vs: string, ps: string, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        return this._addShaderPass(ShaderCompile.compile(vs, ps), pipelineMode);\r\n    }\r\n\r\n    _addShaderPass(compiledObj: IShaderCompiledObj, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        var shaderPass: ShaderPass = new ShaderPass(this, compiledObj);\r\n        shaderPass._pipelineMode = pipelineMode;\r\n        this._passes.push(shaderPass);\r\n        this._addIncludeUniform(compiledObj.includeNames);\r\n        return shaderPass;\r\n    }\r\n\r\n    private _addIncludeUniform(includemap: Set<string>) {\r\n        for (let ele of includemap) {\r\n            if (SubShader.IncludeUniformMap[ele]) {\r\n                let includeBindInfo = SubShader.IncludeUniformMap[ele];\r\n                let bindtypeMap = includeBindInfo[\"uniformMap\"];\r\n                let bindDefaultValue = includeBindInfo[\"defaultValue\"];\r\n                for (var i in bindtypeMap) {\r\n                    if (!this._uniformTypeMap.has(i)) {\r\n                        this._uniformTypeMap.set(i, bindtypeMap[i]);\r\n                        this._uniformMap[i] = bindtypeMap[i];\r\n                    }\r\n                }\r\n                for (var i in bindDefaultValue) {\r\n                    if (!this._uniformDefaultValue[i]) {\r\n                        this._uniformDefaultValue[i] = bindDefaultValue[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction ShaderDataTypeToUniformBufferType(shaderDataType: ShaderDataType) {\r\n\r\n    switch (shaderDataType) {\r\n        case ShaderDataType.Float:\r\n            return UniformBufferParamsType.Number;\r\n        case ShaderDataType.Vector2:\r\n            return UniformBufferParamsType.Vector2;\r\n        case ShaderDataType.Vector3:\r\n            return UniformBufferParamsType.Vector3;\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return UniformBufferParamsType.Vector4;\r\n        case ShaderDataType.Matrix4x4:\r\n            return UniformBufferParamsType.Matrix4x4;\r\n        default:\r\n            throw \"ShaderDataType can not be in UniformBuffer.\";\r\n    }\r\n\r\n}\r\n\r\n","import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { DefineDatas } from \"./DefineDatas\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { ShaderVariant, ShaderVariantCollection } from \"./ShaderVariantCollection\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\nexport interface IShaderObjStructor {\r\n    name: string,\r\n    enableInstancing: boolean,\r\n    supportReflectionProbe: boolean,\r\n    attributeMap: any;\r\n    uniformMap: any;\r\n    defaultValue: any;\r\n    shaderPass: Array<any>;\r\n}\r\n\r\nexport interface IShaderpassStructor {\r\n    VS?: string,\r\n    FS?: string,\r\n    VSPath?: string,//TODO\r\n    FSPath?: string,//TODO\r\n    pipeline?: string,\r\n    statefirst?: boolean;\r\n    renderState?: Record<string, string | boolean | number | string[]>\r\n\r\n}\r\n/**\r\n * <code>Shader3D</code> 类用于创建Shader3D。\r\n */\r\nexport class Shader3D {\r\n    static _configDefineValues = new DefineDatas();\r\n    /**@internal */\r\n    private static _compileDefineDatas: DefineDatas = new DefineDatas();\r\n    /**渲染状态_剔除。*/\r\n    static CULL: number;\r\n    /**渲染状态_混合。*/\r\n    static BLEND: number;\r\n    /**渲染状态_混合源。*/\r\n    static BLEND_SRC: number;\r\n    /**渲染状态_混合目标。*/\r\n    static BLEND_DST: number;\r\n    /**渲染状态_混合源RGB。*/\r\n    static BLEND_SRC_RGB: number;\r\n    /**渲染状态_混合目标RGB。*/\r\n    static BLEND_DST_RGB: number;\r\n    /**渲染状态_混合源ALPHA。*/\r\n    static BLEND_SRC_ALPHA: number;\r\n    /**渲染状态_混合目标ALPHA。*/\r\n    static BLEND_DST_ALPHA: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION_RGB: number;\r\n    /**渲染状态_ALPHA混合方程。*/\r\n    static BLEND_EQUATION_ALPHA: number;\r\n    /**渲染状态_深度测试。*/\r\n    static DEPTH_TEST: number;\r\n    /**渲染状态_深度写入。*/\r\n    static DEPTH_WRITE: number;\r\n    /**渲染状态_模板测试。*/\r\n    static STENCIL_TEST: number;\r\n    /**渲染状态_模板写入 */\r\n    static STENCIL_WRITE: number;\r\n    /**渲染状态_模板写入值 */\r\n    static STENCIL_Ref: number;\r\n    /**渲染状态_模板写入设置 */\r\n    static STENCIL_Op: number;\r\n\r\n    /**shader变量提交周期，自定义。*/\r\n    static PERIOD_CUSTOM: number = 0;\r\n    /**shader变量提交周期，逐材质。*/\r\n    static PERIOD_MATERIAL: number = 1;\r\n    /**shader变量提交周期，逐精灵和相机，注：因为精灵包含MVP矩阵，为复合属性，所以摄像机发生变化时也应提交。*/\r\n    static PERIOD_SPRITE: number = 2;\r\n    /**shader变量提交周期，逐相机。*/\r\n    static PERIOD_CAMERA: number = 3;\r\n    /**shader变量提交周期，逐场景。*/\r\n    static PERIOD_SCENE: number = 4;\r\n\r\n    /**@internal */\r\n    static SHADERDEFINE_LEGACYSINGALLIGHTING: ShaderDefine;\r\n    /**@internal 图形数据传输使用UniformBlock的方式 */\r\n    static SHADERDEFINE_ENUNIFORMBLOCK: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR: ShaderDefine;\r\n    /**@internal */\r\n    static _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private static _propertyNameCounter: number = 0;\r\n    /**@internal */\r\n    private static _defineCounter: number = 0;\r\n    // todo  这个 map 和 get 函数转移到 ShaderDefine 里面\r\n    /**@internal */\r\n    private static _defineMap: { [key: string]: ShaderDefine } = {};\r\n    /**@internal */\r\n    static _preCompileShader: { [key: string]: Shader3D } = {};\r\n    /**@internal */\r\n    static _maskMap: Array<{ [key: number]: string }> = [];\r\n    /**@internal */\r\n    static _debugShaderVariantInfo: ShaderVariant;\r\n    /**是否开启调试模式。 */\r\n    static debugMode: boolean = false;\r\n    /**调试着色器变种集合。 */\r\n    static debugShaderVariantCollection: ShaderVariantCollection;\r\n\r\n\r\n    static init() {\r\n        Shader3D.debugShaderVariantCollection = new ShaderVariantCollection();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getNamesByDefineData(defineData: DefineDatas, out: Array<string>): void {\r\n        var maskMap: Array<{ [key: number]: string }> = Shader3D._maskMap;\r\n        var mask: Array<number> = defineData._mask;\r\n        out.length = 0;\r\n        for (var i: number = 0, n: number = defineData._length; i < n; i++) {\r\n            var subMaskMap: { [key: number]: string } = maskMap[i];\r\n            var subMask: number = mask[i];\r\n            for (var j: number = 0; j < 32; j++) {\r\n                var d: number = 1 << j;\r\n                if (subMask > 0 && d > subMask)//如果31位存在subMask为负数,避免break\r\n                    break;\r\n                if (subMask & d)\r\n                    out.push(subMaskMap[d]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注册宏定义。\r\n     * @param name \r\n     */\r\n    static getDefineByName(name: string): ShaderDefine {\r\n        var define: ShaderDefine = Shader3D._defineMap[name];\r\n        if (!define) {\r\n            var maskMap = Shader3D._maskMap;\r\n            var counter: number = Shader3D._defineCounter;\r\n            var index: number = Math.floor(counter / 32);\r\n            var value: number = 1 << counter % 32;\r\n            define = new ShaderDefine(index, value);\r\n            Shader3D._defineMap[name] = define;\r\n            if (index == maskMap.length) {\r\n                maskMap.length++;\r\n                maskMap[index] = {};\r\n            }\r\n            maskMap[index][value] = name;\r\n            Shader3D._defineCounter++;\r\n        }\r\n        return define;\r\n    }\r\n\r\n    /**\r\n     * 通过Shader属性名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static propertyNameToID(name: string): number {\r\n        return LayaGL.renderEngine.propertyNameToID(name);\r\n    }\r\n\r\n    static propertyIDToName(id: number): string {\r\n        return LayaGL.renderEngine.propertyIDToName(id);\r\n    }\r\n\r\n    /**\r\n     * 添加函数库引用。\r\n     * @param fileName 文件名字。\r\n     * @param txt 文件内容\r\n     */\r\n    static addInclude(fileName: string, txt: string): void {\r\n        ShaderCompile.addInclude(fileName, txt);\r\n    }\r\n\r\n    /**\r\n     * 通过宏定义名字编译shader。\r\n     * @param\tshaderName Shader名称。\r\n     * @param   subShaderIndex 子着色器索引。\r\n     * @param   passIndex  通道索引。\r\n     * @param\tdefineNames 宏定义名字集合。\r\n     */\r\n    static compileShaderByDefineNames(shaderName: string, subShaderIndex: number, passIndex: number, defineNames: string[], nodeCommonMap: string[]): void {\r\n        var shader: Shader3D = Shader3D.find(shaderName);\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                pass.nodeCommonMap = nodeCommonMap;\r\n                if (pass) {\r\n                    var compileDefineDatas: DefineDatas = Shader3D._compileDefineDatas;\r\n                    Shader3D._configDefineValues.cloneTo(compileDefineDatas);\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++)\r\n                        compileDefineDatas.add(Shader3D.getDefineByName(defineNames[i]));\r\n                    pass.withCompile(compileDefineDatas);\r\n                } else {\r\n                    console.warn(\"Shader3D: unknown passIndex.\");\r\n                }\r\n            } else {\r\n                console.warn(\"Shader3D: unknown subShaderIndex.\");\r\n            }\r\n        } else {\r\n            console.warn(\"Shader3D: unknown shader name.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加预编译shader文件，主要是处理宏定义\r\n     */\r\n    static add(name: string, enableInstancing: boolean = false, supportReflectionProbe: boolean = false): Shader3D {\r\n        return Shader3D._preCompileShader[name] = new Shader3D(name, enableInstancing, supportReflectionProbe);\r\n    }\r\n\r\n    /**\r\n     * 获取ShaderCompile3D。\r\n     * @param\tname\r\n     * @return ShaderCompile3D。\r\n     */\r\n    static find(name: string): Shader3D {\r\n        return Shader3D._preCompileShader[name];\r\n    }\r\n\r\n    static parse(data: IShaderObjStructor, basePath: string) {\r\n        if (!data.name)\r\n            console.warn(\"shader name is empty\", data);\r\n        if (!data.uniformMap)\r\n            console.warn(`${data.name}: uniformMap is empty`);\r\n\r\n        let shader = Shader3D.add(data.name, data.enableInstancing, data.supportReflectionProbe);\r\n        let subshader = new SubShader(data.attributeMap ? data.attributeMap : SubShader.DefaultAttributeMap, data.uniformMap, data.defaultValue);\r\n        shader.addSubShader(subshader);\r\n        let passArray = data.shaderPass;\r\n        for (var i in passArray) {\r\n            let pass = passArray[i] as IShaderpassStructor;\r\n            if (!pass.VS) {\r\n                console.warn(`${data.name}: VS of pass ${i} is empty`);\r\n                continue;\r\n            }\r\n            if (!pass.FS) {\r\n                console.warn(`${data.name}: FS of pass ${i} is empty`);\r\n                continue;\r\n            }\r\n            subshader._addShaderPass(ShaderCompile.compile(pass.VS, pass.FS, basePath), pass.pipeline);\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    /**@internal */\r\n    _name: string;\r\n    /**@internal */\r\n    _enableInstancing: boolean = false;\r\n    /**@internal */\r\n    _supportReflectionProbe: boolean = false;\r\n    /**@internal */\r\n    _subShaders: SubShader[] = [];\r\n\r\n    /**\r\n     * 名字。\r\n     */\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Shader3D</code> 实例。\r\n     */\r\n    constructor(name: string, enableInstancing: boolean, supportReflectionProbe: boolean) {\r\n        this._name = name;\r\n        this._enableInstancing = enableInstancing;\r\n        this._supportReflectionProbe = supportReflectionProbe;\r\n    }\r\n\r\n    /**\r\n     * 添加子着色器。\r\n     * @param 子着色器。\r\n     */\r\n    addSubShader(subShader: SubShader): void {\r\n        this._subShaders.push(subShader);\r\n        subShader._owner = this;\r\n    }\r\n\r\n    /**\r\n     * 在特定索引获取子着色器。\r\n     * @param\tindex 索引。\r\n     * @return 子着色器。\r\n     */\r\n    getSubShaderAt(index: number): SubShader {\r\n        return this._subShaders[index];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../../../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\nexport class ShaderDefines2D {\r\n    /**@internal */\r\n    static TEXTURE2D: ShaderDefine;\r\n    /**@internal */\r\n    static PRIMITIVE: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERGLOW: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERBLUR: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERCOLOR: ShaderDefine;\r\n    /**@internal */\r\n    static COLORADD: ShaderDefine;\r\n    /**@internal */\r\n    static WORLDMAT: ShaderDefine;\r\n    /**@internal */\r\n    static FILLTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SKINMESH: ShaderDefine;\r\n    /**@internal */\r\n    static MVP3D: ShaderDefine;\r\n    /**@internal */\r\n    static GAMMASPACE: ShaderDefine;\r\n    /**@internal */\r\n    static INVERTY: ShaderDefine;\r\n    /**@internal */\r\n    static GAMMATEXTURE: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static TEXTURESHADER: ShaderDefine;\r\n    /**@internal */\r\n    static PRIMITIVESHADER: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static UNIFORM_MMAT: number;// mat4 u_mmat\r\n    static UNIFORM_CLIPMATDIR: number;// uniform vec4 u_clipMatDir;\r\n    static UNIFORM_CLIPMATPOS: number;// uniform vec2 u_clipMatPos;\r\n    static UNIFORM_MMAT2: number;// uniform mat4 u_mmat2;\r\n    static UNIFORM_SIZE: number;// uniform vec2 u_size;\r\n    static UNIFORM_CLIPOFF: number;//uniform vec2 u_clipOff;\t\r\n    static UNIFORM_MVPMatrix: number;//uniform mat4 u_MvpMatrix;\r\n\r\n    static UNIFORM_SPRITETEXTURE: number;// uniform sampler2D u_spriteTexture;\r\n    static UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1: number;//uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\n    static UNIFORM_BLURINFO: number; //uniform vec2 u_blurInfo;\r\n\r\n    static UNIFORM_COLORALPHA: number;// uniform vec4 u_colorAlpha;\r\n    static UNIFORM_COLORMAT: number; //uniform mat4 u_colorMat;\r\n    static UNIFORM_COLOR: number;//uniform vec4 u_color;\r\n    static UNIFORM_BLURINFO1: number//uniform vec4 u_blurInfo1;\r\n    static UNIFORM_BLURINFO2: number//uniform vec4 u_blurInfo2;\r\n    static UNIFORM_COLORADD: number;//uniform vec4 u_colorAdd;\r\n    static UNIFORM_TEXRANGE: number;//uniform vec4 u_TexRange;\r\n\r\n    //TODO?\r\n    //static NOOPTMASK: number = ShaderDefines2D.FILTERGLOW | ShaderDefines2D.FILTERBLUR | ShaderDefines2D.FILTERCOLOR | ShaderDefines2D.FILLTEXTURE;\t//有这些定义的不要优化。见submittexture\r\n\r\n    static __init__(): void {\r\n        ShaderDefines2D.TEXTURE2D = Shader3D.getDefineByName(\"TEXTURE2D\");\r\n        ShaderDefines2D.PRIMITIVE = Shader3D.getDefineByName(\"PRIMITIVE\");\r\n\r\n        ShaderDefines2D.FILTERGLOW = Shader3D.getDefineByName(\"GLOW_FILTER\");\r\n        ShaderDefines2D.FILTERBLUR = Shader3D.getDefineByName(\"BLUR_FILTER\");\r\n        ShaderDefines2D.FILTERCOLOR = Shader3D.getDefineByName(\"COLOR_FILTER\");\r\n        ShaderDefines2D.COLORADD = Shader3D.getDefineByName(\"COLOR_ADD\");\r\n        ShaderDefines2D.WORLDMAT = Shader3D.getDefineByName(\"WORLDMAT\");\r\n        ShaderDefines2D.FILLTEXTURE = Shader3D.getDefineByName(\"FILLTEXTURE\");\r\n        ShaderDefines2D.MVP3D = Shader3D.getDefineByName('MVP3D');\r\n\r\n        ShaderDefines2D.GAMMASPACE = Shader3D.getDefineByName('GAMMASPACE');\r\n\r\n        ShaderDefines2D.INVERTY = Shader3D.getDefineByName('INVERTY');\r\n\r\n        ShaderDefines2D.GAMMATEXTURE = Shader3D.getDefineByName('GAMMATEXTURE');\r\n\r\n        ShaderDefines2D.TEXTURESHADER = Shader3D.getDefineByName(\"TEXTUREVS\");\r\n        ShaderDefines2D.PRIMITIVESHADER = Shader3D.getDefineByName(\"PRIMITIVEMESH\");\r\n\r\n        ShaderDefines2D.initSprite2DCommandEncoder();\r\n    }\r\n\r\n    static initSprite2DCommandEncoder() {\r\n        ShaderDefines2D.UNIFORM_MMAT = Shader3D.propertyNameToID(\"u_mmat\");\r\n        ShaderDefines2D.UNIFORM_CLIPMATDIR = Shader3D.propertyNameToID(\"u_clipMatDir\");\r\n        ShaderDefines2D.UNIFORM_CLIPMATPOS = Shader3D.propertyNameToID(\"u_clipMatPos\");\r\n        ShaderDefines2D.UNIFORM_MMAT2 = Shader3D.propertyNameToID(\"u_mmat2\");\r\n        ShaderDefines2D.UNIFORM_SIZE = Shader3D.propertyNameToID(\"u_size\");\r\n        ShaderDefines2D.UNIFORM_CLIPOFF = Shader3D.propertyNameToID(\"u_clipOff\");\r\n\r\n        ShaderDefines2D.UNIFORM_MVPMatrix = Shader3D.propertyNameToID(\"u_MvpMatrix\");\r\n        ShaderDefines2D.UNIFORM_SPRITETEXTURE = Shader3D.propertyNameToID(\"u_spriteTexture\");\r\n        ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1 = Shader3D.propertyNameToID(\"u_strength_sig2_2sig2_gauss1\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO = Shader3D.propertyNameToID(\"u_blurInfo\");\r\n        ShaderDefines2D.UNIFORM_COLORALPHA = Shader3D.propertyNameToID(\"u_colorAlpha\");\r\n        ShaderDefines2D.UNIFORM_COLORMAT = Shader3D.propertyNameToID(\"u_colorMat\");\r\n\r\n        ShaderDefines2D.UNIFORM_COLOR = Shader3D.propertyNameToID(\"u_color\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO1 = Shader3D.propertyNameToID(\"u_blurInfo1\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO2 = Shader3D.propertyNameToID(\"u_blurInfo2\");\r\n        ShaderDefines2D.UNIFORM_COLORADD = Shader3D.propertyNameToID(\"u_colorAdd\");\r\n        ShaderDefines2D.UNIFORM_TEXRANGE = Shader3D.propertyNameToID(\"u_TexRange\");\r\n\r\n        const commandUniform = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2D\");\r\n\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT, \"u_mmat\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATDIR, \"u_clipMatDir\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATPOS, \"u_clipMatPos\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT2, \"u_mmat2\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SIZE, \"u_size\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPOFF, \"u_clipOff\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MVPMatrix, \"u_MvpMatrix\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SPRITETEXTURE, \"u_spriteTexture\", ShaderDataType.Texture2D);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, \"u_strength_sig2_2sig2_gauss1\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO, \"u_blurInfo\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORALPHA, \"u_colorAlpha\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORMAT, \"u_colorMat\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLOR, \"u_color\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO1, \"u_blurInfo1\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO2, \"u_blurInfo2\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORADD, \"u_colorAdd\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_TEXRANGE, \"u_TexRange\", ShaderDataType.Vector4);\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n * \r\n * @author laya\r\n */\r\nexport class RenderInfo {\r\n    /**当前帧的开始时间 */\r\n    static loopStTm: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    static loopCount: number = 0;\r\n}","import { Point } from \"../../maths/Point\"\r\n\r\n// 注意长宽都不要超过256，一个是影响效率，一个是超出表达能力\r\nexport class AtlasGrid {\r\n    atlasID: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    private _texCount: number = 0;\r\n    private _rowInfo: Uint8Array = null;\t\t// 当前行的最大长度\r\n    private _cells: Uint8Array = null;\t\t// 每个格子的信息。{type,w,h} 相当于一个距离场. type =0 表示空闲的。不为0的情况下填充的是宽高（有什么用呢）\r\n    _used: number = 0;\t\t\t\t// 使用率\r\n\r\n    // TODO type 是否有用\r\n\r\n    //------------------------------------------------------------------------------\r\n    constructor(width: number = 0, height: number = 0, id: number = 0) {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n        this.atlasID = id;\r\n        this._init(width, height);\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    addRect(type: number, width: number, height: number, pt: Point): boolean {\r\n        //调用获得应该放在哪 返回值有三个。。bRet是否成功，nX x位置，nY y位置\r\n        if (!this._get(width, height, pt))\r\n            return false;\r\n        //根据获得的x,y填充\r\n        this._fill(pt.x, pt.y, width, height, type);\r\n        this._texCount++;\r\n        //返回是否成功，以及X位置和Y位置\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _release(): void {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _init(width: number, height: number): boolean {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._release();\r\n        if (this._width == 0) return false;\r\n        this._cells = new Uint8Array(this._width * this._height * 3);\r\n        this._rowInfo = new Uint8Array(this._height);\r\n        this._used = 0;\r\n        this._clear();\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _get(width: number, height: number, pt: Point): boolean {\r\n        if (width > this._width || height > this._height) {\r\n            return false;\r\n        }\r\n        //定义返回的x,y的位置\r\n        var rx: number = -1;\r\n        var ry: number = -1;\r\n        //为了效率先保存临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeight: number = this._height;\r\n        //定义一个变量为了指向 m_pCells\r\n        var pCellBox: Uint8Array = this._cells;\r\n\r\n        //遍历查找合适的位置  //TODO 下面的方法应该可以优化\r\n        for (var y: number = 0; y < nHeight; y++) {\r\n            //如果该行的空白数 小于 要放入的宽度返回\r\n            if (this._rowInfo[y] < width) continue;\r\n            for (var x: number = 0; x < nWidth;) {\r\n\r\n                var tm: number = (y * nWidth + x) * 3;\r\n\r\n                if (pCellBox[tm] != 0 || pCellBox[tm + 1] < width || pCellBox[tm + 2] < height) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                rx = x;\r\n                ry = y;\r\n                // 检查当前宽度是否能完全放下，即x方向的每个位置都有足够的高度。\r\n                for (var xx: number = 0; xx < width; xx++) {\r\n                    if (pCellBox[3 * xx + tm + 2] < height) {\r\n                        rx = -1;\r\n                        break;\r\n                    }\r\n                }\r\n                // 不行就x继续前进\r\n                if (rx < 0) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                // 找到了\r\n                pt.x = rx;\r\n                pt.y = ry;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _fill(x: number, y: number, w: number, h: number, type: number): void {\r\n        //定义一些临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeghit: number = this._height;\r\n        //代码检查\r\n        this._check((x + w) <= nWidth && (y + h) <= nHeghit);\r\n\r\n        //填充\r\n        for (var yy: number = y; yy < (h + y); ++yy) {\r\n            this._check(this._rowInfo[yy] >= w);\r\n            this._rowInfo[yy] -= w;\r\n            for (var xx: number = 0; xx < w; xx++) {\r\n                var tm: number = (x + yy * nWidth + xx) * 3;\r\n                this._check(this._cells[tm] == 0);\r\n                this._cells[tm] = type;\r\n                this._cells[tm + 1] = w;\r\n                this._cells[tm + 2] = h;\r\n            }\r\n        }\r\n        //调整我左方相邻空白格子的宽度连续信息描述\r\n        if (x > 0) {\r\n            for (yy = 0; yy < h; ++yy) {\r\n                // TODO 下面应该可以优化\r\n                var s: number = 0;\r\n                for (xx = x - 1; xx >= 0; --xx, ++s) {\r\n                    if (this._cells[((y + yy) * nWidth + xx) * 3] != 0) break;\r\n                }\r\n                for (xx = s; xx > 0; --xx) {\r\n                    this._cells[((y + yy) * nWidth + x - xx) * 3 + 1] = xx;\r\n                    this._check(xx > 0);\r\n                }\r\n            }\r\n        }\r\n        //调整我上方相邻空白格子的高度连续信息描述\r\n        if (y > 0) {\r\n            for (xx = x; xx < (x + w); ++xx) {\r\n                // TODO 下面应该可以优化\r\n                s = 0;\r\n                for (yy = y - 1; yy >= 0; --yy, s++) {\r\n                    if (this._cells[(xx + yy * nWidth) * 3] != 0) break;\r\n                }\r\n                for (yy = s; yy > 0; --yy) {\r\n                    this._cells[(xx + (y - yy) * nWidth) * 3 + 2] = yy;\r\n                    this._check(yy > 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._used += (w * h) / (this._width * this._height);\r\n    }\r\n\r\n    private _check(ret: boolean): void {\r\n        if (ret == false) {\r\n            console.log(\"xtexMerger 错误啦\");\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _clear(): void {\r\n        this._texCount = 0;\r\n        for (var y: number = 0; y < this._height; y++) {\r\n            this._rowInfo[y] = this._width;\r\n        }\r\n        for (var i: number = 0; i < this._height; i++) {\r\n            for (var j: number = 0; j < this._width; j++) {\r\n                var tm: number = (i * this._width + j) * 3;\r\n                this._cells[tm] = 0;\r\n                this._cells[tm + 1] = this._width - j;\r\n                this._cells[tm + 2] = this._width - i;\r\n            }\r\n        }\r\n    }\r\n    //------------------------------------------------------------------\r\n}\r\n\r\n\r\n","export class FontInfo {\r\n\r\n    private static _cache: Record<string, FontInfo> = {};\r\n\r\n    /**\r\n     * 解析字体模型\r\n     * @param font \r\n     */\r\n    static parse(font: string): FontInfo {\r\n        if (font === _lastFont) {\r\n            return _lastFontInfo;\r\n        }\r\n        let r = FontInfo._cache[font];\r\n        if (!r) {\r\n            r = FontInfo._cache[font] = new FontInfo(font);\r\n        }\r\n        _lastFont = font;\r\n        _lastFontInfo = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    _font: string;\r\n    /**@internal */\r\n    _family: string = \"Arial\";\r\n    /**@internal */\r\n    _size: number = 14;\r\n    /**@internal */\r\n    _italic: boolean = false;\r\n    /**@internal */\r\n    _bold: boolean = false;\r\n\r\n    constructor(font: string | null) {\r\n        this.setFont(font || \"14px Arial\");\r\n    }\r\n\r\n    /**\r\n     * 设置字体格式\r\n     * @param value \r\n     */\r\n    setFont(value: string): void {\r\n        this._font = value;\r\n        var words: any[] = value.split(' ');\r\n        var l: number = words.length;\r\n        if (l < 2) {\r\n            if (l == 1) {\r\n                if (words[0].indexOf('px') > 0) {\r\n                    this._size = parseInt(words[0]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        var szpos: number = -1;\r\n        //由于字体可能有空格，例如Microsoft YaHei 所以不能直接取倒数第二个，要先找到px\r\n        for (let i = 0; i < l; i++) {\r\n            if (words[i].indexOf('px') > 0 || words[i].indexOf('pt') > 0) {\r\n                szpos = i;\r\n                this._size = parseInt(words[i]);\r\n                if (this._size <= 0) {\r\n                    console.debug('font parse error:' + value);\r\n                    this._size = 14;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        //最后一个是用逗号分开的family\r\n        var fpos: number = szpos + 1;\r\n        var familys: string = words[fpos];\r\n        fpos++;//下一个\r\n        for (; fpos < l; fpos++) {\r\n            familys += ' ' + words[fpos];\r\n        }\r\n        this._family = (familys.split(','))[0];\r\n        this._italic = words.indexOf('italic') >= 0;\r\n        this._bold = words.indexOf('bold') >= 0;\r\n    }\r\n}\r\n\r\nvar _lastFont: string = '';\r\nvar _lastFontInfo: FontInfo;","import { Texture } from \"../../../../resource/Texture\"\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\r\nimport { RenderState2D } from \"../../../utils/RenderState2D\"\r\nimport { RenderTexture2D } from \"../../../../resource/RenderTexture2D\"\r\nimport { Const } from \"../../../../Const\"\r\nimport { ShaderData } from \"../../../../RenderEngine/RenderShader/ShaderData\"\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\"\r\nimport { Material } from \"../../../../resource/Material\"\r\nimport { DefineDatas } from \"../../../../RenderEngine/RenderShader/DefineDatas\"\r\nimport { Vector2 } from \"../../../../maths/Vector2\"\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\"\r\nimport { Vector4 } from \"../../../../maths/Vector4\"\r\nimport { TextTexture } from \"../../../text/TextTexture\"\r\n\r\nexport enum RenderSpriteData {\r\n    Zero,\r\n    Texture2D,\r\n    Primitive\r\n}\r\n\r\n//系统自带渲染数据，不可忽视，如果不设置自定义Shader，将调用引擎本身的Shader\r\nexport class Value2D {\r\n\r\n    static globalShaderData: ShaderData;\r\n\r\n    protected static _cache: any[] = [];\r\n    protected static _typeClass: any = [];\r\n\r\n    public static _initone(type: number, classT: any): void {\r\n        Value2D._typeClass[type] = classT;\r\n        Value2D._cache[type] = [];\r\n        Value2D._cache[type]._length = 0;\r\n        Value2D.globalShaderData = new ShaderData();\r\n    }\r\n\r\n    static TEMPMAT4_ARRAY: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static _compileDefine: DefineDatas = new DefineDatas();\r\n    /**\r\n     * 对象池概念\r\n     * @param mainType \r\n     * @returns \r\n     */\r\n    static create(mainType: RenderSpriteData): Value2D {\r\n        var types: any = Value2D._cache[mainType] ? Value2D._cache[mainType] : [];\r\n        if (types._length)\r\n            return types[--types._length];\r\n        else\r\n            return new Value2D._typeClass[mainType]();\r\n    }\r\n\r\n    defines: ShaderData = new ShaderData();\r\n\r\n    _defaultShader: Shader3D;\r\n    //TODO\r\n    alpha: number = 1.0;\t//这个目前只给setIBVB用。其他的都放到attribute的color中了\r\n    //TODO\r\n    ALPHA: number = 1.0;\t//这个？\r\n\r\n    mainID: RenderSpriteData = RenderSpriteData.Zero;\r\n\r\n    ref: number = 1;\r\n\r\n    private _inClassCache: any;\r\n\r\n    private _cacheID: number = 0;\r\n\r\n    /**@internal */\r\n    private _size: Vector2 = new Vector2();\r\n\r\n    /**@internal */\r\n    set size(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_SIZE, value);\r\n    }\r\n\r\n    get size() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_SIZE);\r\n    }\r\n\r\n    /**@internal */\r\n    private _mmat: Matrix4x4 = new Matrix4x4();\r\n\r\n    /**@internal */\r\n    set mmat(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_MMAT, value);\r\n    }\r\n\r\n    /**@internal */\r\n    get mmat() {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_MMAT);\r\n    }\r\n\r\n    filters: any[];\r\n\r\n    ///**@internal */\r\n    //private _mvpMatrix: Matrix4x4 = new Matrix4x4();\r\n    /**@internal */\r\n    set u_MvpMatrix(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix, value);\r\n    }\r\n\r\n    get u_MvpMatrix() {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix);\r\n    }\r\n\r\n    texture: any;\r\n    private _textureHost: Texture | RenderTexture2D | TextTexture\r\n    public get textureHost(): Texture | RenderTexture2D | TextTexture {\r\n        return this._textureHost\r\n    }\r\n    public set textureHost(value: Texture | RenderTexture2D | TextTexture) {\r\n        this._textureHost = value;\r\n        //var tex = value && value._getSource();\r\n        //@ts-ignore\r\n        this.defines.setTexture(ShaderDefines2D.UNIFORM_SPRITETEXTURE, value);\r\n    }\r\n    //public var fillStyle:DrawStyle;\t\t\t//TODO 这个有什么用？\r\n    _color: Vector4;\r\n\r\n    set color(value: Vector4) {\r\n        value && this.defines.setVector(ShaderDefines2D.UNIFORM_COLOR, value);\r\n    }\r\n\r\n    get color() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLOR);\r\n    }//Vector4\r\n    //public var strokeStyle:DrawStyle;\r\n    //colorAdd: any[];//Vector4\r\n    _colorAdd: Vector4;\r\n\r\n    set colorAdd(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_COLORADD, value);\r\n    }\r\n\r\n    get colorAdd() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLORADD);\r\n    }//Vector4\r\n\r\n\r\n    private _clipMatDir: Vector4 = new Vector4(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE);\r\n\r\n    set clipMatDir(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_CLIPMATDIR, value);\r\n    }\r\n\r\n    get clipMatDir() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_CLIPMATDIR);\r\n    }//Vector4\r\n\r\n    private _clipMatpos: Vector2 = new Vector2();\r\n    set clipMatPos(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS, value);\r\n    }\r\n\r\n    get clipMatPos() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS);\r\n    }//Vector2\r\n    //clipMatPos: Array<number> = [0, 0];//Vector2\r\n    _clipOff: Vector2 = new Vector2();//vector2\t\t\t// 裁剪是否需要加上偏移，cacheas normal用\r\n    set clipOff(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_CLIPOFF, value);\r\n    }\r\n\r\n    get clipOff() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_CLIPOFF);\r\n    }//Vector2\r\n\r\n    constructor(mainID: RenderSpriteData) {\r\n        this.mainID = mainID;\r\n        this.textureHost = null;\r\n        this.texture = null;\r\n        //this.fillStyle = null;\r\n        //this.color = null;\r\n        //this.strokeStyle = null;\r\n        //this.colorAdd = null;\r\n\r\n        this.clipMatDir = this._clipMatDir;\r\n        this.clipMatPos = this._clipMatpos;\r\n        this.clipOff = this._clipOff;\r\n        this._cacheID = mainID;\r\n        this._inClassCache = Value2D._cache[this._cacheID];\r\n        if (mainID > 0 && !this._inClassCache) {\r\n            this._inClassCache = Value2D._cache[this._cacheID] = [];\r\n            this._inClassCache._length = 0;\r\n        }\r\n        this.clear();\r\n\r\n    }\r\n\r\n    /**\r\n     * 组织Define宏数据\r\n     */\r\n    public updateShaderData() {\r\n        var renderstate2d: any = RenderState2D;\r\n        // 如果有矩阵的话，就设置 WORLDMAT 宏\r\n        RenderState2D.worldMatrix4 === RenderState2D.TEMPMAT4_ARRAY || this.defines.addDefine(ShaderDefines2D.WORLDMAT);\r\n        this._mmat.cloneByArray(renderstate2d.worldMatrix4);\r\n        this.mmat = this._mmat;\r\n\r\n        if (RenderState2D.matWVP) {\r\n            this.defines.addDefine(ShaderDefines2D.MVP3D);\r\n            this.u_MvpMatrix = RenderState2D.matWVP;\r\n        }\r\n        let returnGamma: boolean = !(RenderTexture2D.currentActive) || ((RenderTexture2D.currentActive)._texture.gammaCorrection != 1);\r\n        //returnGamma = returnGamma && (this.textureHost && ((this.textureHost as RenderTexture2D).gammaCorrection == 1 || (this.textureHost as Texture).bitmap.gammaCorrection == 1));\r\n        let textrueReadGamma: boolean = false;\r\n        if (this.textureHost) {\r\n            if (this.textureHost instanceof RenderTexture2D) {\r\n                textrueReadGamma = (this.textureHost as RenderTexture2D).gammaCorrection != 1;\r\n            } else if (this.textureHost instanceof Texture && (this.textureHost as Texture).bitmap) {\r\n                textrueReadGamma = (this.textureHost as Texture).bitmap.gammaCorrection != 1;\r\n            } else if (this.textureHost instanceof TextTexture && (this.textureHost as TextTexture).bitmap) {\r\n                // TextTexture\r\n                textrueReadGamma = (this.textureHost as TextTexture).gammaCorrection != 1;\r\n            }\r\n        }\r\n\r\n        if (textrueReadGamma) {\r\n            this.defines.addDefine(ShaderDefines2D.GAMMATEXTURE);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.GAMMATEXTURE);\r\n        }\r\n\r\n        if (returnGamma) {\r\n            this.defines.addDefine(ShaderDefines2D.GAMMASPACE);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.GAMMASPACE);\r\n        }\r\n\r\n        if (RenderState2D.InvertY) {\r\n            this.defines.addDefine(ShaderDefines2D.INVERTY);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.INVERTY);\r\n        }\r\n\r\n        if (this.mainID == RenderSpriteData.Texture2D) {\r\n            this.defines.addDefine(ShaderDefines2D.TEXTURESHADER);\r\n        }\r\n        if (this.mainID == RenderSpriteData.Primitive) {\r\n            this.defines.addDefine(ShaderDefines2D.PRIMITIVESHADER);\r\n        }\r\n    }\r\n\r\n    upload(material: Material = null): void {\r\n\r\n        this._size.setValue(RenderState2D.width, RenderState2D.height)\r\n        this.size = this._size;\r\n        //update owner ShaderData\r\n        this.updateShaderData();\r\n        if (material) {\r\n            //Custom Shader\r\n            var shaderPass = material._shader._subShaders[0]._passes;\r\n            \r\n            var pass;\r\n            for (var j: number = 0, m: number = shaderPass.length; j < m; j++) {\r\n                pass = shaderPass[j];\r\n                //NOTE:this will cause maybe a shader not render but do prepare before，but the developer can avoide this manual,for example shaderCaster=false.\r\n                if (pass._pipelineMode == \"Forward\")\r\n                    break;\r\n            }\r\n            var comDef: DefineDatas = Value2D._compileDefine;\r\n            this.defines._defineDatas.cloneTo(Value2D._compileDefine);\r\n            //mateiral Define\r\n            Value2D._compileDefine.addDefineDatas(material._defineDatas);\r\n            //Global Define\r\n            Value2D._compileDefine.addDefineDatas(Value2D.globalShaderData._defineDatas);\r\n            var shaderIns = pass.withCompile(Value2D._compileDefine, true);\r\n            shaderIns.bind();\r\n            shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, this.defines, true);\r\n            shaderIns.uploadUniforms(shaderIns._sceneUniformParamsMap, Value2D.globalShaderData, true);\r\n            shaderIns.uploadUniforms(shaderIns._materialUniformParamsMap, material.shaderData, true);\r\n        } else {\r\n            //default pass\r\n            var shaderPass = this._defaultShader._subShaders[0]._passes;\r\n\r\n            if (shaderPass.length >= 1) {\r\n                pass = shaderPass[0];\r\n                //var comDef: DefineDatas = Value2D._compileDefine;\r\n                var shaderIns = pass.withCompile(this.defines._defineDatas, true);\r\n                shaderIns.bind();\r\n                shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, this.defines, true);\r\n            } else {\r\n                //TODO 多pass情况\r\n            }\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    setFilters(value: any[]): void {\r\n        this.filters = value;\r\n        if (!value)\r\n            return;\r\n\r\n        var n: number = value.length, f: any;\r\n        for (var i: number = 0; i < n; i++) {\r\n            f = value[i];\r\n            if (f) {\r\n                this.defines.addDefine(f.typeDefine);//搬到setValue中\r\n                f.action.setValue(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.clipOff.x = 0;\r\n        this.clipOff = this.clipOff\r\n    }\r\n\r\n    release(): void {\r\n        if ((--this.ref) < 1) {\r\n            this._inClassCache && (this._inClassCache[this._inClassCache._length++] = this);\r\n            this.clear();\r\n            this.filters = null;\r\n            this.ref = 1;\r\n            this.clipOff.x = 0;\r\n            this.clipOff = this.clipOff\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Context } from \"../resource/Context\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WordText {\r\n    text: string;\r\n    width: number;\t//整个WordText的长度。-1表示没有计算还。\r\n    pageChars: any[];\t//把本对象的字符按照texture分组保存的文字信息。里面又是一个数组。具体含义见使用的地方。\r\n    pagecharsCtx: Context = null;  // 上面缓存的时候用的ctx。跨ctx的时候（例如drawToTexture）要清理\r\n    scalex;\t// 缓存的时候的缩放\r\n    scaley;\r\n\r\n    _nativeObj: any;\r\n    _splitRender: boolean;\t// 强制拆分渲染\r\n\r\n    constructor() {\r\n        if ((window as any).conch && !(window as any).conchConfig.conchWebGL)\r\n            this._nativeObj = new (window as any)._conchWordText();\r\n        else {\r\n            this.width = -1;\r\n            this.pageChars = [];\r\n            this.scalex = 1;\r\n            this.scaley = 1;\r\n        }\r\n    }\r\n\r\n    setText(txt: string): void {\r\n        this.text = txt;\r\n        if (this._nativeObj)\r\n            this._nativeObj._text = txt;\r\n        else\r\n            this.width = -1;\r\n        this.cleanCache();\r\n    }\r\n\r\n    toString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.text ? this.text.length : 0;\r\n    }\r\n\r\n    /**\r\n     * 自己主动清理缓存，需要把关联的贴图删掉\r\n     * 不做也可以，textrender会自动清理不用的\r\n     * TODO 重用\r\n     */\r\n    cleanCache(): void {\r\n        if (this._nativeObj) {\r\n            this._nativeObj.cleanCache();\r\n            return;\r\n        }\r\n\r\n        // 如果是独占文字贴图的，需要删掉\r\n        //TODO 这个效果不对。会造成文字错乱\r\n        let chars = this.pageChars;\r\n        if (chars.length > 0) {\r\n            for (let p of chars) {\r\n                let tex = p.tex;\r\n                let words = p.words;\r\n                if (words.length == 1 && tex && tex.ri) {// 如果有ri表示是独立贴图\r\n                    tex.destroy();\r\n                }\r\n            }\r\n\r\n            this.pageChars = [];\r\n        }\r\n        this.scalex = 1;\r\n        this.scaley = 1;\r\n    }\r\n\r\n    get splitRender() {\r\n        return this._splitRender;\r\n    }\r\n\r\n    set splitRender(value: boolean) {\r\n        this._splitRender = value;\r\n        if (this._nativeObj)\r\n            this._nativeObj.splitRender = value;\r\n    }\r\n}","import { RenderInfo } from \"../../renders/RenderInfo\"\r\n/**\r\n * TODO如果占用内存较大,这个结构有很多成员可以临时计算\r\n */\r\nexport class CharRenderInfo {\r\n    char: string = '';\t\t\t\t// 调试用\r\n    tex: any;\t\t\t\t\t\t//\r\n    deleted: boolean = false; \t// 已经被删除了\r\n    uv: any[] = new Array(8);// [0, 0, 1, 1];\t\t//uv\r\n    pos: number = 0;\t\t\t\t\t//数组下标\r\n    width: number;\t\t\t\t\t//字体宽度。测量的宽度，用来排版。没有缩放\r\n    height: number; \t\t\t\t//字体高度。没有缩放\r\n    bmpWidth: number;\t\t\t\t//实际图片的宽度。可能与排版用的width不一致。包含缩放和margin\r\n    bmpHeight: number;\r\n    orix: number = 0;\t\t\t\t// 原点位置，通常都是所在区域的左上角\r\n    oriy: number = 0;\r\n    touchTick: number = 0;\t\t//\r\n    isSpace: boolean = false;\t\t//是否是空格，如果是空格，则只有width有效\r\n    touch(): void {\r\n        var curLoop: number = RenderInfo.loopCount;\r\n        if (this.touchTick != curLoop) {// 这个保证每帧只调用一次\r\n            this.tex.touchRect(this, curLoop);\r\n        }\r\n        this.touchTick = curLoop;\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\";\r\nexport class ICharRender {\r\n    fontsz = 16;\r\n    getWidth(font: string, str: string): number { return 0; }\r\n\r\n    scale(sx: number, sy: number): void {\r\n    }\r\n\r\n    get canvasWidth(): number {\r\n        return 0;\r\n    }\r\n\r\n    set canvasWidth(w: number) {\r\n\r\n    }\r\n    /**\r\n     *TODO stroke \r\n     * @param\tchar\r\n     * @param\tfont\r\n     * @param\tsize  返回宽高\r\n     * @return\r\n     */\r\n    getCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[]|null = null): ImageData|null {\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Config } from \"../../Config\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>Browser</code> 是浏览器代理类。封装浏览器及原生 js 提供的一些功能。\r\n */\r\nexport class Browser {\r\n\r\n    /** 浏览器代理信息。*/\r\n    static userAgent: string;\r\n    /** 表示是否在移动设备，包括IOS和安卓等设备内。*/\r\n    static onMobile: boolean;\r\n    /** 表示是否在 IOS 设备内。*/\r\n    static onIOS: boolean;\r\n    /** 表示是否在 Mac 设备。*/\r\n    static onMac: boolean;\r\n    /** 表示是否在 IPhone 设备内。*/\r\n    static onIPhone: boolean;\r\n    /** 表示是否在 IPad 设备内。*/\r\n    static onIPad: boolean;\r\n    /** 表示是否在 Android 设备内。*/\r\n    static onAndroid: boolean;\r\n    /** 表示是否在 Windows Phone 设备内。*/\r\n    static onWP: boolean;\r\n    /** 表示是否在 QQ 浏览器内。*/\r\n    static onQQBrowser: boolean;\r\n    /** 表示是否在移动端 QQ 或 QQ 浏览器内。*/\r\n    static onMQQBrowser: boolean;\r\n    /** 表示是否在 Safari 内。*/\r\n    static onSafari: boolean;\r\n    /** 表示是否在 Chrome 内 */\r\n    static onChrome: boolean;\r\n    /** 表示是否在 IE 浏览器内*/\r\n    static onIE: boolean;\r\n    /** 表示是否在 微信 内*/\r\n    static onWeiXin: boolean;\r\n    /** 表示是否在 PC 端。*/\r\n    static onPC: boolean;\r\n    /** 微信小游戏 **/\r\n    static onMiniGame: boolean;\r\n    /** 百度小游戏 **/\r\n    static onBDMiniGame: boolean;\r\n    /** 小米戏小游戏 **/\r\n    static onKGMiniGame: boolean;\r\n    /** OPPO小游戏 **/\r\n    static onQGMiniGame: boolean;\r\n    /** VIVO小游戏 **/\r\n    static onVVMiniGame: boolean;\r\n    /** 阿里小游戏 **/\r\n    static onAlipayMiniGame: boolean;\r\n    /***手机QQ小游戏 */\r\n    static onQQMiniGame: boolean;\r\n    /*** BILIBILI小游戏 */\r\n    static onBLMiniGame: boolean;\r\n    /** 抖音小游戏*/\r\n    static onTTMiniGame: boolean;\r\n    /** 华为快游戏 */\r\n    static onHWMiniGame: boolean;\r\n    /** 淘宝小程序 */\r\n    static onTBMiniGame: boolean;\r\n    /** @private */\r\n    static onFirefox: boolean;//TODO:求补充\r\n    /** Edge浏览器 */\r\n    static onEdge: boolean;\r\n    /** @private */\r\n    static onLayaRuntime: boolean;\r\n\r\n    /** 真实平台类型，onMobile等是通过UserAgent判断，可能具有欺骗性 **/\r\n    static platform: number;\r\n    static PLATFORM_PC = 0;\r\n    static PLATFORM_ANDROID = 1;\r\n    static PLATFORM_IOS = 2;\r\n\r\n    /** 表示是否支持WebAudio*/\r\n    static supportWebAudio: boolean;\r\n    /** 表示是否支持LocalStorage*/\r\n    static supportLocalStorage: boolean;\r\n\r\n    /** 全局离线画布（非主画布）。主要用来测量字体、获取image数据。*/\r\n    static canvas: any;\r\n    /** 全局离线画布上绘图的环境（非主画布）。 */\r\n    static context: CanvasRenderingContext2D;\r\n\r\n    /** @private */\r\n    private static _window: any;\r\n    /** @private */\r\n    private static _document: Document;\r\n    /** @private */\r\n    private static _container: any;\r\n    /** @private */\r\n    private static _pixelRatio: number = -1;\r\n\r\n    /** @private */\r\n    private static _clientWidth: number;\r\n    /** @private */\r\n    private static _clientHeight: number;\r\n\r\n    /** @private */\r\n    static mainCanvas: any = null;\r\n\r\n    /**@private */\r\n    private static hanzi: RegExp = new RegExp(\"^[\\u4E00-\\u9FA5]$\");\r\n    /**@private */\r\n    private static fontMap: { [key: string]: string } = {};\r\n    /**@private */\r\n    static measureText: Function = function (txt: string, font: string): any {\r\n        let isChinese: boolean = Browser.hanzi.test(txt);\r\n        if (isChinese && Browser.fontMap[font]) {\r\n            return Browser.fontMap[font];\r\n        }\r\n\r\n        let ctx: CanvasRenderingContext2D = Browser.context;\r\n        ctx.font = font;\r\n\r\n        let r: any = ctx.measureText(txt);\r\n        if (isChinese) Browser.fontMap[font] = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        let Laya: any = (window as any).Laya || ILaya.Laya;\r\n        if (Browser._window) return Browser._window;\r\n        let win: any = Browser._window = window;\r\n        let doc: any = Browser._document = win.document;\r\n        let u: string = Browser.userAgent = win.navigator.userAgent;\r\n        let maxTouchPoints: number = win.navigator.maxTouchPoints || 0;\r\n        let platform: string = win.navigator.platform;\r\n\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            (window as any).wxMiniGame(Laya, Laya);\r\n            Laya[\"MiniAdpter\"].enable();\r\n        }\r\n        //阿里小游戏\r\n        if (\"my\" in Browser.window) {\r\n            if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n                //这里需要手动初始化阿里适配库\r\n                (window as any).tbMiniGame(Laya, Laya);\r\n                if (!Laya[\"TBMiniAdapter\"]) {\r\n                    console.error(\"请先添加淘宝适配库\");\r\n                } else {\r\n                    Laya[\"TBMiniAdapter\"].enable();\r\n                }\r\n            } else if (u.indexOf('AlipayMiniGame') > -1) {\r\n                //这里需要手动初始化阿里适配库\r\n                (window as any).aliPayMiniGame(Laya, Laya);\r\n                if (!Laya[\"ALIMiniAdapter\"]) {\r\n                    console.error(\"请先添加阿里小游戏适配库\");\r\n                } else {\r\n                    Laya[\"ALIMiniAdapter\"].enable();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (((u.indexOf('OPPO') == -1 && u.indexOf(\"MiniGame\") > -1) || u.indexOf('runtime') != -1 || (u.indexOf('miniprogram') != -1 && (window as any).isWXMiMi)) && \"wx\" in Browser.window) {\r\n            if (\"tt\" in Browser.window) {\r\n                //抖音小游戏\r\n                (window as any).ttMiniGame(Laya, Laya);\r\n                if (!Laya[\"TTMiniAdapter\"]) {\r\n                    //TODO\r\n                    console.error(\"请引入抖音小游戏的适配库，详细教程：https://layaair.com/3.x/doc/released/miniGame/byteDance/readme.html\");\r\n                } else {\r\n                    Laya[\"TTMiniAdapter\"].enable();\r\n                }\r\n            } else if (\"bl\" in Browser.window) {\r\n                //手机B站小游戏\r\n                (window as any).biliMiniGame(Laya, Laya);\r\n                if (!Laya[\"BLMiniAdapter\"]) {\r\n                    console.error(\"请引入bilibili小游戏的适配库\");\r\n                } else {\r\n                    Laya[\"BLMiniAdapter\"].enable();\r\n                }\r\n            }\r\n            else if (\"qq\" in Browser.window) {\r\n                //手机QQ小游戏\r\n                (window as any).qqMiniGame(Laya, Laya);\r\n                if (!Laya[\"QQMiniAdapter\"]) {\r\n                    console.error(\"请引入手机QQ小游戏的适配库\");\r\n                } else {\r\n                    Laya[\"QQMiniAdapter\"].enable();\r\n                }\r\n            }\r\n            else {\r\n                //微信小游戏\r\n                (window as any).wxMiniGame(Laya, Laya);\r\n                if (!Laya[\"MiniAdpter\"]) {\r\n                    console.error(\"请先添加小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/wechat/readme.html\");\r\n                    //TODO 教程要改\r\n                } else {\r\n                    Laya[\"MiniAdpter\"].enable();\r\n                }\r\n            }\r\n        }\r\n        //华为快游戏\r\n        if (\"hbs\" in Browser.window) {\r\n            (window as any).hwMiniGame(Laya, Laya);\r\n            if (!Laya[\"HWMiniAdapter\"]) {\r\n                console.error(\"请先添加小游戏适配库!\");\r\n                //TODO 教程要改\r\n            } else {\r\n                Laya[\"HWMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //百度小游戏\r\n        if (u.indexOf(\"SwanGame\") > -1) {\r\n            (window as any).bdMiniGame(Laya, Laya);\r\n            if (!Laya[\"BMiniAdapter\"]) {\r\n                console.error(\"请先添加百度小游戏适配库\");\r\n                //TODO 教程要改\r\n            } else {\r\n                Laya[\"BMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //小米小游戏\r\n        if (u.indexOf('QuickGame') > -1) {\r\n            (window as any).miMiniGame(Laya, Laya);\r\n            if (!Laya[\"KGMiniAdapter\"]) {\r\n                console.error(\"请先添加小米小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/xiaomi/readme.html\");\r\n            } else {\r\n                Laya[\"KGMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //OPPO小游戏\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            (window as any).qgMiniGame(Laya, Laya);\r\n            if (!Laya[\"QGMiniAdapter\"]) {\r\n                console.error(\"请先添加OPPO小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/OPPO/readme.html\");\r\n            } else {\r\n                //temp oppo 需要修改交换链的功能\r\n                Config.fixedFrames = false;\r\n                Laya[\"QGMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //VIVO小游戏\r\n        if (u.indexOf('VVGame') > -1) {\r\n            (window as any).vvMiniGame(Laya, Laya);\r\n            if (!Laya[\"VVMiniAdapter\"]) {\r\n                console.error(\"请先添加VIVO小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/vivo/readme.html\");\r\n            } else {\r\n                //temp oppo 需要修改交换链的功能\r\n                Config.fixedFrames = false;\r\n                Laya[\"VVMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //新增trace的支持\r\n        win.trace = console.log;\r\n\r\n        //兼容requestAnimationFrame\r\n        win.requestAnimationFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (fun: any): any {\r\n            return win.setTimeout(fun, 1000 / 60);\r\n        }\r\n\r\n        //强制修改body样式\r\n        var bodyStyle: any = doc.body.style;\r\n        bodyStyle.margin = 0;\r\n        bodyStyle.overflow = 'hidden';\r\n        bodyStyle['-webkit-user-select'] = 'none';\r\n        bodyStyle['-webkit-tap-highlight-color'] = 'rgba(200,200,200,0)';\r\n\r\n        //强制修改meta标签，防止开发者写错\r\n        var metas: any[] = doc.getElementsByTagName('meta');\r\n        let viewportContent: Record<string, string> = {\r\n            \"width\": \"device-width\",\r\n            \"initial-scale\": \"1.0\",\r\n            \"minimum-scale\": \"1.0\",\r\n            \"maximum-scale\": \"1.0\",\r\n            \"user-scalable\": \"no\"\r\n        };\r\n        let viewport: any;\r\n        for (const meta of metas) {\r\n            if (meta.name == \"viewport\") {\r\n                viewport = meta;\r\n                break;\r\n            }\r\n        }\r\n        if (!viewport) {\r\n            viewport = doc.createElement('meta');\r\n            viewport.name = 'viewport';\r\n            doc.getElementsByTagName('head')[0]?.appendChild(viewport);\r\n        }\r\n        else {\r\n            let arr: Array<string> = (viewport.content || \"\").split(\",\");\r\n            for (let ele of arr) {\r\n                let arr2 = ele.split(\"=\");\r\n                if (!viewportContent[arr2[0].trim()])\r\n                    viewportContent[arr2[0]] = arr2[1];\r\n            }\r\n        }\r\n        viewport.content = Object.keys(viewportContent).map(k => k + \"=\" + viewportContent[k]);\r\n\r\n        //处理兼容性\t\t\t\r\n        Browser.onMobile = (window as any).conch ? true : u.indexOf(\"Mobile\") > -1;\r\n        Browser.onIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\r\n        Browser.onIPhone = u.indexOf(\"iPhone\") > -1;\r\n        Browser.onMac = u.indexOf(\"Mac OS X\") > -1;\r\n        Browser.onIPad = u.indexOf(\"iPad\") > -1 || (platform === 'MacIntel' && maxTouchPoints > 1);//\"platform === 'MacIntel' && maxTouchPoints >1\" is a temporary solution，maybe accidentally injure other platform.\r\n        Browser.onAndroid = u.indexOf('Android') > -1 || u.indexOf('Adr') > -1;\r\n        Browser.onWP = u.indexOf(\"Windows Phone\") > -1;\r\n        Browser.onQQBrowser = u.indexOf(\"QQBrowser\") > -1;\r\n        Browser.onMQQBrowser = u.indexOf(\"MQQBrowser\") > -1 || (u.indexOf(\"Mobile\") > -1 && u.indexOf(\"QQ\") > -1);\r\n        Browser.onIE = !!win.ActiveXObject || \"ActiveXObject\" in win;\r\n        Browser.onWeiXin = u.indexOf('MicroMessenger') > -1;\r\n        Browser.onSafari = u.indexOf(\"Safari\") > -1 && u.indexOf(\"Chrome\") === -1;\r\n        Browser.onChrome = u.indexOf(\"Chrome\") > -1;\r\n        Browser.onPC = !Browser.onMobile;\r\n        Browser.onFirefox = u.indexOf('Firefox') > -1;\r\n        Browser.onEdge = u.indexOf('Edge') > -1 || u.indexOf('Edg') > -1;\r\n        Browser.onMiniGame = u.indexOf('MiniGame') > -1;\r\n        Browser.onBDMiniGame = u.indexOf('SwanGame') > -1;\r\n        Browser.onLayaRuntime = !!(window as any).conch;\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQGMiniGame = true;//OPPO环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"qq\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQQMiniGame = true;//手机QQ环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"bl\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onBLMiniGame = true;//B站环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"tt\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onTTMiniGame = true;\r\n            Browser.onMiniGame = false;\r\n        }\r\n\r\n        Browser.onHWMiniGame = \"hbs\" in Browser.window;\r\n        Browser.onVVMiniGame = u.indexOf('VVGame') > -1;//vivo\r\n        Browser.onKGMiniGame = u.indexOf('QuickGame') > -1;//小米运行环境判断\r\n        if (u.indexOf('AlipayMiniGame') > -1) {\r\n            Browser.onAlipayMiniGame = true;//阿里小游戏环境判断\r\n            Browser.onMiniGame = false;\r\n        }\r\n        if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n            Browser.onTBMiniGame = true;\r\n        }\r\n\r\n        if (Browser.onAndroid || Browser.onIOS) {\r\n            //也有可能是模拟器\r\n            if (platform && (platform.indexOf(\"Win\") != -1 || platform.indexOf(\"Mac\") != -1))\r\n                Browser.platform = Browser.PLATFORM_PC;\r\n            else if (Browser.onAndroid)\r\n                Browser.platform = Browser.PLATFORM_ANDROID;\r\n            else\r\n                Browser.platform = Browser.PLATFORM_IOS;\r\n        }\r\n        else\r\n            Browser.platform = Browser.PLATFORM_PC;\r\n\r\n        return win;\r\n    }\r\n    /**\r\n     * 获取是否为小游戏环境\r\n     * @returns onMiniGame || onBDMiniGame || onQGMiniGame || onKGMiniGame || onVVMiniGame || onAlipayMiniGame || onQQMiniGame || onBLMiniGame || onTTMiniGame || onHWMiniGame || onTBMiniGame\r\n     */\r\n    static get _isMiniGame(): boolean {\r\n        return Browser.onMiniGame || Browser.onBDMiniGame || Browser.onQGMiniGame || Browser.onKGMiniGame || Browser.onVVMiniGame || Browser.onAlipayMiniGame || Browser.onQQMiniGame || Browser.onBLMiniGame || Browser.onTTMiniGame || Browser.onHWMiniGame || Browser.onTBMiniGame || (Browser.window && Browser.window.isWXMiMi);\r\n    }\r\n    /**\r\n     * 创建浏览器原生节点。\r\n     * @param\ttype 节点类型。\r\n     * @return\t创建的节点对象的引用。\r\n     */\r\n    static createElement(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.createElement(type);\r\n    }\r\n\r\n    /**\r\n     * 返回 Document 对象中拥有指定 id 的第一个对象的引用。\r\n     * @param\ttype 节点id。\r\n     * @return\t节点对象。\r\n     */\r\n    static getElementById(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.getElementById(type);\r\n    }\r\n\r\n    /**\r\n     * 移除指定的浏览器原生节点对象。\r\n     * @param\ttype 节点对象。\r\n     */\r\n    static removeElement(ele: any): void {\r\n        if (ele && ele.parentNode) ele.parentNode.removeChild(ele);\r\n    }\r\n\r\n    /**\r\n     * 获取浏览器当前时间戳，单位为毫秒。\r\n     */\r\n    static now(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /**\r\n     * 浏览器窗口可视宽度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerWidth(包含滚动条宽度) > document.body.clientWidth(不包含滚动条宽度)，如果前者为0或为空，则选择后者。\r\n     */\r\n    static get clientWidth(): number {\r\n        Browser.__init__();\r\n        return Browser._clientWidth || Browser._window.innerWidth || Browser._document.body.clientWidth;\r\n    }\r\n\r\n    static set clientWidth(value: number) {\r\n        Browser._clientWidth = value;\r\n    }\r\n\r\n    /**\r\n     * 浏览器窗口可视高度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerHeight(包含滚动条高度) > document.body.clientHeight(不包含滚动条高度) > document.documentElement.clientHeight(不包含滚动条高度)，如果前者为0或为空，则选择后者。\r\n     */\r\n    static get clientHeight(): number {\r\n        Browser.__init__();\r\n        return Browser._clientHeight || Browser._window.innerHeight || Browser._document.body.clientHeight || Browser._document.documentElement.clientHeight;\r\n    }\r\n\r\n    static set clientHeight(value: number) {\r\n        Browser._clientHeight = value;\r\n    }\r\n\r\n    /** 浏览器窗口物理宽度。考虑了设备像素比。*/\r\n    static get width(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientHeight : Browser.clientWidth) * Browser.pixelRatio;\r\n    }\r\n\r\n    /** 浏览器窗口物理高度。考虑了设备像素比。*/\r\n    static get height(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientWidth : Browser.clientHeight) * Browser.pixelRatio;\r\n    }\r\n\r\n    /** 获得设备像素比。*/\r\n    static get pixelRatio(): number {\r\n        if (Browser._pixelRatio < 0) {\r\n            Browser.__init__();\r\n            if (Browser.userAgent.indexOf(\"Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)\") > -1) Browser._pixelRatio = 2;\r\n            else {\r\n                Browser._pixelRatio = (Browser._window.devicePixelRatio || 1);\r\n                if (Browser._pixelRatio < 1) Browser._pixelRatio = 1;\r\n            }\r\n        }\r\n        return Browser._pixelRatio;\r\n    }\r\n\r\n    /**画布容器，用来盛放画布的容器。方便对画布进行控制*/\r\n    static get container(): any {\r\n        if (!Browser._container) {\r\n            Browser.__init__();\r\n            Browser._container = Browser.createElement(\"div\");\r\n            Browser._container.id = \"layaContainer\";\r\n            Browser._document.body.appendChild(Browser._container);\r\n        }\r\n        return Browser._container;\r\n    }\r\n\r\n    static set container(value: any) {\r\n        Browser._container = value;\r\n    }\r\n\r\n    /**浏览器原生 window 对象的引用。*/\r\n    static get window(): any {\r\n        return Browser._window || Browser.__init__();\r\n    }\r\n\r\n    /**浏览器原生 document 对象的引用。*/\r\n    static get document(): any {\r\n        Browser.__init__();\r\n        return Browser._document;\r\n    }\r\n\r\n    /**\r\n     * 获得URL参数值\r\n     * @param\tname 参数名称\r\n     * @return\t参数值\r\n     */\r\n    static getQueryString(name: string): string {\r\n        if (Browser.onMiniGame) return null;\r\n        if (!window.location || !window.location.search)\r\n            return null;\r\n        var reg: RegExp = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n        var r: any = window.location.search.substring(1).match(reg);\r\n        if (r != null) return unescape(r[2]);\r\n        return null;\r\n    }\r\n\r\n    // Safari横屏工具栏偏移\r\n    static getSafariToolbarOffset() {\r\n        return (Browser.window.__innerHeight || Browser.document.body.clientHeight || Browser.document.documentElement.clientHeight) - Browser.window.innerHeight;\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { Browser } from \"../../utils/Browser\";\r\nexport class CharRender_Canvas extends ICharRender {\r\n\tprivate static canvas: any = null;// HTMLCanvasElement;\r\n\tprivate ctx: any = null;\r\n\tprivate lastScaleX = 1.0;\r\n\tprivate lastScaleY = 1.0;\r\n\t//private needResetScale: boolean = false;\r\n\tprivate maxTexW = 0;\r\n\tprivate maxTexH = 0;\r\n\tprivate scaleFontSize = true;\r\n\tprivate showDbgInfo = false;\r\n\tprivate supportImageData = true;\r\n\tconstructor(maxw: number, maxh: number, scalefont: boolean = true, useImageData: boolean = true, showdbg: boolean = false) {\r\n\t\tsuper();\r\n\t\tthis.maxTexW = maxw;\r\n\t\tthis.maxTexH = maxh;\r\n\t\tthis.scaleFontSize = scalefont;\r\n\t\tthis.supportImageData = useImageData;\r\n\t\tthis.showDbgInfo = showdbg;\r\n\t\tif (!CharRender_Canvas.canvas) {\r\n\t\t\tCharRender_Canvas.canvas = Browser.createElement('canvas');\r\n\t\t\tCharRender_Canvas.canvas.width = 1024;\r\n\t\t\tCharRender_Canvas.canvas.height = 512;\r\n\t\t\t//这个canvas是用来获取字体渲染结果的。由于不可见canvas的字体不能小于12，所以要加到body上\r\n\t\t\t//为了避免被发现，设一个在屏幕外的绝对位置。\r\n\t\t\tCharRender_Canvas.canvas.style.left = \"-10000px\";\r\n\t\t\tCharRender_Canvas.canvas.style.position = \"absolute\";\r\n\t\t\tdocument.body.appendChild(CharRender_Canvas.canvas);;\r\n\t\t\tthis.ctx = CharRender_Canvas.canvas.getContext('2d', { willReadFrequently: true });\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tget canvasWidth(): number {\r\n\t\treturn CharRender_Canvas.canvas.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tset canvasWidth(w: number) {\r\n\t\tif (CharRender_Canvas.canvas.width == w)\r\n\t\t\treturn;\r\n\t\tCharRender_Canvas.canvas.width = w;\r\n\t\tif (w > 2048) {\r\n\t\t\tconsole.warn(\"画文字设置的宽度太大，超过2048了\");\r\n\t\t}\r\n\t\t// 重新恢复一下缩放\r\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\tthis.ctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param font \r\n\t * @param str \r\n\t * @override\r\n\t */\r\n\tgetWidth(font: string, str: string): number {\r\n\t\tif (!this.ctx) return 0;\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\tif (this.ctx._lastFont != font) {\r\n\t\t\tthis.ctx.font = font;\r\n\t\t\tthis.ctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\t\treturn this.ctx.measureText(str).width;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param sx \r\n\t * @param sy \r\n\t * @override\r\n\t */\r\n\tscale(sx: number, sy: number): void {\r\n\t\tif (!this.supportImageData) {// supportImageData==false表示用 getCharCanvas，这个自己管理缩放\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.lastScaleX != sx || this.lastScaleY != sy) {\r\n\t\t\tthis.ctx.setTransform(sx, 0, 0, sy, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *TODO stroke \r\n\t * @param\tchar\r\n\t * @param\tfont\r\n\t * @param\tcri  修改里面的width。\r\n\t * @return\r\n\t * @override\r\n\t */\r\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo,\r\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData | null {\r\n\t\tif (!this.supportImageData)\r\n\t\t\treturn this.getCharCanvas(char, font, lineWidth, colStr, strokeColStr, cri, margin_left, margin_top, margin_right, margin_bottom);\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += (margin_top + margin_bottom) * this.lastScaleY;\r\n\t\tw = Math.ceil(w);\r\n\t\th = Math.ceil(h);\r\n\t\tw = Math.min(w, CharRender_Canvas.canvas.width);\r\n\t\th = Math.min(h, CharRender_Canvas.canvas.height);\r\n\r\n\t\tvar clearW: number = w + lineWidth * 2 + 1;\r\n\t\tvar clearH: number = h + lineWidth * 2 + 1;\r\n\t\tif (rect) {// measureText可能会小于请求的区域。 rect[2]可能为-1\r\n\t\t\tclearW = Math.max(clearW, rect[0] + rect[2] + 1);\r\n\t\t\tclearH = Math.max(clearH, rect[1] + rect[3] + 1);\r\n\t\t}\r\n\t\tctx.clearRect(0, 0, clearW / this.lastScaleX + 1, clearH / this.lastScaleY + 1);\r\n\t\tctx.save();\r\n\t\t//ctx.textAlign = \"end\";\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\t//设置文本描边为圆角模式，默认值miter会导致在某些字体的转角字符出现尖刺现象。\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\tctx.strokeText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\t\tif (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(1, 1, w - 2, h - 2);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(margin_left, margin_top, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\t//ctx.restore();\r\n\t\tif (rect) {\r\n\t\t\tif (rect[2] == -1) rect[2] = Math.ceil((cri.width + lineWidth * 2) * this.lastScaleX); // 这个没有考虑左右margin\r\n\t\t\tif (rect[2] <= 0) rect[2] = 1;\t// 有的字体在处理不存在文字的时候，测量宽度为0，会导致getImageData出错\r\n\t\t}\r\n\t\tvar imgdt: ImageData = rect ? (ctx.getImageData(rect[0], rect[1], rect[2], rect[3] + 1)) : (ctx.getImageData(0, 0, w, h + 1));\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = imgdt.width;\r\n\t\tcri.bmpHeight = imgdt.height;\r\n\t\treturn imgdt;\r\n\t}\r\n\r\n\tgetCharCanvas(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number): ImageData {\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += ((margin_top + margin_bottom) * this.lastScaleY + 1);\t// 这个+1只是为了让测试能通过。确实应该加点高度，否则会被裁掉一部分，但是加多少还没找到方法。\r\n\t\tw = Math.min(w, this.maxTexW);\r\n\t\th = Math.min(h, this.maxTexH);\r\n\r\n\t\t//if (canvas.width != (w + 1) || canvas.height != (h + 1)) {\r\n\t\tCharRender_Canvas.canvas.width = Math.min(w + 1, this.maxTexW);\r\n\t\tCharRender_Canvas.canvas.height = Math.min(h + 1, this.maxTexH);\r\n\t\tctx.font = font;\r\n\t\t//}\r\n\t\tctx.clearRect(0, 0, w + 1 + lineWidth, h + 1 + lineWidth);\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\r\n\t\tctx.save();\r\n\t\tif (this.scaleFontSize) {\r\n\t\t\t//这里的缩放会导致与上面的缩放同时起作用。所以上面保护\r\n\t\t\tctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t\t}\r\n\t\tctx.translate(margin_left, margin_top);\r\n\t\tctx.textAlign = \"left\";\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\t//ctx.strokeText(char, margin_left, margin_top);\r\n\t\t\tif (ctx.fillAndStrokeText) {\r\n\t\t\t\tctx.fillAndStrokeText(char, 0, sz / 2);\r\n\t\t\t} else {\r\n\t\t\t\tctx.strokeText(char, 0, sz / 2);\r\n\t\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t\t}\r\n\t\t} else if (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t}\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(0, 0, w, h);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(0, 0, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = CharRender_Canvas.canvas.width;\r\n\t\tcri.bmpHeight = CharRender_Canvas.canvas.height;\r\n\t\treturn CharRender_Canvas.canvas;\r\n\t}\r\n}\r\n\r\n","import { TextAtlas } from \"./TextAtlas\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { FontInfo } from \"../../utils/FontInfo\"\r\nimport { WordText } from \"../../utils/WordText\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { CharRender_Canvas } from \"./CharRender_Canvas\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\n\r\nexport class TextRender {\r\n    //config\r\n    static useOldCharBook = false;\r\n    static atlasWidth = 1024;\r\n    static noAtlas = false;\t\t\t\t// 一串文字用独立贴图\r\n    static forceSplitRender = false;\t    // 强制把一句话拆开渲染\r\n    static forceWholeRender = false; \t// 强制整句话渲染\r\n    static scaleFontWithCtx = true;\t\t// 如果有缩放，则修改字体，以保证清晰度\r\n    static maxFontScale = 4;            //当scaleFontWithCtx为true时，最大允许放大的倍数\r\n    static standardFontSize = 32;\t\t\t// 测量的时候使用的字体大小\r\n    static destroyAtlasDt = 10;\t\t\t\t\t// 回收图集贴图的时间\r\n    static checkCleanTextureDt = 2000;\t\t// 检查是否要真正删除纹理的时间。单位是ms\r\n    static destroyUnusedTextureDt = 3000; \t// 长时间不用的纹理删除的时间。单位是ms\r\n    static cleanMem = 100 * 1024 * 1024;\t\t// 多大内存触发清理图集。这时候占用率低的图集会被清理\r\n    static isWan1Wan = false;\r\n    static showLog = false;\r\n    static debugUV = false;\t\t\t\t// 文字纹理需要保护边。当像素没有对齐的时候，可能会采样到旁边的贴图。true则填充texture为白色，模拟干扰\r\n    //config\r\n\r\n    /**\r\n     * fontSizeInfo\r\n     * 记录每种字体的像素的大小。标准是32px的字体。由4个byte组成，分别表示[xdist,ydist,w,h]。 \r\n     * xdist,ydist 是像素起点到排版原点的距离，都是正的，表示实际数据往左和上偏多少，如果实际往右和下偏，则算作0，毕竟这个只是一个大概\r\n     * 例如 [Arial]=0x00002020, 表示宽高都是32\r\n     */\r\n    private fontSizeInfo: any = {};\r\n    static atlasWidth2: number;\r\n    private charRender: ICharRender;\r\n    private static tmpRI: CharRenderInfo = new CharRenderInfo();\r\n    private static pixelBBX: number[] = [0, 0, 0, 0];\r\n    private mapFont: any = {};\t\t// 把font名称映射到数字\r\n    private fontID: number = 0;\r\n\r\n    private fontScaleX: number = 1.0;\t\t\t\t\t\t//临时缩放。\r\n    private fontScaleY: number = 1.0;\r\n\r\n    //private var charMaps:Object = {};\t// 所有的都放到一起\r\n\r\n    private _curStrPos: number = 0;\t\t//解开一个字符串的时候用的。表示当前解到什么位置了\r\n    static textRenderInst: TextRender;\t//debug\r\n\r\n    textAtlases: TextAtlas[] = [];\t\t// 所有的大图集\r\n    private isoTextures: TextTexture[] = [];\t// 所有的独立贴图\r\n\r\n    private bmpData32: Uint32Array;\r\n    private static imgdtRect: any[] = [0, 0, 0, 0];\r\n\r\n    // 当前字体的测量信息。\r\n    private lastFont: FontInfo | null = null;\r\n    private fontSizeW: number = 0;\r\n    private fontSizeH: number = 0;\r\n    private fontSizeOffX: number = 0;\r\n    private fontSizeOffY: number = 0;\r\n\r\n    private renderPerChar: boolean = true;\t// 是否是单个字符渲染。这个是结果，上面的是配置\r\n    private tmpAtlasPos: Point = new Point();\r\n    private textureMem: number = 0; \t\t\t// 当前贴图所占用的内存\r\n    private fontStr: string;\t\t\t\t\t// 因为要去掉italic，所以自己保存一份\r\n    static simClean: boolean = false;\t\t\t\t// 测试用。强制清理占用低的图集\r\n\r\n    constructor() {\r\n        var bugIOS = false;//是否是有bug的ios版本\r\n        //在微信下有时候不显示文字，所以采用canvas模式，现在测试微信好像都好了，所以去掉了。\r\n        var miniadp: any = ILaya.Laya['MiniAdpter']; //头条也继承了这个bug\r\n        if (miniadp && miniadp.systemInfo && miniadp.systemInfo.system) {\r\n            bugIOS = miniadp.systemInfo.system.toLowerCase() === 'ios 10.1.1';\r\n            //12.3\r\n        }\r\n        if ((ILaya.Browser.onMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onTBMiniGame) /*&& !Browser.onAndroid*/ && !bugIOS) TextRender.isWan1Wan = true; //android 微信下 字边缘发黑，所以不用getImageData了\r\n        //TextRender.isWan1Wan = true;\r\n        this.charRender = new CharRender_Canvas(2048, 2048, TextRender.scaleFontWithCtx, !TextRender.isWan1Wan, false);\r\n        TextRender.textRenderInst = this;\r\n        ILaya.Laya['textRender'] = this;\r\n        TextRender.atlasWidth2 = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        //TEST\r\n        //forceSplitRender = true;\r\n        //noAtlas = true;\r\n        //forceWholeRender = true;\r\n        //TEST\r\n    }\r\n\r\n    /**\r\n     * 设置当前字体，获得字体的大小信息。\r\n     * @param\tfont\r\n     */\r\n    setFont(font: FontInfo): void {\r\n        if (this.lastFont == font) return;\r\n        this.lastFont = font;\r\n        var fontsz = this.getFontSizeInfo(font._family);\r\n        var offx = fontsz >> 24\r\n        var offy = (fontsz >> 16) & 0xff;\r\n        var fw = (fontsz >> 8) & 0xff;\r\n        var fh = fontsz & 0xff;\r\n        var k = font._size / TextRender.standardFontSize;\r\n        this.fontSizeOffX = Math.ceil(offx * k);\r\n        this.fontSizeOffY = Math.ceil(offy * k);\r\n        this.fontSizeW = Math.ceil(fw * k);\r\n        this.fontSizeH = Math.ceil(fh * k);\r\n        if (font._font.indexOf('italic') >= 0) {// 先判断一下效率会高一些\r\n            this.fontStr = font._font.replace('italic', '');\r\n        } else {\r\n            this.fontStr = font._font;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从string中取出一个完整的char，例如emoji的话要多个\r\n     * 会修改 _curStrPos\r\n     * TODO 由于各种文字中的组合写法，这个需要能扩展，以便支持泰文等\r\n     * @param\tstr\r\n     * @param\tstart\t开始位置\r\n     */\r\n    getNextChar(str: string): string | null {\r\n        var len = str.length;\r\n        var start = this._curStrPos;\r\n        if (!str.substring) return null;\t// 保护一下，避免下面 substring 报错\r\n        if (start >= len)\r\n            return null;\r\n\r\n        //var link: boolean = false;\t//如果是连接的话要再加一个完整字符\r\n        var i = start;\r\n        var state = 0; //0 初始化 1  正常 2 连续中\r\n        for (; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if ((c >>> 11) == 0x1b) { //可能是0b110110xx或者0b110111xx。 这都表示2个u16组成一个emoji\r\n                if (state == 1) break;//新的字符了，要截断\r\n                state = 1;\t// 其他状态都转成正常读取字符状态，只是一次读两个\r\n                i++;\t//跨过一个。\r\n            }\r\n            else if (c === 0xfe0e || c === 0xfe0f) {\t//样式控制字符\r\n                // 继续。不改变状态\r\n            }\r\n            else if (c == 0x200d) {\t\t//zero width joiner\r\n                state = 2; \t// 继续\r\n            } else {\r\n                if (state == 0) state = 1;\r\n                else if (state == 1) break;\r\n                else if (state == 2) {\r\n                    // 继续\r\n                }\r\n            }\r\n        }\r\n        this._curStrPos = i;\r\n        return str.substring(start, i);\r\n    }\r\n\r\n    filltext(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data.length <= 0)\r\n            return;\r\n        //以后保存到wordtext中\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n\r\n    _fast_filltext(ctx: Context, data: string | WordText | null, x: number, y: number, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        if (data && !(data.length >= 1)) return;\t// length有可能是 undefined\r\n        if (lineWidth < 0) lineWidth = 0;\r\n        this.setFont(font);\r\n        this.fontScaleX = this.fontScaleY = 1.0;\r\n        if (TextRender.scaleFontWithCtx) {\r\n            let sx = ctx.getMatScaleX();\r\n            let sy = ctx.getMatScaleY();\r\n\r\n\r\n            if (sx < 1e-4 || sy < 1e-1)\r\n                return;\r\n\r\n            if (sx > 1) this.fontScaleX = Math.min(TextRender.maxFontScale, sx);\r\n            if (sy > 1) this.fontScaleY = Math.min(TextRender.maxFontScale, sy);\r\n        }\r\n\r\n        font._italic && (ctx._italicDeg = 13);\r\n        //准备bmp\r\n        //拷贝到texture上,得到一个gltexture和uv\r\n        var wt = <WordText>data;\r\n        var isWT = data instanceof WordText;\r\n        var str = data && data.toString();//(<string>data);guo 某种情况下，str还是WordText（没找到为啥），这里保护一下\r\n\r\n        /**\r\n         * sameTexData \r\n         * WordText 中保存了一个数组，这个数组是根据贴图排序的，目的是为了能相同的贴图合并。\r\n         * 类型是 {ri:CharRenderInfo,stx:int,sty:int,...}[文字个数][贴图分组]\r\n         */\r\n        var sameTexData: any[] = isWT ? wt.pageChars : [];\r\n\r\n        var strWidth = 0;\r\n        if (isWT) {\r\n            str = wt.text;\r\n            strWidth = wt.width;\r\n            if (strWidth < 0) {\r\n                strWidth = wt.width = this.charRender.getWidth(this.fontStr, str);\t// 字符串长度是原始的。\r\n            }\r\n        } else {\r\n            strWidth = str ? this.charRender.getWidth(this.fontStr, str) : 0;\r\n        }\r\n\r\n        //水平对齐方式\r\n        switch (textAlign) {\r\n            case Const.ENUM_TEXTALIGN_CENTER:\r\n                x -= strWidth / 2;\r\n                break;\r\n            case Const.ENUM_TEXTALIGN_RIGHT:\r\n                x -= strWidth;\r\n                break;\r\n        }\r\n\r\n        //检查保存的数据是否有的已经被释放了\r\n        if (isWT) {\t// TODO 能利用lastGCCnt么\r\n            //wt.lastGCCnt = _curPage.gcCnt;\r\n            if (this.hasFreedText(sameTexData) || wt.pagecharsCtx != ctx) {\r\n                sameTexData = wt.pageChars = [];\r\n            }\r\n            // if(isWT && (this.fontScaleX!=wt.scalex || this.fontScaleY!=wt.scaley)) {\r\n            // \t// 文字缩放要清理缓存\r\n            // \tsameTexData = wt.pageChars = [];\r\n            // }\r\n        }\r\n        var ri: CharRenderInfo = null;\r\n        //var oneTex: boolean = isWT || TextRender.forceWholeRender;\t// 如果能缓存的话，就用一张贴图\r\n        var splitTex = this.renderPerChar = (!isWT) || TextRender.forceSplitRender || (isWT && wt.splitRender); \t// 拆分字符串渲染，这个优先级高\r\n        if (!sameTexData || sameTexData.length < 1) {\r\n            if (isWT) {\r\n                wt.scalex = this.fontScaleX;\r\n                wt.scaley = this.fontScaleY;\r\n            }\r\n            // 重新构建缓存的贴图信息\r\n            // TODO 还是要ctx.scale么\r\n            if (splitTex) {\r\n                // 如果要拆分字符渲染\r\n                var stx = 0;\r\n                var sty = 0;\r\n\r\n                this._curStrPos = 0;\r\n                var curstr: string | null;\r\n                while (true) {\r\n                    curstr = this.getNextChar(str);\r\n                    if (!curstr)\r\n                        break;\r\n                    ri = this.getCharRenderInfo(curstr, font, color, strokeColor, lineWidth, false);\r\n                    if (!ri) {\r\n                        // 没有分配到。。。\r\n                        break;\r\n                    }\r\n                    if (ri.isSpace) {\t// 空格什么都不做\r\n                    } else {\r\n                        //分组保存\r\n                        var add = sameTexData[ri.tex.id];\r\n                        if (!add) {\r\n                            var o1 = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: new Array() };\t// 根据genid来减少是否释放的判断量\r\n                            sameTexData[ri.tex.id] = o1;\r\n                            add = o1.words;\r\n                        } else {\r\n                            add = add.words;\r\n                        }\r\n                        //不能直接修改ri.bmpWidth, 否则会累积缩放，所以把缩放保存到独立的变量中\r\n                        add.push({ ri: ri, x: stx, y: sty, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY });\r\n                        stx += ri.width;\t// TODO 缩放\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // 如果要整句话渲染\r\n                var margin = (font._size / 3 | 0);  // margin保持与charrender_canvas的一致\r\n                var isotex = TextRender.noAtlas || (strWidth + margin + margin) * this.fontScaleX > TextRender.atlasWidth;\t// 独立贴图还是大图集。需要考虑margin\r\n                ri = this.getCharRenderInfo(str, font, color, strokeColor, lineWidth, isotex);\r\n                // 整句渲染，则只有一个贴图\r\n                sameTexData[0] = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: [{ ri: ri, x: 0, y: 0, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY }] };\r\n            }\r\n            isWT && (wt.pagecharsCtx = ctx);\r\n            //TODO getbmp 考虑margin 字体与标准字体的关系\r\n        }\r\n\r\n        this._drawResortedWords(ctx, x, y, sameTexData);\r\n        ctx._italicDeg = 0;\r\n    }\r\n\r\n    /**\r\n     * 画出重新按照贴图顺序分组的文字。\r\n     * @param\tsamePagesData\r\n     * @param  startx 保存的数据是相对位置，所以需要加上这个偏移。用相对位置更灵活一些。\r\n     * @param y {int} 因为这个只能画在一行上所以没有必要保存y。所以这里再把y传进来\r\n     */\r\n    protected _drawResortedWords(ctx: Context, startx: number, starty: number, samePagesData: any[]): void {\r\n        var isLastRender = ctx._charSubmitCache ? ctx._charSubmitCache._enable : false;\r\n        var mat = ctx._curMat;\r\n        //var slen = samePagesData.length;\r\n        //for (var id = 0; id < slen; id++) {\r\n        for (var id in samePagesData) {// TODO samePagesData可能是个不连续的数组，比如只有一个samePagesData[29999] = dt;\r\n            // TODO 想个更好的方法\r\n            var dt = samePagesData[id];\r\n            if (!dt) continue;\r\n            var pri: any[] = dt.words;\r\n            var pisz = pri.length; if (pisz <= 0) continue;\r\n            var tex = ((<TextTexture>samePagesData[id].tex));\r\n            for (var j = 0; j < pisz; j++) {\r\n                var riSaved: any = pri[j];\r\n                var ri: CharRenderInfo = riSaved.ri;\r\n                if (ri.isSpace) continue;\r\n                ri.touch();\r\n                ctx.drawTexAlign = true;\r\n                //ctx._drawTextureM(ri.tex.texture as Texture, startx +riSaved.x -ri.orix / fontScaleX , starty + riSaved.y -ri.oriy / fontScaleY , riSaved.w, riSaved.h, null, 1.0, ri.uv);\r\n\r\n                let t = tex as TextTexture;\r\n                ctx._inner_drawTexture(t.texture, t.id,\r\n                    startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h,\r\n                     mat, ri.uv, 1.0, isLastRender, 0xffffffff);\r\n                \r\n\r\n                if ((<any>ctx).touches) {\r\n                    (<any>ctx).touches.push(ri);\r\n                }\r\n            }\r\n        }\r\n        //不要影响别人\r\n        //ctx._curSubmit._key.other = -1;\r\n    }\r\n\r\n    /**\r\n     * 检查 txts数组中有没有被释放的资源\r\n     * @param\ttxts {{ri:CharRenderInfo,...}[][]}\r\n     * @param\tstartid\r\n     * @return\r\n     */\r\n    hasFreedText(txts: any[]): boolean {\r\n        for (let i in txts) {\r\n            var pri = txts[i];\r\n            if (!pri) continue;\r\n            var tex = (<TextTexture>pri.tex);\r\n            if (tex.destroyed || tex.genID != pri.texgen) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCharRenderInfo(str: string, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, isoTexture: boolean = false): CharRenderInfo {\r\n        var fid = this.mapFont[font._family];\r\n        if (fid == undefined) {\r\n            this.mapFont[font._family] = fid = this.fontID++;\r\n        }\r\n        /*\r\n        var cid:int = mapColor[color];\r\n        if (cid == undefined) {\r\n            mapColor[color] = cid = colorID++;\r\n        }\r\n        var scid:int = mapColor[strokeColor];\r\n        */\r\n        var key = str + '_' + fid + '_' + font._size + '_' + color;\r\n        if (lineWidth > 0)\r\n            key += '_' + strokeColor! + lineWidth;\r\n        if (font._bold)\r\n            key += 'P';\r\n        if (this.fontScaleX != 1 || this.fontScaleY != 1) {\r\n            key += (this.fontScaleX * 20 | 0) + '_' + (this.fontScaleY * 20 | 0);\t// 这个精度可以控制占用资源的大小，精度越高越能细分缩放。\r\n        }\r\n\r\n        var i = 0;\r\n        // 遍历所有的大图集看是否存在\r\n        var sz = this.textAtlases.length;\r\n        var ri: CharRenderInfo;\r\n        var atlas: TextAtlas;\r\n        if (!isoTexture) {\r\n            for (i = 0; i < sz; i++) {\r\n                atlas = this.textAtlases[i];\r\n                ri = atlas.charMaps[key]\r\n                if (ri) {\r\n                    ri.touch();\r\n                    return ri;\r\n                }\r\n            }\r\n        }\r\n        // 没有找到，要创建一个\r\n        ri = new CharRenderInfo();\r\n        this.charRender.scale(this.fontScaleX, this.fontScaleY);\r\n        ri.char = str;\r\n        ri.height = font._size;\r\n        var margin = (font._size / 3 | 0);\t// 凑的。 注意这里不能乘以缩放，因为ctx会自动处理\r\n        // 如果不存在，就要插入已有的，或者创建新的\r\n        var imgdt: ImageData | null = null;\r\n        // 先大约测量文字宽度 \r\n\r\n        if (!lineWidth) {\r\n            lineWidth = 0;\r\n        }\r\n        var w1 = Math.ceil((this.charRender.getWidth(this.fontStr, str) + 2 * lineWidth) * this.fontScaleX);\r\n        if (w1 > this.charRender.canvasWidth) {\r\n            this.charRender.canvasWidth = Math.min(2048, w1 + margin * 2);\r\n        }\r\n        if (isoTexture) {\r\n            // 独立贴图\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri, margin, margin, margin, margin, null);\r\n            // 这里可以直接\r\n            if (imgdt) {\r\n                var tex = TextTexture.getTextTexture(imgdt.width, imgdt.height);\r\n                tex.addChar(imgdt, 0, 0, ri.uv);\r\n                ri.tex = tex;\r\n                ri.orix = margin; // 这里是原始的，不需要乘scale,因为scale的会创建一个scale之前的rect\r\n                ri.oriy = margin;\r\n                tex.ri = ri;\r\n                this.isoTextures.push(tex);\r\n            }\r\n        } else {\r\n            // 大图集\r\n            var len = str.length;\r\n            if (len > 1) {\r\n                // emoji或者组合的\r\n            }\r\n            var lineExt = lineWidth * 1;\t// 这里，包括下面的*2 都尽量用整数。否则在取整以后可能有有偏移。\r\n            var fw = Math.ceil((this.fontSizeW + lineExt * 2) * this.fontScaleX); \t//本来只要 lineWidth就行，但是这样安全一些\r\n            var fh = Math.ceil((this.fontSizeH + lineExt * 2) * this.fontScaleY);\r\n            TextRender.imgdtRect[0] = ((margin - this.fontSizeOffX - lineExt) * this.fontScaleX) | 0;\t// 本来要 lineWidth/2 但是这样一些尖角会有问题，所以大一点\r\n            TextRender.imgdtRect[1] = ((margin - this.fontSizeOffY - lineExt) * this.fontScaleY) | 0;\r\n            if (this.renderPerChar || len == 1) {\r\n                // 单个字符的处理\r\n                TextRender.imgdtRect[2] = Math.max(w1, fw);\r\n                TextRender.imgdtRect[3] = Math.max(w1, fh);\t// 高度也要取大的。 例如emoji\r\n            } else {\r\n                // 多个字符的处理\r\n                TextRender.imgdtRect[2] = -1;\t// -1 表示宽度要测量\r\n                TextRender.imgdtRect[3] = fh; \t// TODO 如果被裁剪了，可以考虑把这个加大一点点\r\n            }\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri,\r\n                margin, margin, margin, margin, TextRender.imgdtRect);\r\n            if (imgdt) {\r\n                atlas = this.addBmpData(imgdt, ri);\r\n                if (TextRender.isWan1Wan) {\r\n                    // 这时候 imgdtRect 是不好使的，要自己设置\r\n                    ri.orix = margin;\t// 不要乘缩放。要不后面也要除。\r\n                    ri.oriy = margin;\r\n                } else {\r\n                    // 取下来的imagedata的原点在哪\r\n                    ri.orix = (this.fontSizeOffX + lineExt);\t// 由于是相对于imagedata的，上面会根据包边调整左上角，所以原点也要相应反向调整\r\n                    ri.oriy = (this.fontSizeOffY + lineExt);\r\n                }\r\n                atlas.charMaps[key] = ri;\r\n            }\r\n        }\r\n        return ri;\r\n    }\r\n\r\n    /**\r\n     * 添加数据到大图集\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    addBmpData(data: ImageData, ri: CharRenderInfo): TextAtlas {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var sz = this.textAtlases.length;\r\n        var atlas: TextAtlas;\r\n        var find = false;\r\n        for (var i = 0; i < sz; i++) {\r\n            atlas = this.textAtlases[i];\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (find) {\r\n                break;\r\n            }\r\n        }\r\n        if (!find) {\r\n            // 创建一个新的\r\n            atlas = new TextAtlas()\r\n            this.textAtlases.push(atlas);\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (!find) {\r\n                throw 'err1'; //TODO\r\n            }\r\n            // 清理旧的\r\n            this.cleanAtlases();\r\n        }\r\n        if (find) {\r\n            atlas.texture.addChar(data, this.tmpAtlasPos.x, this.tmpAtlasPos.y, ri.uv);\r\n            ri.tex = atlas.texture;\r\n        }\r\n        return atlas;\r\n    }\r\n\r\n    /**\r\n     * 清理利用率低的大图集\r\n     */\r\n    GC(): void {\r\n        var i = 0;\r\n        var sz = this.textAtlases.length;\r\n        var dt = 0;\r\n        var destroyDt = TextRender.destroyAtlasDt;\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        var curloop = RenderInfo.loopCount;\r\n\r\n        //var minUsedRateID:int = -1;\r\n        //var minUsedRate:Number = 1;\r\n        var maxWasteRateID = -1;\r\n        var maxWasteRate = 0;\r\n        var tex: TextTexture = null;\r\n        var curatlas: TextAtlas = null;\r\n        // 图集的清理\r\n        for (; i < sz; i++) {\r\n            curatlas = this.textAtlases[i];\r\n            tex = curatlas.texture;\r\n            if (tex) {\r\n                totalUsedRate += tex.curUsedCovRate;\r\n                totalUsedRateAtlas += tex.curUsedCovRateAtlas;\r\n                // 浪费掉的图集\r\n                // (已经占用的图集和当前使用的图集的差。图集不可局部重用，所以有占用的和使用的的区别)\r\n                var waste = curatlas.usedRate - tex.curUsedCovRateAtlas;\r\n                // 记录哪个图集浪费的最多\r\n                if (maxWasteRate < waste) {\r\n                    maxWasteRate = waste;\r\n                    maxWasteRateID = i;\r\n                }\r\n                /*\r\n                if (minUsedRate > tex.curUsedCovRate) {\r\n                    minUsedRate = tex.curUsedCovRate;\r\n                    minUsedRateID = i;\r\n                }\r\n                */\r\n            }\r\n            // 如果当前贴图的touch时间超出了指定的间隔（单位是帧，例如），则设置回收\r\n            // 可能同时会有多个图集被回收\r\n            dt = curloop - curatlas.texture.lastTouchTm;\r\n            if (dt > destroyDt) {\r\n                TextRender.showLog && console.log('TextRender GC delete atlas ' + tex ? curatlas.texture.id : 'unk');\r\n                curatlas.destroy();\r\n                this.textAtlases[i] = this.textAtlases[sz - 1];\t// 把最后的拿过来冲掉\r\n                sz--;\r\n                i--;\r\n                maxWasteRateID = -1;\r\n            }\r\n        }\r\n        // 缩减图集数组的长度\r\n        this.textAtlases.length = sz;\r\n\r\n        // 独立贴图的清理 TODO 如果多的话，要不要分开处理\r\n        sz = this.isoTextures.length;\r\n        for (i = 0; i < sz; i++) {\r\n            tex = this.isoTextures[i];\r\n            dt = curloop - tex.lastTouchTm;\r\n            if (dt > TextRender.destroyUnusedTextureDt) {\r\n                tex.ri.deleted = true;\r\n                tex.ri.tex = null;\r\n                // 直接删除，不回收\r\n                tex.destroy();\r\n                this.isoTextures[i] = this.isoTextures[sz - 1];\r\n                sz--;\r\n                i--;\r\n            }\r\n        }\r\n        this.isoTextures.length = sz;\r\n\r\n        // 如果超出内存需要清理不常用\r\n        var needGC = this.textAtlases.length > 1 && this.textAtlases.length - totalUsedRateAtlas >= 2;\t// 总量浪费了超过2张\r\n        if (TextRender.atlasWidth * TextRender.atlasWidth * 4 * this.textAtlases.length > TextRender.cleanMem || needGC || TextRender.simClean) {\r\n            TextRender.simClean = false;\r\n            TextRender.showLog && console.log('清理使用率低的贴图。总使用率:', totalUsedRateAtlas, ':', this.textAtlases.length, '最差贴图:' + maxWasteRateID);\r\n            if (maxWasteRateID >= 0) {\r\n                curatlas = this.textAtlases[maxWasteRateID];\r\n                curatlas.destroy();\r\n                this.textAtlases[maxWasteRateID] = this.textAtlases[this.textAtlases.length - 1];\r\n                this.textAtlases.length = this.textAtlases.length - 1;\r\n            }\r\n        }\r\n\r\n        TextTexture.clean();\r\n    }\r\n\r\n    /**\r\n     * 尝试清理大图集\r\n     */\r\n    cleanAtlases(): void {\r\n        // TODO 根据覆盖率决定是否清理\r\n    }\r\n\r\n    getCharBmp(c: string): any {\r\n\r\n    }\r\n\r\n    /**\r\n     * 检查当前线是否存在数据\r\n     * @param\tdata\r\n     * @param\tl\r\n     * @param\tsx\r\n     * @param\tex\r\n     * @return\r\n     */\r\n    private checkBmpLine(data: ImageData, l: number, sx: number, ex: number): boolean {\r\n        if (this.bmpData32.buffer != data.data.buffer) {\r\n            this.bmpData32 = new Uint32Array(data.data.buffer);\r\n        }\r\n        var stpos = data.width * l + sx;\r\n        for (var x = sx; x < ex; x++) {\r\n            if (this.bmpData32[stpos++] != 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 根据bmp数据和当前的包围盒，更新包围盒\r\n     * 由于选择的文字是连续的，所以可以用二分法\r\n     * @param\tdata\r\n     * @param\tcurbbx \t[l,t,r,b]\r\n     * @param   onlyH 不检查左右\r\n     */\r\n    private updateBbx(data: ImageData, curbbx: number[], onlyH: boolean = false): void {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var x = 0;\r\n        // top\r\n        var sy = curbbx[1];\t//从t到0 sy表示有数据的行\r\n        var ey = 0;\r\n        var y = sy;\r\n        if (this.checkBmpLine(data, sy, 0, w)) {\r\n            // 如果当前行有数据，就要往上找\r\n            while (true) {\r\n                y = (sy + ey) / 2 | 0;\t// 必须是int\r\n                if (y + 1 >= sy) {// \r\n                    // 找到了。严格来说还不知道这个是否有像素，不过这里要求不严格，可以认为有\r\n                    curbbx[1] = y;\r\n                    break;\r\n                }\r\n                if (this.checkBmpLine(data, y, 0, w)) {\r\n                    //中间线有数据，搜索上半部分\r\n                    sy = y;\r\n                } else {\r\n                    //中间线没有有数据，搜索下半部分\r\n                    ey = y;\r\n                }\r\n            }\r\n        }\r\n        // 下半部分\r\n        if (curbbx[3] > h) curbbx[3] = h;\r\n        else {\r\n            y = sy = curbbx[3];\r\n            ey = h;\r\n            if (this.checkBmpLine(data, sy, 0, w)) {\r\n                while (true) {\r\n                    y = (sy + ey) / 2 | 0;\r\n                    if (y - 1 <= sy) {\r\n                        curbbx[3] = y;\r\n                        break;\r\n                    }\r\n                    if (this.checkBmpLine(data, y, 0, w)) {\r\n                        sy = y;\r\n                    } else {\r\n                        ey = y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (onlyH)\r\n            return;\r\n\r\n        // 左半部分\r\n        var minx = curbbx[0];\r\n        var stpos = w * curbbx[1]; //w*cy+0\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = 0; x < minx; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    minx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[0] = minx;\r\n        // 右半部分\r\n        var maxx = curbbx[2];\r\n        stpos = w * curbbx[1]; //w*cy\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = maxx; x < w; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    maxx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[2] = maxx;\r\n    }\r\n\r\n    getFontSizeInfo(font: string): number {\r\n        var finfo: any = this.fontSizeInfo[font];\r\n        if (finfo != undefined)\r\n            return finfo;\r\n\r\n        var fontstr: string = 'bold ' + TextRender.standardFontSize + 'px ' + font;\r\n        if (TextRender.isWan1Wan) {\r\n            // 这时候无法获得imagedata，只能采取保险测量\r\n            this.fontSizeW = this.charRender.getWidth(fontstr, '有') * 1.5;\r\n            this.fontSizeH = TextRender.standardFontSize * 1.5;\r\n            var szinfo: number = this.fontSizeW << 8 | this.fontSizeH;\r\n            this.fontSizeInfo[font] = szinfo;\r\n            return szinfo;\r\n        }\r\n        // bbx初始大小\r\n        TextRender.pixelBBX[0] = TextRender.standardFontSize / 2;// 16;\r\n        TextRender.pixelBBX[1] = TextRender.standardFontSize / 2;// 16;\r\n        TextRender.pixelBBX[2] = TextRender.standardFontSize;// 32;\r\n        TextRender.pixelBBX[3] = TextRender.standardFontSize;// 32;\r\n\r\n        var orix: number = 16;\t\t// 左边留白，也就是x原点的位置\r\n        var oriy: number = 16;\r\n        var marginr: number = 16;\r\n        var marginb: number = 16;\r\n        this.charRender.scale(1, 1);\r\n        TextRender.tmpRI.height = TextRender.standardFontSize;\r\n        this.charRender.fontsz = TextRender.standardFontSize;\r\n        var bmpdt = this.charRender.getCharBmp('g', fontstr, 0, 'red', null, TextRender.tmpRI, orix, oriy, marginr, marginb);\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        //测量宽度是 tmpRI.width\r\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);\r\n        bmpdt = this.charRender.getCharBmp('有', fontstr, 0, 'red', null, TextRender.tmpRI, oriy, oriy, marginr, marginb);// '有'比'国'大\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        // 国字的宽度就用系统测量的，不再用像素检测\r\n        if (TextRender.pixelBBX[2] < orix + TextRender.tmpRI.width)\r\n            TextRender.pixelBBX[2] = orix + TextRender.tmpRI.width;\r\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);//TODO 改成 true\r\n        // 原点在 16,16\r\n        var xoff = Math.max(orix - TextRender.pixelBBX[0], 0);\r\n        var yoff = Math.max(oriy - TextRender.pixelBBX[1], 0);\r\n        var bbxw = TextRender.pixelBBX[2] - TextRender.pixelBBX[0];\r\n        var bbxh = TextRender.pixelBBX[3] - TextRender.pixelBBX[1];\r\n        var sizeinfo = xoff << 24 | yoff << 16 | bbxw << 8 | bbxh;\r\n        this.fontSizeInfo[font] = sizeinfo;\r\n        return sizeinfo;\r\n    }\r\n\r\n    printDbgInfo(): void {\r\n        console.log('图集个数:' + this.textAtlases.length + ',每个图集大小:' + TextRender.atlasWidth + 'x' + TextRender.atlasWidth, ' 用canvas:', TextRender.isWan1Wan);\r\n        console.log('图集占用空间:' + (TextRender.atlasWidth * TextRender.atlasWidth * 4 / 1024 / 1024 * this.textAtlases.length) + 'M');\r\n        console.log('缓存用到的字体:');\r\n        for (var f in this.mapFont) {\r\n            var fontsz = this.getFontSizeInfo(f);\r\n            var offx = fontsz >> 24\r\n            var offy = (fontsz >> 16) & 0xff;\r\n            var fw = (fontsz >> 8) & 0xff;\r\n            var fh = fontsz & 0xff;\r\n            console.log('    ' + f, ' off:', offx, offy, ' size:', fw, fh);\r\n        }\r\n        var num = 0;\r\n        console.log('缓存数据:');\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        this.textAtlases.forEach(function (a: TextAtlas): void {\r\n            var id = a.texture.id;\r\n            var dt = RenderInfo.loopCount - a.texture.lastTouchTm\r\n            var dtstr = dt > 0 ? ('' + dt + '帧以前') : '当前帧';\r\n            totalUsedRate += a.texture.curUsedCovRate;\r\n            totalUsedRateAtlas += a.texture.curUsedCovRateAtlas;\r\n            console.log('--图集(id:' + id + ',当前使用率:' + (a.texture.curUsedCovRate * 1000 | 0) + '‰', '当前图集使用率:', (a.texture.curUsedCovRateAtlas * 100 | 0) + '%', '图集使用率:', (a.usedRate * 100 | 0), '%, 使用于:' + dtstr + ')--:');\r\n            for (var k in a.charMaps) {\r\n                var ri: CharRenderInfo = a.charMaps[k];\r\n                console.log('     off:', ri.orix, ri.oriy, ' bmp宽高:', ri.bmpWidth, ri.bmpHeight, '无效:', ri.deleted, 'touchdt:', (RenderInfo.loopCount - ri.touchTick), '位置:', ri.uv[0] * TextRender.atlasWidth | 0, ri.uv[1] * TextRender.atlasWidth | 0,\r\n                    '字符:', ri.char, 'key:', k);\r\n                num++;\r\n            }\r\n        });\r\n        console.log('独立贴图文字(' + this.isoTextures.length + '个):');\r\n        this.isoTextures.forEach(function (tex: TextTexture): void {\r\n            console.log('    size:', tex._texW, tex._texH, 'touch间隔:', (RenderInfo.loopCount - tex.lastTouchTm), 'char:', tex.ri.char);\r\n        });\r\n        console.log('总缓存:', num, '总使用率:', totalUsedRate, '总当前图集使用率:', totalUsedRateAtlas);\r\n\r\n    }\r\n\r\n    // 在屏幕上显示某个大图集\r\n    showAtlas(n: number, bgcolor: string, x: number, y: number, w: number, h: number): Sprite {\r\n        if (!this.textAtlases[n]) {\r\n            console.log('没有这个图集');\r\n            return null;\r\n        }\r\n        var sp = new Sprite();\r\n        var texttex = this.textAtlases[n].texture;\r\n        var texture: any = {\r\n            width: TextRender.atlasWidth,\r\n            height: TextRender.atlasWidth,\r\n            sourceWidth: TextRender.atlasWidth,\r\n            sourceHeight: TextRender.atlasWidth,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            getIsReady: function (): boolean { return true; },\r\n            _addReference: function (): void { },\r\n            _removeReference: function (): void { },\r\n            _getSource: function (): any { return texttex._getSource(); },\r\n            bitmap: { id: texttex.id },\r\n            _uv: Texture.DEF_UV\r\n        };\r\n        ((<any>sp)).size = function (w: number, h: number): Sprite {\r\n            this.width = w;\r\n            this.height = h;\r\n            sp.graphics.clear();\r\n            sp.graphics.drawRect(0, 0, sp.width, sp.height, bgcolor);\r\n            sp.graphics.drawTexture((<Texture>texture), 0, 0, sp.width, sp.height);\r\n            return (<Sprite>this);\r\n        }\r\n        sp.graphics.drawRect(0, 0, w, h, bgcolor);\r\n        sp.graphics.drawTexture((<Texture>texture), 0, 0, w, h);\r\n        sp.pos(x, y);\r\n        ILaya.stage.addChild(sp);\r\n        return sp;\r\n    }\r\n\r\n    /////// native ///////\r\n    filltext_native(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data && data.length <= 0) return;\r\n\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        return this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n}\r\n","import { AtlasGrid } from \"./AtlasGrid\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Point } from \"../../maths/Point\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { TextRender } from \"./TextRender\";\r\n\r\n/**\r\n *  文字贴图的大图集。\r\n */\r\nexport class TextAtlas {\r\n    texWidth: number = 1024;\r\n    texHeight: number = 1024;\r\n    private atlasgrid: AtlasGrid;\r\n    //private protectDist: number = 1;\r\n    texture: TextTexture|null = null;\r\n    charMaps: any = {};\t\t// 保存文字信息的字典\r\n    static atlasGridW: number = 16;\r\n\r\n    constructor() {\r\n        this.texHeight = this.texWidth = TextRender.atlasWidth;\r\n        this.texture = TextTexture.getTextTexture(this.texWidth, this.texHeight);\r\n        if (this.texWidth / TextAtlas.atlasGridW > 256) {\r\n            TextAtlas.atlasGridW = Math.ceil(this.texWidth / 256);\r\n        }\r\n        this.atlasgrid = new AtlasGrid(this.texWidth / TextAtlas.atlasGridW, this.texHeight / TextAtlas.atlasGridW, this.texture.id);\r\n    }\r\n\r\n    setProtecteDist(d: number): void {\r\n        //this.protectDist = d;\r\n    }\r\n\r\n    /**\r\n     * 如果返回null，则表示无法加入了\r\n     * 分配的时候优先选择最接近自己高度的节点\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    getAEmpty(w: number, h: number, pt: Point): boolean {\r\n        var find: boolean = this.atlasgrid.addRect(1, Math.ceil(w / TextAtlas.atlasGridW), Math.ceil(h / TextAtlas.atlasGridW), pt);\r\n        if (find) {\r\n            pt.x *= TextAtlas.atlasGridW;\r\n            pt.y *= TextAtlas.atlasGridW;\r\n        }\r\n        return find;\r\n    }\r\n\r\n    /**\r\n     * 大图集格子单元的占用率，老的也算上了。只是表示这个大图集还能插入多少东西。\r\n     */\r\n    get usedRate(): number {\r\n        return this.atlasgrid._used;\r\n    }\r\n    //data 也可能是canvas\r\n    /*\r\n    public function pushData(data:ImageData, node:TextAtlasNode):void {\r\n        texture.addChar(data, node.x, node.y);\r\n    }\r\n    */\r\n\r\n    destroy(): void {\r\n        for (var k in this.charMaps) {\r\n            var ri: CharRenderInfo = this.charMaps[k];\r\n            ri.deleted = true;\r\n        }\r\n        this.texture.discard();\r\n    }\r\n\r\n    printDebugInfo(): void {\r\n\r\n    }\r\n}\r\n\r\n","import { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Resource } from \"../../resource/Resource\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { IRender2DContext } from \"../../RenderEngine/RenderInterface/IRender2DContext\"\r\nimport { Texture2D } from \"../../resource/Texture2D\";\r\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\r\nimport { TextAtlas } from \"./TextAtlas\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { TextRender } from \"./TextRender\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class TextTexture extends Resource {\r\n    private static pool: any[] = new Array(10); // 回收用\r\n    private static poolLen: number = 0;\r\n    private static cleanTm: number = 0;\r\n    private _render2DContext: IRender2DContext;\r\n\r\n    /**@internal */\r\n    _source: Texture2D;\t// webgl 贴图\r\n    /**@internal */\r\n    _texW: number = 0;\r\n    /**@internal */\r\n    _texH: number = 0;\r\n    /**@internal */\r\n    _discardTm: number = 0;\t\t\t//释放的时间。超过一定时间会被真正删除\r\n    genID: number = 0; \t\t\t\t// 这个对象会重新利用，为了能让引用他的人知道自己引用的是否有效，加个id\r\n    bitmap: any = { id: 0, _glTexture: null };\t\t\t\t\t\t//samekey的判断用的\r\n    curUsedCovRate: number = 0; \t// 当前使用到的使用率。根据面积算的\r\n    curUsedCovRateAtlas: number = 0; \t// 大图集中的占用率。由于大图集分辨率低，所以会浪费一些空间\r\n    lastTouchTm: number = 0;\r\n    ri: CharRenderInfo = null; \t\t// 如果是独立文字贴图的话带有这个信息\r\n    //public var isIso:Boolean = false;\r\n    get gammaCorrection(): number {\r\n        return (this.bitmap._glTexture as any).gammaCorrection;\r\n    }\r\n    constructor(textureW: number, textureH: number) {\r\n        super();\r\n        this._texW = textureW || TextRender.atlasWidth;\r\n        this._texH = textureH || TextRender.atlasWidth;\r\n        this.bitmap.id = this.id;\r\n        this.lock = true;//防止被资源管理清除\r\n        this._render2DContext = LayaGL.render2DContext;\r\n    }\r\n\r\n    recreateResource(): void {\r\n        if (this._source)\r\n            return;\r\n        var glTex: Texture2D = this._source = new Texture2D(this._texW, this._texH, TextureFormat.R8G8B8A8, false, false, true);\r\n        glTex.setPixelsData(null, true, false);\r\n        glTex.lock = true;\r\n        this.bitmap._glTexture = glTex;\r\n\r\n        this._source.filterMode = FilterMode.Bilinear;\r\n        this._source.wrapModeU = WrapMode.Clamp;\r\n        this._source.wrapModeV = WrapMode.Clamp;\r\n\r\n        //TODO 预乘alpha\r\n        if (TextRender.debugUV) {\r\n            this.fillWhite();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tdata\r\n     * @param\tx\t\t\t拷贝位置。\r\n     * @param\ty\r\n     * @param  uv  \r\n     * @return uv数组  如果uv不为空就返回传入的uv，否则new一个数组\r\n     */\r\n    addChar(data: ImageData, x: number, y: number, uv: any[] = null): any[] {\r\n        //if (!LayaEnv.isConch &&  !__JS__('(data instanceof ImageData)')) {\r\n        if (TextRender.isWan1Wan) {\r\n            return this.addCharCanvas(data, x, y, uv);\r\n        }\r\n        var dt: any = data.data;\r\n        if (data.data instanceof Uint8ClampedArray)\r\n            dt = new Uint8Array(dt.buffer);\r\n        !this._source && this.recreateResource();\r\n\r\n        LayaGL.textureContext.setTextureSubPixelsData(this._source._texture, dt, 0, false, x, y, data.width, data.height, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        u0 = x / this._texW;\r\n        v0 = y / this._texH;\r\n        u1 = (x + data.width) / this._texW;\r\n        v1 = (y + data.height) / this._texH;\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 玩一玩不支持 getImageData\r\n     * @param\tcanv\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    addCharCanvas(canv: any, x: number, y: number, uv: any[] = null): any[] {\r\n        !this._source && this.recreateResource();\r\n\r\n        LayaGL.textureContext.setTextureSubImageData(this._source._texture, canv, x, y, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        if (LayaEnv.isConch) {\r\n            u0 = x / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = y / this._texH;\r\n            u1 = (x + canv.width) / this._texW;\r\n            v1 = (y + canv.height) / this._texH;\r\n        } else {\r\n            u0 = (x + 1) / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = (y + 1) / this._texH;\r\n            u1 = (x + canv.width - 1) / this._texW;\r\n            v1 = (y + canv.height - 1) / this._texH;\r\n        }\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 填充白色。调试用。\r\n     */\r\n    fillWhite(): void {\r\n        !this._source && this.recreateResource();\r\n        var dt: Uint8Array = new Uint8Array(this._texW * this._texH * 4);\r\n        ((<any>dt)).fill(0xff);\r\n        LayaGL.textureContext.setTextureImageData(this._source._getSource(), dt as any, true, false);\r\n    }\r\n\r\n    discard(): void {\r\n        // 文字贴图的释放要触发全局cacheas normal无效\r\n        ILaya.stage.setGlobalRepaint();\r\n        // 不再使用问题贴图的重用，否则会有内容清理问题\r\n        this.destroy();\r\n        return;\r\n    }\r\n\r\n    static getTextTexture(w: number, h: number): TextTexture {\r\n        // 不再回收\r\n        return new TextTexture(w, h);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        //console.log('destroy TextTexture');\r\n        this._source && this._source.destroy();\r\n        this._source = null;\r\n    }\r\n\r\n    /**\r\n     * 定期清理\r\n     * 为了简单，只有发生 getAPage 或者 discardPage的时候才检测是否需要清理\r\n     */\r\n    static clean(): void {\r\n        var curtm: number = RenderInfo.loopStTm;// Laya.stage.getFrameTm();\r\n        if (TextTexture.cleanTm === 0) TextTexture.cleanTm = curtm;\r\n        if (curtm - TextTexture.cleanTm >= TextRender.checkCleanTextureDt) {\t//每10秒看看pool中的贴图有没有很老的可以删除的\r\n            for (var i: number = 0; i < TextTexture.poolLen; i++) {\r\n                var p: TextTexture = TextTexture.pool[i];\r\n                if (curtm - p._discardTm >= TextRender.destroyUnusedTextureDt) {//超过20秒没用的删掉\r\n                    p.destroy();\t\t\t\t\t//真正删除贴图\r\n                    TextTexture.pool[i] = TextTexture.pool[TextTexture.poolLen - 1];\r\n                    TextTexture.poolLen--;\r\n                    i--;\t//这个还要处理，用来抵消i++\r\n                }\r\n            }\r\n            TextTexture.cleanTm = curtm;\r\n        }\r\n    }\r\n\r\n    touchRect(ri: CharRenderInfo, curloop: number): void {\r\n        if (this.lastTouchTm != curloop) {\r\n            this.curUsedCovRate = 0;\r\n            this.curUsedCovRateAtlas = 0;\r\n            this.lastTouchTm = curloop;\r\n        }\r\n        var texw2: number = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        var gridw2: number = TextAtlas.atlasGridW * TextAtlas.atlasGridW;\r\n        this.curUsedCovRate += (ri.bmpWidth * ri.bmpHeight) / texw2;\r\n        this.curUsedCovRateAtlas += (Math.ceil(ri.bmpWidth / TextAtlas.atlasGridW) * Math.ceil(ri.bmpHeight / TextAtlas.atlasGridW)) / (texw2 / gridw2);\r\n    }\r\n\r\n    // 为了与当前的文字渲染兼容的补丁\r\n    get texture(): any {\r\n        return this;\r\n    }\r\n    /**@internal */\r\n    _getSource(): any {\r\n        return this._source._getSource();\r\n    }\r\n\r\n    // for debug\r\n    drawOnScreen(x: number, y: number): void {\r\n\r\n    }\r\n}\r\n","/**\r\n\t * ...\r\n\t * @author xie\r\n\t */\r\nexport class SubmitKey {\r\n    blendShader: number;\r\n    submitType: number;\r\n    other: number;\r\n\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n\r\n    clear(): void {\r\n        this.submitType = -1;\r\n        this.blendShader = this.other = 0;\r\n        //alpha = 1;\r\n    }\r\n\r\n    //TODO:coverage\r\n    copyFrom(src: SubmitKey): void {\r\n        this.other = src.other;\r\n        this.blendShader = src.blendShader;\r\n        this.submitType = src.submitType;\r\n        //alpha = src.alpha;\r\n    }\r\n\r\n    copyFrom2(src: SubmitKey, submitType: number, other: number): void {\r\n        //this.blendShader = src.blendShader;\r\n        //this.alpha = src.alpha;\t\t\t\r\n        this.other = other;\r\n        this.submitType = submitType;\r\n    }\r\n\r\n    //�Ƚ�3�����ⲿ�ṩ2��\r\n    //TODO:coverage\r\n    equal3_2(next: SubmitKey, submitType: number, other: number): boolean {\r\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && this.alpha === alpha;\r\n    }\r\n\r\n    //ȫ�Ƚϡ��ⲿ�ṩ2��\r\n    //TODO:coverage\r\n    equal4_2(next: SubmitKey, submitType: number, other: number): boolean {\r\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n\r\n    //�Ƚ�3��\r\n    //TODO:coverage\r\n    equal_3(next: SubmitKey): boolean {\r\n        return this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n    //ȫ�Ƚϡ�4��\r\n    //TODO:coverage\r\n    equal(next: SubmitKey): boolean {\r\n        return this.other === next.other && this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nexport class SubmitCMD implements ISubmit {\r\n    static POOL: SubmitCMD[] = []; fun: Function;\r\n    /**@internal */\r\n    _this: any;\r\n    args: any[];\r\n    /**@internal */\r\n    _ref: number = 1;\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    renderSubmit(): number {\r\n        this.fun.apply(this._this, this.args);\r\n        return 1;\r\n    }\r\n\r\n    getRenderType(): number {\r\n        return 0;\r\n    }\r\n\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var pool: any = SubmitCMD.POOL;\r\n            pool[pool._length++] = this;\r\n            this.args = null;\r\n            this.fun = null;\r\n            this._this = null;\r\n        }\r\n    }\r\n\r\n    static create(args: any[], fun: Function, thisobj: any): SubmitCMD {\r\n        var o: SubmitCMD = (SubmitCMD.POOL as any)._length ? SubmitCMD.POOL[--(SubmitCMD.POOL as any)._length] : new SubmitCMD();\r\n        o.fun = fun;\r\n        o.args = args;\r\n        o._this = thisobj;\r\n        o._ref = 1;\r\n        o._key.clear();\r\n        return o;\r\n    }\r\n}\r\n{ (SubmitCMD.POOL as any)._length = 0 }\r\n\r\n\r\n","import { IFilter } from \"./IFilter\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { Texture2D } from \"../resource/Texture2D\"\r\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\"\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\"\r\nimport { ColorFilter } from \"./ColorFilter\";\r\n\r\n/**\r\n * <code>Filter</code> 是滤镜基类。\r\n */\r\nexport class Filter implements IFilter {\r\n    /**@private 模糊滤镜。*/\r\n    static BLUR: number = 0x10;\r\n    /**@private 颜色滤镜。*/\r\n    static COLOR: number = 0x20;\r\n    /**@private 发光滤镜。*/\r\n    static GLOW: number = 0x08;\r\n    /** @internal*/\r\n    _glRender: any;\r\n\r\n    /**\r\n     * 创建一个 <code>Filter</code> 实例。\r\n     * */\r\n    constructor() { }\r\n\r\n    /**@private 滤镜类型。*/\r\n    get type(): number { return -1 }\r\n\r\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var webglctx: Context = context;\r\n        var next: any = ((<RenderSprite>this))._next;\r\n        if (next) {\r\n            var filters: any[] = sprite.filters, len: number = filters.length;\r\n            //如果只有一个滤镜，那么还用原来的方式\r\n            if (len == 1 && (filters[0].type == Filter.COLOR)) {\r\n                context.save();\r\n                context.setColorFilter(filters[0]);\r\n                next._fun.call(next, sprite, context, x, y);\r\n                context.restore();\r\n                return;\r\n            }\r\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\r\n            var svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\t//拷贝用shaderValue\r\n            var b: Rectangle;\r\n\r\n            var p: Point = Point.TEMP;\r\n            var tMatrix: Matrix = webglctx._curMat;\r\n            var mat: Matrix = Matrix.create();\r\n            tMatrix.copyTo(mat);\r\n            var tPadding: number = 0;\t//给glow用\r\n            var tHalfPadding: number = 0;\r\n            var tIsHaveGlowFilter: boolean = false;\r\n            //这里判断是否存储了out，如果存储了直接用;\r\n            var source: RenderTexture2D = null;\r\n            var out: RenderTexture2D = sprite._cacheStyle.filterCache || null;\r\n            if (!out || sprite.getRepaint() != 0) {\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\r\n                //glow需要扩展边缘\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = new Rectangle();\r\n                b.copyFrom(sprite.getSelfBounds());\r\n                b.x += sprite.x;\r\n                b.y += sprite.y;\r\n                b.x -= sprite.pivotX + 4;//blur \r\n                b.y -= sprite.pivotY + 4;//blur\r\n                var tSX: number = b.x;\r\n                var tSY: number = b.y;\r\n                //重新计算宽和高\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                out && WebGLRTMgr.releaseRT(out);// out.recycle();\r\n                source = WebGLRTMgr.getRT(b.width, b.height);\r\n                var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\r\n                sprite._getCacheStyle().filterCache = out;\r\n                //使用RT\r\n                webglctx.pushRT();\r\n                webglctx.useRT(source);\r\n                var tX: number = sprite.x - tSX + tHalfPadding;\r\n                var tY: number = sprite.y - tSY + tHalfPadding;\r\n                //执行节点的渲染\r\n                next._fun.call(next, sprite, context, tX, tY);\r\n                webglctx.useRT(outRT);\r\n                for (var i: number = 0; i < len; i++) {\r\n                    if (i != 0) {\r\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\r\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\r\n                        webglctx.useRT(source);\r\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\r\n                        webglctx.useRT(outRT);\r\n                    }\r\n                    var fil: Filter = filters[i];\r\n                    //把src往out上画\r\n                    switch (fil.type) {\r\n                        case Filter.BLUR:\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\r\n                            break;\r\n                        case Filter.GLOW:\r\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            break;\r\n                        case Filter.COLOR:\r\n                            webglctx.setColorFilter((<ColorFilter>fil));\r\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(RenderSpriteData.Texture2D));\r\n                            webglctx.setColorFilter(null);\r\n                            break;\r\n                    }\r\n                }\r\n                webglctx.popRT();\r\n            } else {\r\n\r\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = sprite.getBounds();\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //edit\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.x -= sprite.pivotX + 4; //blur \r\n                b.y -= sprite.pivotY + 4;//blur \r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                //scope.addValue(\"out\", out);\r\n            }\r\n            x = x - tHalfPadding - sprite.x;\r\n            y = y - tHalfPadding - sprite.y;\r\n            p.setTo(x, y);\r\n            mat.transformPoint(p);\r\n            x = p.x + b.x;\r\n            y = p.y + b.y;\r\n            //把最后的out纹理画出来\r\n            webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\r\n\r\n            //把对象放回池子中\r\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\r\n            if (source) {\r\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\r\n                    s.destroy();\r\n                }, this);\r\n                source = null;\r\n                context.addRenderObject(submit);\r\n            }\r\n            mat.destroy();\r\n        }\r\n    }\r\n}\r\n\r\n","import { Utils } from \"./Utils\"\r\n\r\nconst _COLOR_MAP: Record<string, string> = { \"purple\": \"#800080\", \"orange\": \"#ffa500\", \"white\": '#FFFFFF', \"red\": '#FF0000', \"green\": '#00FF00', \"blue\": '#0000FF', \"black\": '#000000', \"yellow\": '#FFFF00', 'gray': '#808080' };\r\n\r\n/**\r\n * @private\r\n * <code>ColorUtils</code> 是一个颜色值处理类。\r\n */\r\nexport class ColorUtils {\r\n    /**@private */\r\n    static _SAVE: any = {};\r\n    /**@private */\r\n    static _SAVE_SIZE: number = 0;\r\n    /**@private */\r\n\r\n    /**@private */\r\n    private static _DEFAULT: any = ColorUtils._initDefault();\r\n\r\n    /**rgba 取值范围0-1*/\r\n    //TODO:delete？\r\n    arrColor: any[] = [];\r\n    /** 字符串型颜色值。*/\r\n    strColor: string;\r\n    /** uint 型颜色值。*/\r\n    numColor: number;\r\n    /**@internal TODO:*/\r\n    _drawStyle: any;\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Color</code> 类的实例。\r\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     */\r\n    constructor(value: any) {\r\n        if (value == null || value == 'none') {\r\n            this.strColor = \"#00000000\";\r\n            this.numColor = 0;\r\n            this.arrColor = [0, 0, 0, 0];\r\n            return;\r\n        }\r\n\r\n        let color: number;\r\n        if (typeof (value) == 'string') {\r\n            color = Utils.fromStringColor(value);\r\n            this.strColor = value;\r\n        } else {\r\n            color = value;\r\n            this.strColor = Utils.toHexColor(color);\r\n        }\r\n\r\n        if (this.strColor.indexOf(\"rgba\") >= 0 || this.strColor.length === 9) {\r\n            //color:0xrrggbbaa numColor此时为负数\r\n            this.arrColor = [((0xFF000000 & color) >>> 24) / 255, ((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255];\r\n            this.numColor = (0xff000000 & color) >>> 24 | (color & 0xff0000) >> 8 | (color & 0x00ff00) << 8 | ((color & 0xff) << 24);//to 0xffbbggrr\r\n        } else {\r\n            this.arrColor = [((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255, 1];\r\n            this.numColor = 0xff000000 | (color & 0xff0000) >> 16 | (color & 0x00ff00) | (color & 0xff) << 16;//to 0xffbbggrr\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static _initDefault(): any {\r\n        ColorUtils._DEFAULT = {};\r\n        for (var i in _COLOR_MAP) ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i] = new ColorUtils(_COLOR_MAP[i]);\r\n        return ColorUtils._DEFAULT;\r\n    }\r\n\r\n    /**@private 缓存太大，则清理缓存*/\r\n    static _initSaveMap(): void {\r\n        ColorUtils._SAVE_SIZE = 0;\r\n        ColorUtils._SAVE = Object.assign({}, ColorUtils._DEFAULT);\r\n    }\r\n\r\n    /**\r\n     * 根据指定的属性值，创建并返回一个 <code>Color</code> 类的实例。\r\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     * @return 一个 <code>Color</code> 类的实例。\r\n     */\r\n    static create(value: any): ColorUtils {\r\n        let key: string = value + \"\";\r\n        let color: ColorUtils = ColorUtils._SAVE[key];\r\n        if (color != null) return color;\r\n        if (ColorUtils._SAVE_SIZE > 500) ColorUtils._initSaveMap();\r\n        ColorUtils._SAVE_SIZE++;\r\n        return ColorUtils._SAVE[key] = new ColorUtils(value);\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { IFilter } from \"./IFilter\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\n\r\n/**对比度列表*/\r\nconst DELTA_INDEX: any[] = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\r\n/**灰色矩阵*/\r\nconst GRAY_MATRIX: any[] = [0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0];\r\n/**单位矩阵,表示什么效果都没有*/\r\nconst IDENTITY_MATRIX: any[] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\r\n/**标准矩阵长度*/\r\nconst LENGTH: number = 25;\r\n\r\n/**\r\n * <p><code>ColorFilter</code> 是颜色滤镜。使用 ColorFilter 类可以将 4 x 5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。该类允许饱和度更改、色相旋转、亮度转 Alpha 以及各种其他效果。您可以将滤镜应用于任何显示对象（即，从 Sprite 类继承的对象）。</p>\r\n * <p>注意：对于 RGBA 值，最高有效字节代表红色通道值，其后的有效字节分别代表绿色、蓝色和 Alpha 通道值。</p>\r\n */\r\nexport class ColorFilter extends Filter implements IFilter {\r\n\r\n    /** @internal */\r\n    _mat: Float32Array;\r\n    /** @internal */\r\n    _alpha: Float32Array;\r\n    /**当前使用的矩阵*/\r\n    _matrix: any[];\r\n\r\n    /**\r\n     * 创建一个 <code>ColorFilter</code> 实例。\r\n     * @param mat\t（可选）由 20 个项目（排列成 4 x 5 矩阵）组成的数组，用于颜色转换。\r\n     */\r\n    constructor(mat: any[] = null) {\r\n        super();\r\n        if (!mat) mat = this._copyMatrix(IDENTITY_MATRIX);\r\n        this._mat = new Float32Array(16);\r\n        this._alpha = new Float32Array(4);\r\n        this.setByMatrix(mat);\r\n    }\r\n\r\n    /**\r\n     * 设置为灰色滤镜\r\n     */\r\n    gray(): ColorFilter {\r\n        return this.setByMatrix(GRAY_MATRIX);\r\n    }\r\n\r\n    /**\r\n     * 设置为变色滤镜\r\n     * @param red 红色系数,范围:0~1\r\n     * @param green 绿色系数,范围:0~1\r\n     * @param blue 蓝色系数,范围:0~1\r\n     * @param alpha alpha系数,范围:0~1\r\n     */\r\n    color(red: number = 0, green: number = 0, blue: number = 0, alpha: number = 1): ColorFilter {\r\n        return this.setByMatrix([red, 0, 0, 0, 1, 0, green, 0, 0, 1, 0, 0, blue, 0, 1, 0, 0, 0, alpha, 0]);\r\n    }\r\n\r\n    /**\r\n     * 设置滤镜色\r\n     * @param\tcolor 颜色值\r\n     */\r\n    setColor(color: string): ColorFilter {\r\n        var arr: any[] = ColorUtils.create(color).arrColor;\r\n        var mt: any[] = [0, 0, 0, 0, 256 * arr[0], 0, 0, 0, 0, 256 * arr[1], 0, 0, 0, 0, 256 * arr[2], 0, 0, 0, 1, 0];\r\n        return this.setByMatrix(mt);\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵数据\r\n     * @param matrix 由 20 个项目（排列成 4 x 5 矩阵）组成的数组\r\n     * @return this\r\n     */\r\n    setByMatrix(matrix: any[]): ColorFilter {\r\n        if (this._matrix != matrix) this._copyMatrix(matrix);\r\n        var j: number = 0;\r\n        var z: number = 0;\r\n        for (var i: number = 0; i < 20; i++) {\r\n            if (i % 5 != 4) {\r\n                this._mat[j++] = matrix[i];\r\n            } else {\r\n                this._alpha[z++] = matrix[i];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    get type(): number {\r\n        return Filter.COLOR;\r\n    }\r\n\r\n    /**@internal */\r\n    get typeDefine(): ShaderDefine {\r\n        return ShaderDefines2D.FILTERCOLOR;\r\n    }\r\n\r\n    /**\r\n     * 调整颜色，包括亮度，对比度，饱和度和色调\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @param hue 色调,范围:-180~180\r\n     * @return this\r\n     */\r\n    adjustColor(brightness: number, contrast: number, saturation: number, hue: number): ColorFilter {\r\n        this.adjustHue(hue);\r\n        this.adjustContrast(contrast);\r\n        this.adjustBrightness(brightness);\r\n        this.adjustSaturation(saturation);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 调整亮度\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustBrightness(brightness: number): ColorFilter {\r\n        brightness = this._clampValue(brightness, 100);\r\n        if (brightness == 0 || isNaN(brightness)) return this;\r\n        return this._multiplyMatrix([1, 0, 0, 0, brightness, 0, 1, 0, 0, brightness, 0, 0, 1, 0, brightness, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整对比度\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustContrast(contrast: number): ColorFilter {\r\n        contrast = this._clampValue(contrast, 100);\r\n        if (contrast == 0 || isNaN(contrast)) return this;\r\n        var x: number;\r\n        if (contrast < 0) {\r\n            x = 127 + contrast / 100 * 127\r\n        } else {\r\n            x = contrast % 1;\r\n            if (x == 0) {\r\n                x = DELTA_INDEX[contrast];\r\n            } else {\r\n                x = DELTA_INDEX[(contrast << 0)] * (1 - x) + DELTA_INDEX[(contrast << 0) + 1] * x;\r\n            }\r\n            x = x * 127 + 127;\r\n        }\r\n        var x1: number = x / 127;\r\n        var x2: number = (127 - x) * 0.5;\r\n        return this._multiplyMatrix([x1, 0, 0, 0, x2, 0, x1, 0, 0, x2, 0, 0, x1, 0, x2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整饱和度\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustSaturation(saturation: number): ColorFilter {\r\n        saturation = this._clampValue(saturation, 100);\r\n        if (saturation == 0 || isNaN(saturation)) return this;\r\n        var x: number = 1 + ((saturation > 0) ? 3 * saturation / 100 : saturation / 100);\r\n        var dx: number = 1 - x;\r\n        var r: number = 0.3086 * dx;\r\n        var g: number = 0.6094 * dx;\r\n        var b: number = 0.0820 * dx;\r\n\r\n        return this._multiplyMatrix([r + x, g, b, 0, 0, r, g + x, b, 0, 0, r, g, b + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整色调\r\n     * @param hue 色调,范围:-180~180\r\n     * @return this\r\n     */\r\n    adjustHue(hue: number): ColorFilter {\r\n        hue = this._clampValue(hue, 180) / 180 * Math.PI;\r\n        if (hue == 0 || isNaN(hue)) return this;\r\n        var cos: number = Math.cos(hue);\r\n        var sin: number = Math.sin(hue);\r\n        var r: number = 0.213;\r\n        var g: number = 0.715;\r\n        var b: number = 0.072;\r\n        return this._multiplyMatrix([r + cos * (1 - r) + sin * (-r), g + cos * (-g) + sin * (-g), b + cos * (-b) + sin * (1 - b), 0, 0, r + cos * (-r) + sin * (0.143), g + cos * (1 - g) + sin * (0.140), b + cos * (-b) + sin * (-0.283), 0, 0, r + cos * (-r) + sin * (-(1 - r)), g + cos * (-g) + sin * (g), b + cos * (1 - b) + sin * (b), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 重置成单位矩阵，去除滤镜效果\r\n     */\r\n    reset(): ColorFilter {\r\n        return this.setByMatrix(this._copyMatrix(IDENTITY_MATRIX));\r\n    }\r\n\r\n    /**\r\n     * 矩阵乘法\r\n     * @param matrix\r\n     * @return this\r\n     */\r\n    private _multiplyMatrix(matrix: any[]): ColorFilter {\r\n        var col: any[] = [];\r\n        this._matrix = this._fixMatrix(this._matrix);\r\n        for (var i: number = 0; i < 5; i++) {\r\n            for (var j: number = 0; j < 5; j++) {\r\n                col[j] = this._matrix[j + i * 5];\r\n            }\r\n            for (j = 0; j < 5; j++) {\r\n                var val: number = 0;\r\n                for (var k: number = 0; k < 5; k++) {\r\n                    val += matrix[j + k * 5] * col[k];\r\n                }\r\n                this._matrix[j + i * 5] = val;\r\n            }\r\n        }\r\n        return this.setByMatrix(this._matrix);\r\n    }\r\n\r\n    /**\r\n     * 规范值的范围\r\n     * @param val 当前值\r\n     * @param limit 值的范围-limit~limit\r\n     */\r\n    private _clampValue(val: number, limit: number): number {\r\n        return Math.min(limit, Math.max(-limit, val));\r\n    }\r\n\r\n    /**\r\n     * 规范矩阵,将矩阵调整到正确的大小\r\n     * @param matrix 需要调整的矩阵\r\n     */\r\n    private _fixMatrix(matrix: any[] = null): any[] {\r\n        if (matrix == null) return IDENTITY_MATRIX;\r\n        if (matrix.length < LENGTH) matrix = matrix.slice(0, matrix.length).concat(IDENTITY_MATRIX.slice(matrix.length, LENGTH));\r\n        else if (matrix.length > LENGTH) matrix = matrix.slice(0, LENGTH);\r\n        return matrix;\r\n    }\r\n\r\n    /**\r\n     * 复制矩阵\r\n     */\r\n    private _copyMatrix(matrix: any[]): any[] {\r\n        var len: number = LENGTH;\r\n        if (!this._matrix) this._matrix = [];\r\n        for (var i: number = 0; i < len; i++) {\r\n            this._matrix[i] = matrix[i];\r\n        }\r\n        return this._matrix;\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        let arr: any[] = ColorUtils.create((<any>this)._color || \"#FFFFFF\").arrColor;\r\n        this.color(arr[0], arr[1], arr[2], arr[3]);\r\n        this.adjustColor((<any>this)._brightness || 0, (<any>this)._contrast || 0, (<any>this)._saturation || 0, (<any>this)._hue || 0);\r\n    }\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\nimport { Utils } from \"../utils/Utils\"\r\n\r\n/**\r\n * @private\r\n * 凸包算法。\r\n */\r\nexport class GrahamScan {\r\n\r\n    private static _mPointList: any[];\r\n    private static _tempPointList: any[] = [];\r\n    private static _temPList: any[] = [];\r\n    private static _temArr: any[] = [];\r\n\r\n    static multiply(p1: Point, p2: Point, p0: Point): number {\r\n        return ((p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y));\r\n    }\r\n\r\n    /**\r\n     * 计算两个点的距离。\r\n     * @param\tp1\r\n     * @param\tp2\r\n     * @return\r\n     */\r\n    static dis(p1: Point, p2: Point): number {\r\n        return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);\r\n    }\r\n\r\n    private static _getPoints(count: number, tempUse: boolean = false, rst: any[]|null = null): any[] {\r\n        if (!GrahamScan._mPointList) GrahamScan._mPointList = [];\r\n        while (GrahamScan._mPointList.length < count) GrahamScan._mPointList.push(new Point());\r\n        if (!rst) rst = [];\r\n        rst.length = 0;\r\n        if (tempUse) {\r\n            //\t\t\t\trst=_mPointList.slice(0,count);\r\n            GrahamScan.getFrom(rst, GrahamScan._mPointList, count);\r\n        } else {\r\n            //\t\t\t\trst=_mPointList.splice(0,count);\r\n            GrahamScan.getFromR(rst, GrahamScan._mPointList, count);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 将数组 src 从索引0位置 依次取 cout 个项添加至 tst 数组的尾部。\r\n     * @param\trst 原始数组，用于添加新的子元素。\r\n     * @param\tsrc 用于取子元素的数组。\r\n     * @param\tcount 需要取得子元素个数。\r\n     * @return 添加完子元素的 rst 对象。\r\n     */\r\n    static getFrom(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src[i]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 将数组 src 从末尾索引位置往头部索引位置方向 依次取 cout 个项添加至 tst 数组的尾部。\r\n     * @param\trst 原始数组，用于添加新的子元素。\r\n     * @param\tsrc 用于取子元素的数组。\r\n     * @param\tcount 需要取得子元素个数。\r\n     * @return 添加完子元素的 rst 对象。\r\n     */\r\n    static getFromR(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src.pop());\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     *  [x,y...]列表 转 Point列表\r\n     * @param pList Point列表\r\n     * @return [x,y...]列表\r\n     */\r\n    static pListToPointList(pList: any[], tempUse: boolean = false): any[] {\r\n        var i: number, len: number = pList.length / 2, rst: any[] = GrahamScan._getPoints(len, tempUse, GrahamScan._tempPointList);\r\n        for (i = 0; i < len; i++) {\r\n            rst[i].setTo(pList[i + i], pList[i + i + 1]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * Point列表转[x,y...]列表\r\n     * @param pointList Point列表\r\n     * @return [x,y...]列表\r\n     */\r\n    static pointListToPlist(pointList: any[]): any[] {\r\n        var i: number, len: number = pointList.length, rst: any[] = GrahamScan._temPList, tPoint: Point;\r\n        rst.length = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tPoint = pointList[i];\r\n            rst.push(tPoint.x, tPoint.y);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     *  寻找包括所有点的最小多边形顶点集合\r\n     * @param pList 形如[x0,y0,x1,y1...]的点列表\r\n     * @return  最小多边形顶点集合\r\n     */\r\n    static scanPList(pList: any[]): any[] {\r\n        return Utils.copyArray(pList, GrahamScan.pointListToPlist(GrahamScan.scan(GrahamScan.pListToPointList(pList, true))));\r\n    }\r\n\r\n    /**\r\n     * 寻找包括所有点的最小多边形顶点集合\r\n     * @param PointSet Point列表\r\n     * @return 最小多边形顶点集合\r\n     */\r\n    static scan(PointSet: any[]): any[] {\r\n        var i: number, j: number, k: number = 0, top: number = 2, tmp: Point, n: number = PointSet.length, ch: any[];\r\n        var _tmpDic: any = {};\r\n        var key: string;\r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        n = PointSet.length;\r\n        for (i = n - 1; i >= 0; i--) {\r\n            tmp = PointSet[i];\r\n            key = tmp.x + \"_\" + tmp.y;\r\n            if (!(key in _tmpDic)) {\r\n                _tmpDic[key] = true;\r\n                ch.push(tmp);\r\n            }\r\n        }\r\n        n = ch.length;\r\n        Utils.copyArray(PointSet, ch);\r\n        //\t\t\tPointSet=ch;\r\n        //\t\t\tn=PointSet.length;\r\n        //找到最下且偏左的那个点  \r\n        for (i = 1; i < n; i++)\r\n            if ((PointSet[i].y < PointSet[k].y) || ((PointSet[i].y == PointSet[k].y) && (PointSet[i].x < PointSet[k].x)))\r\n                k = i;\r\n        //将这个点指定为PointSet[0]  \r\n        tmp = PointSet[0];\r\n        PointSet[0] = PointSet[k];\r\n        PointSet[k] = tmp;\r\n        //按极角从小到大,距离偏短进行排序  \r\n        for (i = 1; i < n - 1; i++) {\r\n            k = i;\r\n            for (j = i + 1; j < n; j++)\r\n                if ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) > 0) || ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) == 0) && (GrahamScan.dis(PointSet[0], PointSet[j]) < GrahamScan.dis(PointSet[0], PointSet[k]))))\r\n                    k = j;//k保存极角最小的那个点,或者相同距离原点最近  \r\n            tmp = PointSet[i];\r\n            PointSet[i] = PointSet[k];\r\n            PointSet[k] = tmp;\r\n        }\r\n        //第三个点先入栈  \r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        //trace(\"scan:\",PointSet[0],PointSet[1],PointSet[2]);\r\n        if (PointSet.length < 3) {\r\n            return Utils.copyArray(ch, PointSet);\r\n        }\r\n        ch.push(PointSet[0], PointSet[1], PointSet[2]);\r\n        //ch=[PointSet[0],PointSet[1],PointSet[2]];\r\n        //判断与其余所有点的关系  \r\n        for (i = 3; i < n; i++) {\r\n            //不满足向左转的关系,栈顶元素出栈  \r\n            while (ch.length >= 2 && GrahamScan.multiply(PointSet[i], ch[ch.length - 1], ch[ch.length - 2]) >= 0) ch.pop();\r\n            //当前点与栈内所有点满足向左关系,因此入栈.  \r\n            PointSet[i] && ch.push(PointSet[i]);\r\n        }\r\n        return ch;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class SpriteConst {\r\n    /** @private */\r\n    static ALPHA: number = 0x01;\r\n    /** @private */\r\n    static TRANSFORM: number = 0x02;\r\n    /** @private */\r\n    static BLEND: number = 0x04;\r\n    /** @private */\r\n    static CANVAS: number = 0x08;\r\n    /** @private */\r\n    static FILTERS: number = 0x10;\r\n    /** @private */\r\n    static MASK: number = 0x20;\r\n    /** @private */\r\n    static CLIP: number = 0x40;\r\n    /** @private */\r\n    static STYLE: number = 0x80;\r\n    /** @private */\r\n    static TEXTURE: number = 0x100;\r\n    /** @private */\r\n    static GRAPHICS: number = 0x200;\r\n    /** @private */\r\n    static LAYAGL3D: number = 0x400;\r\n    /** @private */\r\n    static CUSTOM: number = 0x800;\r\n    /** @private */\r\n    static ONECHILD: number = 0x1000;\r\n    /** @private */\r\n    static HITAREA: number = 0x2000;\r\n    /** @private */\r\n    static CHILDS: number = 0x4000;\r\n\r\n    /** @private */\r\n    static REPAINT_NONE: number = 0;\r\n    /** @private */\r\n    static REPAINT_NODE: number = 0x01;\r\n    /** @private */\r\n    static REPAINT_CACHE: number = 0x02;\r\n    /** @private */\r\n    static REPAINT_ALL: number = 0x03;\r\n}\r\n\r\n\r\n","/**\r\n * 渲染统计数据\r\n */\r\nexport enum RenderStatisticsInfo{\r\n    DrawCall,\r\n    InstanceDrawCall,\r\n    Triangle,\r\n    UniformUpload,//TODO\r\n    GPUMemory,\r\n    TextureMemeory,\r\n    RenderTextureMemory,\r\n    BufferMemory,\r\n}","export enum BufferTargetType{\r\n    ARRAY_BUFFER,//顶点\r\n    ELEMENT_ARRAY_BUFFER,//索引\r\n    //WebGL2.0 UniformBuffer\r\n    UNIFORM_BUFFER,//UBO\r\n    COPY_READ_BUFFER,//TODO\r\n    COPY_WRITE_BUFFER,//TODO\r\n    TRANSFORM_FEEDBACK_BUFFER,//TODO\r\n    PIXEL_PACK_BUFFER,//TODO\r\n    PIXEL_UNPACK_BUFFER,//TODO\r\n}\r\n\r\n\r\n/**\r\n * Buffer usage.\r\n */\r\n export enum BufferUsage {\r\n    /** The buffer content are intended to be specified once, and used many times */\r\n    Static,\r\n    /** The buffer contents are intended to be respecified repeatedly, and used many times */\r\n    Dynamic,\r\n    /** The buffer contents are intended to be specified once, and used at most a few times */\r\n    Stream\r\n  }","export enum IndexFormat {\r\n    /** 8 位无符号整型索引格式。*/\r\n    UInt8,\r\n    /** 16 位无符号整型索引格式。*/\r\n    UInt16,\r\n    /** 32 位无符号整型索引格式。*/\r\n    UInt32\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { RenderStatisticsInfo } from \"../RenderEngine/RenderEnum/RenderStatInfo\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Browser } from \"./Browser\";\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"./IStatUI\";\r\n\r\n/**\r\n * <p> <code>Stat</code> 是一个性能统计面板，可以实时更新相关的性能参数。</p>\r\n * <p>参与统计的性能参数如下（所有参数都是每大约1秒进行更新）：<br/>\r\n * FPS(WebGL)：WebGL 模式下的帧频，也就是每秒显示的帧数，值越高、越稳定，感觉越流畅；<br/>\r\n * Sprite：统计所有渲染节点（包括容器）数量，它的大小会影响引擎进行节点遍历、数据组织和渲染的效率。其值越小，游戏运行效率越高；<br/>\r\n * DrawCall：此值是决定性能的重要指标，其值越小，游戏运行效率越高。Canvas模式下表示每大约1秒的图像绘制次数；WebGL模式下表示每大约1秒的渲染提交批次，每次准备数据并通知GPU渲染绘制的过程称为1次DrawCall，在每次DrawCall中除了在通知GPU的渲染上比较耗时之外，切换材质与shader也是非常耗时的操作；<br/>\r\n * CurMem：Canvas模式下，表示内存占用大小，值越小越好，过高会导致游戏闪退；WebGL模式下，表示内存与显存的占用，值越小越好；<br/>\r\n * Shader：是 WebGL 模式独有的性能指标，表示每大约1秒 Shader 提交次数，值越小越好；<br/>\r\n * Canvas：由三个数值组成，只有设置 CacheAs 后才会有值，默认为0/0/0。从左到右数值的意义分别为：每帧重绘的画布数量 / 缓存类型为\"normal\"类型的画布数量 / 缓存类型为\"bitmap\"类型的画布数量。</p>\r\n */\r\nexport class Stat {\r\n    //FPS\r\n    public static FPSStatUIParams: StatUIParams = { title: \"FPS\", value: \"_fpsStr\", color: \"yellow\", units: \"int\", mode: \"summit\" };\r\n    //Node nums\r\n    public static NodeStatUIParams: StatUIParams = { title: \"Node\", value: \"spriteCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //Sprite3D nums\r\n    public static Sprite3DStatUIParams: StatUIParams = { title: \"Sprite3D\", value: \"sprite3DCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //DrawCall\r\n    public static DrawCall: StatUIParams = { title: \"DrawCall\", value: \"drawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //triangleFace\r\n    public static TriangleFace: StatUIParams = { title: \"TriangleFace\", value: \"trianglesFaces\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //RenderNoe 渲染节点数量\r\n    public static RenderNode: StatUIParams = { title: \"RenderNode\", value: \"renderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //SkinRenderNode\r\n    public static SkinRenderNode: StatUIParams = { title: \"SkinRenderNode\", value: \"skinRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //ParticleRenderNode\r\n    public static ParticleRenderNode: StatUIParams = { title: \"ParticleRenderNode\", value: \"particleRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //FrustumCulling\r\n    public static FrustumCulling: StatUIParams = { title: \"FrustumCulling\", value: \"frustumCulling\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //uniformUpload\r\n    public static UniformUpload: StatUIParams = { title: \"UniformUpload\", value: \"uniformUpload\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //OpaqueDrawCall\r\n    public static OpaqueDrawCall: StatUIParams = { title: \"OpaqueDrawCall\", value: \"opaqueDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //TransformDrawCall\r\n    public static TransDrawCall: StatUIParams = { title: \"TransDrawCall\", value: \"transDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //DepthCastDrawCall\r\n    public static DepthCastDrawCall: StatUIParams = { title: \"DepthCastDrawCall\", value: \"depthCastDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //InstanceDrawCall\r\n    public static InstanceDrawCall: StatUIParams = { title: \"InstanceDrawCall\", value: \"instanceDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //CMDDrawCall\r\n    public static CMDDrawCall: StatUIParams = { title: \"CMDDrawCall\", value: \"cmdDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //BlitDrawCall\r\n    public static BlitDrawCall: StatUIParams = { title: \"BlitDrawCall\", value: \"blitDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //GPU 显存:\r\n    public static GPUMemory: StatUIParams = { title: \"GPUMemory\", value: \"gpuMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //Texture2D memory\r\n    public static TextureMemeory: StatUIParams = { title: \"TextureMemory\", value: \"textureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //RenderTexture memory\r\n    public static RenderTextureMemory: StatUIParams = { title: \"RenderTextureMemory\", value: \"renderTextureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //BufferMemory\r\n    public static BufferMemory: StatUIParams = { title: \"BufferMemory\", value: \"bufferMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //upload Uniform\r\n    public static uploadUniformNum: StatUIParams = { title: \"UploadUniformNum\", value: \"uploadUniform\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //所有显示\r\n    public static AllShow: Array<StatUIParams> = [Stat.FPSStatUIParams, Stat.NodeStatUIParams, Stat.Sprite3DStatUIParams, Stat.DrawCall, Stat.TriangleFace, Stat.RenderNode, Stat.SkinRenderNode, Stat.ParticleRenderNode\r\n        , Stat.FrustumCulling, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall, Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory, Stat.uploadUniformNum];\r\n    //memory显示\r\n    public static memoryShow: Array<StatUIParams> = [Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory];\r\n    //渲染显示\r\n    public static renderShow: Array<StatUIParams> = [Stat.DrawCall, Stat.TriangleFace, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall];\r\n\r\n    /**@internal 开启关闭阴影 */\r\n    public static toogle_Shadow: StatToggleUIParams = { title: \"Shadow\", value: \"enableShadow\", color: \"white\" };\r\n    /**@internal 开启关闭多光源 */\r\n    public static toogle_MulLight: StatToggleUIParams = { title: \"MulLight\", value: \"enableMulLight\", color: \"white\" };\r\n    /**@internal 开启关闭光源 */\r\n    public static toogle_Light: StatToggleUIParams = { title: \"Light\", value: \"enableLight\", color: \"white\" };\r\n    /**@internal 开启关闭后期处理 */\r\n    public static toogle_Postprocess: StatToggleUIParams = { title: \"Postprocess\", value: \"enablePostprocess\", color: \"white\" };\r\n    /**@internal 开启关闭动画更新 */\r\n    public static toogle_AnimatorUpdate: StatToggleUIParams = { title: \"AnimatorUpdate\", value: \"enableAnimatorUpdate\", color: \"white\" };\r\n    /**@internal 开启关闭物理更新*/\r\n    public static toogle_PhysicsUpdate: StatToggleUIParams = { title: \"PhysicsUpdate\", value: \"enablePhysicsUpdate\", color: \"white\" };\r\n    /**@internal 开启关闭skin渲染 */\r\n    public static toogle_Skin: StatToggleUIParams = { title: \"Skin\", value: \"enableSkin\", color: \"white\" };\r\n    /**@internal 开启关闭透明渲染 */\r\n    public static toogle_Transparent: StatToggleUIParams = { title: \"Transparent\", value: \"enableTransparent\", color: \"white\" };\r\n    /**@internal 开启关闭粒子 */\r\n    public static toogle_Particle: StatToggleUIParams = { title: \"Particle\", value: \"enableParticle\", color: \"white\" };\r\n    /**@internal 开启关闭msaa */\r\n    public static toogle_msaa: StatToggleUIParams = { title: \"MSAA\", value: \"enablemsaa\", color: \"white\" };\r\n    /**@internal 开启关闭CMD */\r\n    public static toogle_CameraCMD: StatToggleUIParams = { title: \"CameraCMD\", value: \"enableCameraCMD\", color: \"white\" };\r\n    /**@internal 开启关闭非透明物体渲染 */\r\n    public static toogle_Opaque: StatToggleUIParams = { title: \"Opaque\", value: \"enableOpaque\", color: \"white\" };\r\n\r\n    //所有开关\r\n    public static AllToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate, Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n    //渲染开关\r\n    public static RenderModeToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate];\r\n    //功能开关\r\n    public static RenderFuncToggle: Array<StatToggleUIParams> = [Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n\r\n    /** 每秒帧数。*/\r\n    public static FPS: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    public static loopCount: number = 0;\r\n    /** 精灵渲染使用缓存<code>Sprite</code> 的数量。*/\r\n    public static spriteRenderUseCacheCount: number = 0;\r\n\r\n    /** 画布 canvas 使用标准渲染的次数。*/\r\n    static canvasNormal: number = 0;\r\n    /** 画布 canvas 使用位图渲染的次数。*/\r\n    static canvasBitmap: number = 0;\r\n    /** 画布 canvas 缓冲区重绘次数。*/\r\n    static canvasReCache: number = 0;\r\n    /** 表示当前使用的是否为慢渲染模式。*/\r\n    static renderSlow: boolean = false;\r\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\r\n    //static gpuMemory: number;\r\n    static cpuMemory: number;\r\n\r\n    /**@internal */\r\n    public static _timer: number = 0;\r\n    /**@internal */\r\n    public static _count: number = 0;\r\n\r\n    /**@internal */\r\n    public static _fpsStr: string = \"\";\r\n    /**@internal */\r\n    public static spriteCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static sprite3DCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static drawCall: number = 0;\r\n    /**@internal */\r\n    public static trianglesFaces: number = 0;\r\n    /**@internal */\r\n    public static renderNode: number = 0;\r\n    /**@internal */\r\n    public static skinRenderNode: number = 0;\r\n    /**@internal */\r\n    public static particleRenderNode: number = 0;\r\n    /**@internal 视锥剔除次数。*/\r\n    public static frustumCulling: number = 0;\r\n    /**@internal */\r\n    public static uniformUpload: number = 0;\r\n    /**@internal */\r\n    public static opaqueDrawCall: number = 0;\r\n    /**@internal */\r\n    public static transDrawCall: number = 0;\r\n    /**@internal */\r\n    public static depthCastDrawCall: number = 0;\r\n    /**@internal */\r\n    public static instanceDrawCall: number = 0;\r\n    /**@internal */\r\n    public static cmdDrawCall: number = 0;\r\n\r\n    public static blitDrawCall: number = 0;\r\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\r\n    public static gpuMemory: number;\r\n    /**@internal */\r\n    public static textureMemory: number = 0;\r\n    /**@internal */\r\n    public static renderTextureMemory: number = 0;\r\n    /**@interanl */\r\n    public static bufferMemory: number = 0;\r\n    /**@internal */\r\n    public static uploadUniform: number = 0;\r\n\r\n    //Toggle\r\n    /**@internal 开启关闭阴影 */\r\n    public static enableShadow: boolean = true;\r\n    /**@internal 开启关闭多光源 */\r\n    public static enableMulLight: boolean = true;\r\n    /**@internal 开启关闭光源 */\r\n    public static enableLight: boolean = true;\r\n    /**@internal 开启关闭CMD */\r\n    public static enableCameraCMD: boolean = true;\r\n    /**@internal 开启关闭后期处理 */\r\n    public static enablePostprocess: boolean = true;\r\n    /**@internal 开启关闭skin渲染 */\r\n    public static enableSkin: boolean = true;\r\n    /**@internal 开启关闭透明渲染 */\r\n    public static enableTransparent: boolean = true;\r\n    /**@internal 开启关闭粒子 */\r\n    public static enableParticle: boolean = true;\r\n    /**@internal 开启关闭动画更新 */\r\n    public static enableAnimatorUpdate: boolean = true;\r\n    /**@internal 开启关闭物理更新*/\r\n    public static enablePhysicsUpdate: boolean = true;\r\n    /**@internal 开启关闭msaa */\r\n    public static enablemsaa: boolean = true;\r\n    /**@internal 开启关闭非透明物体渲染 */\r\n    public static enableOpaque: boolean = true;\r\n\r\n    static _statUI: IStatUI;\r\n\r\n    /**@internal */\r\n    private static _currentShowArray: Array<StatUIParams>;\r\n    /**@internal */\r\n    private static _currentToggleArray: Array<StatToggleUIParams>;\r\n    /**@internal */\r\n    private static _show: boolean;\r\n\r\n    /**\r\n     * 显示性能统计信息。\r\n     * @param\tx X轴显示位置。\r\n     * @param\ty Y轴显示位置。\r\n     */\r\n    static show(x?: number, y?: number, views?: Array<StatUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentShowArray = views||Stat.AllShow;\r\n        Stat._statUI.show(x, y, Stat._currentShowArray);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n    }\r\n\r\n    static showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentToggleArray = views;\r\n        Stat._statUI.showToggle(x, y, views);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n    }\r\n\r\n    private static checkUI() {\r\n        if (!Stat._statUI) {\r\n            let cls = ClassUtils.getClass(\"StatUI\");\r\n            if (!cls) {\r\n                console.error(\"StatUI not found\");\r\n                return false;\r\n            }\r\n            Stat._statUI = new cls();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 隐藏性能统计信息。\r\n     */\r\n    static hide(): void {\r\n        if (!Stat._show)\r\n            return;\r\n\r\n        Stat._show = false;\r\n        Stat._currentShowArray = null;\r\n        Stat._currentToggleArray = null;\r\n        ILaya.systemTimer.clear(null, Stat.loop);\r\n        if (Stat._statUI)\r\n            Stat._statUI.hide();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 性能统计参数计算循环处理函数。\r\n     */\r\n    static loop(): void {\r\n        Stat._count++;\r\n        let timer: number = Browser.now();\r\n        if (timer - Stat._timer < 1000) return;\r\n\r\n        let count: number = Stat._count;\r\n        //计算更精确的FPS值\r\n        Stat.FPS = Math.round((count * 1000) / (timer - Stat._timer));\r\n\r\n        if (Stat._show) {\r\n            Stat.updateEngineData();\r\n            let delay: string = Stat.FPS > 0 ? Math.floor(1000 / Stat.FPS).toString() : \" \";\r\n            Stat._fpsStr = Stat.FPS + (Stat.renderSlow ? \" slow\" : \"\") + \" \" + delay + \"ms\";\r\n            Stat._statUI.update();\r\n            Stat.clear();\r\n        }\r\n\r\n        Stat._count = 0;\r\n        Stat._timer = timer;\r\n    }\r\n\r\n    static updateEngineData(): void {\r\n        Stat.trianglesFaces = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.Triangle);\r\n        Stat.drawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.DrawCall);\r\n        Stat.instanceDrawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\r\n\r\n        Stat.gpuMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.GPUMemory);\r\n        Stat.textureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.TextureMemeory);\r\n        Stat.renderTextureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory);\r\n        Stat.bufferMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.BufferMemory);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清零性能统计计算相关的数据。\r\n     */\r\n    static clear(): void {\r\n        if (!Stat._currentShowArray)\r\n            return;\r\n        Stat._currentShowArray.forEach(element => {\r\n            if (element.mode == \"average\")\r\n                (Stat as any)[element.value] = 0;\r\n        });\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.Triangle);\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.DrawCall);\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\r\n    }\r\n\r\n    static render(ctx: any, x: number, y: number) {\r\n        if (Stat._show)\r\n            Stat._statUI.render(ctx, x, y);\r\n    }\r\n}\r\n\r\n(window as any).Stat = Stat;\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\n\r\nexport class SubmitBase implements ISubmit {\r\n\r\n    static TYPE_2D: number = 10000;\r\n    static TYPE_CANVAS: number = 10003;\r\n    static TYPE_CMDSETRT: number = 10004;\r\n    static TYPE_CUSTOM: number = 10005;\r\n    static TYPE_BLURRT: number = 10006;\r\n    static TYPE_CMDDESTORYPRERT: number = 10007;\r\n    static TYPE_DISABLESTENCIL: number = 10008;\r\n    static TYPE_OTHERIBVB: number = 10009;\r\n    static TYPE_PRIMITIVE: number = 10010;\r\n    static TYPE_RT: number = 10011;\r\n    static TYPE_BLUR_RT: number = 10012;\r\n    static TYPE_TARGET: number = 10013;\r\n    static TYPE_CHANGE_VALUE: number = 10014;\r\n    static TYPE_SHAPE: number = 10015;\r\n    static TYPE_TEXTURE: number = 10016;\r\n    static TYPE_FILLTEXTURE: number = 10017;\r\n\r\n    static KEY_ONCE: number = -1;\r\n    static KEY_FILLRECT: number = 1;\r\n    static KEY_DRAWTEXTURE: number = 2;\r\n    static KEY_VG: number = 3;\r\n    static KEY_TRIANGLES: number = 4;\r\n\r\n    static RENDERBASE: SubmitBase;\r\n    static ID: number = 1;\r\n    static preRender: ISubmit = null;\t//上一个submit，主要用来比较key,以减少uniform的重复提交。\r\n\r\n    clipInfoID: number = -1;\t//用来比较clipinfo\r\n    /**@internal */\r\n    _mesh: Mesh2D | null = null;\t\t\t//代替 _vb,_ib\r\n    /**@internal */\r\n    _blendFn: Function = null;\r\n    protected _id: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _parent: ISubmit = null;\r\n    //渲染key，通过key判断是否是同一个\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n\r\n    // 从VB中什么地方开始画，画到哪\r\n    /**@internal */\r\n    _startIdx: number = 0;\t\t//indexbuffer 的偏移，单位是byte\r\n    /**@internal */\r\n    _numEle: number = 0;\r\n    /**@internal */\r\n    _ref: number = 1;\t// 其实已经没有用了\r\n\r\n    shaderValue: Value2D = null;\r\n\r\n    static __init__(): void {\r\n        var s: SubmitBase = SubmitBase.RENDERBASE = new SubmitBase(-1);\r\n        s.shaderValue = new Value2D(RenderSpriteData.Zero);\r\n        s.shaderValue.ALPHA = 1;\r\n        s._ref = 0xFFFFFFFF;\r\n    }\r\n\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        this._renderType = renderType;\r\n        this._id = ++SubmitBase.ID;\r\n    }\r\n\r\n    getID(): number {\r\n        return this._id;\r\n    }\r\n\r\n\r\n    getRenderType(): number {\r\n        return this._renderType;\r\n    }\r\n\r\n    toString(): string {\r\n        return \"ibindex:\" + this._startIdx + \" num:\" + this._numEle + \" key=\" + this._key;\r\n    }\r\n\r\n    renderSubmit(): number { return 1; }\r\n    releaseRender(): void { }\r\n}\r\n\r\n\r\n","import { VertexBuffer } from \"./VertexBuffer\";\r\n//vertex Layout cache pool\r\nexport interface VAElement { format: string, stride: number, shaderLocation: number };\r\nexport class VertexAttributeLayout {\r\n    static IPoint: number = 0;\r\n    static _pool: { [key: number]: VertexAttributeLayout } = {};\r\n\r\n    static getVertexLayoutByPool(vertexs: VertexBuffer[]) {\r\n        let pool =VertexAttributeLayout._pool;\r\n        for(var i in pool){\r\n            let layout = pool[i];\r\n            if(layout.deepthEqaul(vertexs)){\r\n                return layout\r\n            }\r\n        }\r\n        return new VertexAttributeLayout(vertexs);\r\n    }\r\n\r\n    /**\r\n     * vertex attribute byte size Array\r\n     */\r\n    attributeByteSize:Array<number>;\r\n\r\n    /**\r\n     * vertex Layout des\r\n     */\r\n    VAElements: Array<VAElement[]>;\r\n\r\n    instanceMode:Array<boolean>;\r\n    /**\r\n     * pool index\r\n     */\r\n    id: number;\r\n\r\n    \r\n\r\n    /**\r\n     * instance one VertexAttributeLayout\r\n     * @param vertexs \r\n     */\r\n    constructor(vertexs: VertexBuffer[]) {\r\n        this.VAElements = new Array();\r\n        this.attributeByteSize = new Array();\r\n        this.instanceMode = new Array();\r\n        //this.VAElements.length = vertexs.length;\r\n        for (let i = 0; i < vertexs.length; i++) {\r\n            let vaelements: VAElement[] = [];\r\n            let oneAttributeSize = vertexs[i].vertexDeclaration.vertexStride;\r\n            let vdec = vertexs[i].vertexDeclaration._VAElements;\r\n\r\n            for (let j = 0; j < vdec.length; j++) {\r\n                vaelements.push({ format: vdec[j].format, stride: vdec[j].stride, shaderLocation: vdec[j].shaderLocation });\r\n            }\r\n            this.attributeByteSize.push(oneAttributeSize);\r\n            this.VAElements.push(vaelements);\r\n            this.instanceMode.push(vertexs[i].instanceBuffer);\r\n        }\r\n        this.id = VertexAttributeLayout.IPoint;\r\n        VertexAttributeLayout._pool[VertexAttributeLayout.IPoint++] = this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param vertexs \r\n     * @returns \r\n     */\r\n    deepthEqaul(vertexs: VertexBuffer[]): boolean {\r\n        if (vertexs.length != this.VAElements.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < vertexs.length; i++) {\r\n            let vaelemets = vertexs[i]._vertexDeclaration._VAElements;\r\n            let thisVaeEs = this.VAElements[i];\r\n            if (vaelemets.length != thisVaeEs.length) {\r\n                return false;\r\n            } else {\r\n                for (var ii = 0, nn = vaelemets.length; ii < nn; ii++) {\r\n                    let v0 = vaelemets[ii];\r\n                    let v1 = thisVaeEs[ii];\r\n                    if (v0.format != v1.format || v0.stride != v1.stride || v0.shaderLocation != v1.shaderLocation)\r\n                        return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderEngine/RenderInterface/IRenderVertexState\";\r\nimport { VertexAttributeLayout } from \"../../RenderEngine/VertexAttributeLayout\";\r\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n\r\n\r\n/**\r\n * <code>BufferState</code> 类用于实现渲染所需的Buffer状态集合。\r\n */\r\nexport class BufferState {\r\n\tstatic _curBindedBufferState: BufferState;\r\n\t/**@private [只读]*/\r\n\tprotected _nativeVertexArrayObject: IRenderVertexState;\r\n\r\n\t/**@internal [只读]*/\r\n\t_bindedIndexBuffer: IndexBuffer;\r\n\r\n\t/**@internal */\r\n\t_vertexBuffers: VertexBuffer[];\r\n\r\n\t/**@internal */\r\n\tvertexlayout: VertexAttributeLayout;\r\n\r\n\t/**\r\n\t * 创建一个 <code>BufferState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._nativeVertexArrayObject = LayaGL.renderEngine.createVertexState();\r\n\t}\r\n\r\n\tprotected applyVertexBuffers(): void {\r\n\t\tthis._nativeVertexArrayObject&&this._nativeVertexArrayObject.applyVertexBuffer(this._vertexBuffers);\r\n\t}\r\n\r\n\tprotected applyIndexBuffers(): void {\r\n\t\tthis._nativeVertexArrayObject&&this._nativeVertexArrayObject.applyIndexBuffer(this._bindedIndexBuffer);\r\n\t}\r\n\r\n\r\n\tapplyState(vertexBuffers: VertexBuffer[], indexBuffer: IndexBuffer | null) {\r\n\t\tthis.vertexlayout = VertexAttributeLayout.getVertexLayoutByPool(vertexBuffers);\r\n\t\tthis._vertexBuffers = vertexBuffers;\r\n\t\tthis._bindedIndexBuffer = indexBuffer;\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\r\n\t\tthis.bind();\r\n\t\tthis.applyVertexBuffers();\r\n\t\tthis.applyIndexBuffers();\r\n\t\tthis.unBind();\r\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\r\n\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tbind(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tthis._nativeVertexArrayObject.bindVertexArray();\r\n\t\tBufferState._curBindedBufferState = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tunBind(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tif (BufferState._curBindedBufferState == this) {\r\n\t\t\tthis._nativeVertexArrayObject.unbindVertexArray();\r\n\t\t\tBufferState._curBindedBufferState = null;\r\n\t\t} else {\r\n\t\t\tthrow \"BufferState: must call bind() function first.\";\r\n\t\t}\r\n\t}\r\n\r\n\tisbind(): boolean {\r\n\t\treturn (BufferState._curBindedBufferState == this);\r\n\t}\r\n\r\n\tstatic clearbindBufferState() {\r\n\t\tLayaGL.renderEngine.unbindVertexState();\r\n\t\tBufferState._curBindedBufferState = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tthis._nativeVertexArrayObject.destroy();\r\n\t\tthis._nativeVertexArrayObject = null;\r\n\t}\r\n}\r\n\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IRenderBuffer } from \"./RenderInterface/IRenderBuffer\";\r\n\r\nexport class Buffer {\r\n\r\n\t_glBuffer: IRenderBuffer;\r\n\t_buffer: Float32Array|Uint16Array|Uint8Array|Uint32Array;\r\n\r\n\t_bufferType: number;\r\n\t_bufferUsage: number;\r\n\r\n\t_byteLength: number = 0; \r\n\r\n\tget bufferUsage(): number {\r\n\t\treturn this._bufferUsage;\r\n\t}\r\n\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tthis._glBuffer = LayaGL.renderEngine.createBuffer(targetType,bufferUsageType);\r\n\t\tthis._bufferType = targetType;\r\n\t\tthis._bufferUsage = bufferUsageType;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tbind(): boolean {\r\n\t\treturn this._glBuffer.bindBuffer();\r\n\t}\r\n\r\n\tunbind():void{\r\n\t\treturn this._glBuffer.unbindBuffer();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif (this._glBuffer) {\r\n\t\t\tthis._glBuffer.destroy();\r\n\t\t\tthis._glBuffer = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IndexFormat } from \"./RenderEnum/IndexFormat\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\n\r\nexport class IndexBuffer extends Buffer {\r\n    /** @internal */\r\n    protected _indexType: IndexFormat = IndexFormat.UInt16;\r\n    /** @internal */\r\n    protected _indexTypeByteCount: number;\r\n    /** @internal */\r\n    protected _indexCount: number;\r\n    constructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(targetType, bufferUsageType);\r\n    }\r\n\r\n\r\n    _setIndexData(data: number): void;\r\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array, bufferOffset: number): void;\r\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array | number, bufferOffset?: number): void {\r\n        var curBufSta: BufferState = BufferState._curBindedBufferState;\r\n\r\n        if (curBufSta) {\r\n            if (curBufSta._bindedIndexBuffer === this) {\r\n                this._glBuffer.setDataLength(0);\r\n            } else {\r\n                curBufSta.unBind();//避免影响VAO\r\n                this.bind();\r\n                if (typeof data === \"number\")\r\n                    this._glBuffer.setDataLength(data);\r\n                else\r\n                    this._glBuffer.setData(data, bufferOffset);\r\n                curBufSta.bind();\r\n            }\r\n        } else {\r\n            this.bind();\r\n            if (typeof data === \"number\")\r\n                this._glBuffer.setDataLength(data);\r\n            else\r\n                this._glBuffer.setData(data, bufferOffset)\r\n        }\r\n    }\r\n}","import { RenderInfo } from \"../../renders/RenderInfo\";\r\nimport { BaseShader } from \"../shader/BaseShader\";\r\nimport { Buffer } from \"../../RenderEngine/Buffer\";\r\n\r\nexport class Buffer2D {\r\n\r\n    static FLOAT32: number = 4;\r\n    static SHORT: number = 2;\r\n\r\n    protected _maxsize: number = 0;\r\n\r\n    _upload: boolean = true;\r\n    protected _uploadSize: number = 0;\r\n    protected _bufferSize: number = 0;\r\n    protected _u8Array: Uint8Array = null;\t\t//反正常常要拷贝老的数据，所以保留这个可以提高效率\r\n    _floatArray32: Float32Array;\r\n    _uint32Array: Uint32Array;\r\n    _uint16Array: Uint16Array;\r\n\r\n    private constBuffer: Buffer;\r\n\r\n    get bufferLength(): number {\r\n        return this.constBuffer._buffer.byteLength;\r\n    }\r\n\r\n    set byteLength(value: number) {\r\n        this.setByteLength(value);\r\n    }\r\n\r\n    setByteLength(value: number): void {\r\n        if (this.constBuffer._byteLength !== value) {\r\n            value <= this._bufferSize || (this._resizeBuffer(value * 2 + 256, true));\r\n            this.constBuffer._byteLength = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 在当前的基础上需要多大空间，单位是byte\r\n     * @param\tsz\r\n     * @return  增加大小之前的写位置。单位是byte\r\n     */\r\n    needSize(sz: number): number {\r\n        var old: number = this.constBuffer._byteLength;\r\n        if (sz) {\r\n            var needsz: number = this.constBuffer._byteLength + sz;\r\n            needsz <= this._bufferSize || (this._resizeBuffer(needsz << 1, true));\r\n            this.constBuffer._byteLength = needsz;\r\n        }\r\n        return old;\r\n    }\r\n\r\n    constructor(buffer: Buffer) {\r\n        this.constBuffer = buffer;\r\n    }\r\n\r\n    getFloat32Array(): Float32Array {\r\n        if (!this._floatArray32) {\r\n            this._floatArray32 = new Float32Array(this.constBuffer._buffer.buffer);\r\n        }\r\n        return this._floatArray32;\r\n    }\r\n\r\n    protected _bufferData(): void {\r\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {//每30帧缩小一下buffer\t。TODO 这个有问题。不知道_maxsize和_byteLength是怎么维护的，这里会导致重新分配64字节\r\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\r\n                //_setGPUMemory(_buffer.byteLength);\r\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this.constBuffer._buffer.byteLength;\r\n                this._checkArrayUse();\r\n                let buff = this.constBuffer._buffer.buffer;\r\n                ((this._bufferSize % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\r\n                ((this._bufferSize % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\r\n                this._uint16Array = new Uint16Array(buff);\r\n            }\r\n            this._maxsize = this.constBuffer._byteLength;\r\n        }\r\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\r\n            this._uploadSize = this.constBuffer._buffer.byteLength;\r\n\r\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\r\n        }\r\n        this.constBuffer._glBuffer.setData(new Uint8Array(this.constBuffer._buffer.buffer, 0, this.constBuffer._byteLength), 0);\r\n        this.constBuffer.unbind();\r\n    }\r\n\r\n    //TODO:coverage\r\n    protected _bufferSubData(offset: number = 0, dataStart: number = 0, dataLength: number = 0): void {\r\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {\r\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\r\n                //_setGPUMemory(_buffer.byteLength);\r\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this.constBuffer._buffer.byteLength;\r\n                this._checkArrayUse();\r\n            }\r\n            this._maxsize = this.constBuffer._byteLength;\r\n        }\r\n\r\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\r\n            this._uploadSize = this.constBuffer._buffer.byteLength;\r\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\r\n            //_setGPUMemory(_uploadSize);\r\n        }\r\n\r\n        if (dataStart || dataLength) {\r\n            var subBuffer: ArrayBuffer = this.constBuffer._buffer.buffer.slice(dataStart, dataLength);\r\n            this.constBuffer._glBuffer.setData(subBuffer, offset);\r\n        } else {\r\n            this.constBuffer._glBuffer.setData(this.constBuffer._buffer.buffer, offset);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * buffer重新分配了，继承类根据需要做相应的处理。\r\n     */\r\n    protected _checkArrayUse(): void {\r\n\r\n    }\r\n\r\n    // /**\r\n    //  * 给vao使用的 _bind_upload函数。不要与已经绑定的判断是否相同\r\n    //  * @return\r\n    //  */\r\n    // _bind_uploadForVAO(): boolean {\r\n    // \tif (!this._upload)\r\n    // \t\treturn false;\r\n    // \tthis._upload = false;\r\n    // \tthis.constBuffer.bind();\r\n    // \tthis._bufferData();\r\n    // \treturn true;\r\n    // }\r\n\r\n    _bind_upload(): boolean {\r\n        if (!this._upload)\r\n            return false;\r\n        this._upload = false;\r\n        this.constBuffer.bind();\r\n        this._bufferData();\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    _bind_subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\r\n        if (!this._upload)\r\n            return false;\r\n\r\n        this._upload = false;\r\n        this.constBuffer.bind();\r\n        this._bufferSubData(offset, dataStart, dataLength);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 重新分配buffer大小，如果nsz比原来的小则什么都不做。\r\n     * @param\tnsz\t\tbuffer大小，单位是byte。\r\n     * @param\tcopy\t是否拷贝原来的buffer的数据。\r\n     * @return\r\n     */\r\n    _resizeBuffer(nsz: number, copy: boolean): Buffer2D //是否修改了长度\r\n    {\r\n        var buff: any = this.constBuffer._buffer;\r\n        if (buff && nsz <= buff.byteLength)\r\n            return this;\r\n        var u8buf: Uint8Array = this._u8Array;\r\n        //_setGPUMemory(nsz);\r\n        if (copy && buff && buff.byteLength > 0) {\r\n            var oldU8Arr: Uint8Array = new Uint8Array(buff.buffer);\r\n            var newbuffer: Uint8Array = new Uint8Array(nsz);\r\n            newbuffer.set(oldU8Arr, 0);\r\n            buff = this.constBuffer._buffer = newbuffer;\r\n            this._u8Array = new Uint8Array(this.constBuffer._buffer.buffer);\r\n        } else {\r\n            var data = new ArrayBuffer(nsz);\r\n            buff = this.constBuffer._buffer = new Uint8Array(data);\r\n            this._u8Array = new Uint8Array(buff.buffer);\r\n        }\r\n        buff = this.constBuffer._buffer.buffer;\r\n        ((nsz % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\r\n        ((nsz % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\r\n        this._uint16Array = new Uint16Array(buff);\r\n        this._checkArrayUse();\r\n        this._upload = true;\r\n        this._bufferSize = buff.byteLength;\r\n        return this;\r\n    }\r\n\r\n    append(data: any): void {\r\n        this._upload = true;\r\n        var byteLen: number, n: any;\r\n        byteLen = data.byteLength;\r\n        if (data instanceof Uint8Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Uint8Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        } else if (data instanceof Uint16Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        } else if (data instanceof Float32Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Float32Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        }\r\n        n.set(data, 0);\r\n        this.constBuffer._byteLength += byteLen;\r\n        this._checkArrayUse();\r\n    }\r\n\r\n    /**\r\n     * 附加Uint16Array的数据。数据长度是len。byte的话要*2\r\n     * @param\tdata\r\n     * @param\tlen\r\n     */\r\n    appendU16Array(data: Uint16Array, len: number): void {\r\n        this._resizeBuffer(this.constBuffer._byteLength + len * 2, true);\r\n        //(new Uint16Array(_buffer, _byteLength, len)).set(data.slice(0, len));\r\n        //下面这种写法比上面的快多了\r\n        var u: Uint16Array = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength, len);\t//TODO 怎么能不用new\r\n        if (len == 6) {\r\n            u[0] = data[0]; u[1] = data[1]; u[2] = data[2];\r\n            u[3] = data[3]; u[4] = data[4]; u[5] = data[5];\r\n        } else if (len >= 100) {\r\n            u.set(new Uint16Array(data.buffer, 0, len));\r\n        } else {\r\n            for (var i: number = 0; i < len; i++) {\r\n                u[i] = data[i];\r\n            }\r\n        }\r\n        this.constBuffer._byteLength += len * 2;\r\n        this._checkArrayUse();\r\n    }\r\n\r\n    //TODO:coverage\r\n    getBuffer(): ArrayBuffer {\r\n        return this.constBuffer._buffer.buffer;\r\n    }\r\n\r\n    setNeedUpload(): void {\r\n        this._upload = true;\r\n    }\r\n\r\n\r\n    //TODO:coverage\r\n    subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\r\n        var scuess: boolean = this._bind_subUpload();\r\n        this.constBuffer.unbind();\r\n        //gl.bindBuffer(this._bufferType, null);\r\n        //if (this._bufferType == gl.ARRAY_BUFFER) Buffer._bindedVertexBuffer = null;\r\n        //if (this._bufferType == gl.ELEMENT_ARRAY_BUFFER) Buffer._bindedIndexBuffer = null;\r\n        BaseShader.activeShader = null\r\n        return scuess;\r\n    }\r\n\r\n    _disposeResource(): void {\r\n        this._upload = true;\r\n        this._uploadSize = 0;\r\n        this._floatArray32 = null;\r\n        this._uint32Array = null;\r\n        this._u8Array = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * 清理数据。保留ArrayBuffer\r\n     */\r\n    clear(): void {\r\n        this.constBuffer._byteLength = 0;\r\n        this._upload = true;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Buffer2D } from \"./Buffer2D\";\r\n\r\nexport class IndexBuffer2D extends IndexBuffer {\r\n    static create: Function = function (bufferUsage: number = BufferUsage.Static): IndexBuffer2D {\r\n        return new IndexBuffer2D(bufferUsage);\r\n    }\r\n\r\n    protected _uint16Array: Uint16Array;\r\n    buffer2D:Buffer2D;\r\n    constructor(bufferUsage: number = BufferUsage.Static) {\r\n        super(BufferTargetType.ELEMENT_ARRAY_BUFFER,bufferUsage);\r\n        this.buffer2D = new Buffer2D(this);\r\n        this._bufferUsage = bufferUsage;\r\n        this._buffer = new Uint8Array(8);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    // protected _checkArrayUse(): void {\r\n    //     this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));\r\n    // }\r\n\r\n    // getUint16Array(): Uint16Array {\r\n    //     return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));\r\n    // }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _bindForVAO(): void {\r\n        \r\n        this._glBuffer.bindBuffer()\r\n    }\r\n\r\n    destory(): void {\r\n        this._uint16Array = null;\r\n        this._buffer = null;\r\n    }\r\n\r\n    disposeResource(): void {\r\n        this.buffer2D._disposeResource();\r\n    }\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { VertexDeclaration } from \"./VertexDeclaration\";\r\n\r\nexport class VertexBuffer extends Buffer {\r\n\tprivate _instanceBuffer: boolean = false;\r\n\t/** @internal */\r\n\t_vertexDeclaration: VertexDeclaration | null = null;\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t */\r\n\tget vertexDeclaration(): VertexDeclaration | null {\r\n\t\treturn this._vertexDeclaration;\r\n\t}\r\n\r\n\tset vertexDeclaration(value: VertexDeclaration | null) {\r\n\t\tthis._vertexDeclaration = value;\r\n\t}\r\n\tget instanceBuffer(): boolean {\r\n\t\treturn this._instanceBuffer;\r\n\t}\r\n\r\n\tset instanceBuffer(value: boolean) {\r\n\t\tthis._instanceBuffer = value;\r\n\t}\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tsuper(targetType, bufferUsageType);\r\n\t}\r\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\r\nimport { Buffer2D } from \"./Buffer2D\";\r\n\r\nexport class VertexBuffer2D extends VertexBuffer {\r\n    static create: Function = function (vertexStride: number, bufferUsage: number = BufferUsage.Dynamic): VertexBuffer2D {\r\n        return new VertexBuffer2D(vertexStride, bufferUsage);\r\n    }\r\n\r\n    buffer2D: Buffer2D;\r\n\r\n    private _vertexStride: number;\r\n\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    constructor(vertexStride: number, bufferUsage: number) {\r\n        super(BufferTargetType.ARRAY_BUFFER, bufferUsage);\r\n        this.buffer2D = new Buffer2D(this);\r\n        this._vertexStride = vertexStride;\r\n        this._bufferUsage = bufferUsage;\r\n        //this._buffer = new Uint8Array(8);\r\n        //this._floatArray32 = new Float32Array(this._buffer);\r\n        //this._uint32Array = new Uint32Array(this._buffer);\r\n    }\r\n\r\n    getFloat32Array(): Float32Array {\r\n        return this.buffer2D._floatArray32;\r\n    }\r\n\r\n    get _floatArray32() {\r\n        return this.buffer2D._floatArray32;\r\n    }\r\n\r\n    get _uint32Array() {\r\n        return this.buffer2D._uint32Array;\r\n    }\r\n\r\n    /**\r\n     * 在当前位置插入float数组。\r\n     * @param\tdata\r\n     * @param\tpos\r\n     */\r\n    appendArray(data: any[]): void {\r\n        var oldoff: number = this._byteLength >> 2;\r\n        this.buffer2D.setByteLength(this._byteLength + data.length * 4);\r\n        var vbdata: Float32Array = this.getFloat32Array();\r\n        vbdata.set(data, oldoff);\r\n        this.buffer2D._upload = true;\r\n    }\r\n    // \t/**\r\n    // \t * @override\r\n    // \t */\r\n    // \t protected _checkArrayUse(): void {\r\n    //     this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));\r\n    //     this._uint32Array && (this._uint32Array = new Uint32Array(this._buffer));\r\n    // }\r\n\r\n    //只删除buffer，不disableVertexAttribArray\r\n    deleteBuffer(): void {\r\n        this.buffer2D._disposeResource();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _bindForVAO(): void {\r\n        this._glBuffer.bindBuffer();\r\n    }\r\n    /**\r\n     * @override\r\n     * override\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._byteLength = 0;\r\n        this.buffer2D._upload = true;\r\n        this._buffer = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Config } from \"./../../../Config\";\r\nimport { BufferState } from \"./BufferState\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * Mesh2d只是保存数据。描述attribute用的。本身不具有渲染功能。\r\n */\r\nexport class Mesh2D {\r\n    _stride = 0;\t\t\t//顶点结构大小。每个mesh的顶点结构是固定的。\r\n    vertNum = 0;\t\t\t\t//当前的顶点的个数\r\n    indexNum = 0;\t\t\t//实际index 个数。例如一个三角形是3个。由于ib本身可能超过实际使用的数量，所以需要一个indexNum\r\n    protected _applied = false;\t//是否已经设置给webgl了\r\n    _vb: VertexBuffer2D;\t\t\t//vb和ib都可能需要在外部修改，所以public\r\n    _ib: IndexBuffer2D;\r\n    private _vao: BufferState;\t\t\t\t\t\t//webgl VAO对象。需要WebGL扩展。\r\n    private static _gvaoid = 0;\r\n    private _attribInfo: any[];\t\t\t//保存起来的属性定义数组。\r\n    protected _quadNum = 0;\r\n    //public static var meshlist:Array = [];\t//活着的mesh对象列表。\r\n    canReuse = false;\t//用完以后，是删除还是回收。\r\n\r\n    /**\r\n     * @param\tstride\r\n     * @param\tvballoc  vb预分配的大小。主要是用来提高效率。防止不断的resizebfufer\r\n     * @param\tiballoc\r\n     */\r\n    constructor(stride: number, vballoc: number, iballoc: number) {\r\n        this._stride = stride;\r\n        this._vb = new VertexBuffer2D(stride, BufferUsage.Dynamic);\r\n        if (vballoc) {\r\n            this._vb.buffer2D._resizeBuffer(vballoc, false);\r\n        } else {\r\n            Config.webGL2D_MeshAllocMaxMem && this._vb.buffer2D._resizeBuffer(64 * 1024 * stride, false);\r\n        }\r\n        this._ib = new IndexBuffer2D();\r\n        if (iballoc) {\r\n            this._ib.buffer2D._resizeBuffer(iballoc, false);\r\n        }\r\n        //meshlist.push(this);\r\n    }\r\n\r\n    /**\r\n     * 直接创建一个固定的ib。按照固定四边形的索引。\r\n     * @param\tvar QuadNum\r\n     */\r\n    createQuadIB(QuadNum: number): void {\r\n        this._quadNum = QuadNum;\r\n        this._ib.buffer2D._resizeBuffer(QuadNum * 6 * 2, false);\t//short类型\r\n        this._ib.buffer2D.byteLength = this._ib.buffer2D.bufferLength;\t//这个我也不知道是什么意思\r\n\r\n        var bd: Uint16Array = this._ib.buffer2D._uint16Array;\r\n        var idx: number = 0;\r\n        var curvert: number = 0;\r\n        for (var i: number = 0; i < QuadNum; i++) {\r\n            bd[idx++] = curvert;\r\n            bd[idx++] = curvert + 2;\r\n            bd[idx++] = curvert + 1;\r\n            bd[idx++] = curvert;\r\n            bd[idx++] = curvert + 3;\r\n            bd[idx++] = curvert + 2;\r\n            curvert += 4;\r\n        }\r\n\r\n        this._ib.buffer2D.setNeedUpload();\r\n    }\r\n\r\n    /**\r\n     * 设置mesh的属性。每3个一组，对应的location分别是0,1,2...\r\n     * 含义是：type,size,offset\r\n     * 不允许多流。因此stride是固定的，offset只是在一个vertex之内。\r\n     * @param\tattribs\r\n     */\r\n    setAttributes(attribs: any[]): void {\r\n        this._attribInfo = attribs;\r\n        if (this._attribInfo.length % 3 != 0) {\r\n            throw 'Mesh2D setAttributes error!';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化VAO的配置，只需要执行一次。以后使用的时候直接bind就行\r\n     * @param\tgl\r\n     */\r\n    private configVAO(): void {\r\n        if (this._applied)\r\n            return;\r\n        this._applied = true;\r\n        if (!this._vao) {\r\n            //_vao = __JS__('gl.createVertexArray();');\r\n            this._vao = new BufferState();\r\n            //_vao.dbgid = _gvaoid++;\r\n        }\r\n        this._vao.applyState([this._vb], this._ib);\r\n        // var attribNum: number = this._attribInfo.length / 3;\r\n        // var idx: number = 0;\r\n        // for (var i: number = 0; i < attribNum; i++) {\r\n        //     var _size: number = this._attribInfo[idx + 1];\r\n        //     var _type: number = this._attribInfo[idx];\r\n        //     var _off: number = this._attribInfo[idx + 2];\r\n        //     gl.enableVertexAttribArray(i);\r\n        //     gl.vertexAttribPointer(i, _size, _type, false, this._stride, _off); //注意 normalize都设置为false了，想必没人要用这个功能把。\r\n        //     idx += 3;\r\n        // }\r\n        // this._vao.unBind();\r\n        //gl.bindVertexArray(null);\r\n    }\r\n\r\n    /**\r\n     * 应用这个mesh\r\n     * @param\tgl\r\n     */\r\n    useMesh(): void {\r\n        if ((this._vao && !this._vao.isbind()) || this._ib.buffer2D._upload || this._vb.buffer2D._upload) {\r\n            BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n        }\r\n        //要先bind，在bufferData\r\n        this._applied || this.configVAO();\r\n        this._ib.buffer2D._bind_upload();\r\n        this._vb.buffer2D._bind_upload();\r\n        this._vao.bind();\r\n    }\r\n\r\n    // //TODO:coverage\r\n    // getEleNum(): number {\r\n    //     return this._ib.buffer2D.getBuffer().byteLength / 2;\r\n    // }\r\n\r\n    /**\r\n     * 子类实现。用来把自己放到对应的回收池中，以便复用。\r\n     */\r\n    releaseMesh(): void { }\r\n\r\n    /**\r\n     * 释放资源。\r\n     */\r\n    destroy(): void {\r\n    }\r\n\r\n    /**\r\n     * 清理vb数据\r\n     */\r\n    clearVB(): void {\r\n        this._vb.buffer2D.clear();\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshQuadTexture extends Mesh2D {\r\n\tstatic const_stride: number = 24;// 48;  24是不带clip的\r\n\tprivate static _fixib: IndexBuffer2D;\r\n\tprivate static _maxIB: number = 16 * 1024;\r\n\tprivate static _fixattriInfo: any[];\r\n\tprivate static _POOL: any[] = [];\r\n\t//private static var _num;\r\n\tstatic VertexDeclarition: VertexDeclaration;\r\n\tstatic __int__(): void {\r\n\t\t//var gl: WebGLRenderingContext = LayaGL.instance;\r\n\t\tMeshQuadTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\r\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\r\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 20];\r\n\t}\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper(MeshQuadTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n\t\tthis.canReuse = true;\r\n\t\tthis.setAttributes(MeshQuadTexture._fixattriInfo);\r\n\t\tif (!MeshQuadTexture._fixib) {\r\n\t\t\tthis.createQuadIB(MeshQuadTexture._maxIB);\t//每个quad 4个顶点。正好达到64k的索引。\r\n\t\t\tMeshQuadTexture._fixib = this._ib;\r\n\t\t} else {\r\n\t\t\tthis._ib = MeshQuadTexture._fixib;\r\n\t\t\tthis._quadNum = MeshQuadTexture._maxIB;\r\n\t\t}\r\n\t\tif (!MeshQuadTexture.VertexDeclarition)\r\n\t\t\tMeshQuadTexture.VertexDeclarition = new VertexDeclaration(24, [\r\n\t\t\t\tnew VertexElement(0, VertexElementFormat.Vector4, 0),\r\n\t\t\t\tnew VertexElement(16, VertexElementFormat.Byte4, 1),\r\n\t\t\t\tnew VertexElement(20, VertexElementFormat.Byte4, 2),\r\n\t\t\t])\r\n\t\tthis._vb.vertexDeclaration = MeshQuadTexture.VertexDeclarition;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tstatic getAMesh(mainctx: boolean): MeshQuadTexture {\r\n\t\t//console.log('getmesh');\r\n\t\tvar ret: MeshQuadTexture = null;\r\n\t\tif (MeshQuadTexture._POOL.length) {\r\n\t\t\tret = MeshQuadTexture._POOL.pop();\r\n\t\t} else\r\n\t\t\tret = new MeshQuadTexture();\r\n\t\t// 先分配64k顶点的空间，这样可以避免浪费内存，否则后面增加内存的时候是成倍增加的，当快超过64k的时候，直接变成了128k\r\n\t\tmainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshQuadTexture.const_stride, false);\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * 把本对象放到回收池中，以便getMesh能用。\r\n\t * @override\r\n\t */\r\n\treleaseMesh(): void {\r\n\t\tthis._vb.buffer2D.setByteLength(0);\r\n\t\tthis.vertNum = 0;\r\n\t\tthis.indexNum = 0;\r\n\t\t//_applied = false;\r\n\t\tMeshQuadTexture._POOL.push(this);\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tdestroy(): void {\r\n\t\t//_ib.destroy(); ib是公用的。\r\n\t\tthis._vb.destroy();\r\n\t\tthis._vb.deleteBuffer();\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param pos 顶点坐标\r\n\t * @param uv 纹理坐标\r\n\t * @param color 顶点颜色\r\n\t * @param useTex 是否使用贴图。false的话是给fillRect用的\r\n\t */\r\n\taddQuad(pos: ArrayLike<number>, uv: ArrayLike<number>, color: number, useTex: boolean): void {\r\n\t\tvar vb: VertexBuffer2D = this._vb;\r\n\t\tvar vpos: number = (vb._byteLength >> 2);\t//float数组的下标\r\n\t\t//x,y,u,v,rgba\r\n\t\tvb.buffer2D.setByteLength((vpos + MeshQuadTexture.const_stride) << 2); //是一个四边形的大小，也是这里填充的大小\r\n\t\tvar vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\r\n\t\tvar vbu32Arr: Uint32Array = vb._uint32Array;\r\n\t\tvar cpos: number = vpos;\r\n\t\tvar useTexVal: number = useTex ? 0xff : 0;\r\n\t\tvbdata[cpos++] = pos[0]; vbdata[cpos++] = pos[1]; vbdata[cpos++] = uv[0]; vbdata[cpos++] = uv[1]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[2]; vbdata[cpos++] = pos[3]; vbdata[cpos++] = uv[2]; vbdata[cpos++] = uv[3]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[4]; vbdata[cpos++] = pos[5]; vbdata[cpos++] = uv[4]; vbdata[cpos++] = uv[5]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[6]; vbdata[cpos++] = pos[7]; vbdata[cpos++] = uv[6]; vbdata[cpos++] = uv[7]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvb.buffer2D._upload = true;\r\n\t}\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * 与MeshQuadTexture基本相同。不过index不是固定的\r\n */\r\nexport class MeshTexture extends Mesh2D {\r\n    static const_stride: number = 24;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n\r\n    static VertexDeclarition: VertexDeclaration;\r\n\r\n\r\n\r\n    static __init__(): void {\r\n        MeshTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 20];\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshTexture._fixattriInfo);\r\n        if (!MeshTexture.VertexDeclarition)\r\n            MeshTexture.VertexDeclarition = new VertexDeclaration(24, [\r\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\r\n                new VertexElement(16, VertexElementFormat.Byte4, 1),\r\n                new VertexElement(20, VertexElementFormat.Byte4, 2),\r\n            ])\r\n        this._vb.vertexDeclaration = MeshTexture.VertexDeclarition;\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getAMesh(mainctx: boolean): MeshTexture {\r\n        //console.log('getmesh');\r\n        var ret: MeshTexture;\r\n        if (MeshTexture._POOL.length) {\r\n            ret = MeshTexture._POOL.pop();\r\n        }\r\n        else ret = new MeshTexture();\r\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshTexture.const_stride, false);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 增加四个顶点\r\n     * @param vertices \r\n     * @param uvs \r\n     * @param idx \r\n     * @param matrix \r\n     * @param rgba \r\n     */\r\n    addData(vertices: Float32Array, uvs: Float32Array, idx: Uint16Array, matrix: Matrix, rgba: number): void {\r\n        //vb\r\n        var vb: VertexBuffer2D = this._vb;\r\n        var ib: IndexBuffer2D = this._ib;\r\n        var vertsz: number = vertices.length >> 1;\r\n        var startpos: number = vb.buffer2D.needSize(vertsz * MeshTexture.const_stride);//vb的起点。\t\t\t\r\n        var f32pos: number = startpos >> 2;\r\n        var vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\r\n        var vbu32Arr: Uint32Array = vb._uint32Array;\r\n        var ci: number = 0;\r\n        var m00: number = matrix.a;\r\n        var m01: number = matrix.b;\r\n        var m10: number = matrix.c;\r\n        var m11: number = matrix.d;\r\n        var tx: number = matrix.tx;\r\n        var ty: number = matrix.ty;\r\n        var i: number = 0;\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        for (i = 0; i < vertsz; i++) {\r\n            var x: number = vertices[ci], y: number = vertices[ci + 1];\r\n            vbdata[f32pos] = x * m00 + y * m10 + tx;\r\n            vbdata[f32pos + 1] = x * m01 + y * m11 + ty;\r\n            vbdata[f32pos + 2] = uvs[ci];\r\n            vbdata[f32pos + 3] = uvs[ci + 1];\r\n            vbu32Arr[f32pos + 4] = rgba;\r\n            vbu32Arr[f32pos + 5] = 0xff;\r\n            f32pos += 6;\r\n            //裁剪信息。\r\n            //vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\r\n            //vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1];\t//cliprect的位置\r\n            ci += 2;\r\n        }\r\n        vb.buffer2D.setNeedUpload();\r\n\r\n        var vertN: number = this.vertNum;\r\n        var sz: number = idx.length;\r\n        var stib: number = ib.buffer2D.needSize(idx.byteLength);\r\n        var cidx: Uint16Array = ib.buffer2D._uint16Array;\r\n        //var cidx:Uint16Array = new Uint16Array(__JS__('ib._buffer'), stib);\r\n        var stibid: number = stib >> 1;\t// indexbuffer的起始位置\r\n        if (vertN > 0) {\r\n            var end: number = stibid + sz;\r\n            var si: number = 0;\r\n            for (i = stibid; i < end; i++, si++) {\r\n                cidx[i] = idx[si] + vertN;\r\n            }\r\n        } else {\r\n            cidx.set(idx, stibid);\r\n        }\r\n        ib.buffer2D.setNeedUpload();\r\n\r\n        this.vertNum += vertsz;\r\n        this.indexNum += idx.length;\r\n    }\r\n\r\n\t\t/**\r\n\t\t * 把本对象放到回收池中，以便getMesh能用。\r\n\t\t * @override\r\n\t\t */\r\n\t\t /*override*/ releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this._ib.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshTexture._POOL.push(this);\r\n    }\r\n/**\r\n * @override\r\n */\r\n\t\t /*override*/ destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\n\r\n/**\r\n * 用来画矢量的mesh。顶点格式固定为 x,y,rgba\r\n */\r\nexport class MeshVG extends Mesh2D {\r\n    static const_stride: number = 12;// 36;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n\r\n    static __init__(): void {\r\n        MeshVG._fixattriInfo = [5126/*gl.FLOAT*/, 2, 0,\t//x,y\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 8];\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshVG.const_stride, 4, 4);\t//x,y,rgba\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshVG._fixattriInfo);\r\n        if (!MeshVG.vertexDeclaration)\r\n            MeshVG.vertexDeclaration = new VertexDeclaration(12, [\r\n                new VertexElement(0, VertexElementFormat.Vector2, 0),\r\n                new VertexElement(8, VertexElementFormat.Byte4, 1),\r\n            ]);\r\n        this._vb.vertexDeclaration = MeshVG.vertexDeclaration;\r\n    }\r\n\r\n    static getAMesh(mainctx: boolean): MeshVG {\r\n        //console.log('getmeshvg');\r\n        var ret: MeshVG;\r\n        if (MeshVG._POOL.length) {\r\n            ret = MeshVG._POOL.pop();\r\n        } else\r\n            ret = new MeshVG();\r\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshVG.const_stride, false);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 往矢量mesh中添加顶点和index。会把rgba和points在mesh中合并。\r\n     * @param\tpoints\t顶点数组，只包含x,y。[x,y,x,y...]\r\n     * @param\trgba\trgba颜色\r\n     * @param\tib\t\tindex数组。\r\n     */\r\n    addVertAndIBToMesh(ctx: Context, points: any[], rgba: number, ib: any[]): void {\r\n        var startpos: number = this._vb.buffer2D.needSize(points.length / 2 * MeshVG.const_stride);//vb的起点。\r\n        var f32pos: number = startpos >> 2;\r\n        var vbdata: Float32Array = this._vb._floatArray32 || this._vb.getFloat32Array();\r\n        var vbu32Arr: Uint32Array = this._vb._uint32Array;\r\n        var ci: number = 0;\r\n        //vb\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        var sz: number = points.length / 2;\r\n        for (var i: number = 0; i < sz; i++) {\r\n            vbdata[f32pos++] = points[ci]; vbdata[f32pos++] = points[ci + 1]; ci += 2;\r\n            vbu32Arr[f32pos++] = rgba;\r\n            /*\r\n            //裁剪信息。\r\n            vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\r\n            vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1]; //cliprect的位置\r\n            */\r\n        }\r\n        this._vb.buffer2D.setNeedUpload();\r\n\r\n        //ib\r\n        //TODO 现在这种添加数据的方法效率非常低。而且会引起大量的gc\r\n        this._ib.buffer2D.append(new Uint16Array(ib));\r\n        this._ib.buffer2D.setNeedUpload();\r\n\r\n        this.vertNum += sz;\r\n        this.indexNum += ib.length;\r\n    }\r\n\r\n    /**\r\n     * 把本对象放到回收池中，以便getMesh能用。\r\n     * @override\r\n     */\r\n    releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this._ib.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshVG._POOL.push(this);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\n\r\n","export class NativeWebGLCacheAsNormalCanvas {\r\n    _nativeObj: any;\r\n    _context: any;\r\n    constructor(ctx: any, sp: any)\r\n    {\r\n        this._context = ctx;\r\n        this._nativeObj = new (window as any)._conchWebGLCacheAsNormalCanvas(ctx._nativeObj, 0);\r\n    }\r\n    startRec(): void {\r\n        this._nativeObj.startRec();\r\n    }\r\n    endRec(): void {\r\n        this._nativeObj.endRec();\r\n    }\r\n    isCacheValid(): boolean {\r\n        return this._nativeObj.isCacheValid();\r\n    }  \r\n    isTextNeedRestore(): boolean {\r\n        return this._nativeObj.isTextNeedRestore();\r\n    }\r\n    get context() {\r\n        return this._context;\r\n    }\r\n}\r\n","import { Sprite } from \"../../display/Sprite\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Submit } from \"../submit/Submit\"\r\nimport { SubmitBase } from \"../submit/SubmitBase\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { MeshTexture } from \"../utils/MeshTexture\"\r\nimport { MeshVG } from \"../utils/MeshVG\"\r\nimport { NativeWebGLCacheAsNormalCanvas } from \"./NativeWebGLCacheAsNormalCanvas\"\r\n\r\n/**\r\n * 对象 cacheas normal的时候，本质上只是想把submit缓存起来，以后直接执行\r\n * 为了避免各种各样的麻烦，这里采用复制相应部分的submit的方法。执行环境还是在原来的context中\r\n * 否则包括clip等都非常难以处理\r\n */\r\nexport class WebGLCacheAsNormalCanvas {\r\n    submitStartPos: number = 0;\t// 对应的context的submit的开始的地方\r\n    submitEndPos: number = 0;\r\n    context: Context;\r\n    touches: any[] = [];\t\t//记录的文字信息。cacheas normal的话，文字要能正确touch\r\n    submits: any[] = [];\t\t// 从context中剪切的submit\r\n    sprite: Sprite|null = null;\t// 对应的sprite对象\r\n\r\n    // submit需要关联稳定独立的mesh。所以这里要创建自己的mesh对象\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    private _pathMesh: MeshVG;\t\t\t//矢量专用mesh。\r\n    private _triangleMesh: MeshTexture;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n    meshlist: any[] = [];\t\t\t//本context用到的mesh\r\n\r\n    // 原始context的原始值\r\n    private _oldMesh: MeshQuadTexture|null;\r\n    private _oldPathMesh: MeshVG|null;\r\n    private _oldTriMesh: MeshTexture|null;\r\n    private _oldMeshList: any[];\r\n\r\n    // cache的时候对应的clip\r\n    private cachedClipInfo: Matrix = new Matrix();\t// 用来判断是否需要把cache无效\r\n    //private var oldMatrix:Matrix = null;\t\t\t\t//本地画的时候完全不应用矩阵，所以需要先保存老的，以便恢复\t\t这样会丢失缩放信息，导致文字模糊，所以不用这种方式了\r\n    private oldTx: number = 0;\r\n    private oldTy: number = 0;\r\n    private static matI: Matrix = new Matrix();\r\n\r\n    // 创建这个canvas的时候对应的矩阵的逆矩阵。因为要保留矩阵的缩放信息。所以采用逆矩阵的方法。\r\n    invMat: Matrix = new Matrix();\r\n\r\n    constructor(ctx: Context, sp: Sprite) {\r\n        this.context = ctx;\r\n        this.sprite = sp;\r\n        ctx._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n    }\r\n\r\n    startRec(): void {\r\n\t\tlet context = this.context;\r\n        // 如果有文字优化，这里要先提交一下\r\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n            context._charSubmitCache.enable(false, context);\r\n            context._charSubmitCache.enable(true, context);\r\n        }\r\n        context._incache = true;\r\n        this.touches.length = 0;\r\n        //记录需要touch的文字资源\r\n        ((<any>context)).touches = this.touches;\r\n        context._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n\r\n        this.submits.length = 0;\r\n        this.submitStartPos = context._submits._length;\r\n\r\n        // 先把之前的释放掉\r\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this._mesh = MeshQuadTexture.getAMesh(false);\r\n        this._pathMesh = MeshVG.getAMesh(false);\r\n        this._triangleMesh = MeshTexture.getAMesh(false);\r\n\r\n        this.meshlist.push(this._mesh);\r\n        this.meshlist.push(this._pathMesh);\r\n        this.meshlist.push(this._triangleMesh);\r\n\r\n        // 打断合并\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        // 接管context中的一些值\r\n        this._oldMesh = context._mesh;\r\n        this._oldPathMesh = context._pathMesh;\r\n        this._oldTriMesh = context._triangleMesh;\r\n        this._oldMeshList = context.meshlist;\r\n\r\n        context._mesh = this._mesh;\r\n        context._pathMesh = this._pathMesh;\r\n        context._triangleMesh = this._triangleMesh;\r\n        context.meshlist = this.meshlist;\r\n\r\n        // 要取消位置，因为以后会再传入位置。这里好乱\r\n        this.oldTx = context._curMat.tx;\r\n        this.oldTy = context._curMat.ty;\r\n        context._curMat.tx = 0;\r\n        context._curMat.ty = 0;\r\n\r\n        // 取消缩放等\r\n        context._curMat.copyTo(this.invMat);\r\n        this.invMat.invert();\r\n        //oldMatrix = context._curMat;\r\n        //context._curMat = matI;\r\n    }\r\n\r\n    endRec(): void {\r\n\t\tlet context = this.context;\r\n        // 如果有文字优化，这里要先提交一下\r\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n            context._charSubmitCache.enable(false, context);\r\n            context._charSubmitCache.enable(true, context);\r\n        }\r\n        // copy submit\r\n        var parsubmits: any = context._submits;\r\n        this.submitEndPos = parsubmits._length;\r\n        var num: number = this.submitEndPos - this.submitStartPos;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this.submits.push(parsubmits[this.submitStartPos + i]);\r\n        }\r\n        parsubmits._length -= num;\r\n\r\n        // 恢复原始context的值\r\n        context._mesh = this._oldMesh;\r\n        context._pathMesh = this._oldPathMesh;\r\n        context._triangleMesh = this._oldTriMesh;\r\n        context.meshlist = this._oldMeshList;\r\n\r\n        // 打断合并\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        // 恢复matrix\r\n        //context._curMat = oldMatrix;\r\n        context._curMat.tx = this.oldTx;\r\n        context._curMat.ty = this.oldTy;\r\n        ((<any>context)).touches = null;\r\n        context._incache = false;\r\n    }\r\n\r\n    /**\r\n     * 当前缓存是否还有效。例如clip变了就失效了，因为clip太难自动处理\r\n     * @return\r\n     */\r\n    isCacheValid(): boolean {\r\n        var curclip: Matrix = this.context._globalClipMatrix;\r\n        if (curclip.a != this.cachedClipInfo.a || curclip.b != this.cachedClipInfo.b || curclip.c != this.cachedClipInfo.c\r\n            || curclip.d != this.cachedClipInfo.d || curclip.tx != this.cachedClipInfo.tx || curclip.ty != this.cachedClipInfo.ty)\r\n            return false;\r\n        return true;\r\n    }\r\n    isTextNeedRestore(): boolean {\r\n        var textNeedRestore: boolean = false;\r\n        var charRIs: any[] = this.touches;\r\n\t\tif (charRIs) {\r\n\t\t\tfor (var ci: number = 0; ci < charRIs.length; ci++) {\r\n\t\t\t\tif (charRIs[ci].deleted) {\r\n\t\t\t\t\ttextNeedRestore = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        return textNeedRestore;\r\n    }\r\n    flushsubmit(): void {\r\n        var curSubmit: SubmitBase = SubmitBase.RENDERBASE;\r\n        this.submits.forEach(function (subm: Submit): void {\r\n            if (subm == SubmitBase.RENDERBASE) return;\r\n            SubmitBase.preRender = curSubmit;\r\n            curSubmit = subm;\r\n            subm.renderSubmit();\r\n        });\r\n    }\r\n\r\n    releaseMem(): void {\r\n\r\n    }\r\n}\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n\t//@ts-ignore\r\n\tWebGLCacheAsNormalCanvas = NativeWebGLCacheAsNormalCanvas;\r\n}","import { NodeFlags } from \"../Const\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { _RenderFunction } from \"./RenderSprite\"\r\n\r\n/**\r\n * @internal\r\n * 快速节点命令执行器\r\n * 多个指令组合才有意义，单个指令没必要在下面加\r\n */\r\nexport class LayaGLQuickRunner {\r\n    /*[FILEINDEX:10000]*/\r\n    static map: _RenderFunction[] = [];\r\n    private static curMat: Matrix = new Matrix();\r\n    /**@internal */\r\n    static __init__(): void {\r\n        /*\r\n           glQuickMap[\"drawNode;\"] = drawNode;\r\n           glQuickMap[\"drawNodes;\"] = drawNodes;\r\n           glQuickMap[\"drawLayaGL;\"] = drawLayaGL;\r\n           glQuickMap[\"drawLayaGL;drawNodes;\"] = drawLayaGL_drawNodes;\r\n           glQuickMap[\"save;alpha;drawNode;restore;\"] = save_alpha_drawNode_restore;\r\n           glQuickMap[\"save;alpha;drawLayaGL;restore;\"] = save_alpha_drawLayaGL_restore;\r\n         */\r\n        //glQuickMap[\"save;alpha;drawTextureWithGr;restore;\"] = save_alpha_drawTextureWithGr_restore;\r\n        //glQuickMap[\"save;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\r\n        //glQuickMap[\"drawTextureWithGr;\"] = drawTextureWithGr;\r\n        //glQuickMap[\"save;transform;drawNodes;restore;\"] = save_transform_drawNodes_restore;\r\n        //glQuickMap[\"save;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //map[SpriteConst.TEXTURE] = _drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_transform_drawLayaGL;\r\n        //map[ SpriteConst.GRAPHICS] = _drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.transform_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.CHILDS] = LayaGLQuickRunner.transform_drawNodes;\r\n\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.GRAPHICS | SpriteConst.CHILDS] = LayaGLQuickRunner.drawLayaGL_drawNodes;\r\n    }\r\n\r\n    static transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var tex: Texture = sprite.texture;\r\n\r\n\r\n        /*\r\n        var ctx:WebGLContext2D = context as WebGLContext2D;\r\n        var ctxm:Matrix = ctx._curMat;\r\n        ctxm.copyTo(curMat);\r\n        //context.saveTransform(curMat);\r\n        ctx.transformByMatrixNoSave(sprite.getTransform(), x, y);\r\n        ctx.drawTexture(tex, -style.pivotX, -style.pivotY, sprite._width || tex.width, sprite._height || tex.height);\r\n        curMat.copyTo(ctxm);\r\n        //ctx.restoreTransform(curMat);\r\n        */\r\n\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n        var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n        var wRate: number = width / tex.sourceWidth;\r\n        var hRate: number = height / tex.sourceHeight;\r\n        width = tex.width * wRate;\r\n        height = tex.height * hRate;\r\n        if (width <= 0 || height <= 0) return null;\r\n        var px: number = -sprite.pivotX + tex.offsetX * wRate;\r\n        var py: number = -sprite.pivotY + tex.offsetY * hRate;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            context.drawTexture(tex, px, py, width, height);\r\n\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n        /*\r\n        context.saveTransform(curMat);\r\n        var w:int = sprite._width || tex.width;\r\n        var h:int = sprite._height || tex.height;\r\n        var mat:Matrix = sprite.transform;// (sprite as Object)._tfChanged?(sprite as Object)._adjustTransform():(sprite as Object)._transform;\r\n        mat.tx += x; mat.ty += y;\r\n        //(context as WebGLContext2D).drawTextureWithTransform(tex, -style.pivotX, -style.pivotY, w, h,mat,x,y,1,null,null);\r\n    \t\r\n        var ctx:WebGLContext2D = context;\r\n        var curMat:Matrix = ctx._curMat;\r\n        var tmpMat:Matrix = ctx._tmpMatrix;\r\n        var transform = mat;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + x; tmpMat.ty = transform.ty + y;\r\n        tmpMat._bTransform = transform._bTransform;\r\n        if (transform && curMat._bTransform) {\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        }else {\r\n            //如果curmat没有旋转。\r\n            transform = tmpMat;\r\n        }\r\n        ctx._drawTextureM(tex, x, y, w,h, mat, 1,null);\r\n    \t\r\n        //var st = __JS__(\"performance.now()\");\r\n        //Laya.stage.perfdt += (__JS__(\"performance.now()\")-st);\r\n        context.restoreTransform(curMat);\r\n        */\r\n    }\r\n\r\n    //static public function _drawTexture(sprite:Sprite, context:Context, x:Number, y:Number):void {\r\n    //var tex:Texture = sprite.texture;\r\n    //context.drawTexture(tex, x-sprite.pivotX, y-sprite.pivotY, sprite._width || tex.width, sprite._height || tex.height);\r\n    //}\r\n\r\n    static alpha_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        var tex: Texture = sprite.texture;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate: number = width / tex.sourceWidth;\r\n            var hRate: number = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px: number = x - style.pivotX + tex.offsetX * wRate;\r\n            var py: number = y - style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        var tex: Texture = sprite.texture;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.saveTransform(LayaGLQuickRunner.curMat);\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate: number = width / tex.sourceWidth;\r\n            var hRate: number = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px: number = -style.pivotX + tex.offsetX * wRate;\r\n            var py: number = -style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.saveTransform(LayaGLQuickRunner.curMat);\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n            context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    //static public function _drawLayaGL(sprite:Sprite, context:Context, x:Number, y:Number):void {\r\n    //sprite._graphics._render(sprite, context, x, y);\r\n    //}\t\t\r\n\r\n    static transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        //var transform:Matrix = sprite.transform;\r\n\r\n        //临时\r\n        //if (transform) {\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n        //}else {\r\n        //sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        //}\t\t\t\r\n    }\r\n\r\n    static transform_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        //var transform:Matrix = sprite.transform;\r\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n\r\n        var style: SpriteStyle = sprite._style;\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        //x = x-style.pivotX;\r\n        //y = y - style.pivotY;\r\n\r\n        x = -style.pivotX;\r\n        y = -style.pivotY;\r\n\r\n        var childs: any[] = sprite._children, n: number = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n        }\r\n\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    static drawLayaGL_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n\r\n        var style: SpriteStyle = sprite._style;\r\n        x = x - style.pivotX;\r\n        y = y - style.pivotY;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, x, y);\r\n\r\n        var childs: any[] = sprite._children, n: number = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n\r\n        }\r\n\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n}\r\n\r\n","import { IFilter } from \"./IFilter\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { ColorFilter } from \"./ColorFilter\";\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>Filter</code> 是滤镜基类。\r\n */\r\nexport class NativeFilter implements IFilter {\r\n    /**@private 模糊滤镜。*/\r\n    static BLUR: number = 0x10;\r\n    /**@private 颜色滤镜。*/\r\n    static COLOR: number = 0x20;\r\n    /**@private 发光滤镜。*/\r\n    static GLOW: number = 0x08;\r\n    /** @internal*/\r\n    _glRender: any;\r\n\r\n    /**\r\n     * 创建一个 <code>Filter</code> 实例。\r\n     * */\r\n    constructor() { }\r\n\r\n    /**@private 滤镜类型。*/\r\n    get type(): number { return -1 }\r\n\r\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: any, x: number, y: number): void {\r\n        var webglctx: any = context;\r\n        var next: any = ((<RenderSprite>this))._next;\r\n        if (next) {\r\n            var filters: any[] = sprite.filters, len: number = filters.length;\r\n            //如果只有一个滤镜，那么还用原来的方式\r\n            if (len == 1 && (filters[0].type == NativeFilter.COLOR)) {\r\n                context.save();\r\n                context.setColorFilter(filters[0]);\r\n                next._fun.call(next, sprite, context, x, y);\r\n                context.restore();\r\n                return;\r\n            }\r\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\r\n            var svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\t//拷贝用shaderValue\r\n            var b: Rectangle;\r\n\r\n            var p: Point = Point.TEMP;\r\n            var tMatrix: Matrix = webglctx._curMat;\r\n            var mat: Matrix = Matrix.create();\r\n            tMatrix.copyTo(mat);\r\n            var tPadding: number = 0;\t//给glow用\r\n            var tHalfPadding: number = 0;\r\n            var tIsHaveGlowFilter: boolean = false;\r\n            //这里判断是否存储了out，如果存储了直接用;\r\n            var source: any = null;\r\n            var out: any = sprite._cacheStyle.filterCache || null;\r\n            if (!out || sprite.getRepaint() != 0) {\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\r\n                //glow需要扩展边缘\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = new Rectangle();\r\n                b.copyFrom(sprite.getSelfBounds());\r\n                b.x += sprite.x;\r\n                b.y += sprite.y;\r\n                b.x -= sprite.pivotX + 4;//blur \r\n                b.y -= sprite.pivotY + 4;//blur\r\n                var tSX: number = b.x;\r\n                var tSY: number = b.y;\r\n                //重新计算宽和高\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //out && WebGLRTMgr.releaseRT(out);// out.recycle();\r\n                out && out.destroy();// out.recycle();\r\n                //source = WebGLRTMgr.getRT(b.width, b.height);\r\n                source = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n                //var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\r\n                var outRT: any = out = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n                sprite._getCacheStyle().filterCache = out;\r\n                //使用RT\r\n                webglctx.pushRT();\r\n                webglctx.useRT(source);\r\n                var tX: number = sprite.x - tSX + tHalfPadding;\r\n                var tY: number = sprite.y - tSY + tHalfPadding;\r\n                //执行节点的渲染\r\n                next._fun.call(next, sprite, context, tX, tY);\r\n                webglctx.useRT(outRT);\r\n                for (var i: number = 0; i < len; i++) {\r\n                    if (i != 0) {\r\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\r\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\r\n                        webglctx.useRT(source);\r\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\r\n                        webglctx.useRT(outRT);\r\n                    }\r\n                    var fil: NativeFilter = filters[i];\r\n                    //把src往out上画\r\n                    switch (fil.type) {\r\n                        case NativeFilter.BLUR:\r\n                            //fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\r\n                            webglctx.drawTargetBlurFilter(source, 0, 0, b.width, b.height, (fil as BlurFilter).strength);\r\n                            break;\r\n                        case NativeFilter.GLOW:\r\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            break;\r\n                        case NativeFilter.COLOR:\r\n                            webglctx.setColorFilter((<ColorFilter>fil));\r\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(RenderSpriteData.Texture2D));\r\n                            webglctx.setColorFilter(null);\r\n                            break;\r\n                    }\r\n                }\r\n                webglctx.popRT();\r\n            } else {\r\n\r\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = sprite.getBounds();\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //edit\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.x -= sprite.pivotX + 4; //blur \r\n                b.y -= sprite.pivotY + 4;//blur \r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                //scope.addValue(\"out\", out);\r\n            }\r\n            x = x - tHalfPadding - sprite.x;\r\n            y = y - tHalfPadding - sprite.y;\r\n            p.setTo(x, y);\r\n            mat.transformPoint(p);\r\n            x = p.x + b.x;\r\n            y = p.y + b.y;\r\n            //把最后的out纹理画出来\r\n            //webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\r\n\r\n            //把对象放回池子中\r\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\r\n            /*if (source) {\r\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\r\n                    s.destroy();\r\n                }, this);\r\n                source = null;\r\n                context.addRenderObject(submit);\r\n            }*/\r\n            webglctx.drawFilter(out, source, x, y, b.width, b.height);\r\n            mat.destroy();\r\n        }\r\n    }\r\n}\r\n\r\n","import { NodeFlags } from \"../Const\";\r\nimport { CacheStyle } from \"../display/css/CacheStyle\";\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { SpriteConst } from \"../display/SpriteConst\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { LayaGLQuickRunner } from \"./LayaGLQuickRunner\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { NativeFilter } from \"../filters/NativeFilter\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\n\r\n/**\r\n * @private\r\n * \r\n */\r\nexport interface _RenderFunction {\r\n    (sp: Sprite, ctx: Context, x: number, y: number): void;\r\n}\r\n\r\nconst INIT = 0x11111;\r\n/**\r\n * @private\r\n * 精灵渲染器\r\n */\r\nexport class RenderSprite {\r\n    /** @private */\r\n    static renders: RenderSprite[] = [];\r\n    /** @private */\r\n    protected static NORENDER: RenderSprite = new RenderSprite(0, null);\r\n    /** @internal */\r\n    _next: RenderSprite;\r\n    /** @internal */\r\n    _fun: Function;\r\n\r\n    /** @internal */\r\n    static __init__(): void {\r\n        LayaGLQuickRunner.__init__();\r\n        var i: number, len: number;\r\n        var initRender: RenderSprite;\r\n        initRender = new RenderSprite(INIT, null);\r\n        len = RenderSprite.renders.length = SpriteConst.CHILDS * 2;\r\n        for (i = 0; i < len; i++)\r\n            RenderSprite.renders[i] = initRender;\r\n\r\n        RenderSprite.renders[0] = new RenderSprite(0, null);\r\n    }\r\n\r\n    private static _initRenderFun(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var type: number = sprite._renderType;\r\n        var r: RenderSprite = RenderSprite.renders[type] = RenderSprite._getTypeRender(type);\r\n        r._fun(sprite, context, x, y);\r\n    }\r\n\r\n    private static _getTypeRender(type: number): RenderSprite {\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) return new RenderSprite(type, null);\r\n        var rst: RenderSprite | null = null;\r\n        var tType: number = SpriteConst.CHILDS;\r\n        while (tType > 0) {\r\n            if (tType & type)\r\n                rst = new RenderSprite(tType, rst);\r\n            tType = tType >> 1;\r\n        }\r\n        return rst as RenderSprite;\r\n    }\r\n\r\n    constructor(type: number, next: RenderSprite | null) {\r\n\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) {\r\n            this._fun = LayaGLQuickRunner.map[type];\r\n            this._next = RenderSprite.NORENDER;\r\n            return;\r\n        }\r\n        this._next = next || RenderSprite.NORENDER;\r\n        switch (type) {\r\n            case 0:\r\n                this._fun = this._no;\r\n                return;\r\n            case SpriteConst.ALPHA:\r\n                this._fun = this._alpha;\r\n                return;\r\n            case SpriteConst.TRANSFORM:\r\n                this._fun = this._transform;\r\n                return;\r\n            case SpriteConst.BLEND:\r\n                this._fun = this._blend;\r\n                return;\r\n            case SpriteConst.CANVAS:\r\n                this._fun = this._canvas;\r\n                return;\r\n            case SpriteConst.MASK:\r\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                    this._fun = this._maskNative;\r\n                }\r\n                else {\r\n                    this._fun = this._mask;\r\n                }\r\n                return;\r\n            case SpriteConst.CLIP:\r\n                this._fun = this._clip;\r\n                return;\r\n            case SpriteConst.STYLE:\r\n                this._fun = this._style;\r\n                return;\r\n            case SpriteConst.GRAPHICS:\r\n                this._fun = this._graphics;\r\n                return;\r\n            case SpriteConst.CHILDS:\r\n                this._fun = this._children;\r\n                return;\r\n            case SpriteConst.CUSTOM:\r\n                this._fun = this._custom;\r\n                return;\r\n            case SpriteConst.TEXTURE:\r\n                this._fun = this._texture;\r\n                return;\r\n            case SpriteConst.FILTERS:\r\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                    this._fun = NativeFilter._filter;\r\n                }\r\n                else {\r\n                    this._fun = Filter._filter;\r\n                }\r\n                return;\r\n            case SpriteConst.HITAREA:\r\n                this._fun = this._hitarea;\r\n                return;\r\n            case INIT:\r\n                this._fun = RenderSprite._initRenderFun;\r\n                return;\r\n        }\r\n\r\n        this.onCreate(type);\r\n    }\r\n\r\n    protected onCreate(type: number): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _style(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        //这里的功能取消了，应该不会走进这里\r\n    }\r\n\r\n    /**@internal */\r\n    _no(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _custom(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        sprite.customRender(context, x, y);\r\n        this._next._fun.call(this._next, sprite, context, 0, 0);\r\n    }\r\n\r\n    /**@internal */\r\n    _clip(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let next: RenderSprite = this._next;\r\n        if (next == RenderSprite.NORENDER) return;\r\n\r\n        if (sprite._getBit(NodeFlags.DISABLE_INNER_CLIPPING) && !context._drawingToTexture) {\r\n            next._fun.call(next, sprite, context, x, y);\r\n            return;\r\n        }\r\n\r\n        let r = sprite._style.scrollRect;\r\n        let width = r.width;\r\n        let height = r.height;\r\n        if (width === 0)\r\n            width = 0.001;\r\n        if (height === 0)\r\n            height = 0.001;\r\n        context.save();\r\n        context.clipRect(x, y, width, height);\r\n        next._fun.call(next, sprite, context, x - r.x, y - r.y);\r\n        context.restore();\r\n    }\r\n\r\n    /**@internal */\r\n    _texture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var tex: Texture = sprite.texture;\r\n            if (tex._getSource()) {\r\n                var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n                var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n                var wRate: number = width / tex.sourceWidth;\r\n                var hRate: number = height / tex.sourceHeight;\r\n                width = tex.width * wRate;\r\n                height = tex.height * hRate;\r\n                if (width > 0 && height > 0) {\r\n                    let px = x - sprite.pivotX + tex.offsetX * wRate;\r\n                    let py = y - sprite.pivotY + tex.offsetY * hRate;\r\n                    context.material = sprite.graphics.material;\r\n                    context.drawTexture(tex, px, py, width, height, 0xffffffff);\r\n                }\r\n            }\r\n        }\r\n        var next: RenderSprite = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    _graphics(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var style = sprite._style;\r\n            var g = sprite._graphics;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n        }\r\n        var next = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal IDE only*/\r\n    _hitarea(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!context._drawingToTexture && sprite.hitArea) {\r\n            var style = sprite._style;\r\n            var g = (<HitArea>sprite.hitArea)._hit;\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= 0.5;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            g = (<HitArea>sprite.hitArea)._unHit;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n        var next = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _alpha(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var next: RenderSprite = this._next;\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _transform(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var transform: Matrix = sprite.transform, _next: RenderSprite = this._next;\r\n        if (transform && _next != RenderSprite.NORENDER) {\r\n            context.save();\r\n            context.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + x, transform.ty + y);\r\n            _next._fun.call(_next, sprite, context, 0, 0);\r\n            context.restore();\r\n        } else {\r\n            if (_next != RenderSprite.NORENDER)\r\n                _next._fun.call(_next, sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _children(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let style: SpriteStyle = sprite._style;\r\n        let childs = <Sprite[]>sprite._children, n: number = childs.length;\r\n        x = x - sprite.pivotX;\r\n        y = y - sprite.pivotY;\r\n        let textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, x2: number, y2: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (visFlag) {\r\n                if (rect && ((x2 = ele._x) >= right || (x2 + ele.width) <= left || (y2 = ele._y) >= bottom || (y2 + ele.height) <= top))\r\n                    visFlag = false;\r\n                else if (sprite._cacheStyle.mask == ele && !ele._getBit(NodeFlags.DISABLE_VISIBILITY))\r\n                    visFlag = false;\r\n            }\r\n\r\n            if (visFlag) {\r\n                if (ele._getBit(NodeFlags.DISABLE_OUTER_CLIPPING))\r\n                    context.clipRect(0, 0, 1, 1, true);\r\n\r\n                ele.render(context, x, y);\r\n            }\r\n        }\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n\r\n        if (!_cacheStyle.enableCanvasRender || !context._drawingToTexture && _cacheStyle.mask && _cacheStyle.mask._getBit(NodeFlags.DISABLE_VISIBILITY)) {\r\n            _next._fun.call(_next, sprite, context, x, y);\r\n            return;\r\n        }\r\n        _cacheStyle.cacheAs === 'bitmap' ? (Stat.canvasBitmap++) : (Stat.canvasNormal++);\r\n\r\n        //检查保存的文字是否失效了\r\n        var cacheNeedRebuild: boolean = false;\r\n        var textNeedRestore: boolean = false;\r\n\r\n        if (_cacheStyle.canvas) {\r\n            // 检查文字是否被释放了，以及clip是否改变了，需要重新cache了\r\n            var canv: any = _cacheStyle.canvas;\r\n            textNeedRestore = canv.isTextNeedRestore && canv.isTextNeedRestore();\r\n            cacheNeedRebuild = canv.isCacheValid && !canv.isCacheValid();\r\n        }\r\n\r\n        if (sprite._needRepaint() || (!_cacheStyle.canvas) || textNeedRestore || cacheNeedRebuild || ILaya.stage.isGlobalRepaint()) {\r\n            if (_cacheStyle.cacheAs === 'normal') {\r\n                if (context._targets) {// 如果有target说明父节点已经是一个cacheas bitmap了，就不再走cacheas normal的流程了\r\n                    _next._fun.call(_next, sprite, context, x, y);\r\n                    return;\t//不再继续\r\n                } else {\r\n                    this._canvas_webgl_normal_repaint(sprite, context);\r\n                }\r\n            } else {\r\n                this._canvas_repaint(sprite, context, x, y);\r\n            }\r\n        }\r\n        var tRec: Rectangle = _cacheStyle.cacheRect;\r\n        //Stage._dbgSprite.graphics.drawRect(x, y, 30,30, null, 'red');\r\n        context.material = sprite.graphics.material;\r\n        context.drawCanvas(_cacheStyle.canvas, x + tRec.x, y + tRec.y, tRec.width, tRec.height);\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas_repaint(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n        var tx: Context;\r\n        var canvas: HTMLCanvas = _cacheStyle.canvas;\r\n        var left: number;\r\n        var top: number;\r\n        var tRec: Rectangle;\r\n        var tCacheType: string = _cacheStyle.cacheAs;\r\n\r\n        var w: number, h: number;\r\n        var scaleX: number, scaleY: number;\r\n\r\n        var scaleInfo: Point;\r\n        scaleInfo = _cacheStyle._calculateCacheRect(sprite, tCacheType, x, y);\r\n        scaleX = scaleInfo.x;\r\n        scaleY = scaleInfo.y;\r\n\r\n        //显示对象实际的绘图区域\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n        //计算cache画布的大小\r\n        w = tRec.width * scaleX;\r\n        h = tRec.height * scaleY;\r\n        left = tRec.x;\r\n        top = tRec.y;\r\n\r\n        if (tCacheType === 'bitmap' && (w > 2048 || h > 2048)) {\r\n            console.warn(\"cache bitmap size larger than 2048, cache ignored\");\r\n            _cacheStyle.releaseContext();\r\n            _next._fun.call(_next, sprite, context, x, y);\r\n            return;\r\n        }\r\n        if (!canvas) {\r\n            _cacheStyle.createContext();\r\n            canvas = _cacheStyle.canvas;\r\n        }\r\n        tx = canvas.context as Context;\r\n\r\n        //WebGL用\r\n        tx.sprite = sprite;\r\n\r\n        (canvas.width != w || canvas.height != h) && canvas.size(w, h);//asbitmap需要合理的大小，所以size放到前面\r\n\r\n        if (tCacheType === 'bitmap') tx.asBitmap = true;\r\n        else if (tCacheType === 'normal') tx.asBitmap = false;\r\n\r\n        //清理画布。之前记录的submit会被全部清掉\r\n        tx.clear();\r\n\r\n        //TODO:测试webgl下是否有缓存模糊\r\n        if (scaleX != 1 || scaleY != 1) {\r\n            var ctx: any = tx;\r\n            ctx.save();\r\n            ctx.scale(scaleX, scaleY);\r\n            _next._fun.call(_next, sprite, tx, -left, -top);\r\n            ctx.restore();\r\n            sprite._applyFilters();\r\n        } else {\r\n            ctx = tx;\r\n            _next._fun.call(_next, sprite, tx, -left, -top);\r\n            sprite._applyFilters();\r\n        }\r\n\r\n        if (_cacheStyle.staticCache) _cacheStyle.reCache = false;\r\n        Stat.canvasReCache++;\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas_webgl_normal_repaint(sprite: Sprite, context: Context): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n        var canvas: WebGLCacheAsNormalCanvas = _cacheStyle.canvas as unknown as WebGLCacheAsNormalCanvas;\r\n\r\n        var tCacheType: string = _cacheStyle.cacheAs;\r\n        _cacheStyle._calculateCacheRect(sprite, tCacheType, 0, 0);\r\n\r\n        if (!canvas) {\r\n            canvas = new WebGLCacheAsNormalCanvas(context, sprite);\r\n            _cacheStyle.canvas = ((canvas as any) as HTMLCanvas);\r\n        }\r\n        var tx: Context = canvas.context as Context;\r\n\r\n\r\n        canvas.startRec();\r\n        _next._fun.call(_next, sprite, tx, sprite.pivotX, sprite.pivotY);\t// 由于后面的渲染会减去pivot，而cacheas normal并不希望这样，只希望创建一个原始的图像。所以在这里补偿。\r\n        sprite._applyFilters();\r\n\r\n        Stat.canvasReCache++;\r\n        canvas.endRec();\r\n\r\n        //context.drawCanvas(canvas, x , y , 1, 1); // 这种情况下宽高没用\r\n    }\r\n\r\n    /**@internal */\r\n    _blend(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var next: RenderSprite = this._next;\r\n        if (style.blendMode) {\r\n            context.save();\r\n            context.globalCompositeOperation = style.blendMode;\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * mask的渲染。 sprite有mask属性的情况下，来渲染这个sprite\r\n     * @param\tsprite\r\n     * @param\tcontext\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    _mask(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        let next = this._next;\r\n        let mask = sprite.mask;\r\n        if (mask && (!mask._getBit(NodeFlags.DISABLE_VISIBILITY) || ctx._drawingToTexture)) {\r\n            ctx.save();\r\n\r\n            let preBlendMode: string = ctx.globalCompositeOperation;\r\n            let tRect: Rectangle = new Rectangle();\r\n            //裁剪范围是根据mask来定的\r\n            tRect.copyFrom(mask.getBounds());\r\n            // 为什么round\r\n            let w = tRect.width = Math.round(tRect.width);\r\n            let h = tRect.height = Math.round(tRect.height);\r\n            tRect.x = Math.round(tRect.x);\r\n            tRect.y = Math.round(tRect.y);\r\n\r\n            if (w > 0 && h > 0) {\r\n                let tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\r\n\r\n                ctx.breakNextMerge();\r\n                //先把mask画到tmpTarget上\r\n                ctx.pushRT();\r\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));\r\n                mask.render(ctx, -tRect.x, -tRect.y);\r\n                ctx.breakNextMerge();\r\n                ctx.popRT();\r\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\r\n                ctx.save();\r\n\r\n                /**\r\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\r\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\r\n                 */\r\n                let shrink = 0.1;\r\n                ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n\r\n                //画出本节点的内容\r\n                next._fun.call(next, sprite, ctx, x, y);\r\n                ctx.restore();\r\n\r\n                //设置混合模式\r\n                preBlendMode = ctx.globalCompositeOperation;\r\n                ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\r\n\r\n                let shaderValue: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n                let uv = Texture.INV_UV;\r\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\r\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\r\n                //所以增加的限制。王亚伟\r\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\r\n\r\n                ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\r\n                ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\r\n            }\r\n\r\n            //恢复混合模式\r\n            ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\r\n\r\n            ctx.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, ctx, x, y);\r\n        }\r\n\r\n    }\r\n    _maskNative(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        var next: RenderSprite = this._next;\r\n        var mask: Sprite = sprite.mask;\r\n        if (mask) {\r\n            ctx.save();\r\n            var preBlendMode: string = ctx.globalCompositeOperation;\r\n            var tRect: Rectangle = new Rectangle();\r\n            //裁剪范围是根据mask来定的\r\n            tRect.copyFrom(mask.getBounds());\r\n            // 为什么round\r\n            let w = tRect.width = Math.round(tRect.width);\r\n            let h = tRect.height = Math.round(tRect.height);\r\n            tRect.x = Math.round(tRect.x);\r\n            tRect.y = Math.round(tRect.y);\r\n\r\n            if (w > 0 && h > 0) {\r\n                let tmpRT: any = (ctx as any).drawMask(w, h);\r\n                /*var tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\r\n\r\n                ctx.breakNextMerge();\r\n                //先把mask画到tmpTarget上\r\n                ctx.pushRT();\r\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));*/\r\n                mask.render(ctx, -tRect.x, -tRect.y);\r\n                let shrink = 0.1;\r\n                (ctx as any).drawMasked(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\r\n                //ctx.breakNextMerge();\r\n                //ctx.popRT();\r\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\r\n                //ctx.save();\r\n\r\n                /**\r\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\r\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\r\n                 */\r\n                //let shrink = 0.1;\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w-shrink*2, h-shrink*2);\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n\r\n                //画出本节点的内容\r\n                next._fun.call(next, sprite, ctx, x, y);\r\n\r\n                (ctx as any).drawMaskComposite(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n                //ctx.restore();\r\n\r\n                //设置混合模式\r\n                //preBlendMode = ctx.globalCompositeOperation;\r\n                //ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\r\n\r\n                //var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n                //var uv = Texture.INV_UV;\r\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\r\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\r\n                //所以增加的限制。王亚伟\r\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\r\n\r\n                //ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\r\n                //ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\r\n\r\n                //恢复混合模式\r\n                //ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\r\n            }\r\n            ctx.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, ctx, x, y);\r\n        }\r\n\r\n    }\r\n\r\n    //static tempUV: any[] = new Array(8);\r\n    static tmpTarget(ctx: Context, rt: RenderTexture2D, w: number, h: number): void {\r\n        rt.start();\r\n        rt.clear(0, 0, 0, 0);\r\n    }\r\n\r\n    static recycleTarget(rt: RenderTexture2D): void {\r\n        WebGLRTMgr.releaseRT(rt);\r\n    }\r\n\r\n    static setBlendMode(blendMode: string): void {\r\n        BlendMode.targetFns[BlendMode.TOINT[blendMode]]();\r\n    }\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\n\r\n/**\r\n * @private\r\n * 计算贝塞尔曲线的工具类。\r\n */\r\nexport class Bezier {\r\n\r\n    /**\r\n     * 工具类单例\r\n     */\r\n    static I: Bezier = new Bezier();\r\n    /** @private */\r\n    private _controlPoints: any[] = [new Point(), new Point(), new Point()];\r\n    /** @private */\r\n    private _calFun: Function = this.getPoint2;\r\n\r\n    /** @private */\r\n    private _switchPoint(x: number, y: number): void {\r\n        var tPoint: Point = this._controlPoints.shift();\r\n        tPoint.setTo(x, y);\r\n        this._controlPoints.push(tPoint);\r\n    }\r\n\r\n    /**\r\n     * 计算二次贝塞尔点。\r\n     */\r\n    getPoint2(t: number, rst: any[]): void {\r\n        //二次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var lineX: number = Math.pow((1 - t), 2) * p1.x + 2 * t * (1 - t) * p2.x + Math.pow(t, 2) * p3.x;\r\n        var lineY: number = Math.pow((1 - t), 2) * p1.y + 2 * t * (1 - t) * p2.y + Math.pow(t, 2) * p3.y;\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔点\r\n     */\r\n    getPoint3(t: number, rst: any[]): void {\r\n        //三次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var p4: Point = this._controlPoints[3];\r\n        var lineX: number = Math.pow((1 - t), 3) * p1.x + 3 * p2.x * t * (1 - t) * (1 - t) + 3 * p3.x * t * t * (1 - t) + p4.x * Math.pow(t, 3);\r\n        var lineY: number = Math.pow((1 - t), 3) * p1.y + 3 * p2.y * t * (1 - t) * (1 - t) + 3 * p3.y * t * t * (1 - t) + p4.y * Math.pow(t, 3);\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * 计算贝塞尔点序列\r\n     */\r\n    insertPoints(count: number, rst: any[]): void {\r\n        var i: number;\r\n        count = count > 0 ? count : 5;\r\n        var dLen: number;\r\n        dLen = 1 / count;\r\n        for (i = 0; i <= 1; i += dLen) {\r\n            this._calFun(i, rst);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取贝塞尔曲线上的点。\r\n     * @param pList 控制点[x0,y0,x1,y1...]\r\n     * @param inSertCount 每次曲线的插值数量\r\n     */\r\n    getBezierPoints(pList: any[], inSertCount: number = 5, count: number = 2): any[] {\r\n        var i: number, len: number;\r\n        len = pList.length;\r\n        if (len < (count + 1) * 2) return [];\r\n        var rst: any[] = [];\r\n        switch (count) {\r\n            case 2:\r\n                this._calFun = this.getPoint2;\r\n                break;\r\n            case 3:\r\n                this._calFun = this.getPoint3;\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        while (this._controlPoints.length <= count) {\r\n            this._controlPoints.push(Point.create());\r\n        }\r\n        for (i = 0; i < count * 2; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n        }\r\n        for (i = count * 2; i < len; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n            if ((i / 2) % count == 0) this.insertPoints(inSertCount, rst);\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\n","export enum BlendEquationSeparate{\r\n    ADD,//source + destination (default value)\r\n    SUBTRACT,// source - destination\r\n    REVERSE_SUBTRACT,//destination - source\r\n    //TODO:\r\n    MIN,//Minimum of source and destination\r\n    MAX,//Maximum of source and destination\r\n}","export enum CullMode {\r\n    /** Disable culling. */\r\n    Off = 0,\r\n    /** cut the front-face of the polygons. */\r\n    Front = 1,\r\n    /** cut the back-face of the polygons. */\r\n    Back = 2\r\n  }\r\n  ","export enum RenderStateType{\r\n    DepthTest,\r\n    DepthMask,\r\n    DepthFunc,\r\n    StencilTest,\r\n    StencilMask,\r\n    StencilFunc,\r\n    StencilOp,\r\n    BlendType,\r\n    BlendEquation,\r\n    BlendEquationSeparate,\r\n    BlendFunc,\r\n    BlendFuncSeperate,\r\n    CullFace,\r\n    FrontFace,\r\n}","import { ColorUtils } from \"../../utils/ColorUtils\"\r\n\r\nexport class DrawStyle {\r\n    static DEFAULT: DrawStyle = new DrawStyle(\"#000000\")\r\n\r\n    _color: ColorUtils;\r\n\r\n    static create(value: any): DrawStyle {\r\n        if (value) {\r\n            var color: ColorUtils = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n            return color._drawStyle || (color._drawStyle = new DrawStyle(value));\r\n        }\r\n        return DrawStyle.DEFAULT;\r\n    }\r\n\r\n    constructor(value: any) {\r\n        this.setValue(value);\r\n    }\r\n\r\n    setValue(value: any): void {\r\n        if (value) {\r\n            this._color = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n        }\r\n        else this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    reset(): void {\r\n        this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    toInt(): number {\r\n        return this._color.numColor;\r\n    }\r\n\r\n    equal(value: any): boolean {\r\n        if (typeof (value) == 'string') return this._color.strColor === (<string>value);\r\n        if (value instanceof ColorUtils) return this._color.numColor === ((<ColorUtils>value)).numColor;\r\n        return false;\r\n    }\r\n\r\n    toColorStr(): string {\r\n        return this._color.strColor;\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport class Path {\r\n\r\n    //public var _rect:Rectangle;\r\n    /**@internal */\r\n    _lastOriX: number = 0;\t//moveto等的原始位置。没有经过内部矩阵变换的\r\n    /**@internal */\r\n    _lastOriY: number = 0;\r\n    paths: any[] = [];\t//所有的路径。{@type renderPath[] }\r\n    private _curPath: renderPath = null;\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    beginPath(convex: boolean): void {\r\n        this.paths.length = 1;\r\n        this._curPath = this.paths[0] = new renderPath();\r\n        this._curPath.convex = convex;\r\n        //_curPath.path = [];\r\n    }\r\n\r\n    closePath(): void {\r\n        this._curPath.loop = true;\r\n    }\r\n\r\n    newPath(): void {\r\n        this._curPath = new renderPath();\r\n        this.paths.push(this._curPath);\r\n    }\r\n\r\n    addPoint(pointX: number, pointY: number): void {\r\n        //tempArray.push(pointX, pointY);\r\n        this._curPath.path.push(pointX, pointY);\r\n    }\r\n\r\n    //直接添加一个完整的path\r\n    push(points: any[], convex: boolean): void {\r\n        if (!this._curPath) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        } else if (this._curPath.path.length > 0) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        }\r\n        var rp: renderPath = this._curPath;\r\n        rp.path = points.slice();//TODO 这个可能多次slice了\r\n        rp.convex = convex;\r\n    }\r\n\r\n    reset(): void {\r\n        this.paths.length = 0;//TODO 复用\r\n    }\r\n}\r\n\r\n\r\n\r\nclass renderPath {\r\n    path: any[] = []; //[x,y,x,y,....]的数组\r\n    loop: boolean = false;\r\n    convex: boolean = false;\r\n}\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { Context } from \"../../../resource/Context\"\r\nimport { SubmitBase } from \"../../submit/SubmitBase\"\r\n\r\nexport class SaveBase implements ISaveData {\r\n\r\n    /*[FILEINDEX:1]*/\r\n    /*[DISBALEOUTCONST-BEGIN]*/\r\n    static TYPE_ALPHA: number = 0x1;\r\n    static TYPE_FILESTYLE: number = 0x2;\r\n    static TYPE_FONT: number = 0x8;\r\n    static TYPE_LINEWIDTH: number = 0x100;\r\n    static TYPE_STROKESTYLE: number = 0x200;\r\n    static TYPE_MARK: number = 0x400;\r\n    static TYPE_TRANSFORM: number = 0x800;\r\n    static TYPE_TRANSLATE: number = 0x1000;\r\n    static TYPE_ENABLEMERGE: number = 0x2000;\r\n\r\n    static TYPE_TEXTBASELINE: number = 0x4000;\r\n    static TYPE_TEXTALIGN: number = 0x8000;\r\n    static TYPE_GLOBALCOMPOSITEOPERATION: number = 0x10000;\r\n    static TYPE_CLIPRECT: number = 0x20000;\r\n    static TYPE_CLIPRECT_STENCIL: number = 0x40000;\r\n    static TYPE_IBVB: number = 0x80000;\r\n    static TYPE_SHADER: number = 0x100000;\r\n    static TYPE_FILTERS: number = 0x200000;\r\n    static TYPE_FILTERS_TYPE: number = 0x400000;\r\n    static TYPE_COLORFILTER: number = 0x800000;\r\n    /*[DISBALEOUTCONST-END]*/\r\n    private static POOL: any = SaveBase._createArray();\r\n    private static _namemap: any = SaveBase._init();\r\n    /**@internal */\r\n    static _createArray(): any[] {\r\n        var value: any = [];\r\n        value._length = 0;\r\n        return value;\r\n    }\r\n    /**@internal */\r\n    static _init(): any {\r\n        var namemap: any = SaveBase._namemap = {};\r\n\r\n        namemap[SaveBase.TYPE_ALPHA] = \"ALPHA\";\r\n        namemap[SaveBase.TYPE_FILESTYLE] = \"fillStyle\";\r\n        namemap[SaveBase.TYPE_FONT] = \"font\";\r\n        namemap[SaveBase.TYPE_LINEWIDTH] = \"lineWidth\";\r\n        namemap[SaveBase.TYPE_STROKESTYLE] = \"strokeStyle\";\r\n\r\n        namemap[SaveBase.TYPE_ENABLEMERGE] = \"_mergeID\";\r\n\r\n        namemap[SaveBase.TYPE_MARK] = namemap[SaveBase.TYPE_TRANSFORM] = namemap[SaveBase.TYPE_TRANSLATE] = [];\r\n\r\n        namemap[SaveBase.TYPE_TEXTBASELINE] = \"textBaseline\";\r\n        namemap[SaveBase.TYPE_TEXTALIGN] = \"textAlign\";\r\n        namemap[SaveBase.TYPE_GLOBALCOMPOSITEOPERATION] = \"_nBlendType\";\r\n        namemap[SaveBase.TYPE_SHADER] = \"shader\";\r\n        namemap[SaveBase.TYPE_FILTERS] = \"filters\";\r\n        namemap[SaveBase.TYPE_COLORFILTER] = '_colorFiler';\r\n        return namemap;\r\n    }\r\n\r\n    private _valueName: string;\r\n    private _value: any;\r\n    private _dataObj: any;\r\n    private _newSubmit: boolean;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._dataObj[this._valueName] = this._value;\r\n        SaveBase.POOL[SaveBase.POOL._length++] = this;\r\n        this._newSubmit && (context._curSubmit = SubmitBase.RENDERBASE);\r\n    }\r\n\r\n    static save(context: Context, type: number, dataObj: any, newSubmit: boolean): void {\r\n        if ((context._saveMark._saveuse & type) !== type) {\r\n            context._saveMark._saveuse |= type;\r\n            var cache: any = SaveBase.POOL;\r\n            var o: any = cache._length > 0 ? cache[--cache._length] : (new SaveBase());\r\n            o._value = dataObj[o._valueName = SaveBase._namemap[type]];\r\n            o._dataObj = dataObj;\r\n            o._newSubmit = newSubmit;\r\n            var _save: any = context._save;\r\n            _save[_save._length++] = o;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Rectangle } from \"../../../maths/Rectangle\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveClipRect implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n\r\n    _globalClipMatrix: Matrix = new Matrix();\r\n    _clipInfoID: number = -1;\r\n    _clipRect: Rectangle = new Rectangle();\r\n    incache: boolean = false;\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._globalClipMatrix.copyTo(context._globalClipMatrix);\r\n        this._clipRect.clone(context._clipRect);\r\n        context._clipInfoID = this._clipInfoID;\r\n        SaveClipRect.POOL[SaveClipRect.POOL._length++] = this;\r\n        context._clipInCache = this.incache;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        if ((context._saveMark._saveuse & SaveBase.TYPE_CLIPRECT) == SaveBase.TYPE_CLIPRECT) return;\r\n        context._saveMark._saveuse |= SaveBase.TYPE_CLIPRECT;\r\n        var cache: any = SaveClipRect.POOL;\r\n        var o: SaveClipRect = cache._length > 0 ? cache[--cache._length] : (new SaveClipRect());\r\n        context._globalClipMatrix.copyTo(o._globalClipMatrix);\r\n        context._clipRect.clone(o._clipRect);\r\n        o._clipInfoID = context._clipInfoID;\r\n        o.incache = context._clipInCache;\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../../resource/Context\";\r\nimport { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\n\r\nexport class SaveMark implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _saveuse: number = 0;\r\n    /**@internal */\r\n    _preSaveMark: SaveMark;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean {\r\n        return true;\r\n    }\r\n\r\n    restore(context: Context): void {\r\n        context._saveMark = this._preSaveMark;\r\n        SaveMark.POOL[SaveMark.POOL._length++] = this;\r\n    }\r\n\r\n    static Create(context: Context): SaveMark {\r\n        var no: any = SaveMark.POOL;\r\n        var o: SaveMark = no._length > 0 ? no[--no._length] : (new SaveMark());\r\n        o._saveuse = 0;\r\n        o._preSaveMark = context._saveMark;\r\n        context._saveMark = o;\r\n        return o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveTransform implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _savematrix: Matrix;\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        context._curMat = this._savematrix;\r\n        SaveTransform.POOL[SaveTransform.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var _saveMark: any = context._saveMark;\r\n        if ((_saveMark._saveuse & SaveBase.TYPE_TRANSFORM) === SaveBase.TYPE_TRANSFORM) return;\r\n        _saveMark._saveuse |= SaveBase.TYPE_TRANSFORM;\r\n        var no: any = SaveTransform.POOL;\r\n        var o: SaveTransform = no._length > 0 ? no[--no._length] : (new SaveTransform());\r\n        o._savematrix = context._curMat;\r\n        context._curMat = context._curMat.copyTo(o._matrix);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveTranslate implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _mat: Matrix = new Matrix();\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._mat.copyTo(context._curMat);\r\n        SaveTranslate.POOL[SaveTranslate.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var no: any = SaveTranslate.POOL;\r\n        var o: SaveTranslate = no._length > 0 ? no[--no._length] : (new SaveTranslate());\r\n        context._curMat.copyTo(o._mat);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","#define SHADER_NAME 2DTextureVS\r\n#include \"Sprite2DVertex.glsl\";\r\n\r\nvoid main() {\r\n\tvertexInfo info;\r\n\tgetVertexInfo(info);\r\n\r\n\tv_cliped = info.cliped;\r\n\tv_texcoordAlpha = info.texcoordAlpha;\r\n\tv_useTex = info.useTex;\r\n\tv_color = info.color;\r\n\r\n\tvec4 pos;\r\n\tgetPosition(pos);\r\n\tgl_Position = pos;\r\n\r\n}\r\n","/**\r\n * Mesh topology.\r\n */\r\n export enum MeshTopology {\r\n    /** Draws a single dot */\r\n    Points,\r\n    /** Draws a line between a pair of vertices */\r\n    Lines,\r\n    /** Draws a straight line to the next vertex, and connects the last vertex back to the first */\r\n    LineLoop,\r\n    /** Draws a straight line to the next vertex. */\r\n    LineStrip,\r\n    /** Draws a triangle for a group of three vertices */\r\n    Triangles,\r\n    /** Draws a triangle strip */\r\n    TriangleStrip,\r\n    /** Draws a triangle fan */\r\n    TriangleFan\r\n  }\r\n  ","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Const } from \"../Const\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { NativeWebGLCacheAsNormalCanvas } from \"../webgl/canvas/NativeWebGLCacheAsNormalCanvas\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * @internal\r\n */\r\nenum CONTEXT2D_FUNCTION_ID {\r\n    SIZE = 0,\r\n    CLEAR,\r\n    SAVE,\r\n    TRANSFORM,\r\n    ALPHA,\r\n    RESTORE,\r\n    FILL_STYLE,\r\n    FILL_RECT,\r\n    STROKE_STYLE,\r\n    LINE_WIDTH,\r\n    STROKE_RECT,\r\n    FILL_WORD_TEXT,\r\n    DRAW_TEXTURE_SIZE_GRID,\r\n    DRAW_TEXTURE,\r\n    CLIP_RECT,\r\n    DRAW_LINE,\r\n    DRAW_LINES,\r\n    SCALE,\r\n    TRANSLATE,\r\n    ROTATE,\r\n    DRAW_CIRCLE,\r\n    DRAW_PIE,\r\n    DRAW_POLY,\r\n    DRAW_CURVES,\r\n    BEGIN_PATH,\r\n    MOVE_TO,\r\n    LINE_TO,\r\n    ARC_TO,\r\n    CLOSE_PATH,\r\n    FILL,\r\n    STROKE,\r\n    SET_AS_BITMAP,\r\n    DRAW_MASKED,\r\n    DRAW_TRANGLES,\r\n    SET_GLOBAL_COMPOSITE_OPERTAION,\r\n    FILL_WORDS,\r\n    FILL_TEXTURE,\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class NativeContext {\r\n    public static readonly ARRAY_BUFFER_TYPE_DATA = 0;          //创建ArrayBuffer时的类型为Data\r\n    public static readonly ARRAY_BUFFER_TYPE_CMD = 1;           //创建ArrayBuffer时的类型为Command\r\n    public static readonly ARRAY_BUFFER_REF_REFERENCE = 0;          //创建ArrayBuffer时的类型为引用\r\n    public static readonly ARRAY_BUFFER_REF_COPY = 1;               //创建ArrayBuffer时的类型为拷贝\r\n\r\n    public _idata: Int32Array;\r\n    public _fdata: Float32Array;\r\n    public _byteArray: Uint8Array;\r\n    public _buffer: ArrayBuffer;\r\n    private _byteLen: number = 0;\r\n\r\n\r\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\r\n    static ENUM_TEXTALIGN_CENTER: number = 1;\r\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\r\n    private _nativeObj: any;\r\n    private _tempRenderTexture2D: any;\r\n    sprite: any = null;\r\n    private _renderObject3DList: any[] = [];\r\n    /**@internal */\r\n    _tmpMatrix: Matrix = new Matrix();\r\n    static __init__(): void {\r\n    }\r\n    constructor() {\r\n        this._nativeObj = new (window as any)._conchContext((LayaGL.renderEngine as any)._nativeObj);\r\n        this._byteLen = 1024 * 512;\r\n        this._tempRenderTexture2D = new NativeRenderTexture2D(0, 0, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None, false);\r\n        this._init(false);\r\n    }\r\n    _init(isSyncToRenderThread: boolean): void {\r\n        this._buffer = new ArrayBuffer(this._byteLen);\r\n        this._idata = new Int32Array(this._buffer);\r\n        this._fdata = new Float32Array(this._buffer);\r\n        this._byteArray = new Uint8Array(this._buffer);\r\n\r\n        var bufferConchRef: any = (window as any).webglPlus.createArrayBufferRef(this._buffer, NativeContext.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread, NativeContext.ARRAY_BUFFER_REF_REFERENCE);\r\n        this._nativeObj.setSharedCommandBuffer(bufferConchRef);\r\n        //this._layagl.createArrayBufferRef(this._buffer, NativeCommandEncoder.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread);\r\n        this._idata[0] = 1;\r\n    }\r\n    _need(sz: number): void {\r\n        if ((this._byteLen - (this._idata[0] << 2)) >= sz) return;\r\n        this._nativeObj.flushCommand();\r\n        if (sz > this._byteLen) {\r\n            throw \"too big\";\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    clearRect(x: number, y: number, width: number, height: number): void {\r\n    }\r\n\r\n    set isMain(value: boolean) {\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.isMain = value;\r\n    }\r\n    get isMain() {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.isMain;\r\n    }\r\n    set _targets(target: RenderTexture2D) {\r\n        if (target) {\r\n            this._nativeObj.flushCommand();\r\n            this._nativeObj._target = (target as any)._nativeObj;\r\n        }\r\n    }\r\n    get _targets(): RenderTexture2D {\r\n        this._nativeObj.flushCommand();\r\n        let target = this._nativeObj._target;\r\n        //if (target && !this._tempRenderTexture2D._renderTarget) {\r\n        if (target) {\r\n            this._tempRenderTexture2D.width = this._nativeObj.width;\r\n            this._tempRenderTexture2D.height = this._nativeObj.height;\r\n            this._tempRenderTexture2D._nativeObj = target;\r\n            this._tempRenderTexture2D._renderTarget = target._renderTarget;\r\n            this._tempRenderTexture2D._texture = target._renderTarget._textures[0];\r\n            return this._tempRenderTexture2D;\r\n        }\r\n        return null;\r\n    }\r\n    alpha(value: number): void {\r\n        //this._nativeObj.globalAlpha *= value;\r\n        //this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\r\n        this.globalAlpha *= value;\r\n    }\r\n    flush(): void {\r\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n        //this._nativeObj.flush();\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.flush();\r\n\r\n    }\r\n    clear(): void {\r\n        //this._nativeObj.clear();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.CLEAR);\r\n        this._nativeObj.flushCommand();\r\n        this._renderObject3DList.length = 0;\r\n    }\r\n    /**\r\n     * 释放所有资源\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    destroy(keepRT: boolean = false): void {\r\n        this._nativeObj.flushCommand();\r\n        if (this._tempRenderTexture2D._nativeObj) {\r\n            this._tempRenderTexture2D._nativeObj._deleteRT = keepRT;\r\n        }\r\n        this._nativeObj.destroy(keepRT);\r\n    }\r\n\r\n    static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n\r\n        if (!NativeContext.const2DRenderCMD) {\r\n            const cmd = NativeContext.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\r\n            cmd.addCMD(RenderStateType.BlendType, true);\r\n            //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n            cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\r\n            BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n            //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\r\n            //WebGLContext.setDepthTest(gl, false);\r\n            cmd.addCMD(RenderStateType.DepthTest, false);\r\n            //WebGLContext.setDepthMask(gl, true);\r\n            cmd.addCMD(RenderStateType.DepthMask, true);\r\n            //WebGLContext.setCullFace(gl, false);\r\n            cmd.addCMD(RenderStateType.CullFace, false);\r\n            //WebGLContext.setFrontFace(gl, gl.CCW);\r\n            cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\r\n        }\r\n        NativeContext.const2DRenderCMD.applyCMD();\r\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\r\n        (window as any).set2DRenderConfig();\r\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n    }\r\n    set globalCompositeOperation(value: string) {\r\n        //this._nativeObj.globalCompositeOperation = value;\r\n        this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, value);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.globalCompositeOperation;\r\n    }\r\n    set fillStyle(value: any) {\r\n        var c: ColorUtils = ColorUtils.create(value);\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.fillStyle;\r\n    }\r\n    set globalAlpha(value: number) {\r\n        this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.globalAlpha;\r\n    }\r\n    save(): void {\r\n        //this._nativeObj.save();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n    }\r\n    restore(): void {\r\n        //this._nativeObj.restore();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n    saveTransform(matrix: Matrix): void {\r\n        //this._nativeObj.save();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n    }\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        //this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n    restoreTransform(matrix: Matrix): void {\r\n        //this._nativeObj.restore();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n    clipRect(x: number, y: number, width: number, height: number): void {\r\n        //this._nativeObj.clipRect(x, y, width, height);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.CLIP_RECT, x, y, width, height);\r\n    }\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        //this._nativeObj.transform(a, b, c, d, tx, ty);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, a, b, c, d, tx, ty);\r\n    }\r\n    scale(scaleX: number, scaleY: number): void {\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        //this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width, height, (tex as any).uv);\r\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width, height\r\n            , (tex as any).uv[0]\r\n            , (tex as any).uv[1]\r\n            , (tex as any).uv[2]\r\n            , (tex as any).uv[3]\r\n            , (tex as any).uv[4]\r\n            , (tex as any).uv[5]\r\n            , (tex as any).uv[6]\r\n            , (tex as any).uv[7]\r\n            , color);\r\n    }\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        /*this._nativeObj.save();\r\n        this._nativeObj.globalAlpha = alpha;\r\n        if (transform) {\r\n            this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\r\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height|| tex.height, uv || (tex as any).uv);\r\n        }\r\n        else {\r\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height|| tex.height, uv || (tex as any).uv);\r\n        }\r\n        this._nativeObj.restore();*/\r\n        this.save();\r\n        this.alpha(alpha);\r\n        var uvs: any = uv || (tex as any).uv;\r\n        if (transform) {\r\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\r\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\r\n                , uvs[0]\r\n                , uvs[1]\r\n                , uvs[2]\r\n                , uvs[3]\r\n                , uvs[4]\r\n                , uvs[5]\r\n                , uvs[6]\r\n                , uvs[7]\r\n                , color);\r\n        }\r\n        else {\r\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height || tex.height\r\n                , uvs[0]\r\n                , uvs[1]\r\n                , uvs[2]\r\n                , uvs[3]\r\n                , uvs[4]\r\n                , uvs[5]\r\n                , uvs[6]\r\n                , uvs[7]\r\n                , color);\r\n        }\r\n        this.restore();\r\n    }\r\n\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n\r\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\r\n\r\n        var top: number = sizeGrid[0];\r\n        var left: number = sizeGrid[3];\r\n        var right: number = sizeGrid[1];\r\n        var bottom: number = sizeGrid[2];\r\n        var repeat: boolean = sizeGrid[4];\r\n\r\n        /*this._nativeObj.drawTextureWithSizeGrid((tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat, gx, gy, uv[0]\r\n            ,uv[1]\r\n            ,uv[2]\r\n            ,uv[3]\r\n            ,uv[4]\r\n            ,uv[5]\r\n            ,uv[6]\r\n            ,uv[7]);*/\r\n        this.add_iiffffffffiffffffffffi(\r\n            CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE_SIZE_GRID,\r\n            (tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat ? 1 : 0, gx, gy\r\n            , uv[0]\r\n            , uv[1]\r\n            , uv[2]\r\n            , uv[3]\r\n            , uv[4]\r\n            , uv[5]\r\n            , uv[6]\r\n            , uv[7]\r\n            , color);\r\n    }\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix, alpha: number, uv: any[] | null, color: number): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        /*this._nativeObj.save();\r\n        this._nativeObj.globalAlpha = alpha;\r\n        transform && this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n        this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height, uv || (tex as any).uv);\r\n        this._nativeObj.restore();*/\r\n\r\n        this.save();\r\n        this.alpha(alpha);\r\n        if (transform) {\r\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n        }\r\n        var uvs: any = uv || (tex as any).uv;\r\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\r\n            , uvs[0]\r\n            , uvs[1]\r\n            , uvs[2]\r\n            , uvs[3]\r\n            , uvs[4]\r\n            , uvs[5]\r\n            , uvs[6]\r\n            , uvs[7]\r\n            , color);\r\n        this.restore();\r\n\r\n    }\r\n    translate(x: number, y: number): void {\r\n        //this._nativeObj.translate(x, y);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, x, y);\r\n    }\r\n    _transform(mat: any/*Matrix*/, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.rotate(angle);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_if(CONTEXT2D_FUNCTION_ID.ROTATE, angle);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.scale(scaleX, scaleY);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawLine(x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\r\n        this.add_iffffffif(CONTEXT2D_FUNCTION_ID.DRAW_LINE, x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\r\n    }\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawLines(x, y, new Float32Array(points), c1.numColor, lineWidth);\r\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_LINES, x, y, c1.numColor, lineWidth, new Float32Array(points));\r\n    }\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawCircle(x, y, radius, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\r\n        this.add_ifffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_CIRCLE, x, y, radius, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\r\n    }\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawPie(x, y, radius, startAngle, endAngle, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\r\n        this.add_ifffffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_PIE, x, y, radius, startAngle, endAngle, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\r\n    }\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawPoly(x, y, new Float32Array(points), fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth, isConvexPolygon);\r\n        this.add_iffiiiifi_ab(CONTEXT2D_FUNCTION_ID.DRAW_POLY, x, y, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth, isConvexPolygon ? 1 : 0, new Float32Array(points));\r\n    }\r\n    fillRect(x: number, y: number, width: number, height: number, fillColor: any) {\r\n        if (fillColor != null) {\r\n            var c: ColorUtils = ColorUtils.create(fillColor);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\r\n        }\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        if (!this.checkTexture(texture)) {\r\n            return;\r\n        }\r\n        var typeValue: number = 0;\r\n        switch (type) {\r\n            case \"repeat\": typeValue = 0; break;\r\n            case \"repeat-x\": typeValue = 1; break;\r\n            case \"repeat-y\": typeValue = 2; break;\r\n            case \"no-repeat\": typeValue = 3; break;\r\n            default: break;\r\n        }\r\n\r\n        this.add_iiffffiffi(CONTEXT2D_FUNCTION_ID.FILL_TEXTURE, (texture as any).bitmap._texture.id, x, y, width, height, typeValue, offset.x, offset.y, color);\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n\r\n        /*if (fillColor != null) {\r\n            var c1: ColorUtils = ColorUtils.create(fillColor);\r\n   \r\n            this._nativeObj.save(); \r\n            this._nativeObj.fillStyle = c1.numColor;\r\n            this._nativeObj.fillRect(x, y, width, height);\r\n            this._nativeObj.restore();\r\n        }\r\n        if (lineColor != null) {         \r\n            var c2: ColorUtils = ColorUtils.create(lineColor);\r\n            this._nativeObj.save(); \r\n            this._nativeObj.strokeStyle = c2.numColor;\r\n            this._nativeObj.lineWidth = lineWidth;//lineColor\r\n            this._nativeObj.strokeRect(x, y, width, height);\r\n            this._nativeObj.restore();\r\n        }*/\r\n\r\n        if (fillColor != null) {\r\n            var c1: ColorUtils = ColorUtils.create(fillColor);\r\n\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\r\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n        if (lineColor != null) {\r\n            var c2: ColorUtils = ColorUtils.create(lineColor);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\r\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, lineWidth);\r\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.STROKE_RECT, x, y, width, height);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n    }\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        /*this._nativeObj.beginPath(false);\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this._nativeObj.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this._nativeObj.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this._nativeObj.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this._nativeObj.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\r\n            this._nativeObj.fillStyle = c1.numColor;\r\n            this._nativeObj.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\r\n            this._nativeObj.strokeStyle = c2.numColor;\r\n            this._nativeObj.lineWidth = pen.lineWidth || 1;\r\n            this._nativeObj.lineJoin = pen.lineJoin;\r\n            this._nativeObj.lineCap = pen.lineCap;\r\n            this._nativeObj.miterLimit = pen.miterLimit;\r\n            this._nativeObj.stroke();\r\n        }*/\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.BEGIN_PATH, 0);\r\n\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.MOVE_TO, x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.LINE_TO, x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.add_ifffff(CONTEXT2D_FUNCTION_ID.ARC_TO, x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.add_i(CONTEXT2D_FUNCTION_ID.CLOSE_PATH);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.FILL);\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\r\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, pen.lineWidth || 1);\r\n            //this._nativeObj.lineJoin = pen.lineJoin;\r\n            //this._nativeObj.lineCap = pen.lineCap;\r\n            //this._nativeObj.miterLimit = pen.miterLimit;\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.STROKE);\r\n        }\r\n    }\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n\r\n        /*this._nativeObj.beginPath(false);\r\n        this._nativeObj.strokeStyle = c1.numColor;\r\n        this._nativeObj.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this._nativeObj.moveTo(x + points[0], y + points[1]);\r\n        var i: number = 2, n: number = points.length;\r\n        while (i < n) {\r\n            this._nativeObj.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this._nativeObj.stroke();*/\r\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_CURVES, x, y, c1.numColor, lineWidth, new Float32Array(points));\r\n    }\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\r\n        if (!canvas) return;\r\n        this._nativeObj.flushCommand();\r\n        if (canvas instanceof (NativeWebGLCacheAsNormalCanvas)) {\r\n            this._nativeObj.drawCanvasNormal(canvas._nativeObj, x, y, width, height);\r\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_NORMAL, canvas._nativeObj.id, x, y, width, height);\r\n        }\r\n        else {\r\n            this._nativeObj.drawCanvasBitmap((canvas.context as any)._nativeObj, x, y, width, height);\r\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_BITMAP, (canvas.context as any)._nativeObj.id, x, y, width, height);\r\n        }\r\n    }\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(borderColor);\r\n        if (typeof (txt) === 'string') {\r\n            //this._nativeObj.fillWords(txt, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, fontStr)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\r\n        }\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(null);\r\n        if (typeof (text) === 'string') {\r\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, 0, text, font)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, 0, nTextAlign, font);\r\n        }\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(null);\r\n        if (typeof (text) === 'string') {\r\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, text, font);\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\r\n        }\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(borderColor);\r\n        if (typeof (txt) === 'string') {\r\n            //this._nativeObj.fillWords(txt, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, font);\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\r\n        }\r\n    }\r\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\r\n        if (typeof (data) === 'string') {\r\n            //this._nativeObj.fillWords(data, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, data, fontStr)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((data as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: any, color: string, strokeColor: string | null, lineWidth: number, textAlign: number, underLine: number = 0): void {\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\r\n\r\n        if (typeof (data) === 'string') {\r\n            //this._nativeObj.fillWords(data, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, textAlign, x, y, lineWidth, data, (fontObj as any)._font)\r\n        }\r\n        else {\r\n\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, textAlign, (fontObj as any)._font);\r\n            //this._nativeObj.fillWordText(data._nativeObj.id, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\r\n        }\r\n    }\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        var m: Matrix = matrix ? matrix : this._tmpMatrix;\r\n        if (blendMode != null) {\r\n\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            //to do ColorFilter \r\n            this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, blendMode);\r\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\r\n                , x\r\n                , y\r\n                , alpha\r\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\r\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\r\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\r\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\r\n            );\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n        else {\r\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\r\n                , x\r\n                , y\r\n                , alpha\r\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\r\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\r\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\r\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\r\n            );\r\n        }\r\n    }\r\n    drawMask(w: number, h: number): any {\r\n        //return this._nativeObj.drawMask(w, h);\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.drawMask(w, h);\r\n    }\r\n    drawMasked(x: number, y: number, w: number, h: number): void {\r\n        //this._nativeObj.drawMasked(x, y, w, h);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.DRAW_MASKED, x, y, w, h);\r\n    }\r\n    drawMaskComposite(rt: any, x: number, y: number, w: number, h: number): void {\r\n        //this._nativeObj.drawMaskComposite(rt, x, y, w, h);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawMaskComposite(rt, x, y, w, h);\r\n    }\r\n    set asBitmap(value: boolean) {\r\n        //this._nativeObj.setAsBitmap(value);\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.SET_AS_BITMAP, value ? 1 : 0);\r\n    }\r\n    size(w: number, h: number): void {\r\n        //this._nativeObj.size(w, h);\r\n        this.add_iii(CONTEXT2D_FUNCTION_ID.SIZE, w, h);\r\n    }\r\n    setColorFilter(filter: ColorFilter): void {\r\n        /*if (filter) {\r\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\r\n        }\r\n        else {\r\n            this._nativeObj.setColorFilter(false, null, null);\r\n        }*/\r\n        this._nativeObj.flushCommand();\r\n        if (filter) {\r\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\r\n        }\r\n        else {\r\n            this._nativeObj.setColorFilter(false, null, null);\r\n        }\r\n    }\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, matrix: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1): boolean {\r\n        //return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty, blend);\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty, blend);\r\n    }\r\n    drawTargetBlurFilter(rt: RenderTexture2D, x: number, y: number, width: number, height: number, strength: number): void {\r\n        //this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\r\n    }\r\n    get _curMat(): Matrix {\r\n        /*var data: any = this._nativeObj._curMat;\r\n        var mat: Matrix = Matrix.create();\r\n        mat.a = data[0];\r\n        mat.b = data[1];\r\n        mat.c = data[2];\r\n        mat.d = data[3];\r\n        mat.tx = data[4];\r\n        mat.ty = data[5];*/\r\n\r\n        this._nativeObj.flushCommand();\r\n\r\n        var data: any = this._nativeObj._curMat;\r\n        var mat: Matrix = Matrix.create();\r\n        mat.a = data[0];\r\n        mat.b = data[1];\r\n        mat.c = data[2];\r\n        mat.d = data[3];\r\n        mat.tx = data[4];\r\n        mat.ty = data[5];\r\n\r\n        return mat;\r\n    }\r\n    addRenderObject3D(scene3D: ISubmit): void {\r\n        //this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\r\n        this._renderObject3DList.push((scene3D as any)._nativeObj);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\r\n    }\r\n    pushRT(): void {\r\n        //this._nativeObj.pushRT();\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.pushRT();\r\n    }\r\n    popRT(): void {\r\n        //this._nativeObj.popRT();\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.popRT();\r\n    }\r\n    useRT(rt: RenderTexture2D): void {\r\n        //this._nativeObj.useRT(rt);\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.useRT(rt);\r\n    }\r\n    drawFilter(out: RenderTexture2D, src: RenderTexture2D, x: number, y: number, width: number, height: number): void {\r\n        //this._nativeObj.drawFilter(out, src, x, y, width, height);\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawFilter(out, src, x, y, width, height);\r\n    }\r\n    protected checkTexture(tex: Texture): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    add_i(i: number): void {\r\n        this._need(4);\r\n        this._idata[this._idata[0]++] = i;\r\n    }\r\n    add_ii(a: number, b: number): void {\r\n        this._need(8);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        this._idata[0] = i;\r\n    }\r\n    add_if(a: number, b: number): void {\r\n        this._need(8);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._fdata[i++] = b;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iff(a: number, b: number, c: number): void {\r\n        this._need(12);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._fdata[i++] = b;\r\n        this._fdata[i++] = c;\r\n        this._idata[0] = i;\r\n    }\r\n\r\n    add_iffif(a: number, b: number, c: number, d: number, e: number) {\r\n        this._need(20);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        this._idata[i++] = d;\r\n        fdata[i++] = e;\r\n        this._idata[0] = i;\r\n    }\r\n\r\n    add_iffff(a: number, b: number, c: number, d: number, e: number): void {\r\n        this._need(20);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iii(a: number, b: number, c: number): void {\r\n        this._need(12);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = this._idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        idata[i++] = c;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffff(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n        this._need(24);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        this._idata[0] = i;\r\n    }\r\n    add_ifffff(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n        this._need(24);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void {\r\n        this._need(28);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[0] = i;\r\n    }\r\n    add_ifffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\r\n        this._need(36);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        idata[i++] = e;\r\n        idata[i++] = f;\r\n        idata[i++] = g;\r\n        idata[i++] = h;\r\n        fdata[i++] = ii;\r\n        idata[0] = i;\r\n    }\r\n    add_ifffffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number): void {\r\n        this._need(44);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        idata[i++] = g;\r\n        idata[i++] = h;\r\n        idata[i++] = ii;\r\n        idata[i++] = j;\r\n        fdata[i++] = k;\r\n        idata[0] = i;\r\n    }\r\n    add_iffffffif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\r\n        this._need(36);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        idata[i++] = h;\r\n        fdata[i++] = ii;\r\n        idata[0] = i;\r\n    }\r\n    add_String(ab: ArrayBuffer): void {\r\n        var len: number = ab.byteLength;\r\n        this._need(len + 4);\r\n        this._idata[this._idata[0]++] = len;\r\n        if (len == 0) return;\r\n        var uint8array: Uint8Array = new Uint8Array(ab);\r\n        this._byteArray.set(uint8array, this._idata[0] * 4);\r\n        this._idata[0] += len / 4;\r\n    }\r\n    add_iffiiiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number) {\r\n        this._need(45);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        this._idata[i++] = d;\r\n        this._idata[i++] = e;\r\n        this._idata[i++] = f;\r\n        this._idata[i++] = g;\r\n        fdata[i++] = h;\r\n        this._idata[i++] = ii;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) {\r\n        this._need(32);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        this._idata[i++] = e;\r\n        this._idata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[i++] = h;\r\n        this._idata[0] = i;\r\n    }\r\n    add_i_String(a: number, str: string): void {\r\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\r\n        this._need(4 + ab.byteLength + 4);\r\n        this.add_i(a);\r\n        this.add_String(ab);\r\n    }\r\n    add_iiiifff(a: number, b: number, c: number, d: number, e: number, f: number, g: number) {\r\n        this._need(28);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        this._idata[i++] = c;\r\n        this._idata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffiifi_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, str: string): void {\r\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\r\n        this._need(32 + ab.byteLength + 4);\r\n        this.add_iiffiifi(a, b, c, d, e, f, g, h);\r\n        this.add_String(ab);\r\n    }\r\n    add_iiiifff_String_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, str0: string, str1: string): void {\r\n        var ab0: ArrayBuffer = (window as any).conch.strTobufer(str0);\r\n        var ab1: ArrayBuffer = (window as any).conch.strTobufer(str1);\r\n        this._need(28 + (ab0.byteLength + 4) + (ab1.byteLength + 4));\r\n\r\n        this.add_iiiifff(a, b, c, d, e, f, g);\r\n        this.add_String(ab0);\r\n        this.add_String(ab1);\r\n    }\r\n    add_iiffffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number, l: number, m: number, n: number, o: number) {\r\n        this._need(60);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        fdata[i++] = k;\r\n        fdata[i++] = l;\r\n        fdata[i++] = m;\r\n        fdata[i++] = n;\r\n        idata[i++] = o;\r\n        idata[0] = i;\r\n    }\r\n    add_iiffffffffiffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number\r\n        , u: number, v: number) {\r\n        this._need(88);\r\n        var idata: Int32Array = this._idata;\r\n        var fdata: Float32Array = this._fdata;\r\n        var i: number = idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        idata[i++] = k;\r\n        fdata[i++] = l;\r\n        fdata[i++] = m;\r\n        fdata[i++] = n;\r\n        fdata[i++] = o;\r\n        fdata[i++] = p;\r\n        fdata[i++] = q;\r\n        fdata[i++] = r;\r\n        fdata[i++] = s;\r\n        fdata[i++] = t;\r\n        fdata[i++] = u;\r\n        idata[i++] = v;\r\n        idata[0] = i;\r\n    }\r\n    add_iiifffffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number) {\r\n        this._need(48);\r\n        var idata: Int32Array = this._idata;\r\n        var fdata: Float32Array = this._fdata;\r\n        var i: number = idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        idata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        fdata[i++] = k;\r\n        fdata[i++] = l;\r\n        idata[0] = i;\r\n    }\r\n    add_iiffffiffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void {\r\n        this._need(40);\r\n        let idata: Int32Array = this._idata;\r\n        let fdata: Float32Array = this._fdata;\r\n        var idx: number = idata[0];\r\n        idata[idx++] = a;\r\n        idata[idx++] = b;\r\n        fdata[idx++] = c;\r\n        fdata[idx++] = d;\r\n        fdata[idx++] = e;\r\n        fdata[idx++] = f;\r\n        idata[idx++] = g;\r\n        fdata[idx++] = h;\r\n        fdata[idx++] = i;\r\n        idata[idx++] = j;\r\n        idata[0] = idx;\r\n    }\r\n\r\n    add_iiifffffffff_ab_ab_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number, arraybuffer0: any, arraybuffer1: any, arraybuffer2: any) {\r\n\r\n        var nAlignLength0 = this.getAlignLength(arraybuffer0);\r\n        var nAlignLength1 = this.getAlignLength(arraybuffer1);\r\n        var nAlignLength2 = this.getAlignLength(arraybuffer2);\r\n        d\r\n        this._need(48 + (nAlignLength0 + 4) + (nAlignLength1 + 4) + (nAlignLength2 + 4));\r\n\r\n        this.add_iiifffffffff(a, b, c, d, e, f, g, h, ii, j, k, l);\r\n        this.wab(arraybuffer0, arraybuffer0.byteLength, nAlignLength0, 0);\r\n        this.wab(arraybuffer1, arraybuffer1.byteLength, nAlignLength1, 0);\r\n        this.wab(arraybuffer2, arraybuffer2.byteLength, nAlignLength2, 0);\r\n\r\n    }\r\n    wab(arraybuffer: any, length: number, nAlignLength: number, offset?: number): void {\r\n        offset = offset ? offset : 0;\r\n        this._need(nAlignLength + 4);\r\n        //写入长度\r\n        this._idata[this._idata[0]++] = length;\r\n        //写入数据\r\n        var uint8array: Uint8Array = null;\r\n        if (arraybuffer instanceof Float32Array && offset == 0) {\r\n            this._fdata.set(arraybuffer, this._idata[0]);\r\n        }\r\n        else {\r\n            if (arraybuffer instanceof ArrayBuffer) {\r\n                uint8array = new Uint8Array(arraybuffer, offset, length);\r\n            }\r\n            else if (arraybuffer.buffer) {\r\n                uint8array = new Uint8Array(arraybuffer.buffer, offset + arraybuffer.byteOffset, length);\r\n            }\r\n            else {\r\n                console.log(\"not arraybuffer/dataview\");\r\n                return;\r\n            }\r\n            this._byteArray.set(uint8array, this._idata[0] * 4);\r\n        }\r\n        this._idata[0] += nAlignLength / 4;\r\n    }\r\n    getAlignLength(data: any): number {\r\n        var byteLength = data.byteLength;\r\n        return (byteLength + 3) & 0xfffffffc;\r\n    }\r\n    add_iif_ab(a: number, b: number, c: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(12 + nAlignLength + 4);\r\n        this.add_iff(a, b, c);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n    add_iffif_ab(a: number, b: number, c: number, d: number, e: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(20 + nAlignLength + 4);\r\n        this.add_iffif(a, b, c, d, e);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n    add_iffiiiifi_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(45 + nAlignLength + 4);\r\n        this.add_iffiiiifi(a, b, c, d, e, f, g, h, ii);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n} \r\n","import { ShaderDefines2D } from \"./ShaderDefines2D\";\r\nimport { DrawStyle } from \"../../canvas/DrawStyle\"\r\n\r\nimport texture_vs from './files/texture.vs.glsl';\r\nimport texture_ps from './files/texture.ps.glsl';\r\nimport prime_vs from './files/primitive.vs.glsl';\r\nimport prime_ps from './files/primitive.ps.glsl';\r\n\r\n\r\nimport Sprite2DFrag from './NewShader/Sprite2DFrag.glsl';\r\nimport Sprite2DVertex from './NewShader/Sprite2DVertex.glsl';\r\nimport Sprite2DShaderInfo from './NewShader/Sprite2DShaderInfo.glsl';\r\n\r\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderCompile } from \"../../utils/ShaderCompile\";\r\nimport { ShaderDataType } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\r\nimport { Material } from \"../../../resource/Material\";\r\n\r\nexport class Shader2D {\r\n    /**@internal */\r\n    static textureShader: Shader3D;\r\n    /**@internal */\r\n    static primitiveShader: Shader3D;\r\n\r\n    /**@internal */\r\n    ALPHA: number = 1;\r\n    /**@internal */\r\n    filters: any[];\r\n    /**@internal */\r\n    shaderType: number = 0;\r\n    /**@internal */\r\n    colorAdd: any[];\r\n    /**@internal */\r\n    fillStyle = DrawStyle.DEFAULT;\r\n    /**@internal */\r\n    strokeStyle = DrawStyle.DEFAULT;\r\n    /**@internal */\r\n    material: Material = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy(): void {\r\n        this.filters = null;\r\n    }\r\n\r\n    /**\r\n     * primitive Mesh Descript\r\n     */\r\n    public static readonly primitiveAttribute: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_position': [0, ShaderDataType.Vector4],\r\n        'a_attribColor': [1, ShaderDataType.Vector4],\r\n    }\r\n\r\n    /**\r\n     * TextureSV Mesh Descript\r\n     */\r\n    public static readonly textureAttribute: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_posuv': [0, ShaderDataType.Vector4],\r\n        'a_attribColor': [1, ShaderDataType.Vector4],\r\n        'a_attribFlags': [2, ShaderDataType.Vector4]\r\n    }\r\n\r\n    /**\r\n     * init 2D internal Shader\r\n     */\r\n    static __init__(): void {\r\n        Shader3D.addInclude(\"Sprite2DFrag.glsl\", Sprite2DFrag);\r\n        Shader3D.addInclude(\"Sprite2DVertex.glsl\", Sprite2DVertex);\r\n        Shader3D.addInclude(\"Sprite2DShaderInfo.glsl\", Sprite2DShaderInfo);\r\n\r\n        //textureShader\r\n        Shader2D.textureShader = Shader3D.add(\"Sprite2DTexture\", false, false);\r\n        let subShader = new SubShader(Shader2D.textureAttribute, {}, {});\r\n        Shader2D.textureShader.addSubShader(subShader);\r\n        subShader.addShaderPass(texture_vs, texture_ps);\r\n\r\n        //primitiveShader\r\n        Shader2D.primitiveShader = Shader3D.add(\"Sprite2DPrimitive\", false, false);\r\n        subShader = new SubShader(Shader2D.primitiveAttribute, {}, {});\r\n        Shader2D.primitiveShader.addSubShader(subShader);\r\n        subShader.addShaderPass(prime_vs, prime_ps);\r\n    }\r\n}\r\n\r\n","vec3 gammaToLinear(in vec3 value)\r\n{\r\n    return pow((value + 0.055) / 1.055, vec3(2.4));\r\n}\r\n\r\nvec4 gammaToLinear(in vec4 value)\r\n{\r\n    return vec4(gammaToLinear(value.rgb), value.a);\r\n}\r\n\r\nvec3 linearToGamma(in vec3 value)\r\n{\r\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\r\n\r\n    // return pow(value, vec3(1.0 / 2.2));\r\n    // return pow(value, vec3(0.455));\r\n}\r\n\r\nvec4 linearToGamma(in vec4 value)\r\n{\r\n    return vec4(linearToGamma(value.rgb), value.a);\r\n}\r\n\r\nvec4 sampleTexture(sampler2D spriteTexture, vec2 uv)\r\n{\r\n    vec4 color = texture2D(spriteTexture, uv);\r\n#ifndef GAMMATEXTURE\r\n    //是linear数据\r\n    #ifdef GAMMASPACE\r\n        color.xyz = linearToGamma(color.xyz);    \r\n    #endif\r\n#else\r\n    //gamma数据\r\n    #ifndef GAMMASPACE\r\n        color.xyz = gammaToLinear(color.xyz);\r\n    #endif\r\n#endif\r\n    return color;\r\n}\r\n\r\n#if defined(PRIMITIVEMESH)\r\n    varying vec4 v_color;\r\n    varying vec2 v_cliped;\r\n  \r\n\r\n    vec4 getGlColor(vec4 color){\r\n        #ifdef GAMMASPACE\r\n            return color;\r\n        #else\r\n            return gammaToLinear(color);\r\n        #endif\r\n    }\r\n\r\n#elif defined(TEXTUREVS)\r\n    varying vec2 v_cliped;\r\n    varying vec4 v_texcoordAlpha;\r\n    varying vec4 v_color;\r\n    varying float v_useTex;\r\n    \r\n    //uniform\r\n    uniform sampler2D u_spriteTexture;\r\n\r\n    #ifdef BLUR_FILTER\r\n        uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\n        uniform vec2 u_blurInfo;\r\n        #define PI 3.141593\r\n    #endif\r\n\r\n    #ifdef COLOR_FILTER\r\n        uniform vec4 u_colorAlpha;\r\n        uniform mat4 u_colorMat;\r\n    #endif\r\n\r\n    #ifdef GLOW_FILTER\r\n        uniform vec4 u_color;\r\n        uniform vec4 u_blurInfo1;\r\n        uniform vec4 u_blurInfo2;\r\n    #endif\r\n\r\n    #ifdef COLOR_ADD\r\n        uniform vec4 u_colorAdd;\r\n    #endif\r\n\r\n    #ifdef FILLTEXTURE\r\n        uniform vec4 u_TexRange; // startu,startv,urange, vrange\r\n    #endif\r\n\r\n\r\n    #ifdef BLUR_FILTER\r\n        float getGaussian(float x, float y)\r\n        {\r\n            return u_strength_sig2_2sig2_gauss1.w * exp(-(x * x + y * y) / u_strength_sig2_2sig2_gauss1.z);\r\n        }\r\n\r\n        vec4 blur()\r\n        {\r\n            const float blurw = 9.0;\r\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n            vec2 halfsz = vec2(blurw, blurw) / 2.0 / u_blurInfo;\r\n            vec2 startpos = v_texcoordAlpha.xy - halfsz;\r\n            vec2 ctexcoord = startpos;\r\n            vec2 step = 1.0 / u_blurInfo; //每个像素\r\n\r\n            for (float y = 0.0; y <= blurw; ++y)\r\n            {\r\n                ctexcoord.x = startpos.x;\r\n                for (float x = 0.0; x <= blurw; ++x)\r\n                {\r\n                    // TODO 纹理坐标的固定偏移应该在vs中处理\r\n                    vec4Color += sampleTexture(u_spriteTexture, ctexcoord) * getGaussian(x - blurw / 2.0, y - blurw / 2.0);\r\n                    ctexcoord.x += step.x;\r\n                }\r\n                ctexcoord.y += step.y;\r\n            }\r\n            // vec4Color.w=1.0;  这个会导致丢失alpha。以后有时间再找模糊会导致透明的问题\r\n            return vec4Color;\r\n        }\r\n    #endif\r\n\r\n    vec4 getSpriteTextureColor(){\r\n        #ifdef FILLTEXTURE\r\n            return sampleTexture(u_spriteTexture, fract(v_texcoordAlpha.xy) * u_TexRange.zw + u_TexRange.xy);\r\n        #else\r\n            return sampleTexture(u_spriteTexture, v_texcoordAlpha.xy);\r\n        #endif\r\n    }\r\n\r\n    void setglColor(in vec4 color){\r\n        if (v_useTex <= 0.)\r\n            color = vec4(1., 1., 1., 1.);\r\n\r\n        color.a *= v_color.w;\r\n        // color.rgb*=v_color.w;\r\n        vec4 transColor = v_color;\r\n        #ifndef GAMMASPACE\r\n            transColor = gammaToLinear(v_color);\r\n        #endif\r\n        color.rgb *= transColor.rgb;\r\n        gl_FragColor = color;\r\n\r\n        #ifdef COLOR_ADD\r\n            gl_FragColor = vec4(u_colorAdd.rgb, u_colorAdd.a * gl_FragColor.a);\r\n            gl_FragColor.xyz *= u_colorAdd.a;\r\n        #endif\r\n\r\n        #ifdef BLUR_FILTER\r\n            gl_FragColor = blur();\r\n            gl_FragColor.w *= v_color.w;\r\n        #endif\r\n\r\n        #ifdef COLOR_FILTER\r\n            mat4 alphaMat = u_colorMat;\r\n\r\n            alphaMat[0][3] *= gl_FragColor.a;\r\n            alphaMat[1][3] *= gl_FragColor.a;\r\n            alphaMat[2][3] *= gl_FragColor.a;\r\n\r\n            gl_FragColor = gl_FragColor * alphaMat;\r\n            gl_FragColor += u_colorAlpha / 255.0 * gl_FragColor.a;\r\n        #endif\r\n\r\n        #ifdef GLOW_FILTER\r\n            const float c_IterationTime = 10.0;\r\n            float floatIterationTotalTime = c_IterationTime * c_IterationTime;\r\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n            vec2 vec2FilterDir = vec2(-(u_blurInfo1.z) / u_blurInfo2.x, -(u_blurInfo1.w) / u_blurInfo2.y);\r\n            vec2 vec2FilterOff = vec2(u_blurInfo1.x / u_blurInfo2.x / c_IterationTime * 2.0, u_blurInfo1.y / u_blurInfo2.y / c_IterationTime * 2.0);\r\n            float maxNum = u_blurInfo1.x * u_blurInfo1.y;\r\n            vec2 vec2Off = vec2(0.0, 0.0);\r\n            float floatOff = c_IterationTime / 2.0;\r\n            for (float i = 0.0; i <= c_IterationTime; ++i)\r\n            {\r\n                for (float j = 0.0; j <= c_IterationTime; ++j)\r\n                {\r\n                    vec2Off = vec2(vec2FilterOff.x * (i - floatOff), vec2FilterOff.y * (j - floatOff));\r\n                    vec4Color += sampleTexture(u_spriteTexture, v_texcoordAlpha.xy + vec2FilterDir + vec2Off) / floatIterationTotalTime;\r\n                }\r\n            }\r\n            gl_FragColor = vec4(u_color.rgb, vec4Color.a * u_blurInfo2.z);\r\n            gl_FragColor.rgb *= gl_FragColor.a;\r\n        #endif\r\n    }\r\n#endif\r\n\r\n\r\n\r\nvoid clip(){\r\n    if(v_cliped.x<0.) discard;\r\n    if(v_cliped.x>1.) discard;\r\n    if(v_cliped.y<0.) discard;\r\n    if(v_cliped.y>1.) discard;\r\n}","#include \"Sprite2DShaderInfo.glsl\";\r\n#if defined(PRIMITIVEMESH)\r\n    // attribute vec4 a_position;\r\n    // attribute vec4 a_attribColor;\r\n    #ifdef WORLDMAT\r\n        uniform mat4 u_mmat;\r\n    #endif//WORLDMAT\r\n\r\n    varying vec4 v_color;\r\n    varying vec2 v_cliped;\r\n\r\n    uniform vec4 u_clipMatDir;\r\n    uniform vec2 u_clipMatPos;\r\n    uniform vec2 u_size;\r\n\r\n    void getVertexInfo(inout vertexInfo info){\r\n        float clipw = length(u_clipMatDir.xy);\r\n        float cliph = length(u_clipMatDir.zw);\r\n        vec2 clippos = a_position.xy - u_clipMatPos.xy;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n        if(clipw>20000. && cliph>20000.)\r\n            info.cliped = vec2(0.5,0.5);\r\n        else {\r\n            //clipdir是带缩放的方向，由于上面clippos是在缩放后的空间计算的，所以需要把方向先normalize一下\r\n            info.cliped =vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\r\n        }\r\n        info.color = a_attribColor/255.;\r\n    }\r\n\r\n    void getPosition(inout vec4 pos){\r\n        #ifdef WORLDMAT\r\n            vec4 pos = u_mmat*vec4(a_position.xy,0.,1.);\r\n            pos = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,pos.z,1.0);\r\n        #else\r\n            pos = vec4((a_position.x/u_size.x-0.5)*2.0,(0.5-a_position.y/u_size.y)*2.0,a_position.z,1.0);\r\n        #endif\r\n    }\r\n\r\n#elif defined(TEXTUREVS)\r\n\t//texture和fillrect使用的。\r\n    // attribute vec4 a_posuv;\r\n    // attribute vec4 a_attribColor;\r\n    // attribute vec4 a_attribFlags;\r\n\r\n    uniform vec4 u_clipMatDir;\r\n    uniform vec2 u_clipMatPos;\t\t// 这个是全局的，不用再应用矩阵了。\r\n\r\n    uniform vec2 u_size;\r\n    uniform vec2 u_clipOff;\t\t\t// 使用要把clip偏移。cacheas normal用. 只用了[0]\r\n    #ifdef WORLDMAT\r\n        uniform mat4 u_mmat;\r\n    #endif\r\n\r\n    #ifdef MVP3D\r\n        uniform mat4 u_MvpMatrix;\r\n    #endif\r\n\r\n    varying vec2 v_cliped;\r\n    varying vec4 v_texcoordAlpha;\r\n    varying vec4 v_color;\r\n    varying float v_useTex;\r\n\r\n    void getVertexInfo(inout vertexInfo info){\r\n       \t//texcoordAlpha\r\n        info.texcoordAlpha.xy = a_posuv.zw;\r\n        //color\r\n        info.color = a_attribColor/255.0;\r\n\t    info.color.xyz*= info.color.w;//反正后面也要预乘\r\n        //useTex\r\n        info.useTex = a_attribFlags.r/255.0;\r\n\r\n        //clip\r\n    \tfloat clipw = length(u_clipMatDir.xy);\r\n    \tfloat cliph = length(u_clipMatDir.zw);\r\n\t    vec2 clpos = u_clipMatPos.xy;\r\n        #ifdef WORLDMAT\r\n            // 如果有mmat，需要修改clipMatPos,因为 这是cacheas normal （如果不是就错了）， clipMatPos被去掉了偏移\r\n            if(u_clipOff[0]>0.0){\r\n                clpos.x+=u_mmat[3].x;\t//tx\t最简单处理\r\n                clpos.y+=u_mmat[3].y;\t//ty\r\n            }\r\n        #endif\r\n        vec2 clippos = a_posuv.xy - clpos;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n        if(clipw>20000. && cliph>20000.)\r\n            info.cliped = vec2(0.5,0.5);\r\n        else {\r\n            //转成0到1之间。/clipw/clipw 表示clippos与normalize之后的clip朝向点积之后，再除以clipw\r\n            info.cliped = vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\r\n        }\r\n    }\r\n\r\n    void getPosition(inout vec4 glPosition){\r\n        vec4 pos = vec4(a_posuv.xy,0.,1.);\r\n        #ifdef WORLDMAT\r\n            pos= u_mmat * pos;\r\n        #endif\r\n            vec4 pos1 = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,0.,1.0);\r\n        #ifdef MVP3D\r\n            glPosition = u_MvpMatrix * pos1;\r\n        #else\r\n            glPosition = pos1;\r\n        #endif\r\n        \r\n        #ifdef INVERTY\r\n            glPosition.y = -glPosition.y;\r\n        #endif\r\n    }\r\n\r\n#endif","\r\n#if defined(PRIMITIVEMESH)\r\n    struct vertexInfo {\r\n        vec4 color;\r\n        vec2 cliped;\r\n    };\r\n#elif defined(TEXTUREVS)\r\n   struct vertexInfo {\r\n        vec4 color;\r\n        vec2 cliped;\r\n        vec4 texcoordAlpha;\r\n        float useTex;\r\n    };\r\n#endif","#define SHADER_NAME 2DTextureFS\r\n//texture和fillrect使用的。\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n\r\n#include \"Sprite2DFrag.glsl\";\r\n\r\nvoid main()\r\n{\r\n    clip();\r\n    vec4 color = getSpriteTextureColor();\r\n    setglColor(color);\r\n}\r\n","#define SHADER_NAME 2DPrimitiveVS\r\n#include \"Sprite2DVertex.glsl\";\r\n\r\n\r\n#ifdef WORLDMAT\r\n\tuniform mat4 mmat;\r\n#endif\r\n\r\nvoid main(){\r\n\tvertexInfo info;\r\n\tgetVertexInfo(info);\r\n\t\r\n\t//Update \r\n\tv_color = info.color;\r\n\tv_cliped = info.cliped;\r\n\t\r\n\tvec4 pos;\r\n\t\r\n\tgetPosition(pos);\r\n\tgl_Position = pos;\r\n}","#define SHADER_NAME 2DPrimitiveFS\r\nprecision mediump float;\r\n\r\n#include \"Sprite2DFrag.glsl\";\r\n\r\nvoid main(){\r\n\tclip();\r\n\tgl_FragColor = getGlColor(v_color);\r\n\tgl_FragColor.rgb*=gl_FragColor.a;\r\n}","import { IndexBuffer2D } from \"../../../utils/IndexBuffer2D\"\r\nimport { VertexBuffer2D } from \"../../../utils/VertexBuffer2D\"\r\nimport { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\r\n\r\nexport class SkinMeshBuffer {\r\n\r\n    ib: IndexBuffer2D;\r\n    vb: VertexBuffer2D;\r\n\r\n    static instance: SkinMeshBuffer;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        this.ib = IndexBuffer2D.create(BufferUsage.Dynamic);\r\n        this.vb = VertexBuffer2D.create(8);\r\n    }\r\n\r\n    //TODO:coverage\r\n    static getInstance(): SkinMeshBuffer {\r\n        return SkinMeshBuffer.instance = SkinMeshBuffer.instance || new SkinMeshBuffer();\r\n    }\r\n\r\n    //TODO:coverage\r\n    addSkinMesh(skinMesh: any): void {\r\n        //skinMesh.getData(vb, ib, vb.byteLength / 32);\r\n        skinMesh.getData2(this.vb, this.ib, this.vb._byteLength / 32);\r\n    }\r\n\r\n\r\n    reset(): void {\r\n        this.vb.buffer2D.clear();\r\n        this.ib.buffer2D.clear();\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Vector2 } from \"../../maths/Vector2\";\r\n\r\nexport class BasePoly {\r\n\r\n    private static tempData: any[] = new Array(256);\r\n    private static vec2: Vector2;\r\n\r\n    /**\r\n     * 构造线的三角形数据。根据一个位置数组生成vb和ib\r\n     * @param\tp\r\n     * @param\tindices\r\n     * @param\tlineWidth\r\n     * @param\tindexBase\t\t\t\t顶点开始的值，ib中的索引会加上这个\r\n     * @param\toutVertex\r\n     * @return\r\n     */\r\n    static createLine2(p: any[], indices: any[], lineWidth: number, indexBase: number, outVertex: any[], loop: boolean): any[] {\r\n\r\n        if (p.length < 4) return null;\r\n        var points: any[] = BasePoly.tempData.length > (p.length + 2) ? BasePoly.tempData : new Array(p.length + 2);\t//可能有loop，所以+2\r\n        points[0] = p[0]; points[1] = p[1];\r\n        /*\r\n        var points:Array = p.concat();\r\n        if (loop) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        */\r\n        var newlen: number = 2;\t//points的下标，也是points的实际长度\r\n        var i: number = 0;\r\n        var length: number = p.length;\r\n        //先过滤一下太相近的点\r\n        for (i = 2; i < length; i += 2) {\r\n            if (Math.abs(p[i] - p[i - 2]) + Math.abs(p[i + 1] - p[i - 1]) > 0.01) {//只是判断是否重合，所以不用sqrt\r\n                points[newlen++] = p[i]; points[newlen++] = p[i + 1];\r\n            }\r\n        }\r\n        //如果终点和起点没有重合，且要求loop的情况的处理\r\n        if (loop && Math.abs(p[0] - points[newlen - 2]) + Math.abs(p[1] - points[newlen - 1]) > 0) {\r\n            points[newlen++] = p[0]; points[newlen++] = p[1];\r\n        }\r\n\r\n        var result: any[] = outVertex;\r\n        length = newlen / 2;\t//points可能有多余的点，所以要用inew来表示\r\n        var w: number = lineWidth / 2;\r\n\r\n        var p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number;\r\n\r\n        p1x = points[0];\r\n        p1y = points[1];\r\n        p2x = points[2];\r\n        p2y = points[3];\r\n        let startIndex = result.length;\r\n\r\n        this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\r\n        result.push(p1x - this.vec2.x, p1y - this.vec2.y, p1x + this.vec2.x, p1y + this.vec2.y);\r\n        for (i = 1; i < length - 1; i++) {\r\n            p1x = points[(i - 1) * 2];\r\n            p1y = points[(i - 1) * 2 + 1];\r\n            p2x = points[(i) * 2];\r\n            p2y = points[(i) * 2 + 1];\r\n            p3x = points[(i + 1) * 2];\r\n            p3y = points[(i + 1) * 2 + 1];\r\n\r\n            this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2);\r\n        }\r\n\r\n        p1x = points[newlen - 4];\r\n        p1y = points[newlen - 3];\r\n        p2x = points[newlen - 2];\r\n        p2y = points[newlen - 1];\r\n\r\n\r\n        if (p2x == points[0] && p2y == points[1]) {\r\n            p3x = points[2];\r\n            p3y = points[3];\r\n            this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2);\r\n            let len = result.length;\r\n            result[startIndex] = result[len - 4];\r\n            result[startIndex + 1] = result[len - 3];\r\n            result[startIndex + 2] = result[len - 2];\r\n            result[startIndex + 3] = result[len - 1];\r\n\r\n        } else {\r\n            this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\r\n            result.push(p2x - this.vec2.x, p2y - this.vec2.y, p2x + this.vec2.x, p2y + this.vec2.y);\r\n        }\r\n        for (i = 1; i < length; i++) {\r\n            indices.push(indexBase + (i - 1) * 2, indexBase + (i - 1) * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2, indexBase + (i - 1) * 2);\r\n        }\r\n\r\n        return result;\r\n    }\r\n    private static _setMiddleVertexs(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, w: number, vertexs: number[], out: Vector2) {\r\n        this.getNormal(x1, y1, x2, y2, w, out);\r\n        let perpx = out.x;\r\n        let perpy = out.y;\r\n        this.getNormal(x2, y2, x3, y3, w, out);\r\n        let perp2x = out.x;\r\n        let perp2y = out.y;\r\n\r\n        let a1 = (-perpy + y1) - (-perpy + y2);\r\n        let b1 = (-perpx + x2) - (-perpx + x1);\r\n        let c1 = (-perpx + x1) * (-perpy + y2) - (-perpx + x2) * (-perpy + y1);\r\n        let a2 = (-perp2y + y3) - (-perp2y + y2);\r\n        let b2 = (-perp2x + x2) - (-perp2x + x3);\r\n        let c2 = (-perp2x + x3) * (-perp2y + y2) - (-perp2x + x2) * (-perp2y + y3);\r\n        let denom = a1 * b2 - a2 * b1;\r\n        denom = a1 * b2 - a2 * b1;\r\n        if (Math.abs(denom) < 0.1) {\r\n            denom += 10.1;\r\n            vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\r\n            return;\r\n        }\r\n\r\n        let px = (b1 * c2 - b2 * c1) / denom;\r\n        let py = (a2 * c1 - a1 * c2) / denom;\r\n        vertexs.push(px, py, x2 - (px - x2), y2 - (py - y2));\r\n    }\r\n\r\n    static getNormal(x1: number, y1: number, x2: number, y2: number, w: number, out?: Vector2) {\r\n        if (!out) {\r\n            out = new Vector2();\r\n        }\r\n\r\n        let perpx = y2 - y1;\r\n        let perpy = x1 - x2;\r\n        let dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n        out.x = perpx / dist * w;\r\n        out.y = perpy / dist * w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 相邻的两段线，边界会相交，这些交点可以作为三角形的顶点。有两种可选，一种是采用左左,右右交点，一种是采用 左右，左右交点。当两段线夹角很小的时候，如果采用\r\n     * 左左，右右会产生很长很长的交点，这时候就要采用左右左右交点，相当于把尖角截断。\r\n     * 当采用左左右右交点的时候，直接用切线的垂线。采用左右左右的时候，用切线\r\n     * 切线直接采用两个方向的平均值。不能用3-1的方式，那样垂线和下一段可能都在同一方向（例如都在右方）\r\n     * 注意把重合的点去掉\r\n     * @param\tpath\r\n     * @param\tcolor\r\n     * @param\twidth\r\n     * @param\tloop\r\n     * @param\toutvb\r\n     * @param\tvbstride  顶点占用几个float,(bytelength/4)\r\n     * @param\toutib\r\n     * test:\r\n     * 横线\r\n     * [100,100, 400,100]\r\n     * 竖线\r\n     * [100,100, 100,400]\r\n     * 直角\r\n     * [100,100, 400,100, 400,400]\r\n     * 重合点\r\n     * [100,100,100,100,400,100]\r\n     * 同一直线上的点\r\n     * [100,100,100,200,100,3000]\r\n     * 像老式电视的左边不封闭的图形\r\n     * [98,176,  163,178, 95,66, 175,177, 198,178, 252,56, 209,178,  248,175,  248,266,  209,266, 227,277, 203,280, 188,271,  150,271, 140,283, 122,283, 131,268, 99,268]\r\n     * \r\n     */\r\n    //TODO:coverage\r\n    static createLineTriangle(path: any[], color: number, width: number, loop: boolean, outvb: Float32Array, vbstride: number, outib: Uint16Array): void {\r\n\r\n        var points: any[] = path.slice();\r\n        var ptlen: number = points.length;\r\n        var p1x: number = points[0], p1y: number = points[1];\r\n        var p2x: number = points[2], p2y: number = points[2];\r\n        var len: number = 0;\r\n        var rp: number = 0;\r\n        var dx: number = 0, dy: number = 0;\r\n\r\n        //计算每一段的长度，取出有效数据。保存:长度，方向，拐角，切线\r\n        //x,y,len,dx,dy,tx,ty,dot\r\n        //数组中每个都表示当前点开始的长度，方向\r\n        //x,y,dx,dy\r\n\r\n        var pointnum: number = ptlen / 2;\r\n        if (pointnum <= 1) return;\r\n        if (pointnum == 2) {\r\n            //TODO\r\n            return;\r\n        }\r\n\r\n        var tmpData: any[] = new Array(pointnum * 4);//TODO 做到外面\r\n        var realPtNum: number = 0;\t//去掉重复点后的实际点个数。同一直线上的点不做优化\r\n        //var segNum:int = pointnum + (loop?1:0);\r\n        var ci: number = 0;\r\n        for (var i: number = 0; i < pointnum - 1; i++) {\r\n            p1x = points[ci++], p1y = points[ci++];\r\n            p2x = points[ci++], p2y = points[ci++];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        }\r\n        if (loop) {//loop的话，需要取第一个点来算\r\n            p1x = points[ptlen - 2], p1y = points[ptlen - 1];\r\n            p2x = points[0], p2y = points[1];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {//如果长度为零的话，最后这个点就不用加了，上一个点就是指向了第一个点。\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        } else {//不是loop的话，直接取当前段的朝向，记录在上一个点上\r\n            rp = realPtNum * 4;\r\n            tmpData[rp] = p1x;\r\n            tmpData[rp + 1] = p1y;\r\n            tmpData[rp + 2] = dx / len;\r\n            tmpData[rp + 3] = dy / len;\r\n            realPtNum++;\r\n        }\r\n        ci = 0;\r\n\r\n        /**\r\n         * 根据前后两段的方向，计算垂线的方向，根据这个方向和任意一边的dxdy的垂线的点积为w/2可以得到长度。就可以得到增加的点\r\n         */\r\n        //如果相邻两段朝向的dot值接近-1，则表示反向了，需要改成切\r\n\r\n        for (i = 0; i < pointnum; i++) {\r\n            p1x = points[ci], p1y = points[ci + 1];\r\n            p2x = points[ci + 2], p2y = points[ci + 3];\r\n            //var p3x: number = points[ci + 4], p3y: number = points[ci + 5];\r\n\r\n        }\r\n        if (loop) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","export class EarcutNode {\r\n    i: any;\r\n    x: any;\r\n    y: any;\r\n    prev: any;\r\n    next: any;\r\n    z: any;\r\n    prevZ: any;\r\n    nextZ: any;\r\n    steiner: any;\r\n    constructor(i: any, x: any, y: any) {\r\n        // vertice index in coordinates array\r\n        this.i = i;\r\n\r\n        // vertex coordinates\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        // previous and next vertice nodes in a polygon ring\r\n        this.prev = null;\r\n        this.next = null;\r\n\r\n        // z-order curve value\r\n        this.z = null;\r\n\r\n        // previous and next nodes in z-order\r\n        this.prevZ = null;\r\n        this.nextZ = null;\r\n\r\n        // indicates whether this is a steiner point\r\n        this.steiner = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { EarcutNode } from \"./EarcutNode\";\r\nexport class Earcut {\r\n    static earcut(data: any, holeIndices: any, dim: any): any {\r\n\r\n        dim = dim || 2;\r\n\r\n        var hasHoles: any = holeIndices && holeIndices.length,\r\n            outerLen: any = hasHoles ? holeIndices[0] * dim : data.length,\r\n            outerNode: any = Earcut.linkedList(data, 0, outerLen, dim, true),\r\n            triangles: any = [];\r\n\r\n        if (!outerNode) return triangles;\r\n\r\n        var minX: any, minY: any, maxX: any, maxY: any, x: any, y: any, invSize: any;\r\n\r\n        if (hasHoles) outerNode = Earcut.eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n        if (data.length > 80 * dim) {\r\n            minX = maxX = data[0];\r\n            minY = maxY = data[1];\r\n\r\n            for (var i: any = dim; i < outerLen; i += dim) {\r\n                x = data[i];\r\n                y = data[i + 1];\r\n                if (x < minX) minX = x;\r\n                if (y < minY) minY = y;\r\n                if (x > maxX) maxX = x;\r\n                if (y > maxY) maxY = y;\r\n            }\r\n\r\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n            invSize = Math.max(maxX - minX, maxY - minY);\r\n            invSize = invSize !== 0 ? 1 / invSize : 0;\r\n        }\r\n\r\n        Earcut.earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\r\n\r\n        return triangles;\r\n    }\r\n\r\n    // create a circular doubly linked list from polygon points in the specified winding order\r\n    static linkedList(data: any, start: any, end: any, dim: any, clockwise: any): any {\r\n        var i: any, last: any;\r\n\r\n        if (clockwise === (Earcut.signedArea(data, start, end, dim) > 0)) {\r\n            for (i = start; i < end; i += dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        } else {\r\n            for (i = end - dim; i >= start; i -= dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        }\r\n\r\n        if (last && Earcut.equals(last, last.next)) {\r\n            Earcut.removeNode(last);\r\n            last = last.next;\r\n        }\r\n\r\n        return last;\r\n    }\r\n\r\n    // eliminate colinear or duplicate points\r\n    static filterPoints(start: any, end: any): any {\r\n        if (!start) return start;\r\n        if (!end) end = start;\r\n\r\n        var p: any = start,\r\n            again: any;\r\n        do {\r\n            again = false;\r\n\r\n            if (!p.steiner && (Earcut.equals(p, p.next) || Earcut.area(p.prev, p, p.next) === 0)) {\r\n                Earcut.removeNode(p);\r\n                p = end = p.prev;\r\n                if (p === p.next) break;\r\n                again = true;\r\n\r\n            } else {\r\n                p = p.next;\r\n            }\r\n        } while (again || p !== end);\r\n\r\n        return end;\r\n    }\r\n\r\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n    static earcutLinked(ear: any, triangles: any, dim: any, minX: any, minY: any, invSize: any, pass: any = null): any {\r\n        if (!ear) return;\r\n\r\n        // interlink polygon nodes in z-order\r\n        if (!pass && invSize) Earcut.indexCurve(ear, minX, minY, invSize);\r\n\r\n        var stop: any = ear,\r\n            prev: any, next: any;\r\n\r\n        // iterate through ears, slicing them one by one\r\n        while (ear.prev !== ear.next) {\r\n            prev = ear.prev;\r\n            next = ear.next;\r\n\r\n            if (invSize ? Earcut.isEarHashed(ear, minX, minY, invSize) : Earcut.isEar(ear)) {\r\n                // cut off the triangle\r\n                triangles.push(prev.i / dim);\r\n                triangles.push(ear.i / dim);\r\n                triangles.push(next.i / dim);\r\n\r\n                Earcut.removeNode(ear);\r\n\r\n                // skipping the next vertice leads to less sliver triangles\r\n                ear = next.next;\r\n                stop = next.next;\r\n\r\n                continue;\r\n            }\r\n\r\n            ear = next;\r\n\r\n            // if we looped through the whole remaining polygon and can't find any more ears\r\n            if (ear === stop) {\r\n                // try filtering points and slicing again\r\n                if (!pass) {\r\n                    Earcut.earcutLinked(Earcut.filterPoints(ear, null), triangles, dim, minX, minY, invSize, 1);\r\n\r\n                    // if this didn't work, try curing all small self-intersections locally\r\n                } else if (pass === 1) {\r\n                    ear = Earcut.cureLocalIntersections(ear, triangles, dim);\r\n                    Earcut.earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\r\n\r\n                    // as a last resort, try splitting the remaining polygon into two\r\n                } else if (pass === 2) {\r\n                    Earcut.splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // check whether a polygon node forms a valid ear with adjacent nodes\r\n    static isEar(ear: any): any {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // now make sure we don't have other points inside the potential ear\r\n        var p: any = ear.next.next;\r\n\r\n        while (p !== ear.prev) {\r\n            if (Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.next;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static isEarHashed(ear: any, minX: any, minY: any, invSize: any): boolean {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // triangle bbox; min & max are calculated like this for speed\r\n        var minTX: any = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\r\n            minTY: any = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\r\n            maxTX: any = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\r\n            maxTY: any = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\r\n\r\n        // z-order range for the current triangle bbox;\r\n        var minZ: any = Earcut.zOrder(minTX, minTY, minX, minY, invSize),\r\n            maxZ: any = Earcut.zOrder(maxTX, maxTY, minX, minY, invSize);\r\n\r\n        // first look for points inside the triangle in increasing z-order\r\n        var p: any = ear.nextZ;\r\n\r\n        while (p && p.z <= maxZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.nextZ;\r\n        }\r\n\r\n        // then look for points in decreasing z-order\r\n        p = ear.prevZ;\r\n\r\n        while (p && p.z >= minZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.prevZ;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // go through all polygon nodes and cure small local self-intersections\r\n    //TODO:coverage\r\n    static cureLocalIntersections(start: any, triangles: any, dim: any): any {\r\n        var p: any = start;\r\n        do {\r\n            var a: any = p.prev,\r\n                b: any = p.next.next;\r\n\r\n            if (!Earcut.equals(a, b) && Earcut.intersects(a, p, p.next, b) && Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a)) {\r\n\r\n                triangles.push(a.i / dim);\r\n                triangles.push(p.i / dim);\r\n                triangles.push(b.i / dim);\r\n\r\n                // remove two nodes involved\r\n                Earcut.removeNode(p);\r\n                Earcut.removeNode(p.next);\r\n\r\n                p = start = b;\r\n            }\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return p;\r\n    }\r\n\r\n    // try splitting polygon into two and triangulate them independently\r\n    //TODO:coverage\r\n    static splitEarcut(start: any, triangles: any, dim: any, minX: any, minY: any, invSize: any): void {\r\n        // look for a valid diagonal that divides the polygon into two\r\n        var a: any = start;\r\n        do {\r\n            var b: any = a.next.next;\r\n            while (b !== a.prev) {\r\n                if (a.i !== b.i && Earcut.isValidDiagonal(a, b)) {\r\n                    // split the polygon in two by the diagonal\r\n                    var c: any = Earcut.splitPolygon(a, b);\r\n\r\n                    // filter colinear points around the cuts\r\n                    a = Earcut.filterPoints(a, a.next);\r\n                    c = Earcut.filterPoints(c, c.next);\r\n\r\n                    // run earcut on each half\r\n                    Earcut.earcutLinked(a, triangles, dim, minX, minY, invSize);\r\n                    Earcut.earcutLinked(c, triangles, dim, minX, minY, invSize);\r\n                    return;\r\n                }\r\n                b = b.next;\r\n            }\r\n            a = a.next;\r\n        } while (a !== start);\r\n    }\r\n\r\n    // link every hole into the outer loop, producing a single-ring polygon without holes\r\n    //TODO:coverage\r\n    static eliminateHoles(data: any, holeIndices: any, outerNode: any, dim: any): any {\r\n        var queue: any = [],\r\n            i: any, len: any, start: any, end: any, list: any;\r\n\r\n        for (i = 0, len = holeIndices.length; i < len; i++) {\r\n            start = holeIndices[i] * dim;\r\n            end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            list = Earcut.linkedList(data, start, end, dim, false);\r\n            if (list === list.next) list.steiner = true;\r\n            queue.push(Earcut.getLeftmost(list));\r\n        }\r\n\r\n        queue.sort(Earcut.compareX);\r\n\r\n        // process holes from left to right\r\n        for (i = 0; i < queue.length; i++) {\r\n            Earcut.eliminateHole(queue[i], outerNode);\r\n            outerNode = Earcut.filterPoints(outerNode, outerNode.next);\r\n        }\r\n\r\n        return outerNode;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static compareX(a: any, b: any): any {\r\n        return a.x - b.x;\r\n    }\r\n\r\n    // find a bridge between vertices that connects hole with an outer ring and and link it\r\n    //TODO:coverage\r\n    static eliminateHole(hole: any, outerNode: any): void {\r\n        outerNode = Earcut.findHoleBridge(hole, outerNode);\r\n        if (outerNode) {\r\n            var b: any = Earcut.splitPolygon(outerNode, hole);\r\n            Earcut.filterPoints(b, b.next);\r\n        }\r\n    }\r\n\r\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n    //TODO:coverage\r\n    static findHoleBridge(hole: any, outerNode: any): any {\r\n        var p: any = outerNode,\r\n            hx: any = hole.x,\r\n            hy: any = hole.y,\r\n            qx: any = -Infinity,\r\n            m: any;\r\n\r\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n        // segment's endpoint with lesser x will be potential connection point\r\n        do {\r\n            if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n                var x: any = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n                if (x <= hx && x > qx) {\r\n                    qx = x;\r\n                    if (x === hx) {\r\n                        if (hy === p.y) return p;\r\n                        if (hy === p.next.y) return p.next;\r\n                    }\r\n                    m = p.x < p.next.x ? p : p.next;\r\n                }\r\n            }\r\n            p = p.next;\r\n        } while (p !== outerNode);\r\n\r\n        if (!m) return null;\r\n\r\n        if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n        // if there are no points found, we have a valid connection;\r\n        // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n        var stop: any = m,\r\n            mx: any = m.x,\r\n            my: any = m.y,\r\n            tanMin: any = Infinity,\r\n            tan: any;\r\n\r\n        p = m.next;\r\n\r\n        while (p !== stop) {\r\n            if (hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                Earcut.pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n                tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n                if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && Earcut.locallyInside(p, hole)) {\r\n                    m = p;\r\n                    tanMin = tan;\r\n                }\r\n            }\r\n\r\n            p = p.next;\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    // interlink polygon nodes in z-order\r\n    //TODO:coverage\r\n    static indexCurve(start: any, minX: any, minY: any, invSize: any): void {\r\n        var p: any = start;\r\n        do {\r\n            if (p.z === null) p.z = Earcut.zOrder(p.x, p.y, minX, minY, invSize);\r\n            p.prevZ = p.prev;\r\n            p.nextZ = p.next;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        p.prevZ.nextZ = null;\r\n        p.prevZ = null;\r\n\r\n        Earcut.sortLinked(p);\r\n    }\r\n\r\n    // Simon Tatham's linked list merge sort algorithm\r\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n    //TODO:coverage\r\n    static sortLinked(list: any): any {\r\n        var i: any, p: any, q: any, e: any, tail: any, numMerges: any, pSize: any, qSize: any,\r\n            inSize: any = 1;\r\n\r\n        do {\r\n            p = list;\r\n            list = null;\r\n            tail = null;\r\n            numMerges = 0;\r\n\r\n            while (p) {\r\n                numMerges++;\r\n                q = p;\r\n                pSize = 0;\r\n                for (i = 0; i < inSize; i++) {\r\n                    pSize++;\r\n                    q = q.nextZ;\r\n                    if (!q) break;\r\n                }\r\n                qSize = inSize;\r\n\r\n                while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                    if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n                        e = p;\r\n                        p = p.nextZ;\r\n                        pSize--;\r\n                    } else {\r\n                        e = q;\r\n                        q = q.nextZ;\r\n                        qSize--;\r\n                    }\r\n\r\n                    if (tail) tail.nextZ = e;\r\n                    else list = e;\r\n\r\n                    e.prevZ = tail;\r\n                    tail = e;\r\n                }\r\n\r\n                p = q;\r\n            }\r\n\r\n            tail.nextZ = null;\r\n            inSize *= 2;\r\n\r\n        } while (numMerges > 1);\r\n\r\n        return list;\r\n    }\r\n\r\n    // z-order of a point given coords and inverse of the longer side of data bbox\r\n    //TODO:coverage\r\n    static zOrder(x: any, y: any, minX: any, minY: any, invSize: any): any {\r\n        // coords are transformed into non-negative 15-bit integer range\r\n        x = 32767 * (x - minX) * invSize;\r\n        y = 32767 * (y - minY) * invSize;\r\n\r\n        x = (x | (x << 8)) & 0x00FF00FF;\r\n        x = (x | (x << 4)) & 0x0F0F0F0F;\r\n        x = (x | (x << 2)) & 0x33333333;\r\n        x = (x | (x << 1)) & 0x55555555;\r\n\r\n        y = (y | (y << 8)) & 0x00FF00FF;\r\n        y = (y | (y << 4)) & 0x0F0F0F0F;\r\n        y = (y | (y << 2)) & 0x33333333;\r\n        y = (y | (y << 1)) & 0x55555555;\r\n\r\n        return x | (y << 1);\r\n    }\r\n\r\n    // find the leftmost node of a polygon ring\r\n    //TODO:coverage\r\n    static getLeftmost(start: any): any {\r\n        var p: any = start,\r\n            leftmost: any = start;\r\n        do {\r\n            if (p.x < leftmost.x) leftmost = p;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return leftmost;\r\n    }\r\n\r\n    // check if a point lies within a convex triangle\r\n    static pointInTriangle(ax: any, ay: any, bx: any, by: any, cx: any, cy: any, px: any, py: any): boolean {\r\n        return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\r\n            (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\r\n            (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\r\n    }\r\n\r\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n    //TODO:coverage\r\n    static isValidDiagonal(a: any, b: any): boolean {\r\n        return a.next.i !== b.i && a.prev.i !== b.i && !Earcut.intersectsPolygon(a, b) &&\r\n            Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a) && Earcut.middleInside(a, b);\r\n    }\r\n\r\n    // signed area of a triangle\r\n    static area(p: any, q: any, r: any): any {\r\n        return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n    }\r\n\r\n    // check if two points are equal\r\n    static equals(p1: any, p2: any): boolean {\r\n        return p1.x === p2.x && p1.y === p2.y;\r\n    }\r\n\r\n    // check if two segments intersect\r\n    //TODO:coverage\r\n    static intersects(p1: any, q1: any, p2: any, q2: any): boolean {\r\n        if ((Earcut.equals(p1, q1) && Earcut.equals(p2, q2)) ||\r\n            (Earcut.equals(p1, q2) && Earcut.equals(p2, q1))) return true;\r\n        return Earcut.area(p1, q1, p2) > 0 !== Earcut.area(p1, q1, q2) > 0 &&\r\n            Earcut.area(p2, q2, p1) > 0 !== Earcut.area(p2, q2, q1) > 0;\r\n    }\r\n\r\n    // check if a polygon diagonal intersects any polygon segments\r\n    //TODO:coverage\r\n    static intersectsPolygon(a: any, b: any): boolean {\r\n        var p: any = a;\r\n        do {\r\n            if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                Earcut.intersects(p, p.next, a, b)) return true;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return false;\r\n    }\r\n\r\n    // check if a polygon diagonal is locally inside the polygon\r\n    //TODO:coverage\r\n    static locallyInside(a: any, b: any): boolean {\r\n        return Earcut.area(a.prev, a, a.next) < 0 ?\r\n            Earcut.area(a, b, a.next) >= 0 && Earcut.area(a, a.prev, b) >= 0 :\r\n            Earcut.area(a, b, a.prev) < 0 || Earcut.area(a, a.next, b) < 0;\r\n    }\r\n\r\n    // check if the middle point of a polygon diagonal is inside the polygon\r\n    //TODO:coverage\r\n    static middleInside(a: any, b: any): boolean {\r\n        var p: any = a,\r\n            inside: any = false,\r\n            px: any = (a.x + b.x) / 2,\r\n            py: any = (a.y + b.y) / 2;\r\n        do {\r\n            if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\r\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n                inside = !inside;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return inside;\r\n    }\r\n\r\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n    //TODO:coverage\r\n    static splitPolygon(a: any, b: any): any {\r\n        var a2: any = new EarcutNode(a.i, a.x, a.y),\r\n            b2: any = new EarcutNode(b.i, b.x, b.y),\r\n            an: any = a.next,\r\n            bp: any = b.prev;\r\n\r\n        a.next = b;\r\n        b.prev = a;\r\n\r\n        a2.next = an;\r\n        an.prev = a2;\r\n\r\n        b2.next = a2;\r\n        a2.prev = b2;\r\n\r\n        bp.next = b2;\r\n        b2.prev = bp;\r\n\r\n        return b2;\r\n    }\r\n\r\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n    static insertNode(i: any, x: any, y: any, last: any): any {\r\n        var p: any = new EarcutNode(i, x, y);\r\n\r\n        if (!last) {\r\n            p.prev = p;\r\n            p.next = p;\r\n\r\n        } else {\r\n            p.next = last.next;\r\n            p.prev = last;\r\n            last.next.prev = p;\r\n            last.next = p;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    static removeNode(p: any): void {\r\n        p.next.prev = p.prev;\r\n        p.prev.next = p.next;\r\n\r\n        if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n        if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n    }\r\n    // return a percentage difference between the polygon area and its triangulation area;\r\n    // used to verify correctness of triangulation\r\n    /*earcut.deviation = function (data, holeIndices, dim, triangles) {\r\n        var hasHoles = holeIndices && holeIndices.length;\r\n        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n    \r\n        var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n        if (hasHoles) {\r\n            for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n                var start = holeIndices[i] * dim;\r\n                var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n                polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n            }\r\n        }\r\n    \r\n        var trianglesArea = 0;\r\n        for (i = 0; i < triangles.length; i += 3) {\r\n            var a = triangles[i] * dim;\r\n            var b = triangles[i + 1] * dim;\r\n            var c = triangles[i + 2] * dim;\r\n            trianglesArea += Math.abs(\r\n                (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n                (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n        }\r\n    \r\n        return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n            Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n    };*/\r\n\r\n    static signedArea(data: any, start: any, end: any, dim: any): any {\r\n        var sum: any = 0;\r\n        for (var i: any = start, j: any = end - dim; i < end; i += dim) {\r\n            sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n            j = i;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    // turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\n    /*earcut.flatten = function (data) {\r\n        var dim = data[0][0].length,\r\n            result = {vertices: [], holes: [], dimensions: dim},\r\n            holeIndex = 0;\r\n    \r\n        for (var i = 0; i < data.length; i++) {\r\n            for (var j = 0; j < data[i].length; j++) {\r\n                for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n            }\r\n            if (i > 0) {\r\n                holeIndex += data[i - 1].length;\r\n                result.holes.push(holeIndex);\r\n            }\r\n        }\r\n        return result;\r\n    };*/\r\n}\r\n\r\n","import { Const } from \"../../Const\";\r\nimport { Material } from \"../../resource/Material\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { BlendMode } from \"../canvas/BlendMode\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { Mesh2D } from \"../utils/Mesh2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\n\r\nexport class Submit extends SubmitBase {\r\n\r\n    protected static _poolSize: number = 0;\r\n    protected static POOL: Submit[] = [];\r\n    material: Material;\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderSubmit(): number {\r\n        if (this._numEle === 0 || !this._mesh || this._numEle == 0) return 1;//怎么会有_numEle是0的情况?\r\n\r\n        var _tex = this.shaderValue.textureHost;\r\n        if (_tex) {\r\n            var source: any = _tex._getSource();\r\n            if (!source)\r\n                return 1;\r\n            this.shaderValue.texture = source;\r\n        }\r\n\r\n        this._mesh.useMesh();//bind 顶点\r\n        this.shaderValue.upload(this.material);//绑定shader，uploadMaterial\r\n\r\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n            RenderStateContext.setBlend(true);\r\n            this._blendFn();\r\n            BlendMode.activeBlendFunction = this._blendFn;\r\n        }\r\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        // Stat.renderBatches++;\r\n        // Stat.trianglesFaces += this._numEle / 3;\r\n\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if (SubmitBase.RENDERBASE == this)\r\n            return;\r\n\r\n        if ((--this._ref) < 1) {\r\n            Submit.POOL[Submit._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            this.shaderValue = null;\r\n            //_vb = null;\r\n            //_mesh.destroy();\r\n            this._mesh = null;\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): Submit {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : new Submit();\r\n        o._ref = 1;\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        o.material = context.material;\r\n        var filters: any[] = context._shader2D.filters;\r\n        filters && o.shaderValue.setFilters(filters);\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * 创建一个矢量submit\r\n     * @param\tctx\r\n     * @param\tmesh\r\n     * @param\tnumEle\t\t对应drawElement的第二个参数:count\r\n     * @param\toffset\t\tdrawElement的时候的ib的偏移。\r\n     * @param\tsv\t\t\tValue2D\r\n     * @return\r\n     */\r\n    static createShape(ctx: Context, mesh: Mesh2D, numEle: number, sv: Value2D): Submit {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : (new Submit());\r\n        o._mesh = mesh;\r\n        o._numEle = numEle;\r\n        o._startIdx = mesh.indexNum * 2;\r\n        o._ref = 1;\r\n        o.shaderValue = sv;\r\n        var blendType = ctx._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o.material = ctx.material;\r\n        o._blendFn = ctx._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        return o;\r\n    }\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"../utils/RenderState2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\n\r\n/**\r\n * cache as normal 模式下的生成的canvas的渲染。\r\n */\r\nexport class SubmitCanvas extends SubmitBase {\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\t\t// 用来计算当前的世界矩阵\r\n    canv: Context;\r\n    /**@internal */\r\n    _matrix4: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    static POOL: SubmitCanvas[] = [];\r\n\r\n    static create(canvas: any, alpha: number, filters: any[]): SubmitCanvas {\r\n        var o = (!(SubmitCanvas.POOL as any)._length) ? (new SubmitCanvas()) : SubmitCanvas.POOL[--(SubmitCanvas.POOL as any)._length];\r\n        o.canv = canvas;\r\n        o._ref = 1;\r\n        o._numEle = 0;\r\n        var v: Value2D = o.shaderValue;\r\n        v.alpha = alpha;\r\n        v.defines.clearDefine();\r\n        filters && filters.length && v.setFilters(filters);\r\n        return o;\r\n    }\r\n\r\n    constructor() {\r\n        super(SubmitBase.TYPE_2D);\r\n        this.shaderValue = new Value2D(RenderSpriteData.Zero);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderSubmit(): number {\r\n        // 下面主要是为了给canvas设置矩阵。因为canvas保存的是没有偏移的。\r\n        var preAlpha = RenderState2D.worldAlpha;\r\n        var preMatrix4 = RenderState2D.worldMatrix4;\r\n        var preMatrix = RenderState2D.worldMatrix;\r\n\r\n        var preFilters: any[] = RenderState2D.worldFilters;\r\n        var preWorldShaderDefines = RenderState2D.worldShaderDefines;\r\n\r\n        var v = this.shaderValue;\r\n        var m = this._matrix;\r\n        var m4 = this._matrix4;\r\n        var mout = Matrix.TEMP;\r\n        Matrix.mul(m, preMatrix, mout);\r\n        m4[0] = mout.a;\r\n        m4[1] = mout.b;\r\n        m4[4] = mout.c;\r\n        m4[5] = mout.d;\r\n        m4[12] = mout.tx;\r\n        m4[13] = mout.ty;\r\n\r\n        RenderState2D.worldMatrix = mout.clone();\r\n        RenderState2D.worldMatrix4 = m4;\r\n        RenderState2D.worldAlpha = RenderState2D.worldAlpha * v.alpha;\r\n        if (v.filters && v.filters.length) {\r\n            RenderState2D.worldFilters = v.filters;\r\n            RenderState2D.worldShaderDefines = v.defines;\r\n        }\r\n        (this.canv as any)['flushsubmit']();\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix.destroy();\r\n        RenderState2D.worldMatrix = preMatrix;\r\n\r\n        RenderState2D.worldFilters = preFilters;\r\n        RenderState2D.worldShaderDefines = preWorldShaderDefines;\r\n        return 1;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var cache = SubmitCanvas.POOL;\r\n            //_vb = null;\r\n            this._mesh = null;\r\n            cache[(cache as any)._length++] = this;\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    getRenderType(): number {\r\n        return SubmitBase.TYPE_CANVAS;\r\n    }\r\n\r\n}\r\n{ (SubmitCanvas.POOL as any)._length = 0 }\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { RenderTexture2D } from \"../../resource/RenderTexture2D\"\r\nimport { BlendMode } from \"../canvas/BlendMode\"\r\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { Const } from \"../../Const\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class SubmitTarget implements ISubmit {\r\n    /**@internal */\r\n    _mesh: Mesh2D;\t\t\t//代替 _vb,_ib\r\n    /**@internal */\r\n    _startIdx: number;\r\n    /**@internal */\r\n    _numEle: number;\r\n    shaderValue: Value2D;\r\n    blendType: number = 0;\r\n    /**@internal */\r\n    _ref: number = 1;\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n    srcRT: RenderTexture2D;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static POOL: SubmitTarget[] = [];\r\n    renderSubmit(): number {\r\n        this._mesh.useMesh();\r\n\r\n        var target = this.srcRT;\r\n        if (target) {//??为什么会出现为空的情况\r\n            this.shaderValue.textureHost = target;\r\n            this.shaderValue.upload();\r\n            this.blend();\r\n            LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    blend(): void {\r\n        if (BlendMode.activeBlendFunction !== BlendMode.fns[this.blendType]) {\r\n            RenderStateContext.setBlend(true);\r\n            BlendMode.fns[this.blendType]();\r\n            BlendMode.activeBlendFunction = BlendMode.fns[this.blendType];\r\n        }\r\n    }\r\n\r\n    getRenderType(): number {\r\n        return 0;\r\n    }\r\n\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var pool: any = SubmitTarget.POOL;\r\n            pool[pool._length++] = this;\r\n        }\r\n    }\r\n\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D, rt: RenderTexture2D): SubmitTarget {\r\n        var o: SubmitTarget = (SubmitTarget.POOL as any)._length ? SubmitTarget.POOL[--(SubmitTarget.POOL as any)._length] : new SubmitTarget();\r\n        o._mesh = mesh;\r\n        o.srcRT = rt;\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._ref = 1;\r\n        o._key.clear();\r\n        o._numEle = 0;\r\n        o.blendType = context._nBlendType;\r\n        o._key.blendShader = o.blendType;\r\n        o.shaderValue = sv;\r\n        if (context._colorFiler) {\r\n            var ft: ColorFilter = context._colorFiler;\r\n            sv.defines.addDefine(ft.typeDefine);\r\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\r\n            (<TextureSV>sv).colorMat = Matrix4x4.TEMPMatrix0;\r\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\r\n            (<TextureSV>sv).colorAlpha = Vector4.tempVec4;\r\n        }\r\n        return o;\r\n    }\r\n}\r\n\r\n{\r\n    (SubmitTarget.POOL as any)._length = 0;\r\n}\r\n\r\n\r\n","import { SubmitBase } from \"./SubmitBase\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { BlendMode } from \"../canvas/BlendMode\"\r\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { Const } from \"../../Const\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { Material } from \"../../resource/Material\";\r\nimport { Laya } from \"../../../Laya\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class SubmitTexture extends SubmitBase {\r\n    private static _poolSize: number = 0;\r\n    private static POOL: SubmitTexture[] = [];\r\n    material: Material;\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            SubmitTexture.POOL[SubmitTexture._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            //_vb = null;\r\n            this._mesh = null;\t\t//下次create会重新赋值。既然会重新赋值，那还设置干嘛\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n\r\n    renderSubmit(): number {\r\n        if (this._numEle === 0)\r\n            return 1;\r\n\r\n        var tex = this.shaderValue.textureHost;\r\n        if (tex) {//现在fillrect也用的这个submit，所以不必要求有texture\r\n            var source: any = tex ? tex._getSource() : null;\r\n            if (!source) return 1;\r\n        }\r\n\r\n        this._mesh.useMesh();//Mesh2D  ->    Geometry  Vao  Vb  ib\r\n\r\n        //bind Shader uploadData\r\n        this.shaderValue.updateShaderData();//Material   Shader   ShaderData\r\n\r\n        //如果shader参数都相同，只要提交texture就行了\r\n        var lastSubmit = <SubmitTexture>SubmitBase.preRender;\r\n        var prekey = ((<SubmitBase>SubmitBase.preRender))._key;\r\n        //         if (this._key.blendShader === 0 && (this._key.submitType === prekey.submitType && this._key.blendShader === prekey.blendShader) && BaseShader.activeShader &&\r\n        //             (<SubmitBase>SubmitBase.preRender).clipInfoID == this.clipInfoID &&\r\n        // //            lastSubmit.shaderValue.defines._value === this.shaderValue.defines._value && //shader define要相同. \r\n        //             (this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERGLOW) || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERBLUR)\r\n        //                 || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERCOLOR) || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILLTEXTURE))  //只有基本类型的shader走这个，像blur，glow，filltexture等都不要这样优化\r\n        //         ) {\r\n        //             (<Shader>BaseShader.activeShader).uploadTexture2D(source);\r\n        //         }\r\n        //         else {\r\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n            RenderStateContext.setBlend(true);\r\n            this._blendFn();\r\n            BlendMode.activeBlendFunction = this._blendFn;\r\n        }\r\n        this.shaderValue.texture = source;\r\n        this.shaderValue.upload(this.material);//Update Uniform\r\n        //}\r\n        //Draw\r\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        return 1;\r\n    }\r\n\r\n    /*\r\n       create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): SubmitTexture {\r\n        var o = SubmitTexture._poolSize ? SubmitTexture.POOL[--SubmitTexture._poolSize] : new SubmitTexture(SubmitBase.TYPE_TEXTURE);\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._key.submitType = SubmitBase.KEY_DRAWTEXTURE;\r\n        o._ref = 1;\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        o.material = context.material;\r\n        //sv.setValue(context._shader2D);\r\n        if (context._colorFiler) {\r\n            var ft: ColorFilter = context._colorFiler;\r\n            sv.defines.addDefine(ft.typeDefine);\r\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\r\n            (<TextureSV>sv).colorMat = Matrix4x4.TEMPMatrix0;\r\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\r\n            (<TextureSV>sv).colorAlpha = Vector4.tempVec4;\r\n        }\r\n        return o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { SubmitTexture } from \"../submit/SubmitTexture\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\";\r\n/**\r\n * ...\r\n * @author laoxie\r\n */\r\nexport class CharSubmitCache {\r\n    private static __posPool: any[] = [];\r\n    private static __nPosPool: number = 0;\r\n\r\n    private _data: any[] = [];\r\n    private _ndata: number = 0;\r\n    private _tex: Texture;\r\n    private _imgId: number;\r\n    private _clipid: number = -1;\r\n    private _clipMatrix: Matrix = new Matrix();\r\n    /**@internal */\r\n    _enable: boolean = false;\r\n    /**@internal */\r\n    _colorFiler: ColorFilter;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        this._tex = null;\r\n        this._imgId = -1;\r\n        this._ndata = 0;\r\n        this._enable = false;\r\n        this._colorFiler = null;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.clear();\r\n        this._data.length = 0;\r\n        this._data = null;\r\n    }\r\n\r\n    add(ctx: Context, tex: Texture, imgid: number, pos: any[], uv: ArrayLike<number>, color: number): void {\r\n        if (this._ndata > 0 && (this._tex != tex || this._imgId != imgid ||\r\n            (this._clipid >= 0 && this._clipid != ctx._clipInfoID))) {\r\n            this.submit(ctx);\r\n        }\r\n\r\n        this._clipid = ctx._clipInfoID;\r\n        ctx._globalClipMatrix.copyTo(this._clipMatrix);\r\n        this._tex = tex;\r\n        this._imgId = imgid;\r\n        this._colorFiler = ctx._colorFiler;\r\n\r\n        this._data[this._ndata] = pos;\r\n        this._data[this._ndata + 1] = uv;\r\n        this._data[this._ndata + 2] = color;\r\n        this._ndata += 3;\r\n    }\r\n\r\n    getPos(): any[] {\r\n        if (CharSubmitCache.__nPosPool == 0)\r\n            return new Array(8);\r\n        return CharSubmitCache.__posPool[--CharSubmitCache.__nPosPool];\r\n    }\r\n\r\n    enable(value: boolean, ctx: Context): void {\r\n        if (value === this._enable)\r\n            return;\r\n        this._enable = value;\r\n        this._enable || this.submit(ctx);\r\n    }\r\n\r\n    submit(ctx: Context): void {\r\n        var n: number = this._ndata;\r\n        if (!n)\r\n            return;\r\n\r\n        var _mesh: MeshQuadTexture = ctx._mesh;\r\n\r\n        var colorFiler: ColorFilter = ctx._colorFiler;\r\n        ctx._colorFiler = this._colorFiler;\r\n        var submit: SubmitTexture = SubmitTexture.create(ctx, _mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n        ctx._submits[ctx._submits._length++] = ctx._curSubmit = submit;\r\n        submit.shaderValue.textureHost = this._tex;\r\n        submit._key.other = this._imgId;\r\n        ctx._colorFiler = colorFiler;\r\n        ctx._copyClipInfo(submit, this._clipMatrix);\r\n        submit.clipInfoID = this._clipid;\r\n\r\n        for (var i: number = 0; i < n; i += 3) {\r\n            _mesh.addQuad(this._data[i], this._data[i + 1], this._data[i + 2], true);\r\n            CharSubmitCache.__posPool[CharSubmitCache.__nPosPool++] = this._data[i];\r\n        }\r\n\r\n        n /= 3;\r\n        submit._numEle += n * 6;\r\n        _mesh.indexNum += n * 6;\r\n        _mesh.vertNum += n * 4;\r\n        ctx._drawCount += n;\r\n        this._ndata = 0;\r\n\r\n        if (RenderInfo.loopCount % 100 == 0)\r\n            this._data.length = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Config } from \"./Config\";\r\nimport { Vector3 } from \"./laya/maths/Vector3\";\r\n\r\n/**\r\n * <code>Config3D</code> 类用于创建3D初始化配置。\r\n */\r\nexport class Config3D {\r\n    /**\r\n     * 控制是否动态合并 \r\n     */\r\n    static enableDynamicBatch: boolean = true;\r\n    /**\r\n     * 是否静态合并 \r\n     */\r\n    static enableStaticBatch: boolean = true;\r\n    /** \r\n     * 是否开启UniformBuffer\r\n     */\r\n    static enableUniformBufferObject = true;\r\n    /**\r\n     * 设置3DRT分辨率倍数\r\n     */\r\n    static pixelRatio: number = 1;\r\n    /**\r\n     *  设置自定义分辨率\r\n     */\r\n    static customResolution: boolean = false;\r\n    /**\r\n     *  设置最大RendertexturePool缓存的值\r\n     */\r\n    static defaultCacheRTMemory: number = 256;\r\n    /**\r\n     * 默认物理功能初始化内存，单位为M。\r\n     */\r\n    static defaultPhysicsMemory: number = 16;\r\n    /**\r\n     *  是否开启多光源,如果场景不需要多光源，关闭后可提升性能。\r\n     */\r\n    static enableMultiLight: boolean = true;\r\n    /**\r\n     * 最大光源数量。\r\n     */\r\n    static maxLightCount: number = 32;\r\n    /**\r\n    * X、Y、Z轴的光照集群数量,Z值会影响Cluster接受区域光(点光、聚光)影响的数量,Math.floor(2048 / lightClusterCount.z - 1) * 4 为每个Cluster的最大平均接受区域光数量,如果每个Cluster所接受光源影响的平均数量大于该值，则较远的Cluster会忽略其中多余的光照影响。\r\n    */\r\n    static lightClusterCount: Vector3 = new Vector3(12, 12, 12);\r\n\r\n    /**\r\n     * 最大形变数量\r\n     */\r\n    static maxMorphTargetCount: number = 32;\r\n\r\n    /**\r\n    * 设置分辨率大小（并不是实际渲染分辨率）\r\n    * @param width \r\n    * @param height \r\n    */\r\n    static setResolution(width: number, height: number) {\r\n        Config3D.customResolution = true;\r\n        Config3D._resoluWidth = width;\r\n        Config3D._resoluHeight = height;\r\n    }\r\n\r\n    /**BVHRenderConfig */\r\n    /**是否使用BVH裁剪 */\r\n    static useBVHCull: boolean = false;\r\n    /**一个BVH节点最大的cell数，超过这个数会分离 */\r\n    static BVH_max_SpatialCount = 7;\r\n    /**最大BVH节点的大小 */\r\n    static BVH_limit_size = 32;\r\n    /**最小cellbuild数，如果小于这个数，不会BVH构建 */\r\n    static BVH_Min_Build_nums = 10\r\n\r\n\r\n    //----引擎内部使用,不暴露给开发者----\r\n    /**@internal */\r\n    static _uniformBlock: boolean;\r\n    /**@internal 设置分辨率宽度*/\r\n    static _resoluWidth: number = -1;\r\n    /**@internal 设置分辨率高度*/\r\n    static _resoluHeight: number = -1;\r\n    /**@internal*/\r\n    static _maxAreaLightCountPerClusterAverage: number;\r\n    /**@internal*/\r\n    static _multiLighting: boolean;\r\n    /** @internal是否开启视锥裁剪调试。\r\n     */\r\n    static debugFrustumCulling: boolean = false;\r\n}\r\n\r\nConfig.isStencil = true;","import { Config3D } from \"../../Config3D\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\nexport class RenderTexture extends BaseTexture implements IRenderTarget {\r\n\r\n    // todo 记录当前 绑定 rt  位置不放在这里\r\n    protected static _currentActive: RenderTexture = null;\r\n\r\n    static get currentActive(): RenderTexture {\r\n        return RenderTexture._currentActive;\r\n    }\r\n\r\n    protected static _configInstance: any = {};\r\n    static configRenderContextInstance(value: any) {\r\n        RenderTexture._configInstance = value;\r\n    }\r\n\r\n    private static _pool: RenderTexture[] = [];\r\n    private static _poolMemory: number = 0;\r\n\r\n    /**\r\n     * 创建一个RenderTexture\r\n     * @param width\r\n     * @param height\r\n     * @param colorFormat\r\n     * @param depthFormat\r\n     * @param mipmap \r\n     * @param multiSamples \r\n     * @param depthTexture \r\n     * @param sRGB \r\n     * @returns \r\n     */\r\n    static createFromPool(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, mipmap: boolean = false, multiSamples: number = 1, depthTexture: boolean = false, sRGB: boolean = false) {\r\n\r\n        // todo mipmap 判断\r\n        mipmap = mipmap && (width & (width - 1)) === 0 && (height & (height - 1)) === 0;\r\n\r\n        let n = RenderTexture._pool.length;\r\n        for (let index = 0; index < n; index++) {\r\n            let rt = RenderTexture._pool[index];\r\n\r\n            if (rt.width == width && rt.height == height && rt.colorFormat == colorFormat && rt.depthStencilFormat == depthFormat && rt._generateMipmap == mipmap && rt.multiSamples == multiSamples && rt.generateDepthTexture == depthTexture && rt._gammaSpace == sRGB) {\r\n                rt._inPool = false;\r\n                let end = RenderTexture._pool[n - 1];\r\n                RenderTexture._pool[index] = end;\r\n                RenderTexture._pool.length -= 1;\r\n                RenderTexture._poolMemory -= (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n                return rt;\r\n            }\r\n        }\r\n\r\n        let rt = new RenderTexture(width, height, colorFormat, depthFormat, mipmap, multiSamples, depthTexture, sRGB);\r\n        rt.lock = true;\r\n        return rt;\r\n    }\r\n\r\n    static recoverToPool(rt: RenderTexture): void {\r\n        if (rt._inPool || rt.destroyed)\r\n            return;\r\n        RenderTexture._pool.push(rt);\r\n        RenderTexture._poolMemory += (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n        rt._inPool = true;\r\n    }\r\n\r\n    static clearPool() {\r\n        if (RenderTexture._poolMemory < Config3D.defaultCacheRTMemory) {\r\n            return;\r\n        }\r\n        for (var i in RenderTexture._pool) {\r\n            RenderTexture._pool[i].destroy();\r\n        }\r\n        RenderTexture._pool = [];\r\n        RenderTexture._poolMemory = 0;\r\n    }\r\n\r\n    /** @internal 最后绑定到主画布上的结果 此值可能为null*/\r\n    private static _bindCanvasRender: RenderTexture;\r\n    /**\r\n     * 绑定到主画布上的RenderTexture\r\n     */\r\n    static get bindCanvasRender(): RenderTexture {\r\n        return RenderTexture._bindCanvasRender;\r\n    }\r\n\r\n    static set bindCanvasRender(value: RenderTexture) {\r\n        if (value != this._bindCanvasRender)\r\n            //(this._bindCanvasRender) && RenderTexture.recoverToPool(this._bindCanvasRender);\r\n            this._bindCanvasRender = value;\r\n    }\r\n\r\n\r\n    _inPool: boolean = false;\r\n\r\n    _isCameraTarget: boolean = false;\r\n\r\n    _renderTarget: InternalRenderTarget;\r\n\r\n    private _generateDepthTexture: boolean = false;\r\n    public get generateDepthTexture(): boolean {\r\n        return this._generateDepthTexture;\r\n    }\r\n    public set generateDepthTexture(value: boolean) {\r\n\r\n        // todo  重复 设置\r\n        if (value && !this._depthStencilTexture) {\r\n            // todo  base texture format 移出构造函数\r\n            this._depthStencilTexture = new BaseTexture(this.width, this.height, this.depthStencilFormat);\r\n            // @ts-ignore\r\n            this._depthStencilTexture._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n            this._depthStencilTexture._texture = LayaGL.textureContext.createRenderTextureInternal(TextureDimension.Tex2D, this.width, this.height, this.depthStencilFormat, false, false);\r\n\r\n            LayaGL.textureContext.setupRendertargetTextureAttachment(this._renderTarget, this._depthStencilTexture._texture);\r\n\r\n        }\r\n\r\n        this._generateDepthTexture = value;\r\n    }\r\n\r\n    private _depthStencilTexture: BaseTexture;\r\n\r\n    get depthStencilTexture(): BaseTexture {\r\n        return this._depthStencilTexture;\r\n    }\r\n\r\n    _generateMipmap: boolean;\r\n\r\n    get colorFormat(): RenderTargetFormat {\r\n        return this._renderTarget.colorFormat;\r\n    }\r\n\r\n    protected _depthStencilFormat: RenderTargetFormat;\r\n    get depthStencilFormat(): RenderTargetFormat {\r\n        return this._renderTarget.depthStencilFormat;\r\n    }\r\n\r\n    protected _multiSamples: number;\r\n    public get multiSamples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @param width \r\n     * @param height \r\n     * @param colorFormat \r\n     * @param depthFormat \r\n     * @param generateMipmap \r\n     * @param multiSamples \r\n     * @param generateDepthTexture \r\n     * @param sRGB \r\n     */\r\n    constructor(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        super(width, height, colorFormat);\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    _createRenderTarget() {\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        // rt 格式 宽高可能不支持\r\n        this._generateMipmap = this._renderTarget._generateMipmap;\r\n        this._texture = this._renderTarget._textures[0];\r\n\r\n        this.generateDepthTexture = this._generateDepthTexture;\r\n    }\r\n\r\n    //@internal\r\n    recreate(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = <TextureFormat><any>colorFormat;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        this._disposeResource();\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    _start() {\r\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n        if (RenderTexture._currentActive != this) {\r\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n            RenderTexture._currentActive = this;\r\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget);\r\n        }\r\n    }\r\n\r\n    _end() {\r\n        RenderTexture._currentActive = null;\r\n\r\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n        (this._isCameraTarget) && (RenderTexture._configInstance.invertY = false);\r\n    }\r\n\r\n    getData(xOffset: number, yOffset: number, width: number, height: number, out: Uint8Array | Float32Array): Uint8Array | Float32Array {\r\n        LayaGL.textureContext.readRenderTargetPixelData(this._renderTarget, xOffset, yOffset, width, height, out);\r\n        return out;\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n\r\n        if (RenderTexture._currentActive == this) {\r\n            this._end();\r\n        }\r\n\r\n        this._renderTarget.dispose();\r\n        this._renderTarget = null;\r\n        this._depthStencilTexture?.destroy();\r\n        this._depthStencilTexture = null;\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Bezier } from \"../maths/Bezier\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { FontInfo } from \"../utils/FontInfo\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { DrawStyle } from \"../webgl/canvas/DrawStyle\";\r\nimport { Path } from \"../webgl/canvas/Path\";\r\nimport { ISaveData } from \"../webgl/canvas/save/ISaveData\";\r\nimport { SaveBase } from \"../webgl/canvas/save/SaveBase\";\r\nimport { SaveClipRect } from \"../webgl/canvas/save/SaveClipRect\";\r\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\r\nimport { SaveTransform } from \"../webgl/canvas/save/SaveTransform\";\r\nimport { SaveTranslate } from \"../webgl/canvas/save/SaveTranslate\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { SkinMeshBuffer } from \"../webgl/shader/d2/skinAnishader/SkinMeshBuffer\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { BasePoly } from \"../webgl/shapes/BasePoly\";\r\nimport { Earcut } from \"../webgl/shapes/Earcut\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { Submit } from \"../webgl/submit/Submit\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { SubmitCanvas } from \"../webgl/submit/SubmitCanvas\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\r\nimport { SubmitTarget } from \"../webgl/submit/SubmitTarget\";\r\nimport { SubmitTexture } from \"../webgl/submit/SubmitTexture\";\r\nimport { CharRenderInfo } from \"../webgl/text/CharRenderInfo\";\r\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\r\nimport { TextRender } from \"../webgl/text/TextRender\";\r\nimport { Mesh2D } from \"../webgl/utils/Mesh2D\";\r\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\r\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { NativeContext } from \"./NativeContext\";\r\nimport { Const } from \"../Const\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Material } from \"./Material\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nconst defaultClipMatrix = new Matrix(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE, 0, 0);\r\n\r\n/**\r\n * @private\r\n * Context扩展类\r\n */\r\nexport class Context {\r\n\r\n    /**@internal */\r\n    static _rendercontex: Context;\r\n    /**@internal */\r\n    _canvas: HTMLCanvas;\r\n    /**@internal */\r\n    _drawingToTexture: boolean;\r\n\r\n    static _SUBMITVBSIZE: number = 32000;\r\n\r\n    private static _MAXVERTNUM: number = 65535;\r\n\r\n    static MAXCLIPRECT: Rectangle = null;\r\n\r\n    static _COUNT: number = 0;\r\n\r\n    /**@internal */\r\n    _tmpMatrix: Matrix = new Matrix();\t\t// chrome下静态的访问比从this访问要慢\r\n\r\n    private static SEGNUM: number = 32;\r\n\r\n    private static _contextcount: number = 0;\r\n\r\n    private _drawTexToDrawTri_Vert: Float32Array = new Float32Array(8);\t\t// 从速度考虑，不做成static了\r\n    private _drawTexToDrawTri_Index: Uint16Array = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n    private _tempUV: Float32Array = new Float32Array(8);\r\n    private _drawTriUseAbsMatrix: boolean = false;\t//drawTriange函数的矩阵是全局的，不用再乘以当前矩阵了。这是一个补丁。\r\n\r\n    static __init__(): void {\r\n        Context.MAXCLIPRECT = new Rectangle(0, 0, Const.MAX_CLIP_SIZE, Const.MAX_CLIP_SIZE);\r\n        ContextParams.DEFAULT = new ContextParams();\r\n        WebGLCacheAsNormalCanvas;\r\n    }\r\n\r\n    /**@private */\r\n    drawImage(...args: any[]): void {\r\n    }\r\n\r\n    /**@private */\r\n    getImageData(...args: any[]): any {\r\n    }\r\n\r\n    /**@private */\r\n    measureText(text: string): any {\r\n        return null;\r\n    }\r\n\r\n    /**@private */\r\n    setTransform(...args: any[]): void {\r\n    }\r\n\r\n\r\n    /**@private */\r\n    $transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n    }\r\n\r\n    set material(value: Material) {\r\n        this._shader2D.material = value;\r\n    }\r\n\r\n    get material() {\r\n        return this._shader2D.material;\r\n    }\r\n\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    clearRect(x: number, y: number, width: number, height: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _drawRect(x: number, y: number, width: number, height: number, style: any): void {\r\n        style && (this.fillStyle = style);\r\n        this.fillRect(x, y, width, height, null);\r\n    }\r\n\r\n    ///**@private */\r\n    //public function transformByMatrix(value:Matrix):void {\r\n    //this.transform(value.a, value.b, value.c, value.d, value.tx, value.ty);\r\n    //}\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    //public function setTransformByMatrix(value:Matrix):void {\r\n    //\tthis.setTransform(value.a, value.b, value.c, value.d, value.tx, value.ty);\r\n    //}\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    drawTexture2(x: number, y: number, pivotX: number, pivotY: number, m: Matrix, args2: any[]): void {\r\n    }\r\n\r\n    //=============新增==================\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n\r\n    saveTransform(matrix: Matrix): void {\r\n        this.save();\r\n    }\r\n\r\n    restoreTransform(matrix: Matrix): void {\r\n        this.restore();\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n        var ctx: any = this;\r\n\r\n        //填充矩形\r\n        if (fillColor != null) {\r\n            ctx.fillStyle = fillColor;\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n\r\n        //绘制矩形边框\r\n        if (lineColor != null) {\r\n            ctx.strokeStyle = lineColor;\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    alpha(value: number): void {\r\n        this.globalAlpha *= value;\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _transform(mat: Matrix, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.rotate(angle);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.scale(scaleX, scaleY);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        this.moveTo(x + fromX, y + fromY);\r\n        this.lineTo(x + toX, y + toY);\r\n        this.stroke();\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        this.addPath(points.slice(), false, false, x, y);\r\n        this.stroke();\r\n    }\r\n\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this.moveTo(x + points[0], y + points[1]);\r\n        var i: number = 2, n: number = points.length;\r\n        while (i < n) {\r\n            this.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this.stroke();\r\n    }\r\n\r\n    private _fillAndStroke(fillColor: string, strokeColor: string, lineWidth: number, isConvexPolygon: boolean = false): void {\r\n        //绘制填充区域\r\n        if (fillColor != null) {\r\n            this.fillStyle = fillColor;\r\n            this.fill();\r\n        }\r\n\r\n        //绘制边框\r\n        if (strokeColor != null && lineWidth > 0) {\r\n            this.strokeStyle = strokeColor;\r\n            this.lineWidth = lineWidth;\r\n            this.stroke();\r\n        }\r\n    }\r\n    /**Math.PI*2的结果缓存 */\r\n    static PI2: number = 2 * Math.PI;\r\n    /**@internal */\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath(true);\r\n        this.arc(x, y, radius, radius, 0, Context.PI2, false, true, 40);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    /**@internal */\r\n    _drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number) {\r\n        this.beginPath(true);\r\n        this.arc(x, y, width, height, 0, Context.PI2, false, true, 40);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    /**Math.PI*0.5的结果缓存 */\r\n    static HPI = Math.PI * 0.5;\r\n    /**@internal */\r\n    _drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number) {\r\n        this.beginPath(true);\r\n        var tPath = this._getPath();\r\n        if (0 >= lt) {\r\n            tPath.addPoint(x, y);\r\n        } else {\r\n            this.arc(x + lt, y + lt, lt, lt, Math.PI, Math.PI + Context.HPI);\r\n        }\r\n        let startX = x + width - rt;\r\n        if (0 >= rt) {\r\n            tPath.addPoint(startX, y);\r\n        } else {\r\n            this.arc(startX, y + rt, rt, rt, Math.PI + Context.HPI, Context.PI2);\r\n        }\r\n        startX = x + width - rb;\r\n        let startY = y + height - rb;\r\n        if (0 >= rb) {\r\n            tPath.addPoint(startX, startY);\r\n        } else {\r\n            this.arc(startX, startY, rb, rb, 0, Context.HPI);\r\n        }\r\n        startX = x + lb;\r\n        startY = y + height - lb;\r\n        if (0 >= lb) {\r\n            tPath.addPoint(startX, startY);\r\n        } else {\r\n            this.arc(startX, startY, lb, lb, Math.PI - Context.HPI, Math.PI);\r\n        }\r\n        tPath.addPoint(x, y + lt);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n\r\n    //矢量方法\t\r\n    /**@internal */\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        //移动中心点\r\n        //ctx.translate(x + args[0], y + args[1]);\r\n        //形成路径\r\n        this.beginPath();\r\n        this.moveTo(x, y);\r\n        this.arc(x, y, radius, radius, startAngle, endAngle);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n        //恢复中心点\r\n        //ctx.translate(-x - args[0], -y - args[1]);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        //var points:Array = args[2];\r\n        this.beginPath();\r\n        //poly一定是close的\r\n        this.addPath(points.slice(), true, isConvexPolygon, x, y);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth, isConvexPolygon);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            this.fillStyle = brush.fillStyle;\r\n            this.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            this.strokeStyle = pen.strokeStyle;\r\n            this.lineWidth = pen.lineWidth || 1;\r\n            this.lineJoin = pen.lineJoin;\r\n            this.lineCap = pen.lineCap;\r\n            this.miterLimit = pen.miterLimit;\r\n            this.stroke();\r\n        }\r\n    }\r\n\r\n    static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n\r\n        if (!Context.const2DRenderCMD) {\r\n            const cmd = Context.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\r\n            if (cmd) {\r\n                cmd.addCMD(RenderStateType.BlendType, true);\r\n                //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n                cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\r\n                BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n                //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n                cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\r\n                //WebGLContext.setDepthTest(gl, false);\r\n                cmd.addCMD(RenderStateType.DepthTest, false);\r\n                //WebGLContext.setDepthMask(gl, true);\r\n                cmd.addCMD(RenderStateType.DepthMask, true);\r\n                //WebGLContext.setCullFace(gl, false);\r\n                cmd.addCMD(RenderStateType.CullFace, false);\r\n                //WebGLContext.setFrontFace(gl, gl.CCW);\r\n                cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\r\n            }\r\n        }\r\n        Context.const2DRenderCMD && Context.const2DRenderCMD.applyCMD();\r\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\r\n        // WebGLContext.setBlend(gl, true);//还原2D设置\r\n        // WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n        // BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n        // WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        // WebGLContext.setDepthTest(gl, false);\r\n        // WebGLContext.setDepthMask(gl, true);\r\n        // WebGLContext.setCullFace(gl, false);\r\n        // WebGLContext.setFrontFace(gl, gl.CCW);\r\n        RenderTexture2D.currentActive && RenderTexture2D.currentActive.end();\r\n        LayaGL.renderEngine.viewport(0, 0, RenderState2D.width, RenderState2D.height);//还原2D视口\r\n        LayaGL.renderEngine.scissorTest(true);\r\n        LayaGL.renderEngine.scissor(0, 0, RenderState2D.width, RenderState2D.height);\r\n    }\r\n\r\n    /**@internal */\r\n    _id: number = ++Context._COUNT;\r\n\r\n    private _other: ContextParams | null = null;\r\n    private _renderNextSubmitIndex: number = 0;\r\n\r\n    private _path: Path | null = null;\r\n    /**@internal */\r\n    _drawCount: number = 1;\r\n    private _width: number = Const.MAX_CLIP_SIZE;\r\n    private _height: number = Const.MAX_CLIP_SIZE;\r\n    private _renderCount: number = 0;\r\n    /**@internal */\r\n    _submits: any = null;\r\n    /**@internal */\r\n    _curSubmit: any = null;\r\n    /**@internal */\r\n    _submitKey: SubmitKey = new SubmitKey();\t//当前将要使用的设置。用来跟上一次的_curSubmit比较\r\n\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    /**@internal */\r\n    _pathMesh: MeshVG | null = null;\t\t\t//矢量专用mesh。\r\n    /**@internal */\r\n    _triangleMesh: MeshTexture | null = null;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n\r\n    meshlist: any[] = [];\t//本context用到的mesh\r\n\r\n    //public var _vbs:Array = [];\t//双buffer管理。TODO 临时删掉，需要mesh中加上\r\n    private _transedPoints: any[] = new Array(8);\t//临时的数组，用来计算4个顶点的转换后的位置。\r\n    private _temp4Points: any[] = new Array(8);\t\t//临时数组。用来保存4个顶点的位置。\r\n\r\n    /**@internal */\r\n    _clipRect: Rectangle = Context.MAXCLIPRECT;\r\n    //public var _transedClipInfo:Array = [0, 0, Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\t//应用矩阵后的clip。ox,oy, xx,xy,yx,yy \txx,xy等是缩放*宽高\r\n    /**@internal */\r\n    _globalClipMatrix: Matrix = defaultClipMatrix.clone();\t//用矩阵描述的clip信息。最终的点投影到这个矩阵上，在0~1之间就可见。\r\n    /**@internal */\r\n    _clipInCache: boolean = false; \t// 当前记录的clipinfo是在cacheas normal后赋值的，因为cacheas normal会去掉当前矩阵的tx，ty，所以需要记录一下，以便在是shader中恢复\r\n    /**@internal */\r\n    _clipInfoID: number = 0;\t\t\t\t\t//用来区分是不是clipinfo已经改变了\r\n    private _clipID_Gen: number = 0;\t\t\t//生成clipid的，原来是  _clipInfoID=++_clipInfoID 这样会有问题，导致兄弟clip的id都相同\r\n    /**@internal */\r\n    _curMat: Matrix;\r\n\r\n    //计算矩阵缩放的缓存\r\n    /**@internal */\r\n    _lastMatScaleX: number = 1.0;\r\n    /**@internal */\r\n    _lastMatScaleY: number = 1.0;\r\n    private _lastMat_a: number = 1.0;\r\n    private _lastMat_b: number = 0.0;\r\n    private _lastMat_c: number = 0.0;\r\n    private _lastMat_d: number = 1.0;\r\n    /**@internal */\r\n    _nBlendType: number = 0;\r\n    /**@internal */\r\n    _save: ISaveData[] & { _length?: number } = null;\r\n    /**@internal */\r\n    _targets: RenderTexture2D | null = null;\r\n    /**@internal */\r\n    _charSubmitCache: CharSubmitCache | null = null;\r\n    /**@internal */\r\n    _saveMark: SaveMark | null = null;\r\n    /**@internal */\r\n    _shader2D: Shader2D = new Shader2D();\t//\r\n\r\n    /**\r\n     * 所cacheAs精灵\r\n     * 对于cacheas bitmap的情况，如果图片还没准备好，需要有机会重画，所以要保存sprite。例如在图片\r\n     * 加载完成后，调用repaint\r\n     */\r\n    sprite: Sprite | null = null;\r\n\r\n    /**@internal */\r\n    public static _textRender: TextRender | null = null;// new TextRender();\r\n    /**@internal */\r\n    _italicDeg: number = 0;//文字的倾斜角度\r\n    /**@internal */\r\n    _lastTex: Texture | null = null; //上次使用的texture。主要是给fillrect用，假装自己也是一个drawtexture\r\n\r\n    private _fillColor: number = 0;\r\n    private _flushCnt: number = 0;\r\n\r\n    private defTexture: Texture | null = null;\t//给fillrect用\r\n    /**@internal */\r\n    _colorFiler: ColorFilter | null = null;\r\n\r\n    drawTexAlign: boolean = false;\t\t// 按照像素对齐\r\n    /**@internal */\r\n    _incache: boolean = false;\t\t\t// 正处在cacheas normal过程中\r\n\r\n    isMain: boolean = false;\t\t\t\t// 是否是主context\r\n\r\n    clearColor: Color = new Color();\r\n\r\n    constructor() {\r\n        Context._contextcount++;\r\n        Context._textRender = Context._textRender || new TextRender();\r\n        //_ib = IndexBuffer2D.QuadrangleIB;\r\n        if (!this.defTexture) {\r\n            var defTex2d: Texture2D = new Texture2D(2, 2, TextureFormat.R8G8B8A8, true, false, false);\r\n            defTex2d.setPixelsData(new Uint8Array(16), false, false);\r\n            defTex2d.lock = true;\r\n            this.defTexture = new Texture(defTex2d);\r\n        }\r\n        this._lastTex = this.defTexture;\r\n        this.clear();\r\n    }\r\n\r\n    clearBG(r: number, g: number, b: number, a: number): void {\r\n        // var gl: WebGLRenderingContext = RenderStateContext.mainContext;\r\n        this.clearColor.r = r;\r\n        this.clearColor.g = g;\r\n        this.clearColor.b = b;\r\n        this.clearColor.a = a;\r\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color, this.clearColor, 1);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    _getSubmits(): any[] {\r\n        return this._submits;\r\n    }\r\n\r\n    /**\r\n     * 释放占用内存\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    private _releaseMem(keepRT: boolean = false): void {\r\n        if (!this._submits)\r\n            return;\r\n\r\n        this._curMat && this._curMat.destroy();\r\n        //@ts-ignore\r\n        this._curMat = null;\r\n        this._shader2D.destroy();\r\n        //@ts-ignore\r\n        this._shader2D = null;\r\n        //@ts-ignore\r\n        this._charSubmitCache.clear();\r\n\r\n        for (var i: number = 0, n: number = this._submits._length; i < n; i++) {\r\n            this._submits[i].releaseRender();\r\n        }\r\n        this._submits.length = 0;\r\n        this._submits._length = 0;\r\n        this._submits = null;\r\n        this._curSubmit = null;\r\n\r\n        this._path = null;\r\n        //_other && (_other.font = null);\r\n        this._save = null;\r\n\r\n        var sz: number;\r\n        for (i = 0, sz = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.destroy();\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this.sprite = null;\r\n        if (!keepRT) {\r\n            this._targets && (this._targets.destroy());\r\n            this._targets = null;\r\n        }\r\n        //TODO mesh 暂时releaseMem了\r\n    }\r\n\r\n    /**\r\n     * 释放所有资源\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    destroy(keepRT: boolean = false): void {\r\n        --Context._contextcount;\r\n        this.sprite = null;\r\n        this._releaseMem(keepRT);\r\n        this._charSubmitCache && this._charSubmitCache.destroy();\r\n        //_ib && (_ib != IndexBuffer2D.QuadrangleIB) && _ib.releaseResource();\r\n        this._mesh.destroy();\r\n        if (!keepRT) {\r\n            this._targets && this._targets.destroy();//用回收么？可能没什么重复利用的价值\r\n            this._targets = null;\r\n        }\r\n        if (this.defTexture) {\r\n            this.defTexture.bitmap && this.defTexture.bitmap.destroy();\r\n            this.defTexture.destroy();\r\n        }\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        if (!this._submits) {//第一次\r\n            this._other = ContextParams.DEFAULT;\r\n            this._curMat = Matrix.create();\r\n            this._charSubmitCache = new CharSubmitCache();\r\n            //_vb = _vbs[0] = VertexBuffer2D.create( -1);\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n            this.meshlist.push(this._pathMesh);\r\n            this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._triangleMesh);\r\n            //if(Config.smartCache) _vbs[1] = VertexBuffer2D.create( -1);\r\n            this._submits = [];\r\n            this._save = [SaveMark.Create(this)];\r\n            this._save.length = 10;\r\n            this._shader2D = new Shader2D();\r\n        }\r\n\r\n        this._submitKey.clear();\r\n\r\n        //_vb = _vbs[_renderCount%2];\r\n        //_vb.clear();\r\n        this._mesh.clearVB();\r\n\r\n        //_targets && (_targets.repaint = true);\r\n\r\n        this._drawCount = 1;\r\n\r\n        this._other = ContextParams.DEFAULT;\r\n        this._other.lineWidth = this._shader2D.ALPHA = 1.0;\r\n\r\n        this._nBlendType = 0;\r\n\r\n        this._clipRect = Context.MAXCLIPRECT;\r\n\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        SubmitBase.RENDERBASE._ref = 0xFFFFFF;\r\n        SubmitBase.RENDERBASE._numEle = 0;\r\n\r\n        this._shader2D.fillStyle = this._shader2D.strokeStyle = DrawStyle.DEFAULT;\r\n\r\n        for (let i = 0, n = this._submits._length; i < n; i++)\r\n            this._submits[i].releaseRender();\r\n\r\n        this._submits._length = 0;\r\n\r\n        this._curMat.identity();\r\n        this._other.clear();\r\n\r\n        this._saveMark = <SaveMark>this._save[0];\r\n        this._save._length = 1;\r\n    }\r\n\r\n    /**\r\n     * 设置ctx的size，这个不允许直接设置，必须是canvas调过来的。所以这个函数里也不用考虑canvas相关的东西\r\n     * @param\tw\r\n     * @param\th\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h) {\r\n            this._width = w;\r\n            this._height = h;\r\n            //TODO 问题：如果是rendertarget 计算内存会有问题，即canvas算一次，rt又算一次,所以这里要修改\r\n            //这种情况下canvas应该不占内存\r\n            if (this._targets) {\r\n                this._targets.destroy();\r\n                this._targets = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, -1);\r\n            }\r\n            //如果是主画布，要记录窗口大小\r\n            //如果不是 TODO\r\n            if (this.isMain) {\r\n                LayaGL.renderEngine.viewport(0, 0, w, h);\r\n                LayaGL.renderEngine.scissor(0, 0, w, h);\r\n                RenderState2D.width = w;\r\n                RenderState2D.height = h;\r\n            }\r\n        }\r\n        if (w === 0 && h === 0) this._releaseMem();\r\n    }\r\n\r\n    /**\r\n     * 当前canvas请求保存渲染结果。\r\n     * 实现：\r\n     * 如果value==true，就要给_target赋值\r\n     * @param value {Boolean} \r\n     */\r\n    set asBitmap(value: boolean) {\r\n        if (value) {\r\n            //缺省的RGB没有a，不合理把。况且没必要自定义一个常量。\r\n            //深度格式为-1表示不用深度缓存。\r\n            let rt = this._targets;\r\n            if (!this._width || !this._height)\r\n                throw Error(\"asBitmap no size!\");\r\n            if (!rt || rt.width != this._width || rt.height != this._height) {\r\n                if (rt) {\r\n                    rt.destroy();\r\n                }\r\n                this._targets = new RenderTexture2D(this._width, this._height, RenderTargetFormat.R8G8B8A8);\r\n            }\r\n        } else {\r\n            this._targets && this._targets.destroy();\r\n            this._targets = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得当前矩阵的缩放值\r\n     * 避免每次都计算getScaleX\r\n     * @return\r\n     */\r\n    getMatScaleX(): number {\r\n        if (this._lastMat_a == this._curMat.a && this._lastMat_b == this._curMat.b)\r\n            return this._lastMatScaleX;\r\n        this._lastMatScaleX = this._curMat.getScaleX();\r\n        this._lastMat_a = this._curMat.a;\r\n        this._lastMat_b = this._curMat.b;\r\n        return this._lastMatScaleX;\r\n    }\r\n\r\n    getMatScaleY(): number {\r\n        if (this._lastMat_c == this._curMat.c && this._lastMat_d == this._curMat.d)\r\n            return this._lastMatScaleY;\r\n        this._lastMatScaleY = this._curMat.getScaleY();\r\n        this._lastMat_c = this._curMat.c;\r\n        this._lastMat_d = this._curMat.d;\r\n        return this._lastMatScaleY;\r\n    }\r\n\r\n    getFillColor(): number {\r\n        return this._fillColor;\r\n    }\r\n\r\n    set fillStyle(value: any) {\r\n        if (!this._shader2D.fillStyle.equal(value)) {\r\n            SaveBase.save(this, SaveBase.TYPE_FILESTYLE, this._shader2D, false);\r\n            this._shader2D.fillStyle = DrawStyle.create(value);\r\n            this._submitKey.other = -this._shader2D.fillStyle.toInt();\r\n        }\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        return this._shader2D.fillStyle;\r\n    }\r\n\r\n    set globalAlpha(value: number) {\r\n        value = Math.floor(value * 1000) / 1000;\r\n        if (value != this._shader2D.ALPHA) {\r\n            SaveBase.save(this, SaveBase.TYPE_ALPHA, this._shader2D, false);\r\n            this._shader2D.ALPHA = value;\r\n        }\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        return this._shader2D.ALPHA;\r\n    }\r\n\r\n    set textAlign(value: string) {\r\n        (this._other.textAlign === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTALIGN, this._other, false), this._other.textAlign = value);\r\n    }\r\n\r\n    get textAlign(): string {\r\n        return this._other.textAlign;\r\n    }\r\n\r\n    set textBaseline(value: string) {\r\n        (this._other.textBaseline === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTBASELINE, this._other, false), this._other.textBaseline = value);\r\n    }\r\n\r\n    get textBaseline(): string {\r\n        return this._other.textBaseline;\r\n    }\r\n\r\n    set globalCompositeOperation(value: string) {\r\n        var n = BlendMode.TOINT[value];\r\n        n == null || (this._nBlendType === n) || (SaveBase.save(this, SaveBase.TYPE_GLOBALCOMPOSITEOPERATION, this, true), this._curSubmit = SubmitBase.RENDERBASE, this._nBlendType = n /*, _shader2D.ALPHA = 1*/);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        return BlendMode.NAMES[this._nBlendType];\r\n    }\r\n\r\n    set strokeStyle(value: any) {\r\n        this._shader2D.strokeStyle.equal(value) || (SaveBase.save(this, SaveBase.TYPE_STROKESTYLE, this._shader2D, false), this._shader2D.strokeStyle = DrawStyle.create(value), this._submitKey.other = -this._shader2D.strokeStyle.toInt());\r\n    }\r\n\r\n    get strokeStyle(): any {\r\n        return this._shader2D.strokeStyle;\r\n    }\r\n\r\n    translate(x: number, y: number): void {\r\n        if (x !== 0 || y !== 0) {\r\n            SaveTranslate.save(this);\r\n            if (this._curMat._bTransform) {\r\n                SaveTransform.save(this);\r\n                //_curMat.transformPointN(Point.TEMP.setTo(x, y));\r\n                //x = Point.TEMP.x;\r\n                //y = Point.TEMP.y;\r\n                //translate的话，相当于在当前坐标系下移动x,y，所以直接修改_curMat,然后x,y就消失了。\r\n                this._curMat.tx += (x * this._curMat.a + y * this._curMat.c);\r\n                this._curMat.ty += (x * this._curMat.b + y * this._curMat.d);\r\n            } else {\r\n                this._curMat.tx = x;\r\n                this._curMat.ty = y;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lineWidth(value: number) {\r\n        (this._other.lineWidth === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_LINEWIDTH, this._other, false), this._other.lineWidth = value);\r\n    }\r\n\r\n    get lineWidth(): number {\r\n        return this._other.lineWidth;\r\n    }\r\n\r\n    save(): void {\r\n        this._save[this._save._length++] = SaveMark.Create(this);\r\n    }\r\n\r\n    restore(): void {\r\n        var sz: number = this._save._length;\r\n        var lastBlend: number = this._nBlendType;\r\n        if (sz < 1)\r\n            return;\r\n        for (var i: number = sz - 1; i >= 0; i--) {\r\n            var o: ISaveData = this._save[i];\r\n            o.restore(this);\r\n            if (o.isSaveMark()) {\r\n                this._save._length = i;\r\n                return;\r\n            }\r\n        }\r\n        if (lastBlend != this._nBlendType) {\r\n            //阻止合并\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n\r\n    set font(str: string) {\r\n        //if (str == _other.font.toString())\r\n        //\treturn;\r\n        this._other = this._other.make();\r\n        SaveBase.save(this, SaveBase.TYPE_FONT, this._other, false);\r\n        //_other.font === FontInContext.EMPTY ? (_other.font = new FontInContext(str)) : (_other.font.setFont(str));\r\n    }\r\n\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\r\n        Context._textRender!.filltext(this, txt, x, y, fontStr, color, borderColor, lineWidth, align);\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, color, null, 0, textAlign);\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, null, color, lineWidth, textAlign);\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, txt, x, y, font, color, borderColor, lineWidth, textAlign);\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        Context._textRender!._fast_filltext(this, data, x, y, fontObj, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, data, x, y, fontStr, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    private _fillRect(x: number, y: number, width: number, height: number, rgba: number): void {\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey: boolean = submit && (submit._key.submitType === SubmitBase.KEY_DRAWTEXTURE && submit._key.blendShader === this._nBlendType);\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n            sameKey = false;\r\n        }\r\n\r\n        //clipinfo\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n\r\n        this.transformQuad(x, y, width, height, 0, this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, Texture.NO_UV, rgba, false);\r\n            //if (GlUtils.fillRectImgVb(_mesh._vb, _clipRect, x, y, width, height, Texture.DEF_UV, _curMat, rgba,this)){\r\n            if (!sameKey) {\r\n                submit = this._curSubmit = SubmitTexture.create(this, this._mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n                this._submits[this._submits._length++] = submit;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n                if (!this._lastTex || this._lastTex.destroyed) {\r\n                    submit.shaderValue.textureHost = this.defTexture;\r\n                } else {\r\n                    submit.shaderValue.textureHost = this._lastTex;\r\n                }\r\n                //这里有一个问题。例如 clip1, drawTex(tex1), clip2, fillRect, drawTex(tex2)\t会被分成3个submit，\r\n                //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, (_lastTex && _lastTex.bitmap)?_lastTex.bitmap.id: -1);\r\n                submit._key.other = (this._lastTex && this._lastTex.bitmap) ? (this._lastTex.bitmap as Texture2D).id : -1\r\n                submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            }\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n\r\n    fillRect(x: number, y: number, width: number, height: number, fillStyle: any): void {\r\n        var drawstyle: DrawStyle = fillStyle ? DrawStyle.create(fillStyle) : this._shader2D.fillStyle;\r\n        //var rgb = drawstyle.toInt() ;\r\n        //由于显卡的格式是 rgba，所以需要处理一下\r\n        //var rgba:uint = ((rgb & 0xff0000) >> 16) | (rgb & 0x00ff00) | ((rgb & 0xff) << 16) | (_shader2D.ALPHA * 255) << 24;\r\n        var rgba: number = this.mixRGBandAlpha(drawstyle.toInt());\r\n        this._fillRect(x, y, width, height, rgba);\r\n    }\r\n\r\n    //TODO:coverage\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        //test\r\n        /*\r\n        var aa = 95 / 274, bb = 136 / 341, cc = (95 + 41) / 274, dd = (136 + 48) / 341;\r\n        texture.uv = [aa,bb, cc,bb, cc,dd, aa,dd];\r\n        texture.width = 41;\r\n        texture.height = 48;\r\n        */\r\n        //test\r\n\r\n        if (!texture._getSource()) {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n        this._fillTexture(texture, texture.width, texture.height, texture.uvrect, x, y, width, height, type, offset.x, offset.y, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _fillTexture(texture: Texture, texw: number, texh: number, texuvRect: number[], x: number, y: number, width: number, height: number, type: string, offsetx: number, offsety: number, color: number): void {\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey: boolean = false;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            sameKey = false;\r\n        }\r\n\r\n        //filltexture相关逻辑。计算rect大小以及对应的uv\r\n        var repeatx: boolean = true;\r\n        var repeaty: boolean = true;\r\n        switch (type) {\r\n            case \"repeat\": break;\r\n            case \"repeat-x\": repeaty = false; break;\r\n            case \"repeat-y\": repeatx = false; break;\r\n            case \"no-repeat\": repeatx = repeaty = false; break;\r\n            default: break;\r\n        }\r\n        //用 _temp4Points 来存计算出来的顶点的uv。这里的uv用0到1表示纹理的uv区域。这样便于计算，直到shader中才真的转成了实际uv\r\n        var uv: any[] = this._temp4Points;\r\n        var stu: number = 0; //uv起点\r\n        var stv: number = 0;\r\n        var stx: number = 0, sty: number = 0, edx: number = 0, edy: number = 0;\r\n        if (offsetx < 0) {\r\n            stx = x;\r\n            stu = (-offsetx % texw) / texw;//有偏移的情况下的u不是从头开始\r\n        } else {\r\n            stx = x + offsetx;\r\n        }\r\n        if (offsety < 0) {\r\n            sty = y;\r\n            stv = (-offsety % texh) / texh;//有偏移的情况下的v不是从头开始\r\n        } else {\r\n            sty = y + offsety;\r\n        }\r\n\r\n        edx = x + width;\r\n        edy = y + height;\r\n        (!repeatx) && (edx = Math.min(edx, x + offsetx + texw));//x不重复的话，最多只画一个\r\n        (!repeaty) && (edy = Math.min(edy, y + offsety + texh));//y不重复的话，最多只画一个\r\n        if (edx < x || edy < y)\r\n            return;\r\n        if (stx > edx || sty > edy)\r\n            return;\r\n\r\n        //计算最大uv\r\n        var edu: number = (edx - x - offsetx) / texw;\r\n        var edv: number = (edy - y - offsety) / texh;\r\n\r\n        this.transformQuad(stx, sty, edx - stx, edy - sty, 0, this._curMat, this._transedPoints);\r\n        //四个点对应的uv。必须在transformQuad后面，因为共用了_temp4Points\r\n        uv[0] = stu; uv[1] = stv; uv[2] = edu; uv[3] = stv; uv[4] = edu; uv[5] = edv; uv[6] = stu; uv[7] = edv;\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            //不依赖于wrapmode了，都走filltexture流程，自己修改纹理坐标\r\n            //tex2d.wrapModeU = BaseTexture.WRAPMODE_REPEAT;\t//这里会有重复判断\r\n            //tex2d.wrapModeV = BaseTexture.WRAPMODE_REPEAT;\r\n            //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n            //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n            var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n\r\n            this._mesh.addQuad(this._transedPoints, uv, rgba, true);\r\n\r\n            var sv = Value2D.create(RenderSpriteData.Texture2D) as TextureSV;\r\n            //这个优化先不要了，因为没太弄明白wrapmode的设置，总是不起作用。\r\n            //if(texture.uvrect[2]<1.0||texture.uvrect[3]<1.0)//这表示是大图集中的一部分，只有这时候才用特殊shader\r\n            sv.defines.addDefine(ShaderDefines2D.FILLTEXTURE);\r\n            var arry = texuvRect.concat();\r\n            Vector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\r\n            sv.u_TexRange = Vector4.tempVec4;\r\n            submit = this._curSubmit = SubmitTexture.create(this, this._mesh, sv);\r\n            this._submits[this._submits._length++] = submit;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            submit.shaderValue.textureHost = texture;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n        this.breakNextMerge();\t//暂不合并\r\n    }\r\n\r\n\r\n    /**\r\n     * 反正只支持一种filter，就不要叫setFilter了，直接叫setColorFilter\r\n     * @param\tvalue\r\n     */\r\n    setColorFilter(filter: ColorFilter): void {\r\n        SaveBase.save(this, SaveBase.TYPE_COLORFILTER, this, true);\r\n        //_shader2D.filters = value;\r\n        this._colorFiler = filter;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        //_reCalculateBlendShader();\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\r\n        this._drawTextureM(tex, x, y, width, height, null, 1, null, color);\r\n    }\r\n\r\n    drawTextures(tex: Texture, pos: ArrayLike<number>, tx: number, ty: number, colors: number[]): void {\r\n        if (!tex._getSource()) //source内调用tex.active();\r\n        {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n\r\n        //TODO 还没实现\r\n        var n: number = pos.length / 2;\r\n        var ipos: number = 0;\r\n        var bmpid: number = (tex.bitmap as Texture2D).id;\r\n        for (var i: number = 0; i < n; i++) {\r\n            const color = typeof colors[i] === 'number' ? colors[i] : 0xffffffff;\r\n            this._inner_drawTexture(tex, bmpid, pos[ipos++] + tx, pos[ipos++] + ty, 0, 0, null, null, 1.0, false, color);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[] | null, color: number): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return this._inner_drawTexture(tex, (tex.bitmap as Texture2D).id, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawRenderTexture(tex: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[], color: number = 0xffffffff): boolean {\r\n        return this._inner_drawTexture((<Texture>(tex as any)), -1, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    //TODO:coverage\r\n    submitDebugger(): void {\r\n        this._submits[this._submits._length++] = SubmitCMD.create([], function (): void { debugger; }, this);\r\n    }\r\n\r\n    /*\r\n    private function copyClipInfo(submit:Submit, clipInfo:Array):void {\r\n        var cd:Array = submit.shaderValue.clipDir;\r\n        cd[0] = clipInfo[2]; cd[1] = clipInfo[3]; cd[2] = clipInfo[4]; cd[3] = clipInfo[5];\r\n        var cp:Array = submit.shaderValue.clipRect;\r\n        cp[0] = clipInfo[0]; cp[1] = clipInfo[1];\r\n        submit.clipInfoID = this._clipInfoID;\r\n    }\r\n    */\r\n    /**@internal */\r\n    _copyClipInfo(submit: SubmitBase, clipInfo: Matrix): void {\r\n        var cm: Vector4 = submit.shaderValue.clipMatDir;\r\n        cm.x = clipInfo.a; cm.y = clipInfo.b; cm.z = clipInfo.c; cm.w = clipInfo.d;\r\n        submit.shaderValue.clipMatDir = cm;\r\n        var cmp: Vector2 = submit.shaderValue.clipMatPos;\r\n        cmp.x = clipInfo.tx; cmp.y = clipInfo.ty;\r\n        submit.shaderValue.clipMatPos = cmp;\r\n        submit.clipInfoID = this._clipInfoID;\r\n\r\n        if (this._clipInCache) {\r\n            submit.shaderValue.clipOff.x = 1;\r\n            submit.shaderValue.clipOff = submit.shaderValue.clipOff;\r\n        }\r\n    }\r\n\r\n\r\n    private isSameClipInfo(submit: SubmitBase): boolean {\r\n        return (submit.clipInfoID === this._clipInfoID);\r\n        /*\r\n        var cd:Array = submit.shaderValue.clipDir;\r\n        var cp:Array = submit.shaderValue.clipRect;\r\n        \r\n        if (clipInfo[0] != cp[0] || clipInfo[1] != cp[1] || clipInfo[2] != cd[0] || clipInfo[3] != cd[1] || clipInfo[4] != cd[2] || clipInfo[5] != cd[3] ) \r\n            return false;\r\n        return true;\r\n        */\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 这个还是会检查是否合并\r\n     * @param\ttex\r\n     * @param\tminVertNum\r\n     */\r\n    _useNewTex2DSubmit(tex: Texture, minVertNum: number): void {\r\n        //var sameKey:Boolean = tex.bitmap.id >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === tex.bitmap.id ;\r\n\r\n        if (this._mesh.vertNum + minVertNum > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n            //sameKey = false;\r\n        }\r\n\r\n        var submit: SubmitTexture = SubmitTexture.create(this, this._mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n        this._submits[this._submits._length++] = this._curSubmit = submit;\r\n        submit.shaderValue.textureHost = tex;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用上面的设置（texture，submit，alpha，clip），画一个rect\r\n     */\r\n    _drawTexRect(x: number, y: number, w: number, h: number, uv: any[]): void {\r\n        this.transformQuad(x, y, w, h, this._italicDeg, this._curMat, this._transedPoints);\r\n        //这个是给文字用的，为了清晰，必须要按照屏幕像素对齐，并且四舍五入。\r\n        var ops: any[] = this._transedPoints;\r\n        ops[0] = (ops[0] + 0.5) | 0;\r\n        ops[1] = (ops[1] + 0.5) | 0;\r\n        ops[2] = (ops[2] + 0.5) | 0;\r\n        ops[3] = (ops[3] + 0.5) | 0;\r\n        ops[4] = (ops[4] + 0.5) | 0;\r\n        ops[5] = (ops[5] + 0.5) | 0;\r\n        ops[6] = (ops[6] + 0.5) | 0;\r\n        ops[7] = (ops[7] + 0.5) | 0;\r\n\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv, this._fillColor, true);\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n\r\n    drawCallOptimize(enable: boolean): boolean {\r\n        this._charSubmitCache.enable(enable, this);\r\n        return enable;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param\ttex {Texture | RenderTexture }\r\n     * @param  imgid 图片id用来比较合并的\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tm\r\n     * @param\talpha\r\n     * @param\tuv\r\n     * @return\r\n     */\r\n    _inner_drawTexture(tex: Texture, imgid: number, x: number, y: number, width: number, height: number, m: Matrix, uv: ArrayLike<number> | null, alpha: number, lastRender: boolean, color: number): boolean {\r\n        if (width <= 0 || height <= 0) {\r\n            return false;\r\n        }\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        uv = uv || tex._uv\r\n        //为了优化，如果上次是画三角形，并且贴图相同，会认为他们是一组的，把这个也转成三角形，以便合并。\r\n        //因为好多动画是drawTexture和drawTriangle混用的\r\n        if (preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === imgid) {\r\n            var tv: Float32Array = this._drawTexToDrawTri_Vert;\r\n            tv[0] = x; tv[1] = y; tv[2] = x + width, tv[3] = y, tv[4] = x + width, tv[5] = y + height, tv[6] = x, tv[7] = y + height;\r\n            this._drawTriUseAbsMatrix = true;\r\n            var tuv: Float32Array = this._tempUV;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3]; tuv[4] = uv[4]; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this.drawTriangles(tex, 0, 0, tv, tuv, this._drawTexToDrawTri_Index, m || this._curMat, alpha, null, null);//用tuv而不是uv会提高效率\r\n            this._drawTriUseAbsMatrix = false;\r\n            return true;\r\n        }\r\n\r\n        var mesh = this._mesh;\r\n        var submit: SubmitTexture = this._curSubmit;\r\n        var ops: any[] = lastRender ? this._charSubmitCache.getPos() : this._transedPoints;\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width || tex.width, height || tex.height, this._italicDeg, m || this._curMat, ops);\r\n\r\n        if (this.drawTexAlign) {\r\n            var round: Function = Math.round;\r\n            ops[0] = round(ops[0]);//  (ops[0] + 0.5) | 0;\t// 这么计算负的时候会有问题\r\n            ops[1] = round(ops[1]);\r\n            ops[2] = round(ops[2]);\r\n            ops[3] = round(ops[3]);\r\n            ops[4] = round(ops[4]);\r\n            ops[5] = round(ops[5]);\r\n            ops[6] = round(ops[6]);\r\n            ops[7] = round(ops[7]);\r\n            this.drawTexAlign = false;\t//一次性的\r\n        }\r\n\r\n        var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA * alpha);\r\n\r\n        //lastRender = false;\r\n        if (lastRender) {\r\n            this._charSubmitCache.add(this, tex, imgid, ops, uv, rgba);\r\n            return true;\r\n        }\r\n\r\n        this._drawCount++;\r\n\r\n        var sameKey: boolean = imgid >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === imgid;\r\n\r\n        //clipinfo\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n\r\n        this._lastTex = tex;\r\n\r\n        if (mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            mesh = this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(mesh);\r\n            sameKey = false;\t//新的mesh不能算samekey了\r\n        }\r\n\r\n        {\r\n            mesh.addQuad(ops, uv, rgba, true);\r\n            if (!sameKey) {\r\n                this._submits[this._submits._length++] = this._curSubmit = submit = SubmitTexture.create(this, mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n                submit.shaderValue.textureHost = tex;\r\n                submit._key.other = imgid;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n            }\r\n            submit._numEle += 6;\r\n            mesh.indexNum += 6;\r\n            mesh.vertNum += 4;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 转换4个顶点。为了效率这个不做任何检查。需要调用者的配合。\r\n     * @param\ta\t\t输入。8个元素表示4个点\r\n     * @param\tout\t\t输出\r\n     */\r\n    transform4Points(a: any[], m: Matrix, out: any[]): void {\r\n        /*\r\n            out[0] = 846;\r\n            out[1] = 656;\r\n            out[2] = 881;\r\n            out[3] = 657;\r\n            out[4] = 880;\r\n            out[5] = 732;\r\n            out[6] = 844;\r\n            out[7] = 731;\r\n            return ;\r\n        */\r\n        //var m:Matrix = _curMat;\r\n        var tx: number = m.tx;\r\n        var ty: number = m.ty;\r\n        var ma: number = m.a;\r\n        var mb: number = m.b;\r\n        var mc: number = m.c;\r\n        var md: number = m.d;\r\n        var a0: number = a[0];\r\n        var a1: number = a[1];\r\n        var a2: number = a[2];\r\n        var a3: number = a[3];\r\n        var a4: number = a[4];\r\n        var a5: number = a[5];\r\n        var a6: number = a[6];\r\n        var a7: number = a[7];\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * pt所描述的多边形完全在clip外边，整个被裁掉了\r\n     * @param\tpt\r\n     * @return\r\n     */\r\n    clipedOff(pt: any[]): boolean {\r\n        //TODO\r\n        if (this._clipRect.width <= 0 || this._clipRect.height <= 0)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 应用当前矩阵。把转换后的位置放到输出数组中。 \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     * @param\th\r\n     * @param   italicDeg 倾斜角度，单位是度。0度无，目前是下面不动。以后要做成可调的\r\n     */\r\n    transformQuad(x: number, y: number, w: number, h: number, italicDeg: number, m: Matrix, out: any[]): void {\r\n        /*\r\n        out[0] = 100.1; out[1] = 100.1;\r\n        out[2] = 101.1; out[3] = 100.1;\r\n        out[4] = 101.1; out[5] = 101.1;\r\n        out[6] = 100.1; out[7] = 101.1;\r\n        return;\r\n        */\r\n        var xoff: number = 0;\r\n        if (italicDeg != 0) {\r\n            xoff = Math.tan(italicDeg * Math.PI / 180) * h;\r\n        }\r\n        var maxx: number = x + w; var maxy: number = y + h;\r\n\r\n        var tx: number = m.tx;\r\n        var ty: number = m.ty;\r\n        var ma: number = m.a;\r\n        var mb: number = m.b;\r\n        var mc: number = m.c;\r\n        var md: number = m.d;\r\n        var a0: number = x + xoff;\r\n        var a1: number = y;\r\n        var a2: number = maxx + xoff;\r\n        var a3: number = y;\r\n        var a4: number = maxx;\r\n        var a5: number = maxy;\r\n        var a6: number = x;\r\n        var a7: number = maxy;\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n            /* 旋转的情况下这个是错的。TODO\r\n            let dx = out[2] - out[0];\r\n            let minw = 1;\t// 限制最小宽度为1，防止细线在缩小的情况下消失。\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[2] += dx;\r\n            }\r\n            dx = out[4] - out[6];\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[4] += dx;\r\n            }\r\n            */\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    pushRT(): void {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.pushRT, this));\r\n    }\r\n    popRT(): void {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.popRT, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    //TODO:coverage\r\n    useRT(rt: RenderTexture2D): void {\r\n        //这里并没有做cliprect的保存恢复。因为认为调用这个函数的话，就是完全不走context流程了，完全自己控制。\r\n        function _use(rt: RenderTexture2D): void {\r\n            if (!rt) {\r\n                throw 'error useRT'\r\n            } else {\r\n                rt.start();\r\n                rt.clear(0, 0, 0, 0);\r\n            }\r\n        }\r\n\r\n        this.addRenderObject(SubmitCMD.create([rt], _use, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    /**\r\n     * 异步执行rt的restore函数\r\n     * @param\trt\r\n     */\r\n    //TODO:coverage\r\n    RTRestore(rt: RenderTexture2D): void {\r\n        function _restore(rt: RenderTexture2D): void {\r\n            rt.restore();\r\n        }\r\n        this.addRenderObject(SubmitCMD.create([rt], _restore, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    /**\r\n     * 强制拒绝submit合并\r\n     * 例如切换rt的时候\r\n     */\r\n    breakNextMerge(): void {\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _repaintSprite(): void {\r\n        this.sprite && this.sprite.repaint();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\ttex\r\n     * @param\tx\t\t\t\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\ttransform\t图片本身希望的矩阵\r\n     * @param\ttx\t\t\t节点的位置\r\n     * @param\tty\r\n     * @param\talpha\r\n     */\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color = 0xffffffff): void {\r\n        var oldcomp: string;\r\n        var curMat: Matrix = this._curMat;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n\r\n        if (!transform) {\r\n            this._drawTextureM(tex, x + tx, y + ty, width, height, curMat, alpha, uv, color);\r\n            if (blendMode) {\r\n                this.globalCompositeOperation = oldcomp;\r\n            }\r\n            return;\r\n        }\r\n        var tmpMat: Matrix = this._tmpMatrix;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + tx; tmpMat.ty = transform.ty + ty;\r\n        tmpMat._bTransform = transform._bTransform;\r\n\r\n        if (transform && curMat._bTransform) {\r\n            // 如果当前矩阵不是只有平移，则只能用mul的方式\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        } else {\r\n            //如果curmat没有旋转。\r\n            tmpMat.tx += curMat.tx;\r\n            tmpMat.ty += curMat.ty;\r\n            transform = tmpMat;\r\n        }\r\n        this._drawTextureM(tex, x, y, width, height, transform, alpha, uv, color);\r\n        if (blendMode)\r\n            this.globalCompositeOperation = oldcomp;\r\n    }\r\n\r\n    /**\r\n     * * 把ctx中的submits提交。结果渲染到target上\r\n     * @param\tctx\r\n     * @param\ttarget\r\n     */\r\n    private _flushToTarget(context: Context, target: RenderTexture2D): void {\r\n        //if (target._destroy) return;\r\n        //var preworldClipRect:Rectangle = RenderState2D.worldClipRect;\r\n        //裁剪不用考虑，现在是在context内部自己维护，不会乱窜\r\n        RenderState2D.worldScissorTest = false;\r\n        LayaGL.renderEngine.scissorTest(false);\r\n\r\n        var preAlpha: number = RenderState2D.worldAlpha;\r\n        var preMatrix4: any[] = RenderState2D.worldMatrix4;\r\n        var preMatrix: Matrix = RenderState2D.worldMatrix;\r\n\r\n        var preShaderDefines: ShaderDefines2D = RenderState2D.worldShaderDefines;\r\n\r\n        RenderState2D.worldMatrix = Matrix.EMPTY;\r\n\r\n        RenderState2D.restoreTempArray();\r\n        RenderState2D.worldMatrix4 = RenderState2D.TEMPMAT4_ARRAY;\r\n        RenderState2D.worldAlpha = 1;\r\n        //RenderState2D.worldFilters = null;\r\n        //RenderState2D.worldShaderDefines = null;\r\n        BaseShader.activeShader = null;\r\n\r\n        target.start();\r\n        // 如果没有命令就不要clear。这么改是因为嵌套cacheas出问题了\r\n        // 如果一个sprite cacheas normal ，他的子节点有cacheas bitmap的（包括mask等）就会不断的执行 _flushToTarget和drawCamvase,从而把target上的内容清掉\r\n        // 由于cacheas normal 导致 RenderSprite没有机会执行 _cacheStyle.canvas 存在的分支。在\r\n        if (context._submits._length > 0)\r\n            target.clear(0, 0, 0, 0);\r\n\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        context.flush();\r\n        context.clear();\r\n        target.restore();\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        //context._canvas\r\n        BaseShader.activeShader = null;\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix = preMatrix;\r\n        //RenderState2D.worldFilters = preFilters;\r\n        //RenderState2D.worldShaderDefines = preShaderDefines;\r\n    }\r\n\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\r\n        if (!canvas) return;\r\n        var src: Context = canvas.context as Context;\r\n        var submit: ISubmit;\r\n        if (src._targets) {\r\n            //生成渲染结果到src._targets上\r\n            /*\r\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\r\n            _curSubmit = SubmitBase.RENDERBASE;\r\n            //画出src._targets\r\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\r\n            */\r\n            //应用并清空canvas中的指令。如果内容需要重画，RenderSprite会给他重新加入submit\r\n            if (src._submits._length > 0) {\r\n                submit = SubmitCMD.create([src, src._targets], this._flushToTarget, this);\r\n                this._submits[this._submits._length++] = submit;\r\n            }\r\n            //在这之前就已经渲染出结果了。\r\n            this._drawRenderTexture(src._targets, x, y, width, height, null, 1.0, RenderTexture2D.flipyuv);\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n            /*\r\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\r\n            //src._targets.flush(src);\r\n            _curSubmit = SubmitBase.RENDERBASE;\r\n            //src._targets.drawTo(this, x, y, width, height);\r\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\r\n            _drawRenderTexture(src._targets, x, y, width, height,null,1.0, RenderTexture.flipyuv);\r\n            */\r\n        } else {\r\n            var canv: WebGLCacheAsNormalCanvas = (<WebGLCacheAsNormalCanvas>(canvas as any));\r\n            if (canv.touches) {\r\n                ((<any[]>canv.touches)).forEach(function (v: CharRenderInfo): void { v.touch(); });\r\n            }\r\n\r\n            submit = SubmitCanvas.create(canvas, this._shader2D.ALPHA, this._shader2D.filters);\r\n            this._submits[this._submits._length++] = submit;\r\n            ((<SubmitCanvas>submit))._key.clear();\r\n            //var sx:Number = width / canvas.width;\r\n            //var sy:Number = height / canvas.height;\r\n            var mat: Matrix = ((<SubmitCanvas>submit))._matrix;\r\n            this._curMat.copyTo(mat);\r\n            //sx != 1 && sy != 1 && mat.scale(sx, sy);\r\n            // 先加上位置，最后再乘逆\r\n            var tx: number = mat.tx, ty: number = mat.ty;\r\n            mat.tx = mat.ty = 0;\r\n            mat.transformPoint(Point.TEMP.setTo(x, y));\t// 用当前矩阵变换 (x,y)\r\n            mat.translate(Point.TEMP.x + tx, Point.TEMP.y + ty);\t// 加上原来的 (tx,ty)\r\n\r\n            Matrix.mul(canv.invMat, mat, mat);\r\n\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1, color: number = 0xffffffff): boolean {\r\n        this._drawCount++;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n        }\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width, height, 0, m || this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv || Texture.DEF_UV, color, true);\r\n            //if (GlUtils.fillRectImgVb( _mesh._vb, _clipRect, x, y, width , height , uv || Texture.DEF_UV, m || _curMat, rgba, this)) {\r\n            var submit: SubmitTarget = this._curSubmit = SubmitTarget.create(this, this._mesh, shaderValue, rt);\r\n            submit.blendType = (blend == -1) ? this._nBlendType : blend;\r\n            this._copyClipInfo((<SubmitBase>(submit as any)), this._globalClipMatrix);\r\n            submit._numEle = 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n            this._submits[this._submits._length++] = submit;\r\n            //暂时drawTarget不合并\r\n            this._curSubmit = SubmitBase.RENDERBASE\r\n            return true;\r\n        }\r\n        //暂时drawTarget不合并\r\n        this._curSubmit = SubmitBase.RENDERBASE\r\n        return false;\r\n    }\r\n\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\r\n\r\n        if (!tex._getSource()) { //source内调用tex.active();\r\n            if (this.sprite) {\r\n                ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            }\r\n            return;\r\n        }\r\n        var oldcomp: string | null = null;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n        this._drawCount++;\r\n\r\n        // 为了提高效率，把一些变量放到这里\r\n        var tmpMat = this._tmpMatrix;\r\n        var triMesh = this._triangleMesh!;\r\n\r\n        var webGLImg = tex.bitmap;\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        var sameKey: boolean = preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === webGLImg.id && preKey.blendShader == this._nBlendType;\r\n\r\n        //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n        //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n        if (triMesh.vertNum + vertices.length / 2 > Context._MAXVERTNUM) {\r\n            triMesh = this._triangleMesh = MeshTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(triMesh);\r\n            sameKey = false;\t//新的mesh不能算samekey了\r\n        }\r\n        if (!sameKey) {\r\n            //添加一个新的submit\r\n            var submit: SubmitTexture = this._curSubmit = SubmitTexture.create(this, triMesh, Value2D.create(RenderSpriteData.Texture2D));\r\n            submit.shaderValue.textureHost = tex;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            submit._key.submitType = SubmitBase.KEY_TRIANGLES;\r\n            submit._key.other = webGLImg.id;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            this._submits[this._submits._length++] = submit;\r\n        }\r\n\r\n        var rgba: number = this._mixRGBandAlpha(colorNum, this._shader2D.ALPHA * alpha);\r\n        if (!this._drawTriUseAbsMatrix) {\r\n            if (!matrix) {\r\n                tmpMat.a = 1; tmpMat.b = 0; tmpMat.c = 0; tmpMat.d = 1; tmpMat.tx = x; tmpMat.ty = y;\r\n            } else {\r\n                tmpMat.a = matrix.a; tmpMat.b = matrix.b; tmpMat.c = matrix.c; tmpMat.d = matrix.d; tmpMat.tx = matrix.tx + x; tmpMat.ty = matrix.ty + y;\r\n            }\r\n            Matrix.mul(tmpMat, this._curMat, tmpMat);\r\n            triMesh.addData(vertices, uvs, indices, tmpMat || this._curMat, rgba);\r\n        } else {\r\n            // 这种情况是drawtexture转成的drawTriangle，直接使用matrix就行，传入的xy都是0\r\n            triMesh.addData(vertices, uvs, indices, matrix, rgba);\r\n        }\r\n        this._curSubmit._numEle += indices.length;\r\n\r\n        if (blendMode) {\r\n            this.globalCompositeOperation = oldcomp!;\r\n        }\r\n        //return true;\r\n    }\r\n\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        SaveTransform.save(this);\r\n        Matrix.mul(Matrix.TEMP.setTo(a, b, c, d, tx, ty), this._curMat, this._curMat);\t//TODO 这里会有效率问题。一堆的set\r\n        this._curMat._checkTransform();\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    _transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, this._curMat, this._curMat);\r\n        matrix.setTranslate(0, 0);\r\n        this._curMat._bTransform = true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    setTransformByMatrix(value: Matrix): void {\r\n        value.copyTo(this._curMat);\r\n    }\r\n\r\n    rotate(angle: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.rotateEx(angle);\r\n    }\r\n\r\n    scale(scaleX: number, scaleY: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.scaleEx(scaleX, scaleY);\r\n    }\r\n\r\n    clipRect(x: number, y: number, width: number, height: number, escape?: boolean): void {\r\n        SaveClipRect.save(this);\r\n        if (this._clipRect == Context.MAXCLIPRECT) {\r\n            this._clipRect = new Rectangle(x, y, width, height);\r\n        } else {\r\n            this._clipRect.width = width;\r\n            this._clipRect.height = height;\r\n\r\n            //把xy转换到当前矩阵空间。宽高不用转换，这样在shader中计算的时候就不用把方向normalize了\r\n            this._clipRect.x = x;\r\n            this._clipRect.y = y;\r\n        }\r\n        this._clipID_Gen++;\r\n        this._clipID_Gen %= 10000;\r\n        this._clipInfoID = this._clipID_Gen;\r\n\r\n        if (escape) {\r\n            defaultClipMatrix.copyTo(this._globalClipMatrix);\r\n            return;\r\n        }\r\n\r\n        var cm: Matrix = this._globalClipMatrix;\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转，翻转\r\n        var minx: number = cm.tx;\r\n        var miny: number = cm.ty;\r\n        var maxx: number = minx + cm.a;\r\n        var maxy: number = miny + cm.d;\r\n        //TEMP end\r\n\r\n        if (this._clipRect.width >= Const.MAX_CLIP_SIZE) {\r\n            cm.a = cm.d = Const.MAX_CLIP_SIZE;\r\n            cm.b = cm.c = cm.tx = cm.ty = 0;\r\n        } else {\r\n            //其实就是矩阵相乘\r\n            if (this._curMat._bTransform) {\r\n                cm.tx = this._clipRect.x * this._curMat.a + this._clipRect.y * this._curMat.c + this._curMat.tx;\r\n                cm.ty = this._clipRect.x * this._curMat.b + this._clipRect.y * this._curMat.d + this._curMat.ty;\r\n                cm.a = this._clipRect.width * this._curMat.a;\r\n                cm.b = this._clipRect.width * this._curMat.b;\r\n                cm.c = this._clipRect.height * this._curMat.c;\r\n                cm.d = this._clipRect.height * this._curMat.d;\r\n            } else {\r\n                cm.tx = this._clipRect.x + this._curMat.tx;\r\n                cm.ty = this._clipRect.y + this._curMat.ty;\r\n                cm.a = this._clipRect.width;\r\n                cm.b = cm.c = 0;\r\n                cm.d = this._clipRect.height;\r\n            }\r\n            if (this._incache) {\r\n                this._clipInCache = true;\r\n            }\r\n        }\r\n\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转,翻转\r\n        if (cm.a > 0 && cm.d > 0) {\r\n            var cmaxx: number = cm.tx + cm.a;\r\n            var cmaxy: number = cm.ty + cm.d;\r\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\r\n                //超出范围了\r\n                cm.a = -0.1; cm.d = -0.1;\r\n            } else {\r\n                if (cm.tx < minx) {\r\n                    cm.a -= (minx - cm.tx);\r\n                    cm.tx = minx;\r\n                }\r\n                if (cmaxx > maxx) {\r\n                    cm.a -= (cmaxx - maxx);\r\n                }\r\n                if (cm.ty < miny) {\r\n                    cm.d -= (miny - cm.ty);\r\n                    cm.ty = miny;\r\n                }\r\n                if (cmaxy > maxy) {\r\n                    cm.d -= (cmaxy - maxy);\r\n                }\r\n                if (cm.a <= 0) cm.a = -0.1;\r\n                if (cm.d <= 0) cm.d = -0.1;\r\n            }\r\n        }\r\n        //TEMP end\r\n    }\r\n\r\n    addRenderObject(o: ISubmit): void {\r\n        this._submits[this._submits._length++] = o;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tstart\r\n     * @param\tend\r\n     */\r\n    submitElement(start: number, end: number): number {\r\n        var mainCtx: boolean = this.isMain;\r\n        var renderList: any[] = this._submits;\r\n        var ret: number = ((<any>renderList))._length;\r\n        end < 0 && (end = ((<any>renderList))._length);\r\n        var submit = SubmitBase.RENDERBASE;\r\n        while (start < end) {\r\n            this._renderNextSubmitIndex = start + 1;\r\n            if (renderList[start] === SubmitBase.RENDERBASE) {\r\n                start++;\r\n                continue;\r\n            }\r\n            SubmitBase.preRender = submit;\r\n            submit = renderList[start];\r\n            //只有submitscissor才会返回多个\r\n            start += submit.renderSubmit();\r\n            //本来做了个优化，如果是主画布，用完立即releaseRender. 但是实际没有什么效果，且由于submit需要用来对比，即使用完也不能修改，所以这个优化又去掉了\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    flush(): number {\r\n        this._clipID_Gen = 0;\r\n        var ret: number = this.submitElement(0, this._submits._length);\r\n        this._path && this._path.reset();\r\n        SkinMeshBuffer.instance && SkinMeshBuffer.getInstance().reset();\r\n\r\n        //Stat.mesh2DNum += meshlist.length;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n\r\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this._mesh = MeshQuadTexture.getAMesh(this.isMain);\t//TODO 不要这样。\r\n        this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n        this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n        this.meshlist.push(this._mesh, this._pathMesh, this._triangleMesh);\r\n\r\n        this._flushCnt++;\r\n        //charbook gc\r\n        if (this._flushCnt % 60 == 0 && this.isMain) {\r\n            if (TextRender.textRenderInst) {\r\n                TextRender.textRenderInst.GC();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*******************************************start矢量绘制***************************************************/\r\n\r\n    beginPath(convex: boolean = false): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.beginPath(convex);\r\n    }\r\n\r\n    closePath(): void {\r\n        //_path.closePath = true;\r\n        this._path.closePath();\r\n    }\r\n\r\n    /**\r\n     * 添加一个path。\r\n     * @param\tpoints [x,y,x,y....]\t这个会被保存下来，所以调用者需要注意复制。\r\n     * @param\tclose\t是否闭合\r\n     * @param   convex 是否是凸多边形。convex的优先级是这个最大。fill的时候的次之。其实fill的时候不应该指定convex，因为可以多个path\r\n     * @param\tdx  需要添加的平移。这个需要在应用矩阵之前应用。\r\n     * @param\tdy\r\n     */\r\n    addPath(points: any[], close: boolean, convex: boolean, dx: number, dy: number): void {\r\n        let sz = points.length;\r\n        for (let i = 0; i < sz - 1; i += 2) {\r\n            points[i] += dx;\r\n            points[i + 1] += dy;\r\n        }\r\n        if (close && sz > 5 && (points[sz - 2] != points[0] || points[sz - 1] != points[1])) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        this._getPath().push(points, convex);\r\n    }\r\n\r\n    fill(): void {\r\n        var m: Matrix = this._curMat;\r\n        var tPath: Path = this._getPath();\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey: boolean = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType);\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n        if (!sameKey) {\r\n            this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n        }\r\n        var rgba: number = this.mixRGBandAlpha(this.fillStyle.toInt());\r\n        var curEleNum: number = 0;\r\n        var idx: any[];\r\n        //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n        for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\r\n            var p: any = tPath.paths[i];\r\n            var vertNum: number = p.path.length / 2;\r\n            if (vertNum < 3 || (vertNum == 3 && !p.convex))\r\n                continue;\r\n            var cpath: any[] = p.path.concat();\r\n            // 应用矩阵转换顶点\r\n            var pi: number = 0;\r\n            var xp: number, yp: number;\r\n            var _x: number, _y: number;\r\n            if (m._bTransform) {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n\r\n                    cpath[xp] = m.a * _x + m.c * _y + m.tx;\r\n                    cpath[yp] = m.b * _x + m.d * _y + m.ty;\r\n                }\r\n            } else {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n                    cpath[xp] = _x + m.tx;\r\n                    cpath[yp] = _y + m.ty;\r\n                }\r\n            }\r\n\r\n            if (this._pathMesh.vertNum + vertNum > Context._MAXVERTNUM) {\r\n                //;\r\n                //顶点数超了，要先提交一次\r\n                this._curSubmit._numEle += curEleNum;\r\n                curEleNum = 0;\r\n                //然后用新的mesh，和新的submit。\r\n                this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n\r\n            var curvert: number = this._pathMesh.vertNum;\r\n            //生成 ib\r\n            if (p.convex) { //convex的ib比较容易\r\n                var faceNum: number = vertNum - 2;\r\n                idx = new Array(faceNum * 3);\r\n                var idxpos: number = 0;\r\n                for (var fi: number = 0; fi < faceNum; fi++) {\r\n                    idx[idxpos++] = curvert;\r\n                    idx[idxpos++] = fi + 1 + curvert;\r\n                    idx[idxpos++] = fi + 2 + curvert;\r\n                }\r\n            }\r\n            else {\r\n                idx = Earcut.earcut(cpath, null, 2);\t//返回索引\r\n                if (curvert > 0) {\r\n                    //修改ib\r\n                    for (var ii: number = 0; ii < idx.length; ii++) {\r\n                        idx[ii] += curvert;\r\n                    }\r\n                }\r\n            }\r\n            //填充mesh\r\n            this._pathMesh.addVertAndIBToMesh(this, cpath, rgba, idx);\r\n            curEleNum += idx.length;\r\n        }\r\n        this._curSubmit._numEle += curEleNum;\r\n    }\r\n\r\n    private addVGSubmit(mesh: Mesh2D): Submit {\r\n        //elenum设为0，后面再加\r\n        var submit: Submit = Submit.createShape(this, mesh, 0, Value2D.create(RenderSpriteData.Primitive));\r\n        //submit._key.clear();\r\n        //submit._key.blendShader = _submitKey.blendShader;\t//TODO 这个在哪里赋值的啊\r\n        submit._key.submitType = SubmitBase.KEY_VG;\r\n        this._submits[this._submits._length++] = submit;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n        return submit;\r\n    }\r\n\r\n    stroke(): void {\r\n        if (this.lineWidth > 0) {\r\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var tPath: Path = this._getPath();\r\n            var submit: Submit = this._curSubmit;\r\n            var sameKey: boolean = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType);\r\n            sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n\r\n            if (!sameKey) {\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n            var curEleNum: number = 0;\r\n            //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n            for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\r\n                var p: any = tPath.paths[i];\r\n                if (p.path.length <= 0)\r\n                    continue;\r\n                var idx: any[] = [];\r\n                var vertex: any[] = [];//x,y\r\n                //p.path.loop;\r\n                //填充vbib\r\n                var maxVertexNum: number = p.path.length * 2;\t//最大可能产生的顶点数。这个需要考虑考虑\r\n                if (maxVertexNum < 2)\r\n                    continue;\r\n                if (this._pathMesh.vertNum + maxVertexNum > Context._MAXVERTNUM) {\r\n                    //;\r\n                    //顶点数超了，要先提交一次\r\n                    this._curSubmit._numEle += curEleNum;\r\n                    curEleNum = 0;\r\n                    //然后用新的mesh，和新的submit。\r\n                    this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                    this.meshlist.push(this._pathMesh);\r\n                    this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n                }\r\n                //这个需要放在创建新的mesh的后面，因为需要mesh.vertNum,否则如果先调用这个，再创建mesh，那么ib就不对了\r\n                BasePoly.createLine2(p.path, idx, this.lineWidth, this._pathMesh.vertNum, vertex, p.loop);\t//_pathMesh.vertNum 是要加到生成的ib上的\r\n                // 变换所有的点\r\n                var ptnum: number = vertex.length / 2;\r\n                var m: Matrix = this._curMat;\r\n                var pi: number = 0;\r\n                var xp: number, yp: number;\r\n                var _x: number, _y: number;\r\n                if (m._bTransform) {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n\r\n                        vertex[xp] = m.a * _x + m.c * _y + m.tx;\r\n                        vertex[yp] = m.b * _x + m.d * _y + m.ty;\r\n                    }\r\n                } else {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n                        vertex[xp] = _x + m.tx;\r\n                        vertex[yp] = _y + m.ty;\r\n                    }\r\n                }\r\n\r\n                //this.drawPoly(0, 0, p.path, fillStyle._color.numColor, 0, 0, p.convex);\r\n                //填充mesh\r\n                this._pathMesh.addVertAndIBToMesh(this, vertex, rgba, idx);\r\n                curEleNum += idx.length;\r\n            }\r\n            this._curSubmit._numEle += curEleNum;\r\n        }\r\n    }\r\n\r\n    moveTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.newPath();\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tb 是否应用矩阵\r\n     */\r\n    lineTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        if (Math.abs(x - tPath._lastOriX) < 1e-3 && Math.abs(y - tPath._lastOriY) < 1e-3)//不判断的话，下面的画线算法受不了\r\n            return;\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n    /*\r\n    public function drawCurves(x:Number, y:Number,points:Array, lineColor:*, lineWidth:Number = 1):void {\r\n        //setPathId(-1);\r\n        beginPath();\r\n        strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        var points:Array = points;\r\n        //movePath(x, y); TODO 这个被去掉了\r\n        moveTo(points[0], points[1]);\r\n        var i:int = 2, n:int = points.length;\r\n        while (i < n) {\r\n            quadraticCurveTo(points[i++], points[i++], points[i++], points[i++]);\r\n        }\r\n        stroke();\r\n    }\r\n    */\r\n\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\r\n        /*\r\n        if (mId != -1) {\r\n            if (mHaveKey) {\r\n                return;\r\n            }\r\n        }\r\n        */\r\n        var i: number = 0;\r\n        var x: number = 0, y: number = 0;\r\n        var dx: number = this._path._lastOriX - x1;\r\n        var dy: number = this._path._lastOriY - y1;\r\n        var len1: number = Math.sqrt(dx * dx + dy * dy);\r\n        if (len1 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx: number = dx / len1;\r\n        var ndy: number = dy / len1;\r\n        var dx2: number = x2 - x1;\r\n        var dy2: number = y2 - y1;\r\n        var len22: number = dx2 * dx2 + dy2 * dy2;\r\n        var len2: number = Math.sqrt(len22);\r\n        if (len2 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx2: number = dx2 / len2;\r\n        var ndy2: number = dy2 / len2;\r\n        var odx: number = ndx + ndx2;\r\n        var ody: number = ndy + ndy2;\r\n        var olen: number = Math.sqrt(odx * odx + ody * ody);\r\n        if (olen <= 0.000001) {\r\n            return;\r\n        }\r\n\r\n        var nOdx: number = odx / olen;\r\n        var nOdy: number = ody / olen;\r\n\r\n        var alpha: number = Math.acos(nOdx * ndx + nOdy * ndy);\r\n        var halfAng: number = Math.PI / 2 - alpha;\r\n\r\n        len1 = r / Math.tan(halfAng);\r\n        var ptx1: number = len1 * ndx + x1;\r\n        var pty1: number = len1 * ndy + y1;\r\n\r\n        var orilen: number = Math.sqrt(len1 * len1 + r * r);\r\n        //圆心\r\n        var orix: number = x1 + nOdx * orilen;\r\n        var oriy: number = y1 + nOdy * orilen;\r\n\r\n        var ptx2: number = len1 * ndx2 + x1;\r\n        var pty2: number = len1 * ndy2 + y1;\r\n\r\n        var dir: number = ndx * ndy2 - ndy * ndx2;\r\n\r\n        var fChgAng: number = 0;\r\n        var sinx: number = 0.0;\r\n        var cosx: number = 0.0;\r\n        if (dir >= 0) {\r\n            fChgAng = halfAng * 2;\r\n            var fda: number = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n        else {\r\n            fChgAng = -halfAng * 2;\r\n            fda = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n\r\n        //x = _curMat.a * ptx1 + _curMat.c * pty1 /*+ _curMat.tx*/;\r\n        //y = _curMat.b * ptx1 + _curMat.d * pty1 /*+ _curMat.ty*/;\r\n        var lastx: number = this._path._lastOriX, lasty: number = this._path._lastOriY;\t//没有矩阵转换的上一个点\r\n        var _x1: number = ptx1, _y1: number = pty1;\r\n        if (Math.abs(_x1 - this._path._lastOriX) > 0.1 || Math.abs(_y1 - this._path._lastOriY) > 0.1) {\r\n            x = _x1;// _curMat.a * _x1 + _curMat.c * _y1 + _curMat.tx;\r\n            y = _y1;//_curMat.b * _x1 + _curMat.d * _y1 + _curMat.ty;\r\n            lastx = _x1;\r\n            lasty = _y1;\r\n            this._path._lastOriX = x;\r\n            this._path._lastOriY = y;\r\n            this._path.addPoint(x, y);\r\n        }\r\n        var cvx: number = ptx1 - orix;\r\n        var cvy: number = pty1 - oriy;\r\n        var tx: number = 0.0;\r\n        var ty: number = 0.0;\r\n        for (i = 0; i < Context.SEGNUM; i++) {\r\n            var cx: number = cvx * cosx + cvy * sinx;\r\n            var cy: number = -cvx * sinx + cvy * cosx;\r\n            x = cx + orix;\r\n            y = cy + oriy;\r\n\r\n            //x1 = _curMat.a * x + _curMat.c * y /*+ _curMat.tx*/;\r\n            //y1 = _curMat.b * x + _curMat.d * y /*+ _curMat.ty*/;\r\n            //x = x1;\r\n            //y = y1;\r\n            if (Math.abs(lastx - x) > 0.1 || Math.abs(lasty - y) > 0.1) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                this._path._lastOriX = x;\r\n                this._path._lastOriY = y;\r\n                this._path.addPoint(x, y);\r\n                lastx = x;\r\n                lasty = y;\r\n            }\r\n            cvx = cx;\r\n            cvy = cy;\r\n        }\r\n    }\r\n\r\n    arc(cx: number, cy: number, rx: number, ry: number, startAngle: number, endAngle: number, counterclockwise: boolean = false, b: boolean = true, minNum = 10): void {\r\n        /* TODO 缓存还没想好\r\n        if (mId != -1) {\r\n            var tShape:IShape = VectorGraphManager.getInstance().shapeDic[this.mId];\r\n            if (tShape) {\r\n                if (mHaveKey && !tShape.needUpdate(_curMat))\r\n                    return;\r\n            }\r\n            cx = 0;\r\n            cy = 0;\r\n        }\r\n        */\r\n        var a: number = 0, da: number = 0, hda: number = 0, kappa: number = 0;\r\n        var dx: number = 0, dy: number = 0, x: number = 0, y: number = 0, tanx: number = 0, tany: number = 0;\r\n        var i: number, ndivs: number, nvals: number;\r\n\r\n        // Clamp angles\r\n        da = endAngle - startAngle;\r\n        if (!counterclockwise) {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = Math.PI * 2;\r\n            } else {\r\n                while (da < 0.0) {\r\n                    da += Math.PI * 2;\r\n                }\r\n            }\r\n        } else {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = -Math.PI * 2;\r\n            } else {\r\n                while (da > 0.0) {\r\n                    da -= Math.PI * 2;\r\n                }\r\n            }\r\n        }\r\n        var sx: number = this.getMatScaleX();\r\n        var sy: number = this.getMatScaleY();\r\n        var sr: number = rx * (sx > sy ? sx : sy);\r\n        var cl: number = 2 * Math.PI * sr;\r\n        ndivs = (Math.max(cl / minNum, minNum)) | 0;\r\n\r\n        hda = (da / ndivs) / 2.0;\r\n        kappa = Math.abs(4 / 3 * (1 - Math.cos(hda)) / Math.sin(hda));\r\n        if (counterclockwise)\r\n            kappa = -kappa;\r\n\r\n        nvals = 0;\r\n        var tPath: Path = this._getPath();\r\n        for (i = 0; i <= ndivs; i++) {\r\n            a = startAngle + da * (i / ndivs);\r\n            dx = Math.cos(a);\r\n            dy = Math.sin(a);\r\n            x = cx + dx * rx;\r\n            y = cy + dy * ry;\r\n            if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                tPath.addPoint(x, y);\r\n            }\r\n        }\r\n        dx = Math.cos(endAngle);\r\n        dy = Math.sin(endAngle);\r\n        x = cx + dx * rx;\r\n        y = cy + dy * ry;\r\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n            //var _x2:Number = x, _y2:Number = y;\r\n            //x = _curMat.a * _x2 + _curMat.c * _y2 + _curMat.tx;\r\n            //y = _curMat.b * _x2 + _curMat.d * _y2 + _curMat.ty;\r\n            tPath.addPoint(x, y);\r\n        }\r\n    }\r\n\r\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\r\n        var tBezier: Bezier = Bezier.I;\r\n        var tResultArray: any[] = [];\r\n        //var _x1:Number = x, _y1:Number = y;\r\n        //x = _curMat.a * _x1 + _curMat.c * _y1 ;// + _curMat.tx;\r\n        //y = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        //_x1 = cpx, _y1 = cpy;\r\n        //cpx = _curMat.a * _x1 + _curMat.c * _y1;// + _curMat.tx;\r\n        //cpy = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        var tArray: any[] = tBezier.getBezierPoints([this._path._lastOriX, this._path._lastOriY, cpx, cpy, x, y], 30, 2);\r\n        for (var i: number = 0, n: number = tArray.length / 2; i < n; i++) {\r\n            this.lineTo(tArray[i * 2], tArray[i * 2 + 1]);\r\n        }\r\n        this.lineTo(x, y);\r\n    }\r\n\r\n\r\n    /**\r\n     * 把颜色跟当前设置的alpha混合\r\n     * @return\r\n     */\r\n    mixRGBandAlpha(color: number): number {\r\n        return this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n    }\r\n    /**@internal */\r\n    _mixRGBandAlpha(color: number, alpha: number): number {\r\n        if (alpha >= 1) {\r\n            return color;\r\n        }\r\n        var a: number = ((color & 0xff000000) >>> 24);\r\n        //TODO 这里容易出问题，例如颜色的alpha部分虽然为0，但是他的意义就是0，不能假设是没有设置alpha。例如级联多个alpha就会生成这种结果\r\n        if (a != 0) {\r\n            a *= alpha;\r\n        } else {\r\n            a = alpha * 255;\r\n        }\r\n        return (color & 0x00ffffff) | (a << 24);\r\n    }\r\n\r\n    strokeRect(x: number, y: number, width: number, height: number, parameterLineWidth: number): void {\r\n        var tW: number = parameterLineWidth * 0.5;\r\n        //line(x - tW, y, x + width + tW, y, parameterLineWidth, _curMat);\r\n        //line(x + width, y, x + width, y + height, parameterLineWidth, _curMat);\r\n        //line(x, y, x, y + height, parameterLineWidth, _curMat);\r\n        //line(x - tW, y + height, x + width + tW, y + height, parameterLineWidth, _curMat);\r\n        /**\r\n         * p1-------------------------------p2\r\n         * |  x,y                      x+w,y|\r\n         * |     p4--------------------p3   |\r\n         * |     |                     |    |\r\n         * |     p6--------------------p7   |\r\n         * |  x,y+h                  x+w,y+h|\r\n         * p5-------------------------------p8\r\n         * \r\n         * 不用了\r\n         * 这个其实用4个fillrect拼起来更好，能与fillrect合并。虽然多了几个点。\r\n         */\r\n        //TODO 这里能不能与下面的stroke合并一下\r\n        if (this.lineWidth > 0) {\r\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var hw: number = this.lineWidth / 2;\r\n            this._fillRect(x - hw, y - hw, width + this.lineWidth, this.lineWidth, rgba);\t\t\t\t//上\r\n            this._fillRect(x - hw, y - hw + height, width + this.lineWidth, this.lineWidth, rgba);\t\t//下\r\n            this._fillRect(x - hw, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t\t\t//左\r\n            this._fillRect(x - hw + width, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t//右\r\n        }\r\n    }\r\n\r\n    clip(): void {\r\n    }\r\n\r\n    /*******************************************end矢量绘制***************************************************/\r\n    //TODO:coverage\r\n    drawParticle(x: number, y: number, pt: any): void {\r\n        pt.x = x;\r\n        pt.y = y;\r\n        this._submits[this._submits._length++] = pt;\r\n    }\r\n\r\n    private _getPath(): Path {\r\n        return this._path || (this._path = new Path());\r\n    }\r\n\r\n    /**获取canvas*/\r\n    //注意这个是对外接口\r\n    get canvas(): HTMLCanvas {\r\n        return this._canvas;\r\n    }\r\n    //=============新增==================\t\r\n    /* 下面的方式是有bug的。canvas是直接save，restore，现在是为了优化，但是有bug，所以先不重载了\r\n    public function saveTransform(matrix:Matrix):void {\r\n        this._curMat.copyTo(matrix);\r\n    }\r\n    \r\n    public function restoreTransform(matrix:Matrix):void {\r\n        matrix.copyTo(this._curMat);\r\n    }\r\n    \r\n    public function transformByMatrix(matrix:Matrix,tx:Number,ty:Number):void {\r\n        var mat:Matrix = _curMat;\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, mat, mat);\r\n        matrix.setTranslate(0, 0);\r\n        mat._bTransform = true;\r\n    }\r\n    */\r\n\r\n    /* 下面的是错误的。位置没有被缩放\r\n    public function transformByMatrix(matrix:Matrix, tx:Number, ty:Number):void {\r\n        SaveTransform.save(this);\t\t\t\r\n        Matrix.mul(matrix, _curMat, _curMat);\t\r\n        _curMat.tx += tx;\r\n        _curMat.ty += ty;\r\n        _curMat._checkTransform();\r\n    }\r\n            \r\n    public function transformByMatrixNoSave(matrix:Matrix, tx:Number, ty:Number):void {\r\n        Matrix.mul(matrix, _curMat, _curMat);\t\r\n        _curMat.tx += tx;\r\n        _curMat.ty += ty;\r\n        _curMat._checkTransform();\r\n    }\r\n    */\r\n\r\n    private static tmpuv1: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    /**\r\n     * 专用函数。通过循环创建来水平填充\r\n     * @param\ttex\r\n     * @param\tbmpid\r\n     * @param\tuv\t\t希望循环的部分的uv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     */\r\n    private _fillTexture_h(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, w: number, color: number): void {\r\n        if (oriw <= 0)\r\n            console.error('_fillTexture_h error: oriw must>0');\r\n\r\n        var stx: number = x;\r\n        var num: number = Math.floor(w / oriw);\r\n        var left: number = w % oriw;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, stx, y, oriw, orih, this._curMat, uv, 1, false, color);\r\n            stx += oriw;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var du: number = uv[2] - uv[0];\r\n            var uvr: number = uv[0] + du * (left / oriw);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uvr; tuv[3] = uv[3];\r\n            tuv[4] = uvr; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this._inner_drawTexture(tex, imgid, stx, y, left, orih, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 专用函数。通过循环创建来垂直填充\r\n     * @param\ttex\r\n     * @param\timgid\r\n     * @param\tuv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\th\r\n     */\r\n    private _fillTexture_v(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, h: number, color: number): void {\r\n        if (orih <= 0)\r\n            console.error('_fillTexture_v error: orih must>0');\r\n        var sty: number = y;\r\n        var num: number = Math.floor(h / orih);\r\n        var left: number = h % orih;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, orih, this._curMat, uv, 1, false, color);\r\n            sty += orih;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var dv: number = uv[7] - uv[1];\r\n            var uvb: number = uv[1] + dv * (left / orih);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3];\r\n            tuv[4] = uv[4]; tuv[5] = uvb; tuv[6] = uv[6]; tuv[7] = uvb;\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, left, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    private static tmpUV: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    private static tmpUVRect: any[] = [0, 0, 0, 0];\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!tex._getSource())\r\n            return;\r\n        tx += gx;\r\n        ty += gy;\r\n\r\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\r\n\r\n        var top: number = sizeGrid[0];\r\n        var left: number = sizeGrid[3];\r\n        var right: number = sizeGrid[1];\r\n        var bottom: number = sizeGrid[2];\r\n        var repeat: boolean = sizeGrid[4];\r\n        var needClip: boolean = false;\r\n\r\n        if (width == tex.width) {\r\n            left = right = 0;\r\n        }\r\n        if (height == tex.height) {\r\n            top = bottom = 0;\r\n        }\r\n\r\n        var d_top: number = top / h;\r\n        var d_left: number = left / w;\r\n        var d_right: number = right / w;\r\n        var d_bottom: number = bottom / h;\r\n\r\n        //处理进度条不好看的问题\r\n        // if (left + right > width) {\r\n        // \tvar clipWidth: number = width;\r\n        // \tneedClip = true;\r\n        // \twidth = left + right;\r\n        // \tthis.save();\r\n        // \tthis.clipRect(0 + tx, 0 + ty, clipWidth, height);\r\n        // }\r\n\r\n        var imgid: number = (tex.bitmap as Texture2D).id;\r\n        var mat: Matrix = this._curMat;\r\n        var tuv = this._tempUV;\r\n\r\n        //解决九宫格设置left+right或top+bottom的累加值超过宽或高导致九宫格显示错乱的bug\r\n        var scale_x = 1;\r\n        var scale_y = 1;\r\n        if (left + right > width) scale_x = width / (left + right);\r\n        if (top + bottom > height) scale_y = height / (top + bottom);\r\n        left *= scale_x;\r\n        right *= scale_x;\r\n        top *= scale_y;\r\n        bottom *= scale_y;\r\n\r\n        // 整图的uv\r\n        // 一定是方的，所以uv只要左上右下就行\r\n        var uvl = uv[0];\r\n        var uvt = uv[1];\r\n        var uvr = uv[4];\r\n        var uvb = uv[5];\r\n\r\n        // 小图的uv\r\n        var uvl_ = uvl;\r\n        var uvt_ = uvt;\r\n        var uvr_ = uvr;\r\n        var uvb_ = uvb;\r\n\r\n        //绘制四个角\r\n        // 构造uv\r\n        if (left && top) {\r\n            uvr_ = uvl + d_left;\r\n            uvb_ = uvt + d_top;\r\n            tuv[0] = uvl, tuv[1] = uvt, tuv[2] = uvr_, tuv[3] = uvt,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, tx, ty, left, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && top) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt;\r\n            uvr_ = uvr; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, 0 + ty, right, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (left && bottom) {\r\n            uvl_ = uvl; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvl + d_left; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, 0 + tx, height - bottom + ty, left, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && bottom) {\r\n            uvl_ = uvr - d_right; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, height - bottom + ty, right, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        //绘制上下两个边\r\n        if (top) {\r\n            uvl_ = uvl + d_left; uvt_ = uvt;\r\n            uvr_ = uvr - d_right; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, top, left + tx, ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, ty, width - left - right, top, mat, tuv, 1, false, color);\r\n            }\r\n\r\n        }\r\n        if (bottom) {\r\n            uvl_ = uvl + d_left; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr - d_right; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, bottom, left + tx, height - bottom + ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, height - bottom + ty, width - left - right, bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制左右两边\r\n        if (left) {\r\n            uvl_ = uvl; uvt_ = uvt + d_top;\r\n            uvr_ = uvl + d_left; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, left, tex.height - top - bottom, tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, tx, top + ty, left, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        if (right) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt + d_top;\r\n            uvr_ = uvr; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, right, tex.height - top - bottom, width - right + tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, width - right + tx, top + ty, right, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制中间\r\n        uvl_ = uvl + d_left; uvt_ = uvt + d_top;\r\n        uvr_ = uvr - d_right; uvb_ = uvb - d_bottom;\r\n        tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n            tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n        if (repeat) {\r\n            var tuvr: any[] = Context.tmpUVRect;\r\n            tuvr[0] = uvl_; tuvr[1] = uvt_;\r\n            tuvr[2] = uvr_ - uvl_; tuvr[3] = uvb_ - uvt_;\r\n            // 这个如果用重复的可能比较多，所以采用filltexture的方法，注意这样会打断合并\r\n            this._fillTexture(tex, tex.width - left - right, tex.height - top - bottom, tuvr, left + tx, top + ty, width - left - right, height - top - bottom, 'repeat', 0, 0, color);\r\n        } else {\r\n            this._inner_drawTexture(tex, imgid, left + tx, top + ty, width - left - right, height - top - bottom, mat, tuv, 1, false, color);\r\n        }\r\n\r\n        if (needClip) this.restore();\r\n    }\r\n    addRenderObject3D(scene3D: ISubmit): void {\r\n        this._curSubmit = SubmitBase.RENDERBASE;//打断2D合并的renderKey\r\n        this.addRenderObject(scene3D);\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass ContextParams {\r\n    static DEFAULT: ContextParams;\r\n\r\n    lineWidth: number = 1;\r\n    textAlign: string;\r\n    textBaseline: string;\r\n\r\n    clear(): void {\r\n        this.lineWidth = 1;\r\n        this.textAlign = this.textBaseline = null;\r\n    }\r\n\r\n    make(): ContextParams {\r\n        return this === ContextParams.DEFAULT ? new ContextParams() : this;\r\n    }\r\n}\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n    //@ts-ignore\r\n    Context = NativeContext;\r\n}\r\n","import { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { Context } from \"./Context\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Resource } from \"./Resource\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>HTMLCanvas</code> 是 Html Canvas 的代理类，封装了 Canvas 的属性和方法。\r\n */\r\nexport class HTMLCanvas extends Resource {\r\n\r\n    private _ctx: any;\r\n    /**@internal */\r\n    _source: HTMLCanvasElement;\r\n    /**@internal */\r\n    _texture: Texture | RenderTexture2D;\r\n    /**@private */\r\n    protected _width: number;\r\n    /**@private */\r\n    protected _height: number;\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _getSource() {\r\n        return this._source;\r\n    }\r\n    /**\r\n     * 根据指定的类型，创建一个 <code>HTMLCanvas</code> 实例。\r\n     */\r\n    constructor(createCanvas: boolean = false) {\r\n        super();\r\n        if (createCanvas)\t//webgl模式下不建立。除非强制指，例如绘制文字部分\r\n            this._source = Browser.createElement(\"canvas\");\r\n        else {\r\n            this._source = this as unknown as HTMLCanvasElement;\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * 清空画布内容。\r\n     */\r\n    clear(): void {\r\n        if (this._ctx) {\r\n            if (this._ctx.clear) {\r\n                this._ctx.clear();\r\n            } else {\r\n                this._ctx.clearRect(0, 0, this._width, this._height);\r\n            }\r\n        }\r\n        if (this._texture) {\r\n            this._texture.destroy();\r\n            this._texture = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁。\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._setCPUMemory(0);\r\n        this._ctx && this._ctx.destroy && this._ctx.destroy();\r\n        this._ctx = null;\r\n    }\r\n\r\n    /**\r\n     * 释放。\r\n     */\r\n    release(): void {\r\n    }\r\n\r\n    /**\r\n     * Canvas 渲染上下文。\r\n     */\r\n    get context(): Context {\r\n        if (this._ctx) return this._ctx;\r\n        //@ts-ignore\r\n        if (this._source == this) {\t//是webgl并且不是真的画布。如果是真的画布，可能真的想要2d context\r\n            // @ts-ignore\r\n            this._ctx = new Context();\r\n        } else {\r\n            //@ts-ignore\r\n            this._ctx = this._source.getContext(LayaEnv.isConch ? 'layagl' : '2d');\r\n        }\r\n        this._ctx._canvas = this;\r\n        return this._ctx;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置 Canvas 渲染上下文。是webgl用来替换_ctx用的\r\n     * @param\tcontext Canvas 渲染上下文。\r\n     */\r\n    _setContext(context: Context): void {\r\n        this._ctx = context;\r\n    }\r\n\r\n    /**\r\n     * 获取 Canvas 渲染上下文。\r\n     * @param\tcontextID 上下文ID.\r\n     * @param\tother\r\n     * @return  Canvas 渲染上下文 Context 对象。\r\n     */\r\n    getContext(contextID: string, other: any = null): Context {\r\n        return this.context;\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取内存大小。\r\n     * @return 内存大小。\r\n     */\r\n    //TODO:coverage\r\n    getMemSize(): number {\r\n        return 0;//TODO:待调整\r\n    }\r\n\r\n    /**\r\n     * 设置宽高。\r\n     * @param\tw 宽度。\r\n     * @param\th 高度。\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h || (this._source && (this._source.width != w || this._source.height != h))) {\r\n            this._width = w;\r\n            this._height = h;\r\n            this._setCPUMemory(w * h * 4);\r\n            this._ctx && this._ctx.size && this._ctx.size(w, h);\r\n            if (this._source) {// && this._source instanceof HTMLCanvasElement){\r\n                this._source.height = h;\r\n                this._source.width = w;\r\n            }\r\n            if (this._texture) {\r\n                this._texture.destroy();\r\n                this._texture = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取texture实例\r\n     */\r\n    getTexture(): Texture | null | RenderTexture2D {\r\n        if (!this._texture) {\r\n            var bitmap: Texture2D = new Texture2D(this.source.width, this.source.height, TextureFormat.R8G8B8A8, true, false, false);\r\n            bitmap.setImageData(this.source, false, false);\r\n            this._texture = new Texture(bitmap);\r\n        }\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * 把图片转换为base64信息\r\n     * @param\ttype \"image/png\"\r\n     * @param\tencoderOptions\t质量参数，取值范围为0-1\r\n     */\r\n    toBase64(type: string, encoderOptions: number): string | null {\r\n        if (this._source) {\r\n            if (LayaEnv.isConch) {\r\n                var win: any = window as any;\r\n                var width: number = this._ctx._targets.sourceWidth;\r\n                var height: number = this._ctx._targets.sourceHeight;\r\n                var data: any = this._ctx._targets.getData(0, 0, width, height);\r\n                return win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\r\n            }\r\n            else {\r\n                return (this._source as HTMLCanvasElement).toDataURL(type, encoderOptions);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * native多线程转图片\r\n     * @param type \r\n     * @param encoderOptions \r\n     * @param callBack \r\n     */\r\n    toBase64Async(type: string, encoderOptions: number, callBack: Function): void {\r\n        var width: number = this._ctx._targets.sourceWidth;\r\n        var height: number = this._ctx._targets.sourceHeight;\r\n        this._ctx._targets.getDataAsync(0, 0, width, height, function (data: Uint8Array): void {\r\n            let win = window as any;\r\n            var base64 = win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\r\n            callBack(base64);\r\n        });\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * Graphic bounds数据类\r\n */\r\nexport class BoundsStyle {\r\n    /**@private */\r\n    bounds: Rectangle|null;\r\n    /**用户设的bounds*/\r\n    userBounds: Rectangle|null;\r\n    /**缓存的bounds顶点,sprite计算bounds用*/\r\n    temBM: any[]|null;\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): BoundsStyle {\r\n        if (this.bounds) this.bounds.recover();\r\n        if (this.userBounds) this.userBounds.recover();\r\n        this.bounds = null;\r\n        this.userBounds = null;\r\n        this.temBM = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"BoundsStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): BoundsStyle {\r\n        return Pool.getItemByClass(\"BoundsStyle\", BoundsStyle);\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { HTMLCanvas } from \"../../resource/HTMLCanvas\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * 存储cache相关\r\n */\r\nexport class CacheStyle {\r\n\r\n    static EMPTY: CacheStyle = new CacheStyle();\r\n    /**当前实际的cache状态*/\r\n    cacheAs: string;\r\n    /**是否开启canvas渲染*/\r\n    enableCanvasRender: boolean;\r\n    /**用户设的cacheAs类型*/\r\n    userSetCache: string;\r\n    /**是否需要为滤镜cache*/\r\n    cacheForFilters: boolean;\r\n    /**是否为静态缓存*/\r\n    staticCache: boolean;\r\n    /**是否需要刷新缓存*/\r\n    reCache: boolean;\r\n    /**mask对象*/\r\n    mask: Sprite;\r\n    /**作为mask时的父对象*/\r\n    maskParent: Sprite;\r\n    /**滤镜数据*/\r\n    filters: any[];\r\n    /**当前缓存区域*/\r\n    cacheRect: Rectangle;\r\n    /**当前使用的canvas*/\r\n    canvas: HTMLCanvas;\r\n    //TODO:webgl是否还需要\r\n    /**滤镜数据*/\r\n    filterCache: any;\r\n    //TODO:webgl是否还需要\r\n    /**是否有发光滤镜*/\r\n    hasGlowFilter: boolean;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 是否需要Bitmap缓存\r\n     * @return\r\n     */\r\n    needBitmapCache(): boolean {\r\n        return this.cacheForFilters || !!this.mask;\r\n    }\r\n\r\n    /**\r\n     * 是否需要开启canvas渲染\r\n     */\r\n    needEnableCanvasRender(): boolean {\r\n        return this.userSetCache != \"none\" || this.cacheForFilters || !!this.mask;\r\n    }\r\n\r\n    /**\r\n     * 释放cache的资源\r\n     */\r\n    releaseContext(): void {\r\n        if (this.canvas && ((<any>this.canvas)).size) {\r\n            Pool.recover(\"CacheCanvas\", this.canvas);\r\n            this.canvas.size(0, 0);\r\n            // 微信在iphone8和mate20上个bug，size存在但是不起作用，可能是canvas对象不是我们的。\r\n            // 为了避免canvas不消失，再强制设置宽高为0 TODO 没有测试\r\n            try {\r\n                ((<any>this.canvas)).width = 0;\r\n                ((<any>this.canvas)).height = 0;\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n        this.canvas = null;\r\n    }\r\n\r\n    createContext(): void {\r\n        if (!this.canvas) {\r\n            this.canvas = Pool.getItem(\"CacheCanvas\") || new HTMLCanvas(false);\r\n            var tx: Context = this.canvas.context as Context;\r\n            if (!tx) {\r\n                tx = this.canvas.getContext('2d') as Context;\t//如果是webGL的话，这个会返回WebGLContext2D\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 释放滤镜资源\r\n     */\r\n    releaseFilterCache(): void {\r\n        var fc: any = this.filterCache;\r\n        if (fc) {\r\n            fc.destroy();\r\n            fc.recycle();\r\n            this.filterCache = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this === CacheStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteCache\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): CacheStyle {\r\n        this.releaseContext();\r\n        this.releaseFilterCache();\r\n        this.cacheAs = \"none\";\r\n        this.enableCanvasRender = false;\r\n        this.userSetCache = \"none\";\r\n        this.cacheForFilters = false;\r\n        this.staticCache = false;\r\n        this.reCache = true;\r\n        this.mask = null;\r\n        this.maskParent = null;\r\n        this.filterCache = null;\r\n        this.filters = null;\r\n        this.hasGlowFilter = false;\r\n        if (this.cacheRect) this.cacheRect.recover();\r\n        this.cacheRect = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 创建一个SpriteCache\r\n     */\r\n    static create(): CacheStyle {\r\n        return Pool.getItemByClass(\"SpriteCache\", CacheStyle);\r\n    }\r\n\r\n    private static _scaleInfo: Point = new Point();\r\n    static CANVAS_EXTEND_EDGE: number = 16;\r\n    /**\r\n    * @internal\r\n    */\r\n    _calculateCacheRect(sprite: Sprite, tCacheType: string, x: number, y: number): Point {\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        if (!_cacheStyle.cacheRect)\r\n            _cacheStyle.cacheRect = Rectangle.create();\r\n        var tRec: Rectangle;\r\n\r\n        //计算显示对象的绘图区域\r\n        if (tCacheType === \"bitmap\") {\r\n            tRec = sprite.getSelfBounds();\r\n            tRec.width = tRec.width + CacheStyle.CANVAS_EXTEND_EDGE * 2;\r\n            tRec.height = tRec.height + CacheStyle.CANVAS_EXTEND_EDGE * 2;\r\n            tRec.x = tRec.x - sprite.pivotX;\r\n            tRec.y = tRec.y - sprite.pivotY;\r\n            tRec.x = tRec.x - CacheStyle.CANVAS_EXTEND_EDGE;\r\n            tRec.y = tRec.y - CacheStyle.CANVAS_EXTEND_EDGE;\r\n            tRec.x = Math.floor(tRec.x + x) - x;\r\n            tRec.y = Math.floor(tRec.y + y) - y;\r\n            tRec.width = Math.floor(tRec.width);\r\n            tRec.height = Math.floor(tRec.height);\r\n            _cacheStyle.cacheRect.copyFrom(tRec);\r\n        } else {\r\n            _cacheStyle.cacheRect.setTo(-sprite._style.pivotX, -sprite._style.pivotY, 1, 1);\r\n        }\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n\r\n        //处理显示对象的scrollRect偏移\r\n        if (sprite._style.scrollRect) {\r\n            var scrollRect: Rectangle = sprite._style.scrollRect;\r\n            tRec.x -= scrollRect.x;\r\n            tRec.y -= scrollRect.y;\r\n        }\r\n        CacheStyle._scaleInfo.setTo(1, 1);\r\n\r\n        return CacheStyle._scaleInfo;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Dragging } from \"../../utils/Dragging\"\r\nimport { IHitArea } from \"../../utils/IHitArea\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 元素样式\r\n */\r\nexport class SpriteStyle {\r\n\r\n    static readonly EMPTY: Readonly<SpriteStyle> = new SpriteStyle();\r\n\r\n    /**水平缩放 */\r\n    scaleX: number;\r\n    /**垂直缩放 */\r\n    scaleY: number;\r\n    /**水平倾斜角度 */\r\n    skewX: number;\r\n    /**垂直倾斜角度 */\r\n    skewY: number;\r\n    /**X轴心点 */\r\n    pivotX: number;\r\n    /**Y轴心点 */\r\n    pivotY: number;\r\n    /**旋转角度 */\r\n    rotation: number;\r\n    /**透明度 */\r\n    alpha: number;\r\n    /**滚动区域 */\r\n    scrollRect: Rectangle;\r\n    /**视口 */\r\n    viewport: Rectangle;\r\n    /**点击区域 */\r\n    hitArea: IHitArea;\r\n    /**滑动 */\r\n    dragging: Dragging;\r\n    /**混合模式 */\r\n    blendMode: string;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 重置，方便下次复用\r\n     */\r\n    reset(): SpriteStyle {\r\n        this.scaleX = this.scaleY = 1;\r\n        this.skewX = this.skewY = 0;\r\n        this.pivotX = this.pivotY = this.rotation = 0;\r\n        this.alpha = 1;\r\n        if (this.scrollRect) this.scrollRect.recover();\r\n        this.scrollRect = null;\r\n        if (this.viewport) this.viewport.recover();\r\n        this.viewport = null;\r\n        this.hitArea = null;\r\n        this.dragging = null;\r\n        this.blendMode = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this === SpriteStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建\r\n     */\r\n    static create(): SpriteStyle {\r\n        return Pool.getItemByClass(\"SpriteStyle\", SpriteStyle);\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 透明命令\r\n */\r\nexport class AlphaCmd {\r\n    static ID: string = \"Alpha\";\r\n\r\n    /**\r\n     * 透明度\r\n     */\r\n    alpha: number;\r\n\r\n    /**@private */\r\n    static create(alpha: number): AlphaCmd {\r\n        var cmd: AlphaCmd = Pool.getItemByClass(\"AlphaCmd\", AlphaCmd);\r\n        cmd.alpha = alpha;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"AlphaCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.alpha(this.alpha);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return AlphaCmd.ID;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制圆形\r\n */\r\nexport class DrawCircleCmd {\r\n    static ID: string = \"DrawCircle\";\r\n\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 半径。\r\n     */\r\n    radius: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number): DrawCircleCmd {\r\n        var cmd: DrawCircleCmd = Pool.getItemByClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCircleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawCircle(this.x * w + gx, this.y * h + gy, this.radius * Math.min(w, h) - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawCircle(this.x + gx, this.y + gy, this.radius - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawCircleCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.radius, this.y - this.radius, this.radius + this.radius, this.radius + this.radius, this.percent ? sp : null);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n","import { Bezier } from \"../../maths/Bezier\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制曲线\r\n */\r\nexport class DrawCurvesCmd {\r\n    static ID: string = \"DrawCurves\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 线段颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）线段宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawCurvesCmd {\r\n        var cmd: DrawCurvesCmd = Pool.getItemByClass(\"DrawCurvesCmd\", DrawCurvesCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCurvesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.points)\r\n            context.drawCurves(this.x + gx, this.y + gy, this.points, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawCurvesCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Bezier.I.getBezierPoints(this.points);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCurvesCmd\", DrawCurvesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制图片\r\n */\r\nexport class DrawImageCmd {\r\n    static ID: string = \"DrawImage\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n\r\n    /** （可选）绘图颜色 */\r\n    color: number = 0xffffffff;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, color: string): DrawImageCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawImageCmd = Pool.getItemByClass(\"DrawImageCmd\", DrawImageCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        Pool.recover(\"DrawImageCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            context.drawTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawImageCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制单条曲线\r\n */\r\nexport class DrawLineCmd {\r\n    static ID: string = \"DrawLine\";\r\n\r\n    /**\r\n     * X轴开始位置。\r\n     */\r\n    fromX: number;\r\n    /**\r\n     * Y轴开始位置。\r\n     */\r\n    fromY: number;\r\n    /**\r\n     * X轴结束位置。\r\n     */\r\n    toX: number;\r\n    /**\r\n     * Y轴结束位置。\r\n     */\r\n    toY: number;\r\n    /**\r\n     * 颜色。\r\n     */\r\n    lineColor: string;\r\n    /**\r\n     * （可选）线条宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number): DrawLineCmd {\r\n        var cmd: DrawLineCmd = Pool.getItemByClass(\"DrawLineCmd\", DrawLineCmd);\r\n        cmd.fromX = fromX;\r\n        cmd.fromY = fromY;\r\n        cmd.toX = toX;\r\n        cmd.toY = toY;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"DrawLineCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawLine(gx, gy, this.fromX * w + offset, this.fromY * h + offset, this.toX * w + offset, this.toY * h + offset, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawLine(gx, gy, this.fromX + offset, this.fromY + offset, this.toX + offset, this.toY + offset, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawLineCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        _tempPoints.length = 0;\r\n        let lineWidth: number;\r\n        lineWidth = this.lineWidth * 0.5;\r\n\r\n        let fromX = this.fromX, fromY = this.fromY, toX = this.toX, toY = this.toY;\r\n        if (this.percent) {\r\n            fromX *= sp.width;\r\n            fromY *= sp.height;\r\n            toX *= sp.width;\r\n            toY *= sp.height;\r\n        }\r\n\r\n        if (fromX == toX) {\r\n            _tempPoints.push(fromX + lineWidth, fromY, toX + lineWidth, toY, fromX - lineWidth, fromY, toX - lineWidth, toY);\r\n        } else if (fromY == toY) {\r\n            _tempPoints.push(fromX, fromY + lineWidth, toX, toY + lineWidth, fromX, fromY - lineWidth, toX, toY - lineWidth);\r\n        } else {\r\n            _tempPoints.push(fromX, fromY, toX, toY);\r\n        }\r\n\r\n        return _tempPoints;\r\n    }\r\n}\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawLineCmd\", DrawLineCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制连续曲线\r\n */\r\nexport class DrawLinesCmd {\r\n    static ID: string = \"DrawLines\";\r\n\r\n    /**\r\n     * 开始绘制的X轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的Y轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 线段颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）线段宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawLinesCmd {\r\n        var cmd: DrawLinesCmd = Pool.getItemByClass(\"DrawLinesCmd\", DrawLinesCmd);\r\n        //TODO 线段需要缓存\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawLinesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        this.points && context._drawLines(this.x + offset + gx, this.y + offset + gy, this.points, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawLinesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawLinesCmd\", DrawLinesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 根据路径绘制矢量图形\r\n */\r\nexport class DrawPathCmd {\r\n    static ID: string = \"DrawPath\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     */\r\n    paths: any[] | null;\r\n    /**\r\n     * （可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\r\n     */\r\n    brush: any;\r\n    /**\r\n     * （可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    pen: any;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, paths: any[], brush: any, pen: any): DrawPathCmd {\r\n        var cmd: DrawPathCmd = Pool.getItemByClass(\"DrawPathCmd\", DrawPathCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.paths = paths;\r\n        cmd.brush = brush;\r\n        cmd.pen = pen;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.paths = null;\r\n        this.brush = null;\r\n        this.pen = null;\r\n        Pool.recover(\"DrawPathCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.paths && context._drawPath(this.x + gx, this.y + gy, this.paths, this.brush, this.pen);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPathCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        rst.length = 0;\r\n        let paths = this.paths;\r\n        let len = paths.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let tCMD = paths[i];\r\n            if (tCMD.length > 1) {\r\n                rst.push(tCMD[1], tCMD[2]);\r\n                if (tCMD.length > 3) {\r\n                    rst.push(tCMD[3], tCMD[4]);\r\n                }\r\n            }\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPathCmd\", DrawPathCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制扇形\r\n */\r\nexport class DrawPieCmd {\r\n    static ID: string = \"DrawPie\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 扇形半径。\r\n     */\r\n    radius: number = 0;\r\n\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    private _startAngle: number;\r\n    private _endAngle: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number): DrawPieCmd {\r\n        var cmd: DrawPieCmd = Pool.getItemByClass(\"DrawPieCmd\", DrawPieCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd._startAngle = startAngle;\r\n        cmd._endAngle = endAngle;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPieCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        context._drawPie(this.x + offset + gx, this.y + offset + gy, this.radius - lineOffset, this._startAngle, this._endAngle, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPieCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * 开始角度。\r\n     */\r\n    get startAngle(): number {\r\n        return this._startAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set startAngle(value: number) {\r\n        this._startAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * 结束角度。\r\n     */\r\n    get endAngle(): number {\r\n        return this._endAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set endAngle(value: number) {\r\n        this._endAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        _tempPoints.length = 0;\r\n        let k: number = Math.PI / 180;\r\n        let d1: number = this.endAngle - this.startAngle;\r\n        let x = this.x, y = this.y, radius = this.radius;\r\n        if (d1 >= 360 || d1 <= -360) {\r\n            // 如果满了一圈了\r\n            rst.push(x - radius, y - radius);\r\n            rst.push(x + radius, y - radius);\r\n            rst.push(x + radius, y + radius);\r\n            rst.push(x - radius, y + radius);\r\n            return rst;\r\n        }\r\n        // \r\n        rst.push(x, y);\t// 中心\r\n\r\n        var delta: number = d1 % 360;\r\n        if (delta < 0) delta += 360;\r\n\r\n        // 一定增加，且在360以内的end\r\n        var end1: number = this.startAngle + delta;\r\n\r\n        // 转成弧度\r\n        var st: number = this.startAngle * k;\r\n        var ed: number = end1 * k;\r\n\r\n        // 起点\r\n        rst.push(x + radius * Math.cos(st), y + radius * Math.sin(st));\r\n        // 终点\r\n        rst.push(x + radius * Math.cos(ed), y + radius * Math.sin(ed));\r\n\r\n        // 圆形的四个边界点\r\n        // 按照90度对齐，看看会经历几个90度\r\n        var s1: number = Math.ceil(this.startAngle / 90) * 90;\t//开始的。start的下一个90度\r\n        var s2: number = Math.floor(end1 / 90) * 90;\t\t//结束。end的上一个90度\r\n        for (var cs: number = s1; cs <= s2; cs += 90) {\r\n            var csr: number = cs * k;\r\n            rst.push(x + radius * Math.cos(csr), y + radius * Math.sin(csr));\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPieCmd\", DrawPieCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制多边形\r\n */\r\nexport class DrawPolyCmd {\r\n    static ID: string = \"DrawPoly\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 多边形的点集合。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * 可选）边框宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number): DrawPolyCmd {\r\n        var cmd: DrawPolyCmd = Pool.getItemByClass(\"DrawPolyCmd\", DrawPolyCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPolyCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let isConvexPolygon = this.points.length <= 6;\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? (this.lineWidth % 2 === 0 ? 0 : 0.5) : 0;\r\n        this.points && context._drawPoly(this.x + offset + gx, this.y + offset + gy, this.points, this.fillColor, this.lineColor, this.lineWidth, isConvexPolygon, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPolyCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawPolyCmd\", DrawPolyCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制矩形\r\n */\r\nexport class DrawRectCmd {\r\n    static ID: string = \"DrawRect\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 矩形宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 矩形高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRectCmd {\r\n        var cmd: DrawRectCmd = Pool.getItemByClass(\"DrawRectCmd\", DrawRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRectCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context.drawRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else\r\n            context.drawRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawRectCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null)\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawRectCmd\", DrawRectCmd);\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from '../../utils/ColorUtils';\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * 绘制单个贴图\r\n */\r\nexport class DrawTextureCmd {\r\n    static ID: string = \"DrawTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * （可选）矩阵信息。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * （可选）透明度。\r\n     */\r\n    alpha: number;\r\n    /**\r\n     * （可选）颜色滤镜。\r\n     */\r\n    color: number = 0xffffffff;\r\n    /**\r\n     * （可选）混合模式。\r\n     */\r\n    blendMode: string | null;\r\n\r\n    uv: number[] | null = null;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, matrix: Matrix | null, alpha: number, color: string | null, blendMode: string | null, uv?: number[]): DrawTextureCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawTextureCmd = Pool.getItemByClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.blendMode = blendMode;\r\n        cmd.uv = uv || null;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.texture && context.drawTextureWithTransform(this.texture, this.x, this.y, this.width, this.height, this.matrix, gx, gy, this.alpha, this.blendMode, this.uv, this.color);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTextureCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n","import { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * 填充贴图\r\n */\r\nexport class FillTextureCmd {\r\n    static ID: string = \"FillTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * （可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\r\n     */\r\n    type?: string;\r\n    /**\r\n     * （可选）贴图纹理偏移\r\n     */\r\n    offset?: Point;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /** （可选）绘图颜色 */\r\n    color: number = 0xffffffff;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: string): FillTextureCmd {\r\n        var cmd: FillTextureCmd = Pool.getItemByClass(\"FillTextureCmd\", FillTextureCmd);\r\n        cmd.texture = texture;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.type = type;\r\n        cmd.offset = offset;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture = null;\r\n        this.offset = null;\r\n        Pool.recover(\"FillTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.fillTexture(this.texture, this.x * w + gx, this.y * h + gy, this.width * w, this.height * h, this.type, this.offset || Point.EMPTY, this.color);\r\n            }\r\n            else\r\n                context.fillTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.type, this.offset || Point.EMPTY, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return FillTextureCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        if (this.width && this.height)\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n        else\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.texture.width, this.texture.height);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextureCmd\", FillTextureCmd);\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 恢复命令，和save配套使用\r\n */\r\nexport class RestoreCmd {\r\n    static ID: string = \"Restore\";\r\n\r\n\r\n\r\n    /**@private */\r\n    static create(): RestoreCmd {\r\n        var cmd: RestoreCmd = Pool.getItemByClass(\"RestoreCmd\", RestoreCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RestoreCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.restore();\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return RestoreCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 旋转命令\r\n */\r\nexport class RotateCmd {\r\n    static ID: string = \"Rotate\";\r\n\r\n    /**\r\n     * 旋转角度，以弧度计。\r\n     */\r\n    angle: number;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(angle: number, pivotX: number, pivotY: number): RotateCmd {\r\n        var cmd: RotateCmd = Pool.getItemByClass(\"RotateCmd\", RotateCmd);\r\n        cmd.angle = angle;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RotateCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._rotate(this.angle, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return RotateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * 缩放命令\r\n */\r\nexport class ScaleCmd {\r\n    static ID: string = \"Scale\";\r\n\r\n    /**\r\n     * 水平方向缩放值。\r\n     */\r\n    scaleX: number;\r\n    /**\r\n     * 垂直方向缩放值。\r\n     */\r\n    scaleY: number;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(scaleX: number, scaleY: number, pivotX: number, pivotY: number): ScaleCmd {\r\n        var cmd: ScaleCmd = Pool.getItemByClass(\"ScaleCmd\", ScaleCmd);\r\n        cmd.scaleX = scaleX;\r\n        cmd.scaleY = scaleY;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ScaleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._scale(this.scaleX, this.scaleY, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return ScaleCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 矩阵命令\r\n */\r\nexport class TransformCmd {\r\n    static ID: string = \"Transform\";\r\n\r\n    /**\r\n     * 矩阵。\r\n     */\r\n    matrix: Matrix;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(matrix: Matrix, pivotX: number, pivotY: number): TransformCmd {\r\n        var cmd: TransformCmd = Pool.getItemByClass(\"TransformCmd\", TransformCmd);\r\n        cmd.matrix = matrix;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.matrix = null;\r\n        Pool.recover(\"TransformCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._transform(this.matrix, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return TransformCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * 位移命令\r\n */\r\nexport class TranslateCmd {\r\n    static ID: string = \"Translate\";\r\n\r\n    /**\r\n     * 添加到水平坐标（x）上的值。\r\n     */\r\n    tx: number;\r\n    /**\r\n     * 添加到垂直坐标（y）上的值。\r\n     */\r\n    ty: number;\r\n\r\n    /**@private */\r\n    static create(tx: number, ty: number): TranslateCmd {\r\n        var cmd: TranslateCmd = Pool.getItemByClass(\"TranslateCmd\", TranslateCmd);\r\n        cmd.tx = tx;\r\n        cmd.ty = ty;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"TranslateCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.translate(this.tx, this.ty);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return TranslateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制三角形命令\r\n */\r\nexport class DrawTrianglesCmd {\r\n    static ID: string = \"DrawTriangles\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 顶点数组。\r\n     */\r\n    vertices: Float32Array;\r\n    /**\r\n     * UV数据。\r\n     */\r\n    uvs: Float32Array;\r\n    /**\r\n     * 顶点索引。\r\n     */\r\n    indices: Uint16Array;\r\n    /**\r\n     * 缩放矩阵。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * alpha\r\n     */\r\n    alpha: number;\r\n    //public var color:String;\r\n    /**\r\n     * blend模式\r\n     */\r\n    blendMode: string | null;\r\n    /**\r\n     * 颜色变换\r\n     */\r\n    color: number | null;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array,\r\n        matrix: Matrix | null, alpha: number, color: string | number, blendMode: string | null): DrawTrianglesCmd {\r\n        var cmd: DrawTrianglesCmd = Pool.getItemByClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);\r\n        cmd.texture = texture;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.vertices = vertices;\r\n        cmd.uvs = uvs;\r\n        cmd.indices = indices;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        cmd.blendMode = blendMode;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture = null;\r\n        this.vertices = null;\r\n        this.uvs = null;\r\n        this.indices = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTrianglesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTriangles(this.texture, this.x + gx, this.y + gy, this.vertices, this.uvs, this.indices, this.matrix, this.alpha, this.blendMode, this.color);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTrianglesCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let vert = this.vertices;\r\n        var vnum = vert.length;\r\n        if (vnum < 2) return [];\r\n        var minx = vert[0];\r\n        var miny = vert[1];\r\n        var maxx = minx;\r\n        var maxy = miny;\r\n        for (var i = 2; i < vnum;) {\r\n            var cx = vert[i++];\r\n            var cy = vert[i++];\r\n            if (minx > cx) minx = cx;\r\n            if (miny > cy) miny = cy;\r\n            if (maxx < cx) maxx = cx;\r\n            if (maxy < cy) maxy = cy;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制带九宫格信息的图片\r\n * @internal\r\n */\r\nexport class Draw9GridTextureCmd {\r\n    static ID: string = \"Draw9GridTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n\r\n    sizeGrid: number[];\r\n\r\n    color: number = 0xffffffff;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, sizeGrid: number[], percent: boolean = false, color: string | null = null): Draw9GridTextureCmd {\r\n        let cmd: Draw9GridTextureCmd = Pool.getItemByClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.sizeGrid = sizeGrid;\r\n        cmd.percent = percent;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        Pool.recover(\"Draw9GridTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            let sizeGrid = this.sizeGrid || this.texture._sizeGrid || EMPTY_SIZE_GRID;\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.drawTextureWithSizeGrid(this.texture, this.x * w, this.y * h, this.width * w, this.height * h, sizeGrid, gx, gy, this.color);\r\n            }\r\n            else\r\n                context.drawTextureWithSizeGrid(this.texture, this.x, this.y, this.width, this.height, sizeGrid, gx, gy, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return Draw9GridTextureCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let minx = this.x;\r\n        let miny = this.y;\r\n        let maxx = this.width;\r\n        let maxy = this.height;\r\n        if (this.percent) {\r\n            minx *= sp.width;\r\n            miny *= sp.height;\r\n            maxx *= sp.width;\r\n            maxy *= sp.height;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nconst EMPTY_SIZE_GRID = [0, 0, 0, 0, 0];\r\nClassUtils.regClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 存储命令，和restore配套使用\r\n */\r\nexport class SaveCmd {\r\n    static ID: string = \"Save\";\r\n\r\n\r\n\r\n    /**@private */\r\n    static create(): SaveCmd {\r\n        var cmd: SaveCmd = Pool.getItemByClass(\"SaveCmd\", SaveCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"SaveCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.save();\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return SaveCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { GrahamScan } from \"../maths/GrahamScan\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { Graphics } from \"./Graphics\";\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\";\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\";\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\n\r\nconst _tempMatrix: Matrix = new Matrix();\r\nconst _initMatrix: Matrix = new Matrix();\r\nconst _tempMatrixArrays: any[] = [];\r\n\r\n/**\r\n * @private\r\n * Graphic bounds数据类\r\n */\r\nexport class GraphicsBounds {\r\n    /**@private */\r\n    private _temp: number[];\r\n    /**@private */\r\n    private _bounds: Rectangle;\r\n    /**@private */\r\n    private _rstBoundPoints: number[];\r\n    /**@private */\r\n    private _cacheBoundsType: boolean = false;\r\n    /**@internal */\r\n    _graphics: Graphics;\r\n    /**@internal */\r\n    _affectBySize: boolean;\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy(): void {\r\n        this._graphics = null;\r\n        this._cacheBoundsType = false;\r\n        if (this._temp) this._temp.length = 0;\r\n        if (this._rstBoundPoints) this._rstBoundPoints.length = 0;\r\n        if (this._bounds) this._bounds.recover();\r\n        this._bounds = null;\r\n        Pool.recover(\"GraphicsBounds\", this);\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): GraphicsBounds {\r\n        return Pool.getItemByClass(\"GraphicsBounds\", GraphicsBounds);\r\n    }\r\n\r\n    /**\r\n     * 重置数据\r\n     */\r\n    reset(): void {\r\n        this._temp && (this._temp.length = 0);\r\n    }\r\n\r\n    /**\r\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._bounds || !this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType) {\r\n            this._bounds = Rectangle._getWrapRec(this.getBoundPoints(realSize), this._bounds)\r\n        }\r\n        this._cacheBoundsType = realSize;\r\n        return this._bounds;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * 获取端点列表。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        if (!this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType)\r\n            this._temp = this._getCmdPoints(realSize);\r\n        this._cacheBoundsType = realSize;\r\n        return this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);\r\n    }\r\n\r\n    private _getCmdPoints(realSize: boolean = false): any[] {\r\n        let cmds = this._graphics.cmds;\r\n        let sp = this._graphics._sp;\r\n        this._affectBySize = false;\r\n\r\n        let rst = this._temp || (this._temp = []);\r\n        rst.length = 0;\r\n        if (cmds.length == 0) return rst;\r\n\r\n        let matrixs: any[] = _tempMatrixArrays;\r\n        matrixs.length = 0;\r\n        let tMatrix: Matrix = _initMatrix;\r\n        tMatrix.identity();\r\n        let tempMatrix: Matrix = _tempMatrix;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            let cmd = cmds[i];\r\n            if (cmd.percent)\r\n                this._affectBySize = true;\r\n            switch (cmd.cmdID) {\r\n                case AlphaCmd.ID:\r\n                case SaveCmd.ID:\r\n                    matrixs.push(tMatrix);\r\n                    tMatrix = tMatrix.clone();\r\n                    break;\r\n                case RestoreCmd.ID: //restore\r\n                    tMatrix = matrixs.pop();\r\n                    break;\r\n                case ScaleCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.scale(cmd.scaleX, cmd.scaleY);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case RotateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.rotate(cmd.angle);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TranslateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(cmd.tx, cmd.ty);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TransformCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.concat(cmd.matrix);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case DrawImageCmd.ID:\r\n                case FillTextureCmd.ID:\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                    break;\r\n                case DrawTextureCmd.ID:\r\n                    tMatrix.copyTo(tempMatrix);\r\n                    if (cmd.matrix)\r\n                        tempMatrix.concat(cmd.matrix);\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tempMatrix);\r\n                    break;\r\n                case DrawRectCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawRectCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCircleCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCircleCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawLineCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawLineCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCurvesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCurvesCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawLinesCmd.ID:\r\n                case DrawPolyCmd.ID:\r\n                    addPointArrToRst(rst, cmd.points, tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPathCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPathCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPieCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPieCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawTrianglesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawTrianglesCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case Draw9GridTextureCmd.ID:\r\n                    addPointArrToRst(rst, (<Draw9GridTextureCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n            }\r\n        }\r\n        if (rst.length > 200) {\r\n            rst = Utils.copyArray(rst, Rectangle._getWrapRec(rst)._getBoundPoints());\r\n        } else if (rst.length > 8)\r\n            rst = GrahamScan.scanPList(rst);\r\n        return rst;\r\n    }\r\n\r\n    private _switchMatrix(tMatix: Matrix, tempMatrix: Matrix): void {\r\n        tempMatrix.concat(tMatix);\r\n        tempMatrix.copyTo(tMatix);\r\n    }\r\n}\r\n\r\nfunction addPointArrToRst(rst: any[], points: any[], matrix: Matrix, dx: number = 0, dy: number = 0): void {\r\n    let len = points.length;\r\n    for (let i = 0; i < len; i += 2) {\r\n        addPointToRst(rst, points[i] + dx, points[i + 1] + dy, matrix);\r\n    }\r\n}\r\n\r\nfunction addPointToRst(rst: any[], x: number, y: number, matrix: Matrix): void {\r\n    var _tempPoint: Point = Point.TEMP;\r\n    _tempPoint.setTo(x ? x : 0, y ? y : 0);\r\n    matrix.transformPoint(_tempPoint);\r\n    rst.push(_tempPoint.x, _tempPoint.y);\r\n}","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 裁剪命令\r\n */\r\nexport class ClipRectCmd {\r\n    static ID: string = \"ClipRect\";\r\n\r\n\r\n    /**\r\n     * X 轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y 轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 高度。\r\n     */\r\n    height: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        var cmd: ClipRectCmd = Pool.getItemByClass(\"ClipRectCmd\", ClipRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ClipRectCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.clipRect(this.x + gx, this.y + gy, this.width, this.height);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return ClipRectCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 根据坐标集合绘制多个贴图\r\n */\r\nexport class DrawTexturesCmd {\r\n    static ID: string = \"DrawTextures\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * 绘制次数和坐标。\r\n     */\r\n    pos: ArrayLike<number>;\r\n\r\n    /** 附加顶点色 */\r\n    colors: number[];\r\n\r\n    /**@private */\r\n    static create(texture: Texture, pos: any[], colors: number[]): DrawTexturesCmd {\r\n        var cmd: DrawTexturesCmd = Pool.getItemByClass(\"DrawTexturesCmd\", DrawTexturesCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.pos = pos;\r\n        cmd.colors = colors || [];\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        this.texture = null;\r\n        this.pos = null;\r\n        Pool.recover(\"DrawTexturesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTextures(this.texture, this.pos, gx, gy, this.colors);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTexturesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\";\r\nimport { FontInfo } from \"../../utils/FontInfo\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { WordText } from \"../../utils/WordText\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Config } from \"../../../Config\";\r\n\r\n/**\r\n * 绘制文字\r\n */\r\nexport class FillTextCmd {\r\n    static ID: string = \"FillText\";\r\n\r\n    /**\r\n     * 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     */\r\n    x: number = 0;\r\n    /**\r\n     * 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     */\r\n    y: number = 0;\r\n\r\n    private _text: string;\r\n    private _wordText: WordText;\r\n    private _font: string;\r\n    private _color: string;\r\n    private _strokeColor: string = '#000000';\r\n    private _stroke: number;\r\n    private _align: number;\r\n    private _fontObj: FontInfo;\r\n\r\n    \r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    set strokeColor(value: string) {\r\n        this._strokeColor = value;\r\n    }\r\n    get strokeColor() {\r\n        return this._strokeColor;\r\n    }\r\n    set stroke(value: number) {\r\n        this._stroke = value;\r\n    }\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n    set align(value: number) {\r\n        this._align = value;\r\n    }\r\n    get align() {\r\n        return this._align;\r\n    }\r\n\r\n\r\n    static create(text: string | WordText | null, x: number, y: number, font: string, color: string | null, align: string, stroke: number, strokeColor: string | null): FillTextCmd {\r\n        var cmd: FillTextCmd = Pool.getItemByClass(\"FillTextCmd\", FillTextCmd);\r\n        cmd._text = null;\r\n        cmd._wordText = null;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.font = font;\r\n        cmd.color = color;\r\n        cmd._stroke = stroke;\r\n        cmd._strokeColor = strokeColor;\r\n\r\n        switch (align) {\r\n            case 'center':\r\n                cmd._align = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                cmd._align = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n            default:\r\n                cmd._align = Const.ENUM_TEXTALIGN_DEFAULT;\r\n        }\r\n\r\n        if (text instanceof WordText) {\r\n            cmd._wordText = text;\r\n            text.cleanCache();\r\n        }\r\n        else\r\n            cmd._text = text;\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"FillTextCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (ILaya.stage.isGlobalRepaint()) {\r\n            this._wordText && this._wordText.cleanCache();\r\n        }\r\n        if (null == this._text) this._text = '';\r\n        if (null == this._fontObj) {\r\n            this.font = null;\r\n        }\r\n        if (null == this._color) {\r\n            this._color = '#ffffff';\r\n        }\r\n\r\n        context._fast_filltext(this._wordText || this._text, this.x + gx, this.y + gy, this._fontObj, this._color, this._strokeColor, this._stroke, this._align);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return FillTextCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * 定义字号和字体，比如\"20px Arial\"。\r\n     */\r\n    get font(): string {\r\n        return this._font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._font = value;\r\n        if (!value)\r\n            value = Config.defaultFontSize + \"px \" + Config.defaultFont;\r\n        this._fontObj = FontInfo.parse(value);\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n\r\n    /**\r\n     * 定义文本颜色，比如\"#ff0000\"。\r\n     */\r\n    get color(): string {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._color = value;\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextCmd\", FillTextCmd);","import { ILaya } from \"./../../ILaya\";\r\n/**\r\n * @private\r\n * 对象缓存统一管理类\r\n */\r\nexport class CacheManger {\r\n    //TODO:\r\n    /**\r\n     * 单次清理检测允许执行的时间，单位ms。\r\n     */\r\n    static loopTimeLimit: number = 2;\r\n    /**\r\n     * @private\r\n     */\r\n    private static _cacheList: any[] = [];\r\n    /**\r\n     * @private\r\n     * 当前检测的索引\r\n     */\r\n    private static _index: number = 0;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册cache管理函数\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     *\r\n     */\r\n    static regCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        CacheManger.unRegCacheByFunction(disposeFunction, getCacheListFunction);\r\n        var cache: any;\r\n        cache = { tryDispose: disposeFunction, getCacheList: getCacheListFunction };\r\n        CacheManger._cacheList.push(cache);\r\n    }\r\n\r\n    /**\r\n     * 移除cache管理函数\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     *\r\n     */\r\n    static unRegCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        var i: number, len: number;\r\n        len = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            if (CacheManger._cacheList[i].tryDispose == disposeFunction && CacheManger._cacheList[i].getCacheList == getCacheListFunction) {\r\n                CacheManger._cacheList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制清理所有管理器\r\n     *\r\n     */\r\n    //TODO:coverage\r\n    static forceDispose(): void {\r\n        var i: number, len: number = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            CacheManger._cacheList[i].tryDispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始检测循环\r\n     * @param waitTime 检测间隔时间\r\n     *\r\n     */\r\n    static beginCheck(waitTime: number = 15000): void {\r\n        ILaya.systemTimer.loop(waitTime, null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * 停止检测循环\r\n     *\r\n     */\r\n    //TODO:coverage\r\n    static stopCheck(): void {\r\n        ILaya.systemTimer.clear(null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 检测函数\r\n     */\r\n    private static _checkLoop(): void {\r\n        var cacheList: any[] = CacheManger._cacheList;\r\n        if (cacheList.length < 1) return;\r\n        var tTime: number = ILaya.Browser.now();\r\n        var count: number;\r\n        var len: number;\r\n        len = count = cacheList.length;\r\n        while (count > 0) {\r\n            CacheManger._index++;\r\n            CacheManger._index = CacheManger._index % len;\r\n            cacheList[CacheManger._index].tryDispose(false);\r\n            if (ILaya.Browser.now() - tTime > CacheManger.loopTimeLimit) break;\r\n            count--;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { CacheManger } from \"./CacheManger\"\r\n\r\n/**\r\n * @private\r\n * TODO:\r\n */\r\nexport class VectorGraphManager {\r\n    //TODO:\r\n    static instance: VectorGraphManager;\r\n\r\n    useDic: any = {};\r\n    shapeDic: any = {};\r\n    shapeLineDic: any = {};\r\n\r\n    private _id: number = 0;\r\n    private _checkKey: boolean = false;\r\n    private _freeIdArray: any[] = [];\r\n\r\n    constructor() {\r\n        CacheManger.regCacheByFunction(this.startDispose.bind(this), this.getCacheList.bind(this));\r\n    }\r\n\r\n    static getInstance(): VectorGraphManager {\r\n        return VectorGraphManager.instance = VectorGraphManager.instance || new VectorGraphManager();\r\n    }\r\n\r\n    /**\r\n     * 得到个空闲的ID\r\n     * @return\r\n     */\r\n    getId(): number {\r\n        //if (_freeIdArray.length > 0) {\r\n        //return _freeIdArray.pop();\r\n        //}\r\n        return this._id++;\r\n    }\r\n\r\n    /**\r\n     * 添加一个图形到列表中\r\n     * @param\tid\r\n     * @param\tshape\r\n     */\r\n    addShape(id: number, shape: any): void {\r\n        this.shapeDic[id] = shape;\r\n        if (!this.useDic[id]) {\r\n            this.useDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加一个线图形到列表中\r\n     * @param\tid\r\n     * @param\tLine\r\n     */\r\n    addLine(id: number, Line: any): void {\r\n        this.shapeLineDic[id] = Line;\r\n        if (!this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检测一个对象是否在使用中\r\n     * @param\tid\r\n     */\r\n    getShape(id: number): void {\r\n        if (this._checkKey) {\r\n            if (this.useDic[id] != null) {\r\n                this.useDic[id] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除一个图形对象\r\n     * @param\tid\r\n     */\r\n    deleteShape(id: number): void {\r\n        if (this.shapeDic[id]) {\r\n            this.shapeDic[id] = null;\r\n            delete this.shapeDic[id];\r\n        }\r\n        if (this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = null;\r\n            delete this.shapeLineDic[id];\r\n        }\r\n        if (this.useDic[id] != null) {\r\n            delete this.useDic[id];\r\n        }\r\n        //_freeIdArray.push(id);\r\n    }\r\n\r\n    /**\r\n     * 得到缓存列表\r\n     * @return\r\n     */\r\n    getCacheList(): any[] {\r\n        var str: any;\r\n        var list: any[] = [];\r\n        for (str in this.shapeDic) {\r\n            list.push(this.shapeDic[str]);\r\n        }\r\n        for (str in this.shapeLineDic) {\r\n            list.push(this.shapeLineDic[str]);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * 开始清理状态，准备销毁\r\n     */\r\n    startDispose(key: boolean): void {\r\n        var str: any;\r\n        for (str in this.useDic) {\r\n            this.useDic[str] = false;\r\n        }\r\n        this._checkKey = true;\r\n    }\r\n\r\n    /**\r\n     * 确认销毁\r\n     */\r\n    endDispose(): void {\r\n        if (this._checkKey) {\r\n            var str: any;\r\n            for (str in this.useDic) {\r\n                if (!this.useDic[str]) {\r\n                    this.deleteShape(str);\r\n                }\r\n            }\r\n            this._checkKey = false;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\nexport class DrawEllipseCmd {\r\n    static ID: string = \"DrawEllipse\";\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 横向半径。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 纵向半径。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\r\n        var cmd = Pool.getItemByClass(\"DrawEllipseCmd\", DrawEllipseCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawEllipseCmd\", this);\r\n    }\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawEllipse(this.x * w + gx, this.y * h + gy, this.width * w - offset, this.height * h - offset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else {\r\n            context._drawEllipse(this.x + gx, this.y + gy, this.width - offset, this.height - offset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n    }\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawEllipseCmd.ID;\r\n    }\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.width, this.y - this.height, this.width * 2, this.height * 2, this.percent ? sp : null);\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawEllipseCmd\", DrawEllipseCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\nexport class DrawRoundRectCmd {\r\n    static ID: string = \"DrawRoundRect\";\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 横向半径。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 纵向半径。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 左上圆角\r\n     */\r\n    lt: number;\r\n    /**\r\n     * 右上圆角\r\n     */\r\n    rt: number;\r\n    /**\r\n     * 左下圆角\r\n     */\r\n    lb: number;\r\n    /**\r\n     * 右下圆角\r\n     */\r\n    rb: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRoundRectCmd {\r\n        var cmd = Pool.getItemByClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.lt = lt;\r\n        cmd.rt = rt;\r\n        cmd.lb = lb;\r\n        cmd.rb = rb;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRoundRectCmd\", this);\r\n    }\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawRoundRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else {\r\n            context._drawRoundRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n    }\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawRoundRectCmd.ID;\r\n    }\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);","import { Sprite } from \"./Sprite\";\r\nimport { GraphicsBounds } from \"./GraphicsBounds\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { ClipRectCmd } from \"./cmd/ClipRectCmd\"\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { DrawTexturesCmd } from \"./cmd/DrawTexturesCmd\"\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\"\r\nimport { FillTextCmd } from \"./cmd/FillTextCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport type { Material } from \"../resource/Material\";\r\nimport { CommandUniformMap } from \"../RenderEngine/CommandUniformMap\";\r\nimport { ShaderDataType } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { DrawEllipseCmd } from \"./cmd/DrawEllipseCmd\";\r\nimport { DrawRoundRectCmd } from \"./cmd/DrawRoundRectCmd\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>Graphics</code> 类用于创建绘图显示对象。Graphics可以同时绘制多个位图或者矢量图，还可以结合save，restore，transform，scale，rotate，translate，alpha等指令对绘图效果进行变化。\r\n * Graphics以命令流方式存储，可以通过cmds属性访问所有命令流。Graphics是比Sprite更轻量级的对象，合理使用能提高应用性能(比如把大量的节点绘图改为一个节点的Graphics命令集合，能减少大量节点创建消耗)。\r\n * @see laya.display.Sprite#graphics\r\n */\r\nexport class Graphics {\r\n\r\n    /**\r\n     * add global Uniform Data Map\r\n     * @param propertyID \r\n     * @param propertyKey \r\n     * @param uniformtype \r\n     */\r\n    static add2DGlobalUniformData(propertyID: number, propertyKey: string, uniformtype: ShaderDataType) {\r\n        let sceneUniformMap: CommandUniformMap = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2DGlobal\");\r\n        sceneUniformMap.addShaderUniform(propertyID, propertyKey, uniformtype);\r\n    }\r\n\r\n    /**\r\n     * get global shaderData\r\n     */\r\n    static get globalShaderData() {\r\n        return Value2D.globalShaderData;\r\n    }\r\n\r\n    /**@internal */\r\n    _sp: Sprite | null = null;\r\n    /**@internal */\r\n    _render: (sprite: Sprite, context: Context, x: number, y: number) => void = this._renderEmpty;\r\n    /**@private */\r\n    private _cmds: any[] = [];\r\n    /**@private */\r\n    protected _vectorgraphArray: any[] | null = null;\r\n    /**@private */\r\n    private _graphicBounds: GraphicsBounds | null = null;\r\n\r\n    private _material: Material;\r\n\r\n    constructor() {\r\n        this._createData();\r\n    }\r\n\r\n    /**@internal */\r\n    _createData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _clearData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _destroyData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。</p>\r\n     */\r\n    destroy(): void {\r\n        this.clear(true);\r\n        if (this._graphicBounds) this._graphicBounds.destroy();\r\n        this._graphicBounds = null;\r\n        this._vectorgraphArray = null;\r\n        if (this._sp) {\r\n            this._sp._renderType = 0;\r\n            this._sp = null;\r\n        }\r\n        this._destroyData();\r\n    }\r\n\r\n    /**\r\n     * <p>清空绘制命令。</p>\r\n     * @param recoverCmds 是否回收绘图指令数组，设置为true，则对指令数组进行回收以节省内存开销，建议设置为true进行回收，但如果手动引用了数组，不建议回收\r\n     */\r\n    clear(recoverCmds: boolean = true): void {\r\n        //TODO:内存回收all\r\n        if (recoverCmds) {\r\n            for (let i = 0, len = this._cmds.length; i < len; i++) {\r\n                this._cmds[i].recover();\r\n            }\r\n        }\r\n\r\n        this._cmds.length = 0;\r\n        this._render = this._renderEmpty;\r\n        this._clearData();\r\n        if (this._sp) {\r\n            this._sp._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this._repaint();\r\n        if (this._vectorgraphArray) {\r\n            for (let i = 0, len = this._vectorgraphArray.length; i < len; i++) {\r\n                VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);\r\n            }\r\n            this._vectorgraphArray.length = 0;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _clearBoundsCache(onSizeChanged?: boolean): void {\r\n        if (this._graphicBounds) {\r\n            if (!onSizeChanged || this._graphicBounds._affectBySize)\r\n                this._graphicBounds.reset();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _initGraphicBounds(): void {\r\n        if (!this._graphicBounds) {\r\n            this._graphicBounds = GraphicsBounds.create();\r\n            this._graphicBounds._graphics = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 重绘此对象。\r\n     */\r\n    _repaint(): void {\r\n        this._clearBoundsCache();\r\n        this._sp && this._sp.repaint();\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _isOnlyOne(): boolean {\r\n        return this._cmds.length === 1;\r\n    }\r\n\r\n    /**\r\n     * 命令流。存储了所有绘制命令。\r\n     */\r\n    get cmds() {\r\n        return this._cmds;\r\n    }\r\n\r\n    set cmds(value) {\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n\r\n        this._cmds = value;\r\n\r\n        let len = value.length;\r\n        this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n        this._repaint();\r\n    }\r\n\r\n    /**\r\n     * 保存到命令流。\r\n     */\r\n    addCmd(cmd: any): any {\r\n        if (cmd == null) {\r\n            console.warn(\"null cmd\");\r\n            return;\r\n        }\r\n\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n        this._cmds.push(cmd);\r\n        this._render = this._cmds.length === 1 ? this._renderOne : this._renderAll;\r\n        this._repaint();\r\n        return cmd;\r\n    }\r\n\r\n    removeCmd(cmd: any) {\r\n        let i = this.cmds.indexOf(cmd);\r\n        if (i != -1) {\r\n            this._cmds.splice(i, 1);\r\n\r\n            let len = this._cmds.length;\r\n            this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n            this._repaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * 获取端点列表。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBoundPoints(realSize);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get material() {\r\n        return this._material;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set material(value: Material) {\r\n        if (this._material == value)\r\n            return;\r\n        this._material && this._material._removeReference();\r\n        this._material = value;\r\n        if (value != null)\r\n            value._addReference();\r\n    }\r\n\r\n    /**\r\n     * 绘制单独图片\r\n     * @param texture\t\t纹理。\r\n     * @param x \t\t（可选）X轴偏移量。\r\n     * @param y \t\t（可选）Y轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param color\t \t （可选）颜色\r\n     */\r\n    drawImage(texture: Texture, x: number = 0, y: number = 0, width: number = null, height: number = null, color: string = null): DrawImageCmd | null {\r\n        if (!texture) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawImageCmd.create(texture, x, y, width, height, color));\r\n    }\r\n\r\n    /**\r\n     * 绘制纹理，相比drawImage功能更强大，性能会差一些\r\n     * @param texture\t\t纹理。\r\n     * @param x \t\t（可选）X轴偏移量。\r\n     * @param y \t\t（可选）Y轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param matrix\t（可选）矩阵信息。\r\n     * @param alpha\t\t（可选）透明度。\r\n     * @param color\t\t（可选）颜色滤镜。\r\n     * @param blendMode （可选）混合模式。\r\n     */\r\n    drawTexture(texture: Texture | null, x: number = 0, y: number = 0, width: number = null, height: number = null, matrix: Matrix | null = null, alpha: number = 1, color: string | null = null, blendMode: string | null = null, uv?: number[]): DrawTextureCmd | null {\r\n        if (!texture || alpha < 0.01) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawTextureCmd.create(texture, x, y, width, height, matrix, alpha, color, blendMode, uv));\r\n    }\r\n\r\n    /**\r\n     * 批量绘制同样纹理。\r\n     * @param texture 纹理。\r\n     * @param pos 绘制次数和坐标。\r\n     * @param colors 图片颜色数组。\r\n     */\r\n    drawTextures(texture: Texture, pos: any[], colors?: number[]): DrawTexturesCmd | null {\r\n        if (!texture) return null;\r\n        return this.addCmd(DrawTexturesCmd.create(texture, pos, colors));\r\n    }\r\n\r\n    /**\r\n     * 绘制一组三角形\r\n     * @param texture\t纹理。\r\n     * @param x\t\t\tX轴偏移量。\r\n     * @param y\t\t\tY轴偏移量。\r\n     * @param vertices  顶点数组。\r\n     * @param indices\t顶点索引。\r\n     * @param uvData\tUV数据。\r\n     * @param matrix\t缩放矩阵。\r\n     * @param alpha\t\talpha\r\n     * @param color\t\t颜色变换\r\n     * @param blendMode\tblend模式\r\n     */\r\n    drawTriangles(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array, matrix: Matrix | null = null,\r\n        alpha: number = 1, color: string | number = null, blendMode: string | null = null): DrawTrianglesCmd {\r\n        return this.addCmd(DrawTrianglesCmd.create(texture, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode));\r\n    }\r\n\r\n    /**\r\n     * 用 texture 填充。\r\n     * @param texture\t\t纹理。\r\n     * @param x\t\t\tX轴偏移量。\r\n     * @param y\t\t\tY轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param type\t\t（可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\r\n     * @param offset\t（可选）贴图纹理偏移\r\n     * @param color\t \t （可选）颜色\r\n     *\r\n     */\r\n    fillTexture(texture: Texture, x: number, y: number, width: number = 0, height: number = 0, type: string = \"repeat\", offset: Point | null = null, color: string = null): FillTextureCmd | null {\r\n        if (texture && texture.bitmap)\r\n            return this.addCmd(FillTextureCmd.create(texture, x, y, width, height, type, offset || Point.EMPTY, color));\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * 设置剪裁区域，超出剪裁区域的坐标不显示。\r\n     * @param x X 轴偏移量。\r\n     * @param y Y 轴偏移量。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     */\r\n    clipRect(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        return this.addCmd(ClipRectCmd.create(x, y, width, height));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制文本。\r\n     * @param text 在画布上输出的文本。\r\n     * @param x 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font 定义字号和字体，比如\"20px Arial\"。\r\n     * @param color 定义文本颜色，比如\"#ff0000\"。\r\n     * @param textAlign 文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     */\r\n    fillText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, color, textAlign, 0, \"\"));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制“被填充且镶边的”文本。\r\n     * @param text\t\t\t在画布上输出的文本。\r\n     * @param x\t\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y\t\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font\t\t\t定义字体和字号，比如\"20px Arial\"。\r\n     * @param fillColor\t\t定义文本颜色，比如\"#ff0000\"。\r\n     * @param textAlign\t\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     * @param lineWidth\t\t镶边线条宽度。\r\n     * @param borderColor\t定义镶边文本颜色。\r\n     */\r\n    fillBorderText(text: string | WordText, x: number, y: number, font: string, fillColor: string, textAlign: string, lineWidth: number, borderColor: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, fillColor, textAlign, lineWidth, borderColor));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制文本（没有填色）。文本的默认颜色是黑色。\r\n     * @param text\t\t在画布上输出的文本。\r\n     * @param x\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font\t\t定义字体和字号，比如\"20px Arial\"。\r\n     * @param color\t\t定义文本颜色，比如\"#ff0000\"。\r\n     * @param lineWidth\t线条宽度。\r\n     * @param textAlign\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     */\r\n    strokeText(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, null, textAlign, lineWidth, color));\r\n    }\r\n\r\n    /**\r\n     * 设置透明度。\r\n     * @param value 透明度。\r\n     */\r\n    alpha(alpha: number): AlphaCmd {\r\n        return this.addCmd(AlphaCmd.create(alpha));\r\n    }\r\n\r\n    /**\r\n     * 替换绘图的当前转换矩阵。\r\n     * @param mat 矩阵。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    transform(matrix: Matrix, pivotX: number = 0, pivotY: number = 0): TransformCmd {\r\n        return this.addCmd(TransformCmd.create(matrix, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 旋转当前绘图。(推荐使用transform，性能更高)\r\n     * @param angle\t\t旋转角度，以弧度计。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    rotate(angle: number, pivotX: number = 0, pivotY: number = 0): RotateCmd {\r\n        return this.addCmd(RotateCmd.create(angle, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 缩放当前绘图至更大或更小。(推荐使用transform，性能更高)\r\n     * @param scaleX\t水平方向缩放值。\r\n     * @param scaleY\t垂直方向缩放值。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    scale(scaleX: number, scaleY: number, pivotX: number = 0, pivotY: number = 0): ScaleCmd {\r\n        return this.addCmd(ScaleCmd.create(scaleX, scaleY, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 重新映射画布上的 (0,0) 位置。\r\n     * @param x 添加到水平坐标（x）上的值。\r\n     * @param y 添加到垂直坐标（y）上的值。\r\n     */\r\n    translate(tx: number, ty: number): TranslateCmd {\r\n        return this.addCmd(TranslateCmd.create(tx, ty));\r\n    }\r\n\r\n    /**\r\n     * 保存当前环境的状态。\r\n     */\r\n    save(): SaveCmd {\r\n        return this.addCmd(SaveCmd.create());\r\n    }\r\n\r\n    /**\r\n     * 返回之前保存过的路径状态和属性。\r\n     */\r\n    restore(): RestoreCmd {\r\n        return this.addCmd(RestoreCmd.create());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 替换文本颜色。\r\n     * @param color 颜色。\r\n     */\r\n    replaceTextColor(color: string): void {\r\n        this._repaint();\r\n        let cmds = this._cmds;\r\n        for (let i = cmds.length - 1; i > -1; i--) {\r\n            let cmd = cmds[i];\r\n            var cmdID: string = cmd.cmdID;\r\n            switch (cmdID) {\r\n                case FillTextCmd.ID:\r\n                    (cmd as FillTextCmd).color = color;\r\n                    break;\r\n                case DrawImageCmd.ID: //bitmap font\r\n                    (cmd as DrawImageCmd).color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载并显示一个图片。\r\n     * @param url\t\t图片地址。\r\n     * @param x\t\t\t（可选）显示图片的x位置。\r\n     * @param y\t\t\t（可选）显示图片的y位置。\r\n     * @param width\t\t（可选）显示图片的宽度，设置为0表示使用图片默认宽度。\r\n     * @param height\t（可选）显示图片的高度，设置为0表示使用图片默认高度。\r\n     * @param complete\t（可选）加载完成回调。\r\n     */\r\n    loadImage(url: string, x: number = 0, y: number = 0, width: number = null, height: number = null, complete: Function | null = null): void {\r\n        let tex: Texture = ILaya.loader.getRes(url);\r\n        if (tex) {\r\n            this.drawImage(tex, x, y, width, height);\r\n            complete && complete.call(this._sp);\r\n        }\r\n        else {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.drawImage(tex, x, y, width, height);\r\n                complete && complete.call(this._sp);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderEmpty(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderAll(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        context.material = this._material;\r\n        var cmds = this._cmds!;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            cmds[i].run(context, x, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderOne(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        context.material = this._material;\r\n        this._cmds[0].run(context, x, y);\r\n    }\r\n\r\n    /**\r\n     * 绘制一条线。\r\n     * @param fromX\t\tX轴开始位置。\r\n     * @param fromY\t\tY轴开始位置。\r\n     * @param toX\t\tX轴结束位置。\r\n     * @param toY\t\tY轴结束位置。\r\n     * @param lineColor\t颜色。\r\n     * @param lineWidth\t（可选）线条宽度。\r\n     */\r\n    drawLine(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number = 1): DrawLineCmd {\r\n        return this.addCmd(DrawLineCmd.create(fromX, fromY, toX, toY, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制一系列线段。\r\n     * @param x\t\t\t开始绘制的X轴位置。\r\n     * @param y\t\t\t开始绘制的Y轴位置。\r\n     * @param points\t线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\r\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）线段宽度。\r\n     */\r\n    drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawLinesCmd | null {\r\n        if (!points || points.length < 4) return null;\r\n        return this.addCmd(DrawLinesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制一系列曲线。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param points\t线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\r\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）线段宽度。\r\n     */\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawCurvesCmd {\r\n        return this.addCmd(DrawCurvesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制矩形。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param width\t\t矩形宽度。\r\n     * @param height\t矩形高度。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     * @param percent 位置和大小是否是百分比值。\r\n     */\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean): DrawRectCmd {\r\n        return this.addCmd(DrawRectCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制圆角矩形\r\n     * @param x             开始绘制的 X 轴位置。\r\n     * @param y             开始绘制的 Y 轴位置。\r\n     * @param width         圆角矩形宽度。\r\n     * @param height        圆角矩形高度。\r\n     * @param lt            左上圆角\r\n     * @param rt            右上圆角\r\n     * @param lb            左下圆角\r\n     * @param rb            右下圆角\r\n     * @param fillColor     填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor     （可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth     （可选）边框宽度。\r\n     * @param percent       （可选）位置和大小是否是百分比值。\r\n     * @returns \r\n     */\r\n    drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean) {\r\n        return this.addCmd(DrawRoundRectCmd.create(x, y, width, height, lt, rt, lb, rb, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制圆形。\r\n     * @param x\t\t\t圆点X 轴位置。\r\n     * @param y\t\t\t圆点Y 轴位置。\r\n     * @param radius\t半径。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     */\r\n    drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawCircleCmd {\r\n        return this.addCmd(DrawCircleCmd.create(x, y, radius, fillColor, lineColor, lineWidth));\r\n    }\r\n    /**\r\n     * 绘制椭圆形\r\n     * @param x         圆点X 轴位置。\r\n     * @param y         圆点Y 轴位置。\r\n     * @param width     横向半径。\r\n     * @param height    纵向半径。\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth （可选）边框宽度。\r\n     * @param percent   （可选）位置和大小是否是百分比值。\r\n     */\r\n    drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\r\n        return this.addCmd(DrawEllipseCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制扇形。\r\n     * @param x\t\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t\t开始绘制的 Y 轴位置。\r\n     * @param radius\t\t扇形半径。\r\n     * @param startAngle\t开始角度。\r\n     * @param endAngle\t\t结束角度。\r\n     * @param fillColor\t\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t\t（可选）边框宽度。\r\n     */\r\n    drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPieCmd {\r\n        return this.addCmd(DrawPieCmd.create(x, y, radius, Utils.toRadian(startAngle), Utils.toRadian(endAngle), fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制多边形。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param points\t多边形的点集合。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     */\r\n    drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPolyCmd {\r\n        return this.addCmd(DrawPolyCmd.create(x, y, points, fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制路径。\r\n     * @param x\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t开始绘制的 Y 轴位置。\r\n     * @param paths\t路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     * @param brush\t（可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\r\n     * @param pen\t（可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    drawPath(x: number, y: number, paths: any[], brush: any = null, pen: any = null): DrawPathCmd {\r\n        return this.addCmd(DrawPathCmd.create(x, y, paths, brush, pen));\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 绘制带九宫格的图片\r\n     * @param\ttexture\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tsizeGrid\r\n     * @param\tcolor\r\n     */\r\n    draw9Grid(texture: Texture, x: number = 0, y: number = 0, width: number = 0, height: number = 0, sizeGrid: any[], color?: string): void {\r\n        this.addCmd(Draw9GridTextureCmd.create(texture, x, y, width, height, sizeGrid, false, color));\r\n    }\r\n}\r\n","import { NodeFlags } from \"../Const\"\r\nimport { Component } from \"../components/Component\"\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Stat } from \"../utils/Stat\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\n\r\nconst ARRAY_EMPTY: any[] = [];\r\n\r\n/**\r\n * 添加到父对象后调度。\r\n * @eventType Event.ADDED\r\n */\r\n/*[Event(name = \"added\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 被父对象移除后调度。\r\n * @eventType Event.REMOVED\r\n */\r\n/*[Event(name = \"removed\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 加入节点树时调度。\r\n * @eventType Event.DISPLAY\r\n */\r\n/*[Event(name = \"display\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 从节点树移除时调度。\r\n * @eventType Event.UNDISPLAY\r\n */\r\n/*[Event(name = \"undisplay\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n *  <code>Node</code> 类是可放在显示列表中的所有对象的基类。该显示列表管理 Laya 运行时中显示的所有对象。使用 Node 类排列显示列表中的显示对象。Node 对象可以有子显示对象。\r\n */\r\nexport class Node extends EventDispatcher {\r\n    static EVENT_SET_ACTIVESCENE: string = \"ActiveScene\";\r\n    static EVENT_SET_IN_ACTIVESCENE: string = \"InActiveScene\";\r\n    /**@private */\r\n    private _bits: number = 0;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n\r\n    /**@internal 子对象集合，请不要直接修改此对象。*/\r\n    _children: Node[] = ARRAY_EMPTY;\r\n    /**@internal 父节点对象*/\r\n    _parent: Node = null;\r\n    /**@internal */\r\n    _destroyed: boolean = false;\r\n    /**@internal */\r\n    _conchData: any;\r\n    /**@internal */\r\n    _componentDriver: ComponentDriver;\r\n    /**@internal */\r\n    _is3D: boolean;\r\n    _url: string;\r\n    _extra: INodeExtra;\r\n\r\n    /**节点名称。*/\r\n    name: string = \"\";\r\n\r\n    /** 节点标签 */\r\n    tag: string;\r\n\r\n    /**\r\n     * 如果节点从资源中创建，这里记录是他的url\r\n     */\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**\r\n     * 设置资源的URL\r\n     */\r\n    set url(path: string) {\r\n        this._url = path;\r\n    }\r\n\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /** 是否3D节点，即Scene3D和Sprite3D及其衍生类 */\r\n    get is3D(): boolean {\r\n        return this._is3D;\r\n    }\r\n\r\n    /** 是否已经销毁。对象销毁后不能再使用。*/\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    //@internal\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    _setBit(type: number, value: boolean): void {\r\n        if (type === NodeFlags.DISPLAY) {\r\n            var preValue: boolean = this._getBit(type);\r\n            if (preValue != value) this._updateDisplayedInstage();\r\n        }\r\n        if (value) this._bits |= type;\r\n        else this._bits &= ~type;\r\n    }\r\n\r\n    _getBit(type: number): boolean {\r\n        return (this._bits & type) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setUpNoticeChain(): void {\r\n        if (this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**@internal */\r\n    _setBitUp(type: number): void {\r\n        var ele: Node = this;\r\n        ele._setBit(type, true);\r\n        ele = ele._parent;\r\n        while (ele) {\r\n            if (ele._getBit(type)) return;\r\n            ele._setBit(type, true);\r\n            ele = ele._parent;\r\n        }\r\n    }\r\n\r\n    protected onStartListeningToType(type: string) {\r\n        if (type === Event.DISPLAY || type === Event.UNDISPLAY) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n        }\r\n    }\r\n\r\n    bubbleEvent(type: string, data?: any) {\r\n        let arr: Array<Node> = _bubbleChainPool.length > 0 ? _bubbleChainPool.pop() : [];\r\n        arr.length = 0;\r\n\r\n        let obj: Node = this;\r\n        while (obj) {\r\n            if (obj.activeInHierarchy)\r\n                arr.push(obj);\r\n            obj = obj.parent;\r\n        }\r\n\r\n        if (data instanceof Event) {\r\n            data._stopped = false;\r\n            for (let obj of arr) {\r\n                data.setTo(type, obj, this);\r\n                obj.event(type, data);\r\n                if (data._stopped)\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            for (let obj of arr)\r\n                obj.event(type, data);\r\n        }\r\n\r\n        _bubbleChainPool.push(arr);\r\n    }\r\n\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。destroy对象默认会把自己从父节点移除，并且清理自身引用关系，等待js自动垃圾回收机制回收。destroy后不能再使用。</p>\r\n     * <p>destroy时会移除自身的事情监听，自身的timer监听，移除子对象及从父节点移除自己。</p>\r\n     * @param destroyChild\t（可选）是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._destroyed = true;\r\n        this.destroyAllComponent();\r\n        this._parent && this._parent.removeChild(this);\r\n\r\n        //销毁子节点\r\n        if (this._children) {\r\n            if (destroyChild) this.destroyChildren();\r\n            else this.removeChildren();\r\n        }\r\n        this.onDestroy();\r\n\r\n        this._children = null;\r\n\r\n        //移除所有事件监听\r\n        this.offAll();\r\n    }\r\n\r\n    /**\r\n     * 销毁时执行\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onDestroy(): void {\r\n        //trace(\"onDestroy node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * 销毁所有子对象，不销毁自己本身。\r\n     */\r\n    destroyChildren(): void {\r\n        //销毁子节点\r\n        if (this._children) {\r\n            //为了保持销毁顺序，所以需要正序销毁\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[0] && this._children[0].destroy(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加子节点。\r\n     * @param\tnode 节点对象\r\n     * @return\t返回添加的节点\r\n     */\r\n    addChild<T extends Node>(node: T): T {\r\n        if (!node || this._destroyed || node as any === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (node._parent === this) {\r\n            var index: number = this.getChildIndex(node);\r\n            if (index !== this._children.length - 1) {\r\n                this._children.splice(index, 1);\r\n                this._children.push(node);\r\n                this._childChanged();\r\n            }\r\n        } else {\r\n            node._parent && node._parent.removeChild(node);\r\n            this._children === ARRAY_EMPTY && (this._children = []);\r\n            this._children.push(node);\r\n            node._setParent(this);\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 批量增加子节点\r\n     * @param\t...args 无数子节点。\r\n     */\r\n    addChildren(...args: any[]): void {\r\n        var i: number = 0, n: number = args.length;\r\n        while (i < n) {\r\n            this.addChild(args[i++]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加子节点到指定的索引位置。\r\n     * @param\tnode 节点对象。\r\n     * @param\tindex 索引位置。\r\n     * @return\t返回添加的节点。\r\n     */\r\n    addChildAt(node: Node, index: number): Node {\r\n        if (!node || this._destroyed || node === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (index >= 0 && index <= this._children.length) {\r\n            if (node._parent === this) {\r\n                var oldIndex: number = this.getChildIndex(node);\r\n                this._children.splice(oldIndex, 1);\r\n                this._children.splice(index, 0, node);\r\n                this._childChanged();\r\n            } else {\r\n                node._parent && node._parent.removeChild(node);\r\n                this._children === ARRAY_EMPTY && (this._children = []);\r\n                this._children.splice(index, 0, node);\r\n                node._setParent(this);\r\n            }\r\n            return node;\r\n        } else {\r\n            throw new Error(\"appendChildAt:The index is out of bounds\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据子节点对象，获取子节点的索引位置。\r\n     * @param\tnode 子节点。\r\n     * @return\t子节点所在的索引位置。\r\n     */\r\n    getChildIndex(node: Node): number {\r\n        return this._children.indexOf(node);\r\n    }\r\n\r\n    /**\r\n     * 根据子节点的名字，获取子节点对象。\r\n     * @param\tname 子节点的名字。\r\n     * @return\t节点对象。\r\n     */\r\n    getChildByName(name: string): Node {\r\n        for (let child of this._children) {\r\n            if (child && child.name === name)\r\n                return child;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点的索引位置，获取子节点对象。\r\n     * @param\tindex 索引位置\r\n     * @return\t子节点\r\n     */\r\n    getChildAt(index: number): Node {\r\n        return this._children[index] || null;\r\n    }\r\n\r\n    /**\r\n     * 设置子节点的索引位置。\r\n     * @param\tnode 子节点。\r\n     * @param\tindex 新的索引。\r\n     * @return\t返回子节点本身。\r\n     */\r\n    setChildIndex(node: Node, index: number): Node {\r\n        var childs: any[] = this._children;\r\n        if (index < 0 || index >= childs.length) {\r\n            throw new Error(\"setChildIndex:The index is out of bounds.\");\r\n        }\r\n\r\n        var oldIndex: number = this.getChildIndex(node);\r\n        if (oldIndex < 0) throw new Error(\"setChildIndex:node is must child of this object.\");\r\n        childs.splice(oldIndex, 1);\r\n        childs.splice(index, 0, node);\r\n        this._childChanged();\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 子节点发生改变。\r\n     * @private\r\n     * @param\tchild 子节点。\r\n     */\r\n    protected _childChanged(child: Node = null): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 删除子节点。\r\n     * @param\tnode 子节点\r\n     * @return\t被删除的节点\r\n     */\r\n    removeChild(node: Node): Node {\r\n        if (!this._children) return node;\r\n        var index: number = this._children.indexOf(node);\r\n        return this.removeChildAt(index);\r\n    }\r\n\r\n    /**\r\n     * 从父容器删除自己，如已经被删除不会抛出异常。\r\n     * @return 当前节点（ Node ）对象。\r\n     */\r\n    removeSelf(): Node {\r\n        this._parent && this._parent.removeChild(this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点名字删除对应的子节点对象，如果找不到不会抛出异常。\r\n     * @param\tname 对象名字。\r\n     * @return 查找到的节点（ Node ）对象。\r\n     */\r\n    removeChildByName(name: string): Node {\r\n        var node: Node = this.getChildByName(name);\r\n        node && this.removeChild(node);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点索引位置，删除对应的子节点对象。\r\n     * @param\tindex 节点索引位置。\r\n     * @return\t被删除的节点。\r\n     */\r\n    removeChildAt(index: number): Node {\r\n        var node: Node = this.getChildAt(index);\r\n        if (node) {\r\n            this._children.splice(index, 1);\r\n            node._setParent(null);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 删除指定索引区间的所有子对象。\r\n     * @param\tbeginIndex 开始索引。\r\n     * @param\tendIndex 结束索引。\r\n     * @return 当前节点对象。\r\n     */\r\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\r\n        if (this._children && this._children.length > 0) {\r\n            var childs: any[] = this._children;\r\n            if (beginIndex === 0 && endIndex >= childs.length - 1) {\r\n                var arr: any[] = childs;\r\n                this._children = ARRAY_EMPTY;\r\n            } else {\r\n                arr = childs.splice(beginIndex, endIndex - beginIndex + 1);\r\n            }\r\n            for (var i: number = 0, n: number = arr.length; i < n; i++) {\r\n                arr[i]._setParent(null);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 替换子节点。\r\n     * 将传入的新节点对象替换到已有子节点索引位置处。\r\n     * @param\tnewNode 新节点。\r\n     * @param\toldNode 老节点。\r\n     * @return\t返回新节点。\r\n     */\r\n    replaceChild(newNode: Node, oldNode: Node): Node {\r\n        var index: number = this._children.indexOf(oldNode);\r\n        if (index > -1) {\r\n            this._children.splice(index, 1, newNode);\r\n            oldNode._setParent(null);\r\n            newNode._setParent(this);\r\n            return newNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 子对象数量。\r\n     */\r\n    get numChildren(): number {\r\n        return this._children ? this._children.length : 0;\r\n    }\r\n\r\n    /**父节点。*/\r\n    get parent(): Node {\r\n        return this._parent;\r\n    }\r\n\r\n    /**检查本节点是否是某个节点的上层节点\r\n     * @param node\r\n     * @return\r\n     */\r\n    isAncestorOf(node: Node): boolean {\r\n        let p = node.parent;\r\n        while (p) {\r\n            if (p == this)\r\n                return true;\r\n\r\n            p = p.parent;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**@private */\r\n    protected _setParent(value: Node): void {\r\n        if (this._parent !== value) {\r\n            if (value) {\r\n                this._parent = value;\r\n                //如果父对象可见，则设置子对象可见\r\n                this._onAdded();\r\n                this.event(Event.ADDED);\r\n                if (this._getBit(NodeFlags.DISPLAY)) {\r\n                    this._setUpNoticeChain();\r\n                    value.displayedInStage && this._displayChild(this, true);\r\n                }\r\n                value._childChanged(this);\r\n            } else {\r\n                //设置子对象不可见\r\n                this._onRemoved();\r\n                this.event(Event.REMOVED);\r\n                let p = this._parent;\r\n                if (this._getBit(NodeFlags.DISPLAY)) this._displayChild(this, false);\r\n                this._parent = value;\r\n                p._childChanged(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**表示是否在显示列表中显示。*/\r\n    get displayedInStage(): boolean {\r\n        if (this._getBit(NodeFlags.DISPLAY)) return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n        return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n    }\r\n\r\n    /**@private */\r\n    private _updateDisplayedInstage(): void {\r\n        var ele: Node;\r\n        ele = this;\r\n        var stage: Node = ILaya.stage;\r\n        var displayedInStage: boolean = false;\r\n        while (ele) {\r\n            if (ele._getBit(NodeFlags.DISPLAY)) {\r\n                displayedInStage = ele._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n                break;\r\n            }\r\n            if (ele === stage || ele._getBit(NodeFlags.DISPLAYED_INSTAGE)) {\r\n                displayedInStage = true;\r\n                break;\r\n            }\r\n            ele = ele._parent;\r\n        }\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, displayedInStage);\r\n    }\r\n\r\n    /**@internal */\r\n    _setDisplay(value: boolean): void {\r\n        if (this._getBit(NodeFlags.DISPLAYED_INSTAGE) !== value) {\r\n            this._setBit(NodeFlags.DISPLAYED_INSTAGE, value);\r\n            if (value) this.event(Event.DISPLAY);\r\n            else this.event(Event.UNDISPLAY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置指定节点对象是否可见(是否在渲染列表中)。\r\n     * @private\r\n     * @param\tnode 节点。\r\n     * @param\tdisplay 是否可见。\r\n     */\r\n    private _displayChild(node: Node, display: boolean): void {\r\n        var childs: any[] = node._children;\r\n        if (childs) {\r\n            for (var i: number = 0, n: number = childs.length; i < n; i++) {\r\n                var child: Node = childs[i];\r\n                if (!child) continue;\r\n                if (!child._getBit(NodeFlags.DISPLAY)) continue;\r\n                if (child._children.length > 0) {\r\n                    this._displayChild(child, display);\r\n                } else {\r\n                    child._setDisplay(display);\r\n                }\r\n            }\r\n        }\r\n        node._setDisplay(display);\r\n    }\r\n\r\n    /**\r\n     * 当前容器是否包含指定的 <code>Node</code> 节点对象 。\r\n     * @param\tnode  指定的 <code>Node</code> 节点对象 。\r\n     * @return\t一个布尔值表示是否包含指定的 <code>Node</code> 节点对象 。\r\n     */\r\n    contains(node: Node): boolean {\r\n        if (node === this) return true;\r\n        while (node) {\r\n            if (node._parent === this) return true;\r\n            node = node._parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行某函数。功能同Laya.timer.timerLoop()。\r\n     * @param\tdelay\t\t间隔时间(单位毫秒)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    timerLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        this.timer.loop(delay, caller, method, args, coverBefore, jumpFrame);\r\n    }\r\n\r\n    /**\r\n     * 定时执行某函数一次。功能同Laya.timer.timerOnce()。\r\n     * @param\tdelay\t\t延迟时间(单位毫秒)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     */\r\n    timerOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行某函数(基于帧率)。功能同Laya.timer.frameLoop()。\r\n     * @param\tdelay\t\t间隔几帧(单位为帧)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次某函数(基于帧率)。功能同Laya.timer.frameOnce()。\r\n     * @param\tdelay\t\t延迟几帧(单位为帧)。\r\n     * @param\tcaller\t\t执行域(this)\r\n     * @param\tmethod\t\t结束时的回调方法\r\n     * @param\targs\t\t（可选）回调参数\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。功能同Laya.timer.clearTimer()。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 结束时的回调方法。\r\n     */\r\n    clearTimer(caller: any, method: Function): void {\r\n        this.timer.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * <p>延迟运行指定的函数。</p>\r\n     * <p>在控件被显示在屏幕之前调用，一般用于延迟计算数据。</p>\r\n     * @param method 要执行的函数的名称。例如，functionName。\r\n     * @param args 传递给 <code>method</code> 函数的可选参数列表。\r\n     *\r\n     * @see #runCallLater()\r\n     */\r\n    callLater(method: Function, args: any[] = null): void {\r\n        this.timer.callLater(this, method, args);\r\n    }\r\n\r\n    /**\r\n     * <p>如果有需要延迟调用的函数（通过 <code>callLater</code> 函数设置），则立即执行延迟调用函数。</p>\r\n     * @param method 要执行的函数名称。例如，functionName。\r\n     * @see #callLater()\r\n     */\r\n    runCallLater(method: Function): void {\r\n        this.timer.runCallLater(this, method);\r\n    }\r\n\r\n    //============================组件化支持==============================\r\n    /** @private */\r\n    protected _components: Component[];\r\n    /**@private */\r\n    private _activeChangeScripts: Component[];\r\n\r\n\r\n    _scene: Node;\r\n\r\n    /**\r\n     * 获得所属场景。\r\n     * @return\t场景。\r\n     */\r\n    get scene(): any {\r\n        return this._scene;\r\n    }\r\n\r\n    /**\r\n     * 获取自身是否激活。\r\n     *   @return\t自身是否激活。\r\n     */\r\n    get active(): boolean {\r\n        return !this._getBit(NodeFlags.NOT_READY) && !this._getBit(NodeFlags.NOT_ACTIVE);\r\n    }\r\n\r\n    /**\r\n     * 设置是否激活。\r\n     * @param\tvalue 是否激活。\r\n     */\r\n    set active(value: boolean) {\r\n        value = !!value;\r\n        if (!this._getBit(NodeFlags.NOT_ACTIVE) !== value) {\r\n            if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n                if (value)\r\n                    throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n                else\r\n                    throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n            } else {\r\n                this._setBit(NodeFlags.NOT_ACTIVE, !value);\r\n                if (this._parent) {\r\n                    if (this._parent.activeInHierarchy) {\r\n                        this._processActive(value, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取在场景中是否激活。\r\n     *   @return\t在场景中是否激活。\r\n     */\r\n    get activeInHierarchy(): boolean {\r\n        return this._getBit(NodeFlags.ACTIVE_INHIERARCHY);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onActive(): void {\r\n        Stat.spriteCount++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onInActive(): void {\r\n        Stat.spriteCount--;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onActiveInScene(): void {\r\n        this.event(Node.EVENT_SET_ACTIVESCENE, this._scene);\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onInActiveInScene(): void {\r\n        this.event(Node.EVENT_SET_IN_ACTIVESCENE, this._scene);\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n    * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\r\n    * 此方法为虚方法，使用时重写覆盖即可\r\n    */\r\n    onAwake(): void {\r\n        //this.name  && trace(\"onAwake node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * 组件被启用后执行，比如节点被添加到舞台后\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onEnable(): void {\r\n        //this.name  && trace(\"onEnable node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * 组件被禁用时执行，比如从节点从舞台移除后\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onDisable(): void {\r\n        //trace(\"onDisable node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, spriteMap: any): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setBelongScene(scene: Node): void {\r\n        if (!this._scene || this.scene != scene) {\r\n            this._scene = scene;\r\n            this._onActiveInScene();\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setBelongScene(scene);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setUnBelongScene(): void {\r\n        if (this._scene !== this) {//移除节点本身是scene不继续派发\r\n            this._onInActiveInScene();\r\n            this._scene = null;\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    _processActive(active: boolean, fromSetter?: boolean) {\r\n        (this._activeChangeScripts) || (this._activeChangeScripts = []);\r\n        let arr = this._activeChangeScripts;\r\n\r\n        if (active)\r\n            this._activeHierarchy(arr, fromSetter);\r\n        else\r\n            this._inActiveHierarchy(arr, fromSetter);\r\n\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let comp = arr[i];\r\n            comp.owner && comp._setActive(active);\r\n        }\r\n\r\n        arr.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _activeHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    (comp._enabled) && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(true);\r\n            }\r\n        }\r\n\r\n        this._onActive();\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (!child._getBit(NodeFlags.NOT_ACTIVE) && !child._getBit(NodeFlags.NOT_READY)) && (child._activeHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        if (!this._getBit(NodeFlags.AWAKED)) {\r\n            this._setBit(NodeFlags.AWAKED, true);\r\n            this.onAwake();\r\n        }\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _inActiveHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._onInActive();\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    comp._enabled && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(false);\r\n            }\r\n        }\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, false);\r\n\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (child && !child._getBit(NodeFlags.NOT_ACTIVE)) && (child._inActiveHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onAdded(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n        } else {\r\n            let parentScene = this._parent.scene;\r\n            parentScene && this._setBelongScene(parentScene);\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onRemoved(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n        } else {\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(false);\r\n            this._parent.scene && this._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addComponentInstance(comp: Component): void {\r\n        if (!this._components)\r\n            this._components = [];\r\n        this._components.push(comp);\r\n\r\n        comp._setOwner(this);\r\n        if (this.activeInHierarchy)\r\n            comp._setActive(true);\r\n        this._componentsChanged?.(comp, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroyComponent(comp: Component) {\r\n        if (!this._components)\r\n            return;\r\n\r\n        let i = this._components.indexOf(comp);\r\n        if (i != -1) {\r\n            this._components.splice(i, 1);\r\n            comp._destroy();\r\n            this._componentsChanged?.(comp, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private destroyAllComponent(): void {\r\n        if (!this._components)\r\n            return;\r\n\r\n        for (let i = 0, n = this._components.length; i < n; i++) {\r\n            let item = this._components[i];\r\n            item && !item.destroyed && item._destroy();\r\n        }\r\n        this._components.length = 0;\r\n        this._componentsChanged?.(null, 2);\r\n    }\r\n\r\n    /**\r\n     * 组件列表发生改变。\r\n     * @private\r\n     */\r\n    protected _componentsChanged?(comp: Component, action: 0 | 1 | 2): void;\r\n\r\n    /**\r\n     * @internal 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    _cloneTo(destObject: any, srcRoot: Node, dstRoot: Node): void {\r\n        var destNode: Node = (<Node>destObject);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                var destComponent = destNode.addComponent((this._components[i] as any).constructor);\r\n                this._components[i]._cloneTo(destComponent);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加组件实例。\r\n     * @param\tcomponent 组建实例。\r\n     * @return\t组件。\r\n     */\r\n    addComponentInstance(component: Component): Component {\r\n        if (component.owner)\r\n            throw \"Node:the component has belong to other node.\";\r\n        if (component._singleton && this.getComponent(((<any>component)).constructor))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", component);\r\n        else\r\n            this._addComponentInstance(component);\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 添加组件。\r\n     * @param\tcomponentType 组件类型。\r\n     * @return\t组件。\r\n     */\r\n    addComponent<T extends Component>(componentType: new () => T): T {\r\n        let comp: T = Pool.createByClass(componentType);\r\n        if (!comp) {\r\n            throw \"missing \" + componentType.toString();\r\n        }\r\n\r\n        if (comp._singleton && this.getComponent(componentType))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", comp);\r\n        else\r\n            this._addComponentInstance(comp);\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * 获得组件实例，如果没有则返回为null\r\n     * @param\tcomponentType 组建类型\r\n     * @return\t返回组件\r\n     */\r\n    getComponent<T extends Component>(componentType: new () => T): T {\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType)\r\n                    return comp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 返回所有组件实例。\r\n     * @return 返回组件实例数组。\r\n     */\r\n    get components(): ReadonlyArray<Component> {\r\n        return this._components || ARRAY_EMPTY;\r\n    }\r\n\r\n    /**\r\n     * 获得组件实例，如果没有则返回为null\r\n     * @param\tcomponentType 组件类型\r\n     * @return\t返回组件数组\r\n     */\r\n    getComponents(componentType: typeof Component): Component[] {\r\n        var arr: any[];\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType) {\r\n                    arr = arr || [];\r\n                    arr.push(comp);\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 获取timer\r\n     */\r\n    get timer(): Timer {\r\n        return this._scene ? this._scene.timer : ILaya.timer;\r\n    }\r\n\r\n    /**\r\n     * 反序列化后会调用\r\n     */\r\n    onAfterDeserialize() { }\r\n}\r\n\r\nconst _bubbleChainPool: Array<Array<Node>> = [];\r\n\r\nexport interface INodeExtra { }\r\n","\r\nconst HALF_PI = Math.PI * 0.5;\r\nconst PI2 = Math.PI * 2;\r\n\r\n/**\r\n* <code>Ease</code> 类定义了缓动函数，以便实现 <code>Tween</code> 动画的缓动效果。\r\n*/\r\nexport class Ease {\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearIn(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearInOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceIn(t: number, b: number, c: number, d: number): number {\r\n        return c - Ease.bounceOut(d - t, 0, c, d) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t < d * 0.5) return Ease.bounceIn(t * 2, 0, c, d) * .5 + b;\r\n        else return Ease.bounceOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d) < (1 / 2.75)) return c * (7.5625 * t * t) + b;\r\n        else if (t < (2 / 2.75)) return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n        else if (t < (2.5 / 2.75)) return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n        else return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始时往后运动，然后反向朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backIn(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时是向后跟踪，再倒转方向并朝目标移动，稍微过冲目标，然后再次倒转方向，回来朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backInOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时是朝目标移动，稍微过冲，再倒转方向回来朝着目标。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticIn(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticInOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d * 0.5) == 2) return b + c;\r\n        if (!p) p = d * (.3 * 1.5);\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p) * .5 + c + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * PI2 / p) + c + b);\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineInOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * 0.5 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * Math.cos(t / d * HALF_PI) + c + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sin(t / d * HALF_PI) + b;\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t + b;\r\n        return -c * 0.5 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t + b;\r\n        return -c * 0.5 * ((--t) * (t - 2) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoIn(t: number, b: number, c: number, d: number): number {\r\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b - c * 0.001;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t == 0) return b;\r\n        if (t == d) return b + c;\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * Math.pow(2, 10 * (t - 1)) + b;\r\n        return c * 0.5 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoOut(t: number, b: number, c: number, d: number): number {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return -c * 0.5 * (Math.sqrt(1 - t * t) - 1) + b;\r\n        return c * 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * <p><code>Handler</code> 是事件处理器类。</p>\r\n * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>\r\n * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>\r\n */\r\nexport class Handler {\r\n\r\n    /**@private handler对象池*/\r\n    protected static _pool: Handler[] = [];\r\n    /**@private */\r\n    private static _gid: number = 1;\r\n\r\n    /** 执行域(this)。*/\r\n    caller: Object | null;\r\n    /** 处理方法。*/\r\n    method: Function | null;\r\n    /** 参数。*/\r\n    args: any[] | null;\r\n    /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/\r\n    once = false;\r\n\r\n    /**@private */\r\n    protected _id = 0;\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。\r\n     * @param\tcaller 执行域。\r\n     * @param\tmethod 处理函数。\r\n     * @param\targs 函数参数。\r\n     * @param\tonce 是否只执行一次。\r\n     */\r\n    constructor(caller: Object | null = null, method: Function | null = null, args: any[] | null = null, once: boolean = false) {\r\n        this.setTo(caller, method, args, once);\r\n    }\r\n\r\n    /**\r\n     * 设置此对象的指定属性值。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 回调方法。\r\n     * @param\targs 携带的参数。\r\n     * @param\tonce 是否只执行一次，如果为true，执行后执行recover()进行回收。\r\n     * @return  返回 handler 本身。\r\n     */\r\n    setTo(caller: any, method: Function | null, args: any[] | null, once = false): Handler {\r\n        this._id = Handler._gid++;\r\n        this.caller = caller;\r\n        this.method = method;\r\n        this.args = args;\r\n        this.once = once;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 执行处理器。\r\n     */\r\n    run(): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        var result: any = this.method.apply(this.caller, this.args);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 执行处理器，并携带额外数据。\r\n     * @param\tdata 附加的回调数据，可以是单数据或者Array(作为多参)。\r\n     */\r\n    runWith(data: any): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        if (data == null)\r\n            var result: any = this.method.apply(this.caller, this.args);\r\n        else if (!this.args && !data.unshift) result = this.method.call(this.caller, data);\r\n        else if (this.args) result = this.method.apply(this.caller, this.args.concat(data));\r\n        else result = this.method.apply(this.caller, data);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 清理对象引用。\r\n     */\r\n    clear(): Handler {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 清理并回收到 Handler 对象池内。\r\n     */\r\n    recover(): void {\r\n        if (this._id > 0) {\r\n            this._id = 0;\r\n            Handler._pool.push(this.clear());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 回调方法。\r\n     * @param\targs 携带的参数。\r\n     * @param\tonce 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\r\n     * @return  返回创建的handler实例。\r\n     */\r\n    static create(caller: any, method: Function | null, args: any[] | null = null, once: boolean = true): Handler {\r\n        if (Handler._pool.length)\r\n            return (Handler._pool.pop() as Handler).setTo(caller, method, args, once);\r\n        return new Handler(caller, method, args, once);\r\n    }\r\n}\r\n\r\n","import { Handler } from \"./Handler\";\r\nimport { Pool } from \"./Pool\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Utils } from \"./Utils\";\r\nimport { ILaya } from \"./../../ILaya\";\r\n\r\n/**\r\n * <code>Tween</code>  是一个缓动类。使用此类能够实现对目标对象属性的渐变。\r\n */\r\nexport class Tween {\r\n    /**@private */\r\n    private static tweenMap: any[] = [];\r\n    /**@private */\r\n    private _complete: Handler;\r\n    /**@private */\r\n    private _target: any;\r\n    /**@private */\r\n    private _ease: Function;\r\n    /**@private */\r\n    private _props: any[];\r\n    /**@private */\r\n    private _duration: number;\r\n    /**@private */\r\n    private _delay: number;\r\n    /**@private */\r\n    private _startTimer: number;\r\n    /**@private */\r\n    private _usedTimer: number;\r\n    /**@private */\r\n    private _usedPool: boolean;\r\n    /**@private */\r\n    private _delayParam: any[];\r\n    /**@private 唯一标识，TimeLintLite用到*/\r\n    gid: number = 0;\r\n    /**更新回调，缓动数值发生变化时，回调变化的值*/\r\n    update: Handler;\r\n    /**重播次数，如果repeat=0，则表示无限循环播放*/\r\n    repeat: number = 1;\r\n    /**当前播放次数*/\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, true, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, false, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, true, false, true);\r\n    }\r\n\r\n    /**\r\n     * 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, false, false, true);\r\n    }\r\n\r\n    /** @internal */\r\n    _create(target: any, props: any, duration: number, ease: Function|null, complete: Handler|null, delay: number, coverBefore: boolean, isTo: boolean, usePool: boolean, runNow: boolean): Tween {\r\n        if (!target) throw new Error(\"Tween:target is null\");\r\n        this._target = target;\r\n        this._duration = duration;\r\n        this._ease = ease || props.ease || Tween.easeNone;\r\n        this._complete = complete || props.complete;\r\n        this._delay = delay;\r\n        this._props = [];\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        this._usedPool = usePool;\r\n        this._delayParam = null;\r\n        this.update = props.update;\r\n\r\n        //判断是否覆盖\t\t\t\r\n        var gid: number = (target.$_GID || (target.$_GID = Utils.getGID()));\r\n        if (!Tween.tweenMap[gid]) {\r\n            Tween.tweenMap[gid] = [this];\r\n        } else {\r\n            if (coverBefore) Tween.clearTween(target);\r\n            Tween.tweenMap[gid].push(this);\r\n        }\r\n\r\n        if (runNow) {\r\n            if (delay <= 0) this.firstStart(target, props, isTo);\r\n            else {\r\n                this._delayParam = [target, props, isTo];\r\n                ILaya.timer.once(delay, this, this.firstStart, this._delayParam);\r\n            }\r\n        } else {\r\n            this._initProps(target, props, isTo);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private firstStart(target: any, props: any, isTo: boolean): void {\r\n        this._delayParam = null;\r\n        if (target.destroyed) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this._initProps(target, props, isTo);\r\n        this._beginLoop();\r\n    }\r\n\r\n    private _initProps(target: any, props: any, isTo: boolean): void {\r\n        //初始化属性\r\n        for (var p in props) {\r\n            if (typeof (target[p]) == 'number') {\r\n                var start: number = isTo ? target[p] : props[p];\r\n                var end: number = isTo ? props[p] : target[p];\r\n                this._props.push([p, start, end - start]);\r\n                if (!isTo) target[p] = start;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _beginLoop(): void {\r\n        ILaya.timer.frameLoop(1, this, this._doEase);\r\n    }\r\n\r\n    /**执行缓动**/\r\n    private _doEase(): void {\r\n        this._updateEase(Browser.now());\r\n    }\r\n\r\n    /**@internal */\r\n    _updateEase(time: number): void {\r\n        var target: any = this._target;\r\n        if (!target) return;\r\n\r\n        //如果对象被销毁，则立即停止缓动\r\n        if (target.destroyed) return Tween.clearTween(target);\r\n\r\n        var usedTimer: number = this._usedTimer = time - this._startTimer - this._delay;\r\n        if (usedTimer < 0) return;\r\n        if (usedTimer >= this._duration) return this.complete();\r\n\r\n        var ratio: number = usedTimer > 0 ? this._ease(usedTimer, 0, 1, this._duration) : 0;\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + (ratio * prop[2]);\r\n        }\r\n        if (this.update) this.update.run();\r\n    }\r\n\r\n    /**设置当前执行比例**/\r\n    set progress(v: number) {\r\n        var uTime: number = v * this._duration;\r\n        this._startTimer = Browser.now() - this._delay - uTime;\r\n    }\r\n\r\n    /**\r\n     * 立即结束缓动并到终点。\r\n     */\r\n    complete(): void {\r\n        if (!this._target) return;\r\n\r\n        //立即执行初始化\r\n        ILaya.timer.runTimer(this, this.firstStart);\r\n\r\n        //缓存当前属性\r\n        var target: any = this._target;\r\n        var props: any = this._props;\r\n        var handler: Handler = this._complete;\r\n        //设置终点属性\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + prop[2];\r\n        }\r\n        if (this.update) this.update.run();\r\n\r\n        this._count++;\r\n        if (this.repeat != 0 && this._count >= this.repeat) {\r\n            //清理\r\n            this.clear();\r\n            //回调\r\n            handler && handler.run();\r\n        } else {\r\n            this.restart();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停缓动，可以通过resume或restart重新开始。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._beginLoop);\r\n        ILaya.timer.clear(this, this._doEase);\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        var time: number = Browser.now();\r\n        var dTime: number;\r\n        dTime = time - this._startTimer - this._delay;\r\n        if (dTime < 0) {\r\n            this._usedTimer = dTime;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置开始时间。\r\n     * @param\tstartTime 开始时间。\r\n     */\r\n    setStartTime(startTime: number): void {\r\n        this._startTimer = startTime;\r\n    }\r\n\r\n    /**\r\n     * 清理指定目标对象上的所有缓动。\r\n     * @param\ttarget 目标对象。\r\n     */\r\n    static clearAll(target: any): void {\r\n        if (!target || !target.$_GID) return;\r\n        var tweens: any[] = Tween.tweenMap[target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                tweens[i]._clear();\r\n            }\r\n            tweens.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理某个缓动。\r\n     * @param\ttween 缓动对象。\r\n     */\r\n    static clear(tween: Tween): void {\r\n        tween.clear();\r\n    }\r\n\r\n    /**@private 同clearAll，废弃掉，尽量别用。*/\r\n    static clearTween(target: any): void {\r\n        Tween.clearAll(target);\r\n    }\r\n\r\n    /**\r\n     * 停止并清理当前缓动。\r\n     */\r\n    clear(): void {\r\n        if (this._target) {\r\n            this._remove();\r\n            this._clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clear(): void {\r\n        this.pause();\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        this._complete = null;\r\n        this._target = null;\r\n        this._ease = null;\r\n        this._props = null;\r\n        this._delayParam = null;\r\n    this.repeat = 1;\r\n\r\n        if (this._usedPool) {\r\n            this.update = null;\r\n            Pool.recover(\"tween\", this);\r\n        }\r\n    }\r\n\r\n    /** 回收到对象池。*/\r\n    recover(): void {\r\n        this._usedPool = true;\r\n        this._clear();\r\n    }\r\n\r\n    private _remove(): void {\r\n        var tweens: any[] = Tween.tweenMap[this._target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                if (tweens[i] === this) {\r\n                    tweens.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重新开始暂停的缓动。\r\n     */\r\n    restart(): void {\r\n        this.pause();\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        if (this._delayParam) {\r\n            ILaya.timer.once(this._delay, this, this.firstStart, this._delayParam);\r\n            return;\r\n        }\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            this._target[prop[0]] = prop[1];\r\n        }\r\n        ILaya.timer.once(this._delay, this, this._beginLoop);\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停的缓动。\r\n     */\r\n    resume(): void {\r\n        if (this._usedTimer >= this._duration) return;\r\n        this._startTimer = Browser.now() - this._usedTimer - this._delay;\r\n        if (this._delayParam) {\r\n            if (this._usedTimer < 0) {\r\n                ILaya.timer.once(-this._usedTimer, this, this.firstStart, this._delayParam);\r\n            } else {\r\n                this.firstStart.apply(this, <any>this._delayParam);\r\n            }\r\n        } else {\r\n            this._beginLoop();\r\n        }\r\n    }\r\n\r\n    private static easeNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { Ease } from \"./Ease\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Tween } from \"./Tween\";\r\n\r\n/**\r\n * @private\r\n * <code>Dragging</code> 类是触摸滑动控件。\r\n */\r\nexport class Dragging {\r\n    /** 被拖动的对象。*/\r\n    target: Sprite;\r\n    /** 缓动衰减系数。*/\r\n    ratio: number = 0.92;\r\n    /** 单帧最大偏移量。*/\r\n    maxOffset: number = 60;\r\n    /** 滑动范围。*/\r\n    area: Rectangle;\r\n    /** 表示拖动是否有惯性。*/\r\n    hasInertia: boolean;\r\n    /** 橡皮筋最大值。*/\r\n    elasticDistance: number;\r\n    /** 橡皮筋回弹时间，单位为毫秒。*/\r\n    elasticBackTime: number;\r\n    /** 事件携带数据。*/\r\n    data: any;\r\n\r\n    private _dragging: boolean = false;\r\n    private _clickOnly: boolean = true;\r\n    private _elasticRateX: number;\r\n    private _elasticRateY: number;\r\n    private _lastX: number;\r\n    private _lastY: number;\r\n    private _offsetX: number;\r\n    private _offsetY: number;\r\n    private _offsets: any[];\r\n    private _tween: Tween;\r\n    private _parent: Sprite;\r\n\r\n    /**\r\n     * 开始拖拽。\r\n     * @param\ttarget 待拖拽的 <code>Sprite</code> 对象。\r\n     * @param\tarea 滑动范围。\r\n     * @param\thasInertia 拖动是否有惯性。\r\n     * @param\telasticDistance 橡皮筋最大值。\r\n     * @param\telasticBackTime 橡皮筋回弹时间，单位为毫秒。\r\n     * @param\tdata 事件携带数据。\r\n     * @param\tratio 惯性阻尼系数\r\n     */\r\n    start(target: Sprite, area: Rectangle, hasInertia: boolean, elasticDistance: number, elasticBackTime: number, data: any, ratio: number = 0.92): void {\r\n        this.clearTimer();\r\n\r\n        this.target = target;\r\n        this.area = area;\r\n        this.hasInertia = hasInertia;\r\n        this.elasticDistance = area ? elasticDistance : 0;\r\n        this.elasticBackTime = elasticBackTime;\r\n        this.data = data;\r\n        this.ratio = ratio;\r\n\r\n        this._parent = (target.parent as Sprite);\r\n\r\n        this._clickOnly = true;\r\n        this._dragging = true;\r\n        this._elasticRateX = this._elasticRateY = 1;\r\n        this._lastX = this._parent.mouseX;\r\n        this._lastY = this._parent.mouseY;\r\n\r\n        ILaya.stage.on(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.on(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.on(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    /**\r\n     * 清除计时器。\r\n     */\r\n    private clearTimer(): void {\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n        ILaya.systemTimer.clear(this, this.tweenMove);\r\n        if (this._tween) {\r\n            this._tween.recover();\r\n            this._tween = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止拖拽。\r\n     */\r\n    stop(): void {\r\n        if (this._dragging) {\r\n            ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n            ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n            this._dragging = false;\r\n            this.target && this.area && this.backToArea();\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拖拽的循环处理函数。\r\n     */\r\n    private loop(): void {\r\n        var point: Point = this._parent.getMousePoint();\r\n        var mouseX: number = point.x;\r\n        var mouseY: number = point.y;\r\n        var offsetX: number = mouseX - this._lastX;\r\n        var offsetY: number = mouseY - this._lastY;\r\n\r\n        if (this._clickOnly) {\r\n            if (Math.abs(offsetX * ILaya.stage._canvasTransform.getScaleX()) > 1 || Math.abs(offsetY * ILaya.stage._canvasTransform.getScaleY()) > 1) {\r\n                this._clickOnly = false;\r\n                this._offsets || (this._offsets = []);\r\n                this._offsets.length = 0;\r\n                this.target.event(Event.DRAG_START, this.data);\r\n                //TODO:\r\n                //target._set$P(\"$_MOUSEDOWN\", false);\r\n            } else return;\r\n        } else {\r\n            this._offsets.push(offsetX, offsetY);\r\n        }\r\n        if (offsetX === 0 && offsetY === 0) return;\r\n\r\n        this._lastX = mouseX;\r\n        this._lastY = mouseY;\r\n        this.target.x += offsetX * this._elasticRateX;\r\n        this.target.y += offsetY * this._elasticRateY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n    }\r\n\r\n    /**\r\n     * 拖拽区域检测。\r\n     */\r\n    private checkArea(): void {\r\n        if (this.elasticDistance <= 0) {\r\n            this.backToArea();\r\n        } else {\r\n            if (this.target._x < this.area.x) {\r\n                var offsetX: number = this.area.x - this.target._x;\r\n            } else if (this.target._x > this.area.x + this.area.width) {\r\n                offsetX = this.target._x - this.area.x - this.area.width;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            this._elasticRateX = Math.max(0, 1 - (offsetX / this.elasticDistance));\r\n\r\n            if (this.target._y < this.area.y) {\r\n                var offsetY: number = this.area.y - this.target.y;\r\n            } else if (this.target._y > this.area.y + this.area.height) {\r\n                offsetY = this.target._y - this.area.y - this.area.height;\r\n            } else {\r\n                offsetY = 0;\r\n            }\r\n            this._elasticRateY = Math.max(0, 1 - (offsetY / this.elasticDistance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动至设定的拖拽区域。\r\n     */\r\n    private backToArea(): void {\r\n        this.target.x = Math.min(Math.max(this.target._x, this.area.x), this.area.x + this.area.width);\r\n        this.target.y = Math.min(Math.max(this.target._y, this.area.y), this.area.y + this.area.height);\r\n    }\r\n\r\n    /**\r\n     * 舞台的抬起事件侦听函数。\r\n     * @param\te Event 对象。\r\n     */\r\n    private onStageMouseUp(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.off(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n\r\n        if (this._clickOnly || !this.target) return;\r\n        //target.mouseEnabled = true;\r\n\r\n        if (this.hasInertia) {\r\n            //计算平均值\r\n            if (this._offsets.length < 1) {\r\n                this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY);\r\n            }\r\n\r\n            this._offsetX = this._offsetY = 0;\r\n            var len: number = this._offsets.length;\r\n            var n: number = Math.min(len, 6);\r\n            var m: number = this._offsets.length - n;\r\n            for (var i: number = len - 1; i > m; i--) {\r\n                this._offsetY += this._offsets[i--];\r\n                this._offsetX += this._offsets[i];\r\n            }\r\n\r\n            this._offsetX = this._offsetX / n * 2;\r\n            this._offsetY = this._offsetY / n * 2;\r\n\r\n            if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset;\r\n            if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset;\r\n            ILaya.systemTimer.frameLoop(1, this, this.tweenMove);\r\n        } else if (this.elasticDistance > 0) {\r\n            this.checkElastic();\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 橡皮筋效果检测。\r\n     */\r\n    private checkElastic(): void {\r\n        var tx: number = NaN;\r\n        var ty: number = NaN;\r\n        if (this.target.x < this.area.x) tx = this.area.x;\r\n        else if (this.target._x > this.area.x + this.area.width) tx = this.area.x + this.area.width;\r\n\r\n        if (this.target.y < this.area.y) ty = this.area.y;\r\n        else if (this.target._y > this.area.y + this.area.height) ty = this.area.y + this.area.height;\r\n\r\n        if (!isNaN(tx) || !isNaN(ty)) {\r\n            var obj: any = {};\r\n            if (!isNaN(tx)) obj.x = tx;\r\n            if (!isNaN(ty)) obj.y = ty;\r\n            this._tween = Tween.to(this.target, obj, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.clear), 0, false, false);\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动。\r\n     */\r\n    private tweenMove(): void {\r\n        this._offsetX *= this.ratio * this._elasticRateX;\r\n        this._offsetY *= this.ratio * this._elasticRateY;\r\n\r\n        this.target.x += this._offsetX;\r\n        this.target.y += this._offsetY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n\r\n        if ((Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1) || this._elasticRateX < 0.5 || this._elasticRateY < 0.5) {\r\n            ILaya.systemTimer.clear(this, this.tweenMove);\r\n            if (this.elasticDistance > 0) this.checkElastic();\r\n            else this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 结束拖拽。\r\n     */\r\n    private clear(): void {\r\n        if (this.target) {\r\n            this.clearTimer();\r\n            var sp = this.target;\r\n            this.target = null;\r\n            this._parent = null;\r\n            sp.event(Event.DRAG_END, this.data);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Utils } from \"./Utils\";\r\n\r\nexport class SpriteUtils {\r\n    /**\r\n     * @private\r\n     * 根据传入的显示对象 <code>Sprite</code> 和此显示对象上的 两个点，返回此对象上的两个点在舞台坐标系上组成的最小的矩形区域对象。\r\n     * @param\tsprite 显示对象 <code>Sprite</code>。\r\n     * @param\tx0\t点一的 X 轴坐标点。\r\n     * @param\ty0\t点一的 Y 轴坐标点。\r\n     * @param\tx1\t点二的 X 轴坐标点。\r\n     * @param\ty1\t点二的 Y 轴坐标点。\r\n     * @return 两个点在舞台坐标系组成的矩形对象 <code>Rectangle</code>。\r\n     */\r\n    static getGlobalRecByPoints(sprite: Sprite, x0: number, y0: number, x1: number, y1: number): Rectangle {\r\n        var newLTPoint: Point;\r\n        newLTPoint = Point.create().setTo(x0, y0);\r\n        newLTPoint = sprite.localToGlobal(newLTPoint);\r\n        var newRBPoint: Point;\r\n        newRBPoint = Point.create().setTo(x1, y1);\r\n        newRBPoint = sprite.localToGlobal(newRBPoint);\r\n        var rst: Rectangle = Rectangle._getWrapRec([newLTPoint.x, newLTPoint.y, newRBPoint.x, newRBPoint.y]);\r\n        newLTPoint.recover();\r\n        newRBPoint.recover();\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 计算传入的显示对象 <code>Sprite</code> 的全局坐标系的坐标和缩放值，返回 <code>Rectangle</code> 对象存放计算出的坐标X值、Y值、ScaleX值、ScaleY值。\r\n     * @param\tsprite <code>Sprite</code> 对象。\r\n     * @return  矩形对象 <code>Rectangle</code>\r\n     */\r\n    static getGlobalPosAndScale(sprite: Sprite): Rectangle {\r\n        return SpriteUtils.getGlobalRecByPoints(sprite, 0, 0, 1, 1);\r\n    }\r\n\r\n    /**\r\n    * 获取指定区域内相对于窗口左上角的transform。\r\n    * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n    * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n    * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n    * @return\r\n    */\r\n    static getTransformRelativeToWindow(coordinateSpace: Sprite, x: number, y: number): any {\r\n        var stage = ILaya.stage;\r\n\r\n        // coordinateSpace的全局缩放、坐标\r\n        var globalTransform: Rectangle = SpriteUtils.getGlobalPosAndScale(coordinateSpace);\r\n        // canvas的transform矩阵\r\n        var canvasMatrix: Matrix = stage._canvasTransform.clone();\r\n        // 在矩阵变化前前记录的canvas的坐标\r\n        var canvasLeft: number = canvasMatrix.tx;\r\n        var canvasTop: number = canvasMatrix.ty;\r\n\r\n        // 把矩阵转回0度，得到正确的画布缩放比\r\n        canvasMatrix.rotate(-Math.PI / 180 * stage.canvasDegree);\r\n        // 组合画布缩放和舞台适配缩放\r\n        canvasMatrix.scale(stage.clientScaleX, stage.clientScaleY);\r\n        // 画布是否处于正常角度的垂直角度，-90或90度\r\n        var perpendicular: boolean = (stage.canvasDegree % 180 != 0);\r\n        var tx: number, ty: number;\r\n\r\n        if (perpendicular) {\r\n            // 在舞台上的坐标\r\n            tx = y + globalTransform.y;\r\n            ty = x + globalTransform.x;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.d;\r\n            ty *= canvasMatrix.a;\r\n\r\n            // 设置了screenMode = horizontal\r\n            if (stage.canvasDegree == 90) {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的right，画布的left是视觉上的top\r\n                tx = canvasLeft - tx;\r\n                ty += canvasTop;\r\n            }\r\n            // screenMode = vertical并且设备在横屏状态，画布旋转-90度\r\n            else {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的left，画布的top是视觉上的bottom\r\n                tx += canvasLeft;\r\n                ty = canvasTop - ty;\r\n            }\r\n        }\r\n        // 没有canvas旋转\r\n        else {\r\n            // 在舞台上的坐标\r\n            tx = x + globalTransform.x;\r\n            ty = y + globalTransform.y;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.a;\r\n            ty *= canvasMatrix.d;\r\n\r\n            // 在浏览器窗口上的坐标\r\n            tx += canvasLeft;\r\n            ty += canvasTop;\r\n        }\r\n\r\n        // Safari兼容\r\n        ty += stage['_safariOffsetY'];\r\n\r\n        // 组合画布缩放和舞台适配缩放以及显示对象缩放，得到DOM原因的缩放因子\r\n        var domScaleX: number, domScaleY: number;\r\n        if (perpendicular) {\r\n            domScaleX = canvasMatrix.d * globalTransform.height;\r\n            domScaleY = canvasMatrix.a * globalTransform.width;\r\n        } else {\r\n            domScaleX = canvasMatrix.a * globalTransform.width;\r\n            domScaleY = canvasMatrix.d * globalTransform.height;\r\n        }\r\n\r\n        return { x: tx, y: ty, scaleX: domScaleX, scaleY: domScaleY };\r\n    }\r\n\r\n    /**\r\n     * 使DOM元素使用舞台内的某块区域内。\r\n     * @param\tdom\t\t\t\tDOM元素引用\r\n     * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n     * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n     * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n     * @param\twidth\t\t\t宽度\r\n     * @param\theight\t\t\t高度\r\n     */\r\n    static fitDOMElementInArea(dom: any, coordinateSpace: Sprite, x: number, y: number, width: number, height: number): void {\r\n        if (!dom._fitLayaAirInitialized) {\r\n            dom._fitLayaAirInitialized = true;\r\n            dom.style.transformOrigin = dom.style.webKittransformOrigin = \"left top\";\r\n            dom.style.position = \"absolute\"\r\n        }\r\n\r\n        var transform: any = SpriteUtils.getTransformRelativeToWindow(coordinateSpace, x, y);\r\n\r\n        // 设置dom样式\r\n        dom.style.transform = dom.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n        dom.style.width = width + 'px';\r\n        dom.style.height = height + 'px';\r\n        dom.style.left = transform.x + 'px';\r\n        dom.style.top = transform.y + 'px';\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 对传入的数组列表，根据子项的属性 Z 值进行重新排序。返回是否已重新排序的 Boolean 值。\r\n     * @param\tarray 子对象数组。\r\n     * @return\tBoolean 值，表示是否已重新排序。\r\n     */\r\n    static updateOrder(array: any[]): boolean {\r\n        if (!array || array.length < 2) return false;\r\n        var i: number = 1, j: number, len: number = array.length, key: number, c: Sprite;\r\n        while (i < len) {\r\n            j = i;\r\n            c = array[j];\r\n            key = array[j]._zOrder;\r\n            while (--j > -1) {\r\n                if (array[j]._zOrder > key) array[j + 1] = array[j];\r\n                else break;\r\n            }\r\n            array[j + 1] = c;\r\n            i++;\r\n        }\r\n        return true;\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { GrahamScan } from \"../maths/GrahamScan\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { RenderSprite } from \"../renders/RenderSprite\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { BoundsStyle } from \"./css/BoundsStyle\";\r\nimport { CacheStyle } from \"./css/CacheStyle\";\r\nimport { SpriteStyle } from \"./css/SpriteStyle\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Node } from \"./Node\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\n// import { Stage } from \"./Stage\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Dragging } from \"../utils/Dragging\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Scene } from \"./Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport type { Material } from \"../resource/Material\";\r\n\r\n/**在显示对象上按下后调度。\r\n * @eventType Event.MOUSE_DOWN\r\n * */\r\n/*[Event(name = \"mousedown\", type = \"laya.events.Event\")]*/\r\n/**在显示对象抬起后调度。\r\n * @eventType Event.MOUSE_UP\r\n * */\r\n/*[Event(name = \"mouseup\", type = \"laya.events.Event\")]*/\r\n/**鼠标在对象身上进行移动后调度\r\n * @eventType Event.MOUSE_MOVE\r\n * */\r\n/*[Event(name = \"mousemove\", type = \"laya.events.Event\")]*/\r\n/**鼠标经过对象后调度。\r\n * @eventType Event.MOUSE_OVER\r\n * */\r\n/*[Event(name = \"mouseover\", type = \"laya.events.Event\")]*/\r\n/**鼠标离开对象后调度。\r\n * @eventType Event.MOUSE_OUT\r\n * */\r\n/*[Event(name = \"mouseout\", type = \"laya.events.Event\")]*/\r\n/**鼠标点击对象后调度。\r\n * @eventType Event.CLICK\r\n * */\r\n/*[Event(name = \"click\", type = \"laya.events.Event\")]*/\r\n/**开始拖动后调度。\r\n * @eventType Event.DRAG_START\r\n * */\r\n/*[Event(name = \"dragstart\", type = \"laya.events.Event\")]*/\r\n/**拖动中调度。\r\n * @eventType Event.DRAG_MOVE\r\n * */\r\n/*[Event(name = \"dragmove\", type = \"laya.events.Event\")]*/\r\n/**拖动结束后调度。\r\n * @eventType Event.DRAG_END\r\n * */\r\n/*[Event(name = \"dragend\", type = \"laya.events.Event\")]*/\r\nexport class Sprite extends Node {\r\n    /**@internal */\r\n    _x: number = 0;\r\n    /**@internal */\r\n    _y: number = 0;\r\n    /**@internal */\r\n    _width: number = 0;\r\n    /**@internal */\r\n    _height: number = 0;\r\n    /***@internal X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\r\n    _anchorX: number = 0;\r\n    /***@internal Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\r\n    _anchorY: number = 0;\r\n    /**@internal */\r\n    _visible: boolean = true;\r\n    /**@internal 鼠标状态，0:auto,1:mouseEnabled=false,2:mouseEnabled=true。*/\r\n    _mouseState: number = 0;\r\n    /**@internal z排序，数值越大越靠前。*/\r\n    _zOrder: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _transform: Matrix | null = null;\r\n    /**@internal */\r\n    protected _tfChanged: boolean = false;\r\n    /**@internal */\r\n    protected _repaint: number = SpriteConst.REPAINT_NONE;\r\n    /**@internal */\r\n    private _texture: Texture | null = null;\r\n    /**@internal */\r\n    private _sizeFlag: number = 0;\r\n\r\n    //以下变量为系统调用，请不要直接使用\r\n    /**@internal */\r\n    _style: SpriteStyle = SpriteStyle.EMPTY;\r\n    /**@internal */\r\n    _cacheStyle: CacheStyle = CacheStyle.EMPTY;\r\n    /**@internal */\r\n    _boundStyle: BoundsStyle | null = null;\r\n    /**@internal */\r\n    _graphics: Graphics | null = null;\r\n\r\n    _ownGraphics: boolean = false;\r\n\r\n    /**\r\n     * <p>鼠标事件与此对象的碰撞检测是否可穿透。碰撞检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\r\n     * <p>穿透表示鼠标事件发生的位置处于本对象绘图区域内时，才算命中，而与对象宽高和值为Rectangle对象的hitArea属性无关。如果sprite.hitArea值是HitArea对象，表示显式声明了此对象的鼠标事件响应区域，而忽略对象的宽高、mouseThrough属性。</p>\r\n     * <p>影响对象鼠标事件响应区域的属性为：width、height、hitArea，优先级顺序为：hitArea(type:HitArea)>hitArea(type:Rectangle)>width/height。</p>\r\n     * @default false\t不可穿透，此对象的鼠标响应区域由width、height、hitArea属性决定。</p>\r\n     */\r\n    mouseThrough: boolean = false;\r\n    /**\r\n     * <p>指定是否自动计算宽高数据。默认值为 false 。</p>\r\n     * <p>Sprite宽高默认为0，并且不会随着绘制内容的变化而变化，如果想根据绘制内容获取宽高，可以设置本属性为true，或者通过getBounds方法获取。设置为true，对性能有一定影响。</p>\r\n     */\r\n    autoSize: boolean = false;\r\n    /**\r\n     * <p>指定鼠标事件检测是优先检测自身，还是优先检测其子对象。鼠标事件检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\r\n     * <p>如果为false，优先检测子对象，当有子对象被命中时，中断检测，获得命中目标。如果未命中任何子对象，最后再检测此对象；如果为true，则优先检测本对象，如果本对象没有被命中，直接中断检测，表示没有命中目标；如果本对象被命中，则进一步递归检测其子对象，以确认最终的命中目标。</p>\r\n     * <p>合理使用本属性，能减少鼠标事件检测的节点，提高性能。可以设置为true的情况：开发者并不关心此节点的子节点的鼠标事件检测结果，也就是以此节点作为其子节点的鼠标事件检测依据。</p>\r\n     * <p>Stage对象和UI的View组件默认为true。</p>\r\n     * @default false\t优先检测此对象的子对象，当递归检测完所有子对象后，仍然没有找到目标对象，最后再检测此对象。\r\n     */\r\n    hitTestPrior: boolean = false;\r\n\r\n    /** 如果节点需要加载相关的皮肤，但放在不同域，这里可以设置 **/\r\n    _skinBaseUrl: string;\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._style && this._style.recover();\r\n        this._cacheStyle && this._cacheStyle.recover();\r\n        this._boundStyle && this._boundStyle.recover();\r\n        this._transform && this._transform.recover();\r\n        this._style = null;\r\n        this._cacheStyle = null;\r\n        this._boundStyle = null;\r\n        this._transform = null;\r\n        this._texture && this._texture._removeReference();\r\n        this._texture = null;\r\n        this._graphics && this._ownGraphics && this._graphics.destroy();\r\n        this._graphics = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get scene(): Scene {\r\n        return <Scene>this._scene;\r\n    }\r\n\r\n    /**根据zOrder进行重新排序。*/\r\n    updateZOrder(): void {\r\n        SpriteUtils.updateOrder(this._children) && this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getBoundsStyle(): BoundsStyle {\r\n        if (!this._boundStyle) this._boundStyle = BoundsStyle.create();\r\n        return this._boundStyle;\r\n    }\r\n\r\n    /**@internal */\r\n    _setCustomRender(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 设置是否开启自定义渲染，只有开启自定义渲染，才能使用customRender函数渲染。\r\n     */\r\n    set customRenderEnable(b: boolean) {\r\n        if (b) {\r\n            this._renderType |= SpriteConst.CUSTOM;\r\n            this._setCustomRender();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定显示对象是否缓存为静态图像，cacheAs时，子对象发生变化，会自动重新缓存，同时也可以手动调用reCache方法更新缓存。\r\n     * 建议把不经常变化的“复杂内容”缓存为静态图像，能极大提高渲染性能。cacheAs有\"none\"，\"normal\"和\"bitmap\"三个值可选。\r\n     * 默认为\"none\"，不做任何缓存。\r\n     * 当值为\"normal\"时，canvas模式下进行画布缓存，webgl模式下进行命令缓存。\r\n     * 当值为\"bitmap\"时，canvas模式下进行依然是画布缓存，webgl模式下使用renderTarget缓存。\r\n     * webgl下renderTarget缓存模式缺点：会额外创建renderTarget对象，增加内存开销，缓存面积有最大2048限制，不断重绘时会增加CPU开销。优点：大幅减少drawcall，渲染性能最高。\r\n     * webgl下命令缓存模式缺点：只会减少节点遍历及命令组织，不会减少drawcall数，性能中等。优点：没有额外内存开销，无需renderTarget支持。\r\n     */\r\n    get cacheAs(): string {\r\n        return this._cacheStyle.userSetCache;\r\n    }\r\n\r\n    /**@internal */\r\n    _setCacheAs(value: string): void {\r\n        //_dataf32[SpriteConst.POSCACHE] = value == \"bitmap\"?2:(value == \"normal\"?1:0);\r\n    }\r\n\r\n    set cacheAs(value: string) {\r\n        if (value === this._cacheStyle.userSetCache) return;\r\n        if ('bitmap' == value && !(this._cacheStyle.canvas instanceof HTMLCanvas)) {\r\n            this._cacheStyle.canvas = null;\r\n        }\r\n\r\n        this._getCacheStyle().userSetCache = value;\r\n\r\n        if (this.mask && value === 'normal') return;\r\n        this._setCacheAs(value);\r\n        this._checkCanvasEnable();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * 更新_cnavas相关的状态\r\n     */\r\n    private _checkCanvasEnable(): void {\r\n        var tEnable: boolean = this._cacheStyle.needEnableCanvasRender();\r\n        this._getCacheStyle().enableCanvasRender = tEnable;\r\n        if (tEnable) {\r\n            if (this._cacheStyle.needBitmapCache()) {\r\n                this._cacheStyle.cacheAs = \"bitmap\";\r\n            } else {\r\n                this._cacheStyle.cacheAs = this._cacheStyle.userSetCache;\r\n            }\r\n            this._cacheStyle.reCache = true;\r\n            this._renderType |= SpriteConst.CANVAS;\r\n        } else {\r\n            this._cacheStyle.cacheAs = \"none\";\r\n            this._cacheStyle.releaseContext();\r\n            this._renderType &= ~SpriteConst.CANVAS;\r\n        }\r\n        this._setCacheAs(this._cacheStyle.cacheAs);\r\n    }\r\n\r\n    /**设置cacheAs为非空时此值才有效，staticCache=true时，子对象变化时不会自动更新缓存，只能通过调用reCache方法手动刷新。*/\r\n    get staticCache(): boolean {\r\n        return this._cacheStyle.staticCache;\r\n    }\r\n\r\n    set staticCache(value: boolean) {\r\n        this._getCacheStyle().staticCache = value;\r\n        if (!value) this.reCache();\r\n    }\r\n\r\n    /**在设置cacheAs的情况下，调用此方法会重新刷新缓存。*/\r\n    reCache(): void {\r\n        this._cacheStyle.reCache = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n    }\r\n\r\n    getRepaint(): number {\r\n        return this._repaint;\r\n    }\r\n\r\n    /**@internal */\r\n    _setX(value: number): void {\r\n        this._x = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setY(value: number): void {\r\n        this._y = value;\r\n    }\r\n\r\n    /**表示显示对象相对于父容器的水平方向坐标值。*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._x !== value) {\r\n            this._setX(value);\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._cacheStyle.maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**表示显示对象相对于父容器的垂直方向坐标值。*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._y !== value) {\r\n            this._setY(value);\r\n\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._cacheStyle.maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的宽度，单位为像素，默认为0。</p>\r\n     * <p>此宽度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\r\n     * <p>可以通过getbounds获取显示对象图像的实际宽度。</p>\r\n     */\r\n    get width(): number {\r\n        return this.get_width();\r\n    }\r\n\r\n    set width(value: number) {\r\n        this.set_width(value);\r\n    }\r\n\r\n    set_width(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~1;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 1;\r\n        else\r\n            this._sizeFlag &= ~1;\r\n        if (this._width !== value || flag != this._sizeFlag) {\r\n            this._width = value;\r\n            this._setWidth(value);\r\n            this._setPivotX(this._anchorX * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n\r\n    get_width(): number {\r\n        if (!this.autoSize) return (this._width == 0 && (this._sizeFlag & 1) == 0 && this.texture) ? this.texture.width : this._width;\r\n        if (this.texture) return this.texture.width;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().width;\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的高度，单位为像素，默认为0。</p>\r\n     * <p>此高度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\r\n     * <p>可以通过getbounds获取显示对象图像的实际高度。</p>\r\n     */\r\n    get height(): number {\r\n        return this.get_height();\r\n    }\r\n\r\n    set height(value: number) {\r\n        this.set_height(value);\r\n    }\r\n\r\n    // for ts\r\n    set_height(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~2;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 2;\r\n        else\r\n            this._sizeFlag &= ~2;\r\n        if (this._height !== value || flag != this._sizeFlag) {\r\n            this._height = value;\r\n            this._setHeight(value);\r\n            this._setPivotY(this._anchorY * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_height(): number {\r\n        if (!this.autoSize) return (this._height == 0 && (this._sizeFlag & 2) == 0 && this.texture) ? this.texture.height : this._height;\r\n        if (this.texture) return this.texture.height;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().height;\r\n    }\r\n\r\n    get _isWidthSet() {\r\n        return this._width != 0 || (this._sizeFlag & 1) != 0;\r\n    }\r\n\r\n    get _isHeightSet() {\r\n        return this._height != 0 || (this._sizeFlag & 2) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setWidth(value: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _setHeight(value: number): void {\r\n    }\r\n\r\n    protected _shouldRefreshLayout() {\r\n    }\r\n\r\n    /**\r\n     * <p>对象的显示宽度（以像素为单位）。</p>\r\n     */\r\n    get displayWidth(): number {\r\n        return this.width * this.scaleX;\r\n    }\r\n\r\n    /**\r\n     * <p>对象的显示高度（以像素为单位）。</p>\r\n     */\r\n    get displayHeight(): number {\r\n        return this.height * this.scaleY;\r\n    }\r\n\r\n    /**\r\n     * 设置对象bounds大小，如果有设置，则不再通过getBounds计算，合理使用能提高性能。\r\n     * @param\tbound bounds矩形区域\r\n     */\r\n    setSelfBounds(bound: Rectangle): void {\r\n        this._getBoundsStyle().userBounds = bound;\r\n    }\r\n\r\n    /**\r\n     * <p>获取本对象在父容器坐标系的矩形显示区域。</p>\r\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\r\n     * @return 矩形区域。\r\n     */\r\n    getBounds(): Rectangle {\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._boundPointsToParent());\r\n    }\r\n\r\n    /**\r\n     * 获取本对象在自己坐标系的矩形显示区域。\r\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\r\n     * @return 矩形区域。\r\n     */\r\n    getSelfBounds(): Rectangle {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds;\r\n        if (!this._graphics && this._children.length === 0 && !this._texture)\r\n            return Rectangle.TEMP.setTo(0, 0, this.width, this.height); // 如果没有graphics则取对象指定的大小。原来是0000\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._getBoundPointsM(false));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取本对象在父容器坐标系的显示区域多边形顶点列表。\r\n     * 当显示对象链中有旋转时，返回多边形顶点列表，无旋转时返回矩形的四个顶点。\r\n     * @param ifRotate\t（可选）之前的对象链中是否有旋转。\r\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _boundPointsToParent(ifRotate: boolean = false): any[] {\r\n        let pX: number = 0, pY: number = 0;\r\n        if (this._style) {\r\n            pX = this.pivotX;\r\n            pY = this.pivotY;\r\n            ifRotate = ifRotate || (this._style.rotation !== 0);\r\n            if (this._style.scrollRect) {\r\n                pX += this._style.scrollRect.x;\r\n                pY += this._style.scrollRect.y;\r\n            }\r\n        }\r\n        let pList: any[] = this._getBoundPointsM(ifRotate);\r\n        if (!pList || pList.length < 1) return pList;\r\n\r\n        if (pList.length != 8) {\r\n            pList = ifRotate ? GrahamScan.scanPList(pList) : Rectangle._getWrapRec(pList, Rectangle.TEMP)._getBoundPoints();\r\n        }\r\n\r\n        if (!this.transform) {\r\n            Utils.transPointList(pList, this._x - pX, this._y - pY);\r\n            return pList;\r\n        }\r\n        let tPoint = Point.TEMP;\r\n        let len = pList.length;\r\n        for (let i = 0; i < len; i += 2) {\r\n            tPoint.x = pList[i];\r\n            tPoint.y = pList[i + 1];\r\n            this.toParentPoint(tPoint);\r\n            pList[i] = tPoint.x;\r\n            pList[i + 1] = tPoint.y;\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * 返回此实例中的绘图对象（ <code>Graphics</code> ）的显示区域，不包括子对象。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 一个 Rectangle 对象，表示获取到的显示区域。\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._graphics) return Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        return this._graphics.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取自己坐标系的显示区域多边形顶点列表\r\n     * @param ifRotate\t（可选）当前的显示对象链是否由旋转\r\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds._getBoundPoints();\r\n        if (!this._boundStyle) this._getBoundsStyle();\r\n        let rst = this._boundStyle.temBM;\r\n        if (!rst) rst = this._boundStyle.temBM = [];\r\n        if (this._style.scrollRect) {\r\n            rst.length = 0;\r\n            var rec: Rectangle = Rectangle.TEMP;\r\n            rec.copyFrom(this._style.scrollRect);\r\n            rst.push(...rec._getBoundPoints());\r\n            return rst;\r\n        }\r\n        let pList: any[];\r\n        if (this._graphics) {\r\n            pList = this._graphics.getBoundPoints();\r\n        } else {\r\n            rst.length = 0;\r\n            pList = rst;\r\n        }\r\n        if (this._texture) {\r\n            rec = Rectangle.TEMP;\r\n            rec.setTo(0, 0, this.width || this._texture.width, this.height || this._texture.height);\r\n            pList.push(...rec._getBoundPoints());\r\n        }\r\n        //处理子对象区域\r\n        let chidren = this._children;\r\n        for (let i = 0, n = chidren.length; i < n; i++) {\r\n            let child = <Sprite>chidren[i]; //_visible===true隐含了是Sprite\r\n            if (child._visible === true && child._cacheStyle.maskParent != this) {\r\n                let cList = child._boundPointsToParent(ifRotate);\r\n                if (cList) {\r\n                    if (pList)\r\n                        pList.push(...cList);\r\n                    else\r\n                        pList = cList;\r\n                }\r\n            }\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取cache数据。\r\n     * @return  cache数据 CacheStyle 。\r\n     */\r\n    _getCacheStyle(): CacheStyle {\r\n        this._cacheStyle === CacheStyle.EMPTY && (this._cacheStyle = CacheStyle.create());\r\n        return this._cacheStyle;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取样式。\r\n     * @return  样式 Style 。\r\n     */\r\n    getStyle(): SpriteStyle {\r\n        this._style === SpriteStyle.EMPTY && (this._style = SpriteStyle.create());\r\n        return this._style;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置样式。\r\n     * @param\tvalue 样式。\r\n     */\r\n    setStyle(value: SpriteStyle): void {\r\n        this._style = value;\r\n    }\r\n\r\n    /**X轴缩放值，默认值为1。设置为负数，可以实现水平反转效果，比如scaleX=-1。*/\r\n    get scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set scaleX(value: number) {\r\n        this.set_scaleX(value);\r\n    }\r\n\r\n    /**Y轴缩放值，默认值为1。设置为负数，可以实现垂直反转效果，比如scaleX=-1。*/\r\n    get scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n    set scaleY(value: number) {\r\n        this.set_scaleY(value);\r\n    }\r\n\r\n    set_scaleX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setScaleX(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set_scaleY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleY !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setScaleY(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _setScaleX(value: number): void {\r\n        this._style.scaleX = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setScaleY(value: number): void {\r\n        this._style.scaleY = value;\r\n    }\r\n\r\n    /**旋转角度，默认值为0。以角度为单位。*/\r\n    get rotation(): number {\r\n        return this._style.rotation;\r\n    }\r\n\r\n    set rotation(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.rotation !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setRotation(value: number): void {\r\n        this.getStyle().rotation = value;\r\n    }\r\n\r\n    /**水平倾斜角度，默认值为0。以角度为单位。*/\r\n    get skewX(): number {\r\n        return this._style.skewX;\r\n    }\r\n\r\n    set skewX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewX !== value) {\r\n            this._setSkewX(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setSkewX(value: number): void {\r\n        this._style.skewX = value;\r\n    }\r\n\r\n    /**垂直倾斜角度，默认值为0。以角度为单位。*/\r\n    get skewY(): number {\r\n        return this._style.skewY;\r\n    }\r\n\r\n    set skewY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewY !== value) {\r\n            this._setSkewY(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setSkewY(value: number): void {\r\n        this._style.skewY = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _createTransform(): Matrix {\r\n        return Matrix.create();\r\n    }\r\n\r\n    /**@private */\r\n    protected _adjustTransform(): Matrix {\r\n        this._tfChanged = false;\r\n        var style: SpriteStyle = this._style;\r\n        var sx: number = style.scaleX, sy: number = style.scaleY;\r\n        var sskx: number = style.skewX;\r\n        var ssky: number = style.skewY;\r\n        var rot: number = style.rotation;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        if (rot || sx !== 1 || sy !== 1 || sskx !== 0 || ssky !== 0) {\r\n            m._bTransform = true;\r\n            var skx: number = (rot - sskx) * 0.0174532922222222;//laya.CONST.PI180;\r\n            var sky: number = (rot + ssky) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            m.a = sx * cx;\r\n            m.b = sx * ssx;\r\n            m.c = -sy * cy;\r\n            m.d = sy * ssy;\r\n            m.tx = m.ty = 0;\r\n        } else {\r\n            m.identity();\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        return m;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTransform(value: Matrix): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。</p>\r\n     * <p>矩阵更多信息请参考 <code>Matrix</code></p>\r\n     */\r\n    get transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set transform(value: Matrix) {\r\n        this.set_transform(value);\r\n    }\r\n\r\n    get_transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set_transform(value: Matrix): void {\r\n        this._tfChanged = false;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        value.copyTo(m);\r\n        this._setTransform(m);\r\n        //设置transform时重置x,y\r\n        if (value) {\r\n            this._x = m.tx;\r\n            this._y = m.ty;\r\n            m.tx = m.ty = 0;\r\n        }\r\n        if (value) this._renderType |= SpriteConst.TRANSFORM;\r\n        else {\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        this.parentRepaint();\r\n    }\r\n\r\n    /**@internal */\r\n    _setPivotX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotX = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _getPivotX(): number {\r\n        return this._style.pivotX;\r\n    }\r\n\r\n    /**@internal */\r\n    _setPivotY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotY = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _getPivotY(): number {\r\n        return this._style.pivotY;\r\n    }\r\n\r\n    /**X轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\r\n    get pivotX(): number {\r\n        return this._getPivotX();\r\n    }\r\n\r\n    set pivotX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotX != value) {\r\n            this._setPivotX(value);\r\n            let t = this.width;\r\n            if (t != 0) this._anchorX = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**Y轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\r\n    get pivotY(): number {\r\n        return this._getPivotY();\r\n    }\r\n\r\n    set pivotY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotY != value) {\r\n            this._setPivotY(value);\r\n            let t = this.height;\r\n            if (t != 0) this._anchorY = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\r\n    get anchorX(): number {\r\n        return this.get_anchorX();\r\n    }\r\n\r\n    get_anchorX(): number {\r\n        return this._anchorX;\r\n    }\r\n\r\n    set anchorX(value: number) {\r\n        this.set_anchorX(value);\r\n    }\r\n\r\n    set_anchorX(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorX != value) {\r\n            this._anchorX = value;\r\n            if (value != null) {\r\n                this._setPivotX(value * this.width);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\r\n    get anchorY(): number {\r\n        return this.get_anchorY();\r\n    }\r\n\r\n    get_anchorY(): number {\r\n        return this._anchorY;\r\n    }\r\n\r\n    set anchorY(value: number) {\r\n        this.set_anchorY(value);\r\n    }\r\n\r\n    set_anchorY(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorY != value) {\r\n            this._anchorY = value;\r\n            if (value != null) {\r\n                this._setPivotY(value * this.height);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setAlpha(value: number): void {\r\n        if (this._style.alpha !== value) {\r\n            var style: SpriteStyle = this.getStyle();\r\n            style.alpha = value;\r\n            if (value !== 1) this._renderType |= SpriteConst.ALPHA;\r\n            else this._renderType &= ~SpriteConst.ALPHA;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _getAlpha(): number {\r\n        return this._style.alpha;\r\n    }\r\n\r\n    /**透明度，值为0-1，默认值为1，表示不透明。更改alpha值会影响drawcall。*/\r\n    get alpha(): number {\r\n        return this._getAlpha();\r\n    }\r\n\r\n    set alpha(value: number) {\r\n        value = value < 0 ? 0 : (value > 1 ? 1 : value);\r\n        this._setAlpha(value);\r\n    }\r\n\r\n    /**表示是否可见，默认为true。如果设置不可见，节点将不被渲染。*/\r\n    get visible(): boolean {\r\n        return this.get_visible();\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this.set_visible(value);\r\n    }\r\n\r\n    get_visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    set_visible(value: boolean): void {\r\n        if (this._visible !== value) {\r\n            this._visible = value;\r\n            this.parentRepaint(SpriteConst.REPAINT_ALL);\r\n        }\r\n    }\r\n\r\n    /**指定要使用的混合模式。目前只支持\"lighter\"。*/\r\n    get blendMode(): string {\r\n        return this._style.blendMode;\r\n    }\r\n\r\n    set blendMode(value: string) {\r\n        if (this.getStyle().blendMode != value) {\r\n            this.getStyle().blendMode = value;\r\n            if (value && value != \"source-over\")\r\n                this._renderType |= SpriteConst.BLEND;\r\n            else\r\n                this._renderType &= ~SpriteConst.BLEND;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**绘图对象。封装了绘制位图和矢量图的接口，Sprite所有的绘图操作都通过Graphics来实现的。*/\r\n    get graphics(): Graphics {\r\n        if (!this._graphics) {\r\n            this.graphics = new Graphics();\r\n            this._ownGraphics = true;\r\n        }\r\n        return this._graphics;\r\n    }\r\n\r\n    set graphics(value: Graphics) {\r\n        this.setGraphics(value, false);\r\n    }\r\n\r\n    setGraphics(value: Graphics, transferOwnership: boolean) {\r\n        if (this._graphics) {\r\n            this._graphics._sp = null;\r\n            if (this._ownGraphics)\r\n                this._graphics.destroy();\r\n        }\r\n        this._ownGraphics = transferOwnership;\r\n        this._graphics = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.GRAPHICS;\r\n            value._sp = this;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    get material() {\r\n        return this._graphics?.material;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set material(value: Material) {\r\n        if (this._graphics == null && value == null)\r\n            return;\r\n\r\n        this.graphics.material = value;\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的滚动矩形范围，具有裁剪效果(如果只想限制子对象渲染区域，请使用viewport)</p>\r\n     * <p> srollRect和viewport的区别：<br/>\r\n     * 1.srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\r\n     * 2.设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\r\n     */\r\n    get scrollRect(): Rectangle {\r\n        return this._style.scrollRect;\r\n    }\r\n\r\n    set scrollRect(value: Rectangle) {\r\n        if (this.getStyle().scrollRect == null && value == null)\r\n            return;\r\n\r\n        this.getStyle().scrollRect = value;\r\n        //viewport = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.CLIP;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.CLIP;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * <p>设置坐标位置。相当于分别设置x和y属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pos(...).scale(...);</p>\r\n     * @param\tx\t\t\tX轴坐标。\r\n     * @param\ty\t\t\tY轴坐标。\r\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.x=value进行赋值，极速模式直接调用内部函数处理，如果未重写x,y属性，建议设置为急速模式性能更高。\r\n     * @return\t返回对象本身。\r\n     */\r\n    pos(x: number, y: number, speedMode: boolean = false): Sprite {\r\n        if (this._x !== x || this._y !== y) {\r\n            if (this._destroyed) return this;\r\n            if (speedMode) {\r\n                this._setX(x);\r\n                this._setY(y);\r\n                this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n                var p: Sprite = this._cacheStyle.maskParent;\r\n                if (p) {\r\n                    p.repaint(SpriteConst.REPAINT_CACHE);\r\n                }\r\n\r\n                if (this.cacheGlobal) {\r\n                    let flag: number = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\r\n                    this._setGlobalCacheFlag(flag, true);\r\n                    this._syncGlobalFlag(flag, true);\r\n                }\r\n\r\n            } else {\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置轴心点。相当于分别设置pivotX和pivotY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pivot(...).pos(50, 100);</p>\r\n     * @param\tx X轴心点。\r\n     * @param\ty Y轴心点。\r\n     * @return\t返回对象本身。\r\n     */\r\n    pivot(x: number, y: number): Sprite {\r\n        this.pivotX = x;\r\n        this.pivotY = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置宽高。相当于分别设置width和height属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.size(...).pos(50, 100);</p>\r\n     * @param\twidth 宽度值。\r\n     * @param\thegiht 高度值。\r\n     * @return\t返回对象本身。\r\n     */\r\n    size(width: number, height: number): Sprite {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置缩放。相当于分别设置scaleX和scaleY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.scale(...).pos(50, 100);</p>\r\n     * @param\tscaleX\t\tX轴缩放比例。\r\n     * @param\tscaleY\t\tY轴缩放比例。\r\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.scaleX=value进行赋值，极速模式直接调用内部函数处理，如果未重写scaleX,scaleY属性，建议设置为急速模式性能更高。\r\n     * @return\t返回对象本身。\r\n     */\r\n    scale(scaleX: number, scaleY: number, speedMode?: boolean): Sprite {\r\n        if (this._destroyed) return this;\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX != scaleX || style.scaleY != scaleY) {\r\n            if (speedMode) {\r\n                this._setScaleX(scaleX);\r\n                this._setScaleY(scaleY);\r\n                this._setTranformChange();\r\n                this._shouldRefreshLayout();\r\n            } else {\r\n                this.scaleX = scaleX;\r\n                this.scaleY = scaleY;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置倾斜角度。相当于分别设置skewX和skewY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.skew(...).pos(50, 100);</p>\r\n     * @param\tskewX 水平倾斜角度。\r\n     * @param\tskewY 垂直倾斜角度。\r\n     * @return\t返回对象本身\r\n     */\r\n    skew(skewX: number, skewY: number): Sprite {\r\n        this.skewX = skewX;\r\n        this.skewY = skewY;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 更新、呈现显示对象。由系统调用。\r\n     * @param\tcontext 渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    render(ctx: Context, x: number, y: number): void {\r\n        RenderSprite.renders[this._renderType]._fun(this, ctx, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    /**\r\n     * <p>绘制 当前<code>Sprite</code> 到 <code>Canvas</code> 上，并返回一个HtmlCanvas。</p>\r\n     * <p>绘制的结果可以当作图片源，再次绘制到其他Sprite里面，示例：</p>\r\n     *\r\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\r\n     * var sp:Sprite = new Sprite();//创建精灵\r\n     * sp.graphics.drawTexture(htmlCanvas.getTexture());//把截图绘制到精灵上\r\n     * Laya.stage.addChild(sp);//把精灵显示到舞台\r\n     *\r\n     * <p>也可以获取原始图片数据，分享到网上，从而实现截图效果，示例：</p>\r\n     *\r\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\r\n     * htmlCanvas.toBase64(\"image/png\",0.9);//打印图片base64信息，可以发给服务器或者保存为图片\r\n     *\r\n     * @param\tcanvasWidth 画布宽度。\r\n     * @param\tcanvasHeight 画布高度。\r\n     * @param\tx 绘制的 X 轴偏移量。\r\n     * @param\ty 绘制的 Y 轴偏移量。\r\n     * @return  HTMLCanvas 对象。\r\n     */\r\n    drawToCanvas(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        //console.log('drawToCanvas is deprecated, please use drawToTexture');\r\n        return Sprite.drawToCanvas(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY);\r\n    }\r\n\r\n    /**\r\n     * 绘制到一个Texture对象\r\n     * @param canvasWidth \r\n     * @param canvasHeight \r\n     * @param offsetX \r\n     * @param offsetY \r\n     */\r\n    drawToTexture(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\r\n        let res = Sprite.drawToTexture(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY, rt);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 把当前对象渲染到指定的贴图上。贴图由外部指定，避免每次都创建。\r\n     * @param offx \r\n     * @param offy \r\n     * @param tex 输出渲染结果\r\n     */\r\n    drawToTexture3D(offx: number, offy: number, tex: Texture2D) {\r\n        throw 'not implement'\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 绘制到画布。\r\n     */\r\n    static drawToCanvas(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        offsetX -= sprite.x;\r\n        offsetY -= sprite.y;\r\n        offsetX |= 0;\r\n        offsetY |= 0;\r\n        canvasWidth |= 0;\r\n        canvasHeight |= 0;\r\n        var ctx: Context = new Context();\r\n        ctx.size(canvasWidth, canvasHeight);\r\n        ctx.asBitmap = true;\r\n        ctx._targets.start();\r\n        ctx._targets.clear(0, 0, 0, 0);\r\n        RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n        ctx.flush();\r\n        ctx._targets.end();\r\n        ctx._targets.restore();\r\n        var dt: Uint8Array = ctx._targets.getData(0, 0, canvasWidth, canvasHeight) as Uint8Array;\r\n        ctx.destroy();\r\n        var imgdata: any = new ImageData(canvasWidth, canvasHeight);;\t//创建空的imagedata。因为下面要翻转，所以不直接设置内容\r\n        //翻转getData的结果。\r\n        var lineLen: number = canvasWidth * 4;\r\n        var temp: Uint8Array = new Uint8Array(lineLen);\r\n        var dst: Uint8Array = imgdata.data;\r\n        var y: number = canvasHeight - 1;\r\n        var off: number = y * lineLen;\r\n        var srcoff: number = 0;\r\n        for (; y >= 0; y--) {\r\n            dst.set(dt.subarray(srcoff, srcoff + lineLen), off);\r\n            off -= lineLen;\r\n            srcoff += lineLen;\r\n        }\r\n        //imgdata.data.set(dt);\r\n        //画到2d画布上\r\n        var canv: HTMLCanvas = new HTMLCanvas(true);\r\n        canv.size(canvasWidth, canvasHeight);\r\n        var ctx2d: CanvasRenderingContext2D = <CanvasRenderingContext2D>(canv.getContext('2d') as any);\r\n        ctx2d.putImageData(imgdata, 0, 0);;\r\n        return canv;\r\n    }\r\n\r\n    static drawtocanvCtx: Context;\r\n    /**\r\n     * @private \r\n     * \r\n     */\r\n    static drawToTexture(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\r\n        if (!Sprite.drawtocanvCtx) {\r\n            Sprite.drawtocanvCtx = new Context();\r\n        }\r\n        offsetX -= sprite.x;\r\n        offsetY -= sprite.y;\r\n        offsetX |= 0;\r\n        offsetY |= 0;\r\n        canvasWidth |= 0;\r\n        canvasHeight |= 0;\r\n        var ctx = rt ? Sprite.drawtocanvCtx : new Context();\r\n        ctx.clear();\r\n        ctx.size(canvasWidth, canvasHeight);\r\n        if (rt) {\r\n            ctx._targets = rt;\r\n        } else {\r\n            ctx.asBitmap = true;\r\n        }\r\n        let texRT;\r\n        if (ctx._targets) {\r\n            ctx._targets.start();\r\n            let color = RenderTexture2D._clearColor;\r\n            ctx._targets.clear(color.r, color.g, color.b, color.a);\r\n            ctx._drawingToTexture = true;\r\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n            ctx._drawingToTexture = false;\r\n            ctx.flush();\r\n            ctx._targets.end();\r\n            ctx._targets.restore();\r\n            if (!rt)\r\n                texRT = ctx._targets;\r\n            ctx._targets = null;//IDE闪\r\n        }\r\n        if (!rt) {\r\n            var rtex: Texture = new Texture(((<Texture2D>(ctx._targets as any))) ? ((<Texture2D>(ctx._targets as any))) : texRT, Texture.INV_UV);\r\n            ctx.destroy(true);// 保留 _targets\r\n            return rtex;\r\n        }\r\n        sprite._repaint = 0;\r\n        return rt;\r\n    }\r\n\r\n    /**\r\n     * <p>自定义更新、呈现显示对象。一般用来扩展渲染模式，请合理使用，可能会导致在加速器上无法渲染。</p>\r\n     * <p><b>注意</b>不要在此函数内增加或删除树节点，否则会对树节点遍历造成影响。</p>\r\n     * @param\tcontext  渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    customRender(context: Context, x: number, y: number): void {\r\n        //_renderType |= SpriteConst.CUSTOM;\r\n        this._repaint = SpriteConst.REPAINT_ALL;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 应用滤镜。\r\n     */\r\n    _applyFilters(): void {\r\n        // canvas 模式不支持\r\n    }\r\n\r\n    /**滤镜集合。可以设置多个滤镜组合。*/\r\n    get filters(): any[] {\r\n        return this._cacheStyle.filters;\r\n    }\r\n\r\n    set filters(value: any[]) {\r\n        value && value.length === 0 && (value = null);\r\n        this._getCacheStyle().filters = value ? value.slice() : null;\r\n        if (value)\r\n            this._renderType |= SpriteConst.FILTERS;\r\n        else\r\n            this._renderType &= ~SpriteConst.FILTERS;\r\n\r\n        if (value && value.length > 0) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n            if (!(value.length == 1 && (value[0] instanceof ColorFilter))) {\r\n                this._getCacheStyle().cacheForFilters = true;\r\n                this._checkCanvasEnable();\r\n            }\r\n        } else {\r\n            if (this._cacheStyle.cacheForFilters) {\r\n                this._cacheStyle.cacheForFilters = false;\r\n                this._checkCanvasEnable();\r\n            }\r\n        }\r\n        this._getCacheStyle().hasGlowFilter = this._isHaveGlowFilter();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 查看当前原件中是否包含发光滤镜。\r\n     * @return 一个 Boolean 值，表示当前原件中是否包含发光滤镜。\r\n     */\r\n    _isHaveGlowFilter(): boolean {\r\n        var i: number, len: number;\r\n        if (this.filters) {\r\n            for (i = 0; i < this.filters.length; i++) {\r\n                if (this.filters[i].type == Filter.GLOW) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        for (i = 0, len = this._children.length; i < len; i++) {\r\n            if ((<Sprite>this._children[i])._isHaveGlowFilter()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 把本地坐标转换为相对stage的全局坐标。\r\n     * @param point\t\t\t\t本地坐标点。\r\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    localToGlobal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint === true) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            point = ele.toParentPoint(point);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 把stage的全局坐标转换为本地坐标。\r\n     * @param point\t\t\t\t全局坐标点。\r\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    globalToLocal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        var list: any[] = [];\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            list.push(ele);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n        var i: number = list.length - 1;\r\n        while (i >= 0) {\r\n            ele = list[i];\r\n            point = ele.fromParentPoint(point);\r\n            i--;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 将本地坐标系坐标转转换到父容器坐标系。\r\n     * @param point 本地坐标点。\r\n     * @return  转换后的点。\r\n     */\r\n    toParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this.pivotX;\r\n        point.y -= this.pivotY;\r\n        if (this.transform) {\r\n            this._transform.transformPoint(point);\r\n        }\r\n        point.x += this._x;\r\n        point.y += this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x -= scroll.x;\r\n            point.y -= scroll.y;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 将父容器坐标系坐标转换到本地坐标系。\r\n     * @param point 父容器坐标点。\r\n     * @return  转换后的点。\r\n     */\r\n    fromParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this._x;\r\n        point.y -= this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x += scroll.x;\r\n            point.y += scroll.y;\r\n        }\r\n        if (this.transform) {\r\n            //_transform.setTranslate(0,0);\r\n            this._transform.invertTransformPoint(point);\r\n        }\r\n        point.x += this.pivotX;\r\n        point.y += this.pivotY;\r\n        return point;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string) {\r\n        super.onStartListeningToType(type);\r\n\r\n        //如果是鼠标事件，则设置自己和父对象为可接受鼠标交互事件\r\n        if (this._mouseState !== 1 && Event.isMouseEvent(type)) {\r\n            this.mouseEnabled = true;\r\n            this._setBit(NodeFlags.HAS_MOUSE, true);\r\n            if (this._parent) {\r\n                this._onDisplay();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    protected _onDisplay(v?: boolean): void {\r\n        if (this._mouseState !== 1) {\r\n            var ele: Sprite = this;\r\n            ele = (<Sprite>ele.parent);\r\n            while (ele && ele._mouseState !== 1) {\r\n                if (ele._getBit(NodeFlags.HAS_MOUSE)) break;\r\n                ele.mouseEnabled = true;\r\n                ele._setBit(NodeFlags.HAS_MOUSE, true);\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    protected _setParent(value: Node): void {\r\n        super._setParent(value);\r\n        if (value && this._getBit(NodeFlags.HAS_MOUSE)) {\r\n            this._onDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>加载并显示一个图片。相当于加载图片后，设置texture属性</p>\r\n     * <p>注意：2.0改动：多次调用，只会显示一个图片（1.0会显示多个图片）,x,y,width,height参数取消。</p>\r\n     * @param url\t\t图片地址。\r\n     * @param complete\t（可选）加载完成回调。\r\n     * @return\t返回精灵对象本身。\r\n     */\r\n    loadImage(url: string, complete: Handler = null): Sprite {\r\n        if (!url) {\r\n            this.texture = null;\r\n            this.repaint(SpriteConst.REPAINT_ALL);\r\n            complete && complete.run();\r\n        } else {\r\n            let tex = ILaya.loader.getRes(url);\r\n            if (tex) {\r\n                this.texture = tex;\r\n                this.repaint(SpriteConst.REPAINT_ALL);\r\n                complete && complete.run();\r\n            }\r\n            else {\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                ILaya.loader.load(url).then((tex: Texture) => {\r\n                    this.texture = tex;\r\n                    this.repaint(SpriteConst.REPAINT_ALL);\r\n                    complete && complete.run();\r\n                });\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 根据图片地址创建一个新的 <code>Sprite</code> 对象用于加载并显示此图片。\r\n     * @param\turl 图片地址。\r\n     * @return\t返回新的 <code>Sprite</code> 对象。\r\n     */\r\n    static fromImage(url: string): Sprite {\r\n        return new Sprite().loadImage(url);\r\n    }\r\n\r\n    /**cacheAs后，设置自己和父对象缓存失效。*/\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        if (!(this._repaint & type)) {\r\n            this._repaint |= type;\r\n            this.parentRepaint(type);\r\n        }\r\n        if (this._cacheStyle && this._cacheStyle.maskParent) {\r\n            this._cacheStyle.maskParent.repaint(type);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 获取是否重新缓存。\r\n     * @return 如果重新缓存值为 true，否则值为 false。\r\n     */\r\n    _needRepaint(): boolean {\r\n        return (this._repaint & SpriteConst.REPAINT_CACHE) && this._cacheStyle.enableCanvasRender && this._cacheStyle.reCache;\r\n    }\r\n\r\n    /**@private\t\r\n     * @override\r\n    */\r\n    protected _childChanged(child: Node = null): void {\r\n        super._childChanged(child);\r\n\r\n        if (this._children.length) this._renderType |= SpriteConst.CHILDS;\r\n        else this._renderType &= ~SpriteConst.CHILDS;\r\n        if (child && this._getBit(NodeFlags.HAS_ZORDER)) ILaya.systemTimer.callLater(this, this.updateZOrder);\r\n        this.repaint(SpriteConst.REPAINT_ALL);\r\n    }\r\n\r\n    /**cacheAs时，设置所有父对象缓存失效。 */\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        var p: Sprite = (<Sprite>this._parent);\r\n        if (p && !(p._repaint & type)) {\r\n            p._repaint |= type;\r\n            p.parentRepaint(type);\r\n        }\r\n    }\r\n\r\n    /**对舞台 <code>stage</code> 的引用。*/\r\n    get stage() {\r\n        return ILaya.stage;\r\n    }\r\n\r\n    /**\r\n     * <p>可以设置一个Rectangle区域作为点击区域，或者设置一个<code>HitArea</code>实例作为点击区域，HitArea内可以设置可点击和不可点击区域。</p>\r\n     * <p>如果不设置hitArea，则根据宽高形成的区域进行碰撞。</p>\r\n     */\r\n    get hitArea(): IHitArea {\r\n        return this._style.hitArea;\r\n    }\r\n\r\n    set hitArea(value: IHitArea) {\r\n        this.getStyle().hitArea = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setMask(value: Sprite): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>遮罩，可以设置一个对象(支持位图和矢量图)，根据对象形状进行遮罩显示。</p>\r\n     * <p>【注意】遮罩对象坐标系是相对遮罩对象本身的，和Flash机制不同</p>\r\n     */\r\n    get mask(): Sprite {\r\n        return this._cacheStyle.mask;\r\n    }\r\n\r\n    set mask(value: Sprite) {\r\n        if (value && this.mask == value && value._cacheStyle.maskParent == this)\r\n            return;\r\n\r\n        if (this.mask)\r\n            this.mask._getCacheStyle().maskParent = null;\r\n\r\n        this._getCacheStyle().mask = value;\r\n        this._setMask(value);\r\n        this._checkCanvasEnable();\r\n\r\n        if (value) {\r\n            value._getCacheStyle().maskParent = this;\r\n            this._renderType |= SpriteConst.MASK;\r\n        }\r\n        else\r\n            this._renderType &= ~SpriteConst.MASK;\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * 是否接受鼠标事件。\r\n     * 默认为false，如果监听鼠标事件，则会自动设置本对象及父节点的属性 mouseEnable 的值都为 true（如果父节点手动设置为false，则不会更改）。\r\n     * */\r\n    get mouseEnabled(): boolean {\r\n        return this._mouseState > 1;\r\n    }\r\n\r\n    set mouseEnabled(value: boolean) {\r\n        this._mouseState = value ? 2 : 1;\r\n    }\r\n\r\n    /**\r\n     * 开始拖动此对象。\r\n     * @param area\t\t\t\t（可选）拖动区域，此区域为当前对象注册点活动区域（不包括对象宽高），可选。\r\n     * @param hasInertia\t\t（可选）鼠标松开后，是否还惯性滑动，默认为false，可选。\r\n     * @param elasticDistance\t（可选）橡皮筋效果的距离值，0为无橡皮筋效果，默认为0，可选。\r\n     * @param elasticBackTime\t（可选）橡皮筋回弹时间，单位为毫秒，默认为300毫秒，可选。\r\n     * @param data\t\t\t\t（可选）拖动事件携带的数据，可选。\r\n     * @param ratio\t\t\t\t（可选）惯性阻尼系数，影响惯性力度和时长。\r\n     */\r\n    startDrag(area: Rectangle = null, hasInertia: boolean = false, elasticDistance: number = 0, elasticBackTime: number = 300, data: any = null, ratio: number = 0.92): void {\r\n        this._style.dragging || (this.getStyle().dragging = new Dragging());\r\n        this._style.dragging.start(this, area, hasInertia, elasticDistance, elasticBackTime, data, ratio);\r\n    }\r\n\r\n    /**停止拖动此对象。*/\r\n    stopDrag(): void {\r\n        this._style.dragging && this._style.dragging.stop();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        if (!value) {\r\n            if (this._cacheStyle) {\r\n                this._cacheStyle.releaseContext();\r\n                this._cacheStyle.releaseFilterCache();\r\n                if (this._cacheStyle.hasGlowFilter) {\r\n                    this._cacheStyle.hasGlowFilter = false;\r\n                }\r\n            }\r\n        }\r\n        super._setDisplay(value);\r\n    }\r\n\r\n    /**\r\n     * 检测某个点是否在此对象内。\r\n     * @param\tx 全局x坐标。\r\n     * @param\ty 全局y坐标。\r\n     * @return  表示是否在对象内。\r\n     */\r\n    hitTestPoint(x: number, y: number): boolean {\r\n        var point: Point = this.globalToLocal(Point.TEMP.setTo(x, y));\r\n        x = point.x;\r\n        y = point.y;\r\n        var rect: IHitArea = this._style.hitArea ? this._style.hitArea : (this._isWidthSet && this._isHeightSet) ? Rectangle.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds();\r\n        return rect.contains(x, y);\r\n    }\r\n\r\n    /**获得相对于本对象上的鼠标坐标信息。*/\r\n    getMousePoint(): Point {\r\n        return this.globalToLocal(Point.TEMP.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY));\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 返回鼠标在此对象坐标系上的 X 轴坐标信息。\r\n     */\r\n    get mouseX(): number {\r\n        return this.getMousePoint().x;\r\n    }\r\n\r\n    /**\r\n     * 返回鼠标在此对象坐标系上的 Y 轴坐标信息。\r\n     */\r\n    get mouseY(): number {\r\n        return this.getMousePoint().y;\r\n    }\r\n\r\n    /**z排序，更改此值，则会按照值的大小对同一容器的所有对象重新排序。值越大，越靠上。默认为0，则根据添加顺序排序。*/\r\n    get zOrder(): number {\r\n        return this._zOrder;\r\n    }\r\n\r\n    set zOrder(value: number) {\r\n        if (this._zOrder != value) {\r\n            this._zOrder = value;\r\n            if (this._parent) {\r\n                value && this._parent._setBit(NodeFlags.HAS_ZORDER, true);\r\n                ILaya.systemTimer.callLater(this._parent, this.updateZOrder);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置一个Texture实例，并显示此图片（如果之前有其他绘制，则会被清除掉）。\r\n     * 等同于graphics.clear();graphics.drawImage()，但性能更高\r\n     * 还可以赋值一个图片地址，则会自动加载图片，然后显示\r\n     */\r\n    get texture(): Texture {\r\n        return this._texture;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTexture(value: Texture | string): void {\r\n\r\n    }\r\n\r\n    set texture(value: Texture) {\r\n        if (typeof (value) == 'string') {\r\n            this.loadImage((<string>((<any>value))));\r\n        } else if (this._texture != value) {\r\n            this._texture && this._texture._removeReference();\r\n            this._texture = value;\r\n            value && value._addReference();\r\n            this._setTexture(value);\r\n            this._setWidth(this.width);\r\n            this._setHeight(this.height);\r\n            if (value) this._renderType |= SpriteConst.TEXTURE;\r\n            else this._renderType &= ~SpriteConst.TEXTURE;\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * <p>视口大小，视口外的子对象，将不被渲染(如果想实现裁剪效果，请使用srollRect)，合理使用能提高渲染性能。比如由一个个小图片拼成的地图块，viewport外面的小图片将不渲染</p>\r\n     * <p>srollRect和viewport的区别：<br/>\r\n     * 1. srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\r\n     * 2. 设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\r\n     * @default null\r\n     */\r\n    get viewport(): Rectangle {\r\n        return this._style.viewport;\r\n    }\r\n\r\n    set viewport(value: Rectangle) {\r\n        if (typeof (value) == 'string') {\r\n            let recArr = (<any>value).split(\",\");\r\n            if (recArr.length > 3) {\r\n                value = new Rectangle(parseFloat(recArr[0]), parseFloat(recArr[1]), parseFloat(recArr[2]), parseFloat(recArr[3]));\r\n            }\r\n        }\r\n        this.getStyle().viewport = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTranformChange(): void {\r\n        this._tfChanged = true;\r\n        this._renderType |= SpriteConst.TRANSFORM;\r\n        this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n    }\r\n\r\n    set drawCallOptimize(value: boolean) {\r\n        this._setBit(NodeFlags.DRAWCALL_OPTIMIZE, value);\r\n    }\r\n\r\n    get drawCallOptimize(): boolean {\r\n        return this._getBit(NodeFlags.DRAWCALL_OPTIMIZE);\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._gcmds) {\r\n                this.graphics.cmds = (<any>this)._gcmds;\r\n                delete (<any>this)._gcmds;\r\n            }\r\n\r\n            if ((<any>this)._filters) {\r\n                this.filters = (<any>this)._filters;\r\n                delete (<any>this)._filters;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //miner 为了不破坏之前的local性能架构，采用标致开启的方式来增加GlobalMode的更新系统，优化需要高频调用Global数据的\r\n    //因为此块功能比较集中，顾单独写在下方\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Position_X: number = 0x01;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Position_Y: number = 0x02;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Rotation: number = 0x04;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Scale_X: number = 0x08;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Scale_Y: number = 0x10;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Matrix: number = 0x20;\r\n    /**@internal */\r\n    private _globalDeltaFlages: number = 0;\r\n    /**@internal */\r\n    private _cacheGlobal: boolean = false;\r\n    /**@internal */\r\n    private _globalPosx: number = 0.0;\r\n    /**@internal */\r\n    private _globalPosy: number = 0.0;\r\n    /**@internal */\r\n    private _globalRotate: number = 0.0;\r\n    /**@internal */\r\n    private _globalScalex: number = 1.0;\r\n    /**@internal */\r\n    private _globalScaley: number = 1.0;\r\n    /**@internal */\r\n    private _globalMatrix: Matrix;\r\n\r\n    get cacheGlobal(): boolean {\r\n        return this._cacheGlobal;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置cacheGlobal模式\r\n     * 此模式会获得更高的getGlobal属性性能\r\n     * 如果此节点为cacheGlobaltrue，那所有父节点直到根节点都会强制改为true\r\n     * 如果此节点改为false，将强制所有子节点的cacheGlobal改为false\r\n     */\r\n    set cacheGlobal(value: boolean) {\r\n        if (this._cacheGlobal == value)\r\n            return;\r\n        this._cacheGlobal = value;\r\n        if (value) {\r\n            //缓存全局变量\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            //更新父节点\r\n            if (this._parent == ILaya.stage || !this._parent) {\r\n                return;\r\n            } else {\r\n                (this._parent as Sprite).cacheGlobal = value;\r\n            }\r\n        } else {\r\n            //更新子节点\r\n            this._children.forEach(element => {\r\n                (element as Sprite).cacheGlobal = value;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n       * @internal\r\n       */\r\n    getGlobalMatrix() {\r\n        if (this._globalMatrix == null) this._globalMatrix = Matrix.create()\r\n        if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix)) {\r\n            this._globalMatrix.identity();\r\n            this._globalMatrix.rotate(Utils.toRadian(this.globalRotation));\r\n            this._globalMatrix.scale(this.globalScaleX, this.globalScaleY);\r\n            this._globalMatrix.translate(this.globalPosX, this.globalPosY);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, false);\r\n        }\r\n        return this._globalMatrix;\r\n    }\r\n\r\n    CustomMaterial() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set globalPosX(value: number) {\r\n        this.setGlobalPos(value, this._globalPosy);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set globalPosY(value: number) {\r\n        this.setGlobalPos(this._globalPosx, value);\r\n    }\r\n\r\n    /**\r\n     * 设置图元锚点世界位置\r\n     * @internal\r\n     */\r\n    setGlobalPos(globalx: number, globaly: number) {\r\n        if (!this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix) && globalx == this.globalPosX && globaly == this.globalPosY) {\r\n            return;\r\n        }\r\n        if (!this._cacheGlobal) {\r\n            Point.TEMP.setTo(globalx, globaly);\r\n            let point = this.globalToLocal(Point.TEMP, false, null);\r\n            point = this.toParentPoint(point);\r\n            this.x = point.x;\r\n            this.y = point.y;\r\n        } else {\r\n            let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n            let point = mat.invertTransformPoint(Point.TEMP.setTo(globalx, globaly));\r\n            this._setX(point.x);\r\n            this._setY(point.y);\r\n            this._globalPosx = globalx;\r\n            this._globalPosy = globaly;\r\n            let flag = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\r\n            this._setGlobalCacheFlag(flag, false);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            this._syncGlobalFlag(flag | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获得图元锚点世界位置\r\n     * @internal\r\n     */\r\n    get globalPosX(): number {\r\n        if (!this._cacheGlobal) {\r\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\r\n            return point.x;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_X)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, false);\r\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n                let point = this.toParentPoint(Point.TEMP.setTo(this.pivotX, this.pivotY));\r\n                point = mat.transformPoint(point);\r\n                this._globalPosx = point.x;\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalPosx;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获得图元锚点世界位置\r\n     * @internal\r\n     */\r\n    get globalPosY(): number {\r\n        if (!this._cacheGlobal) {\r\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\r\n            return point.y;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_Y)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, false);\r\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n                let point = this.toParentPoint(Point.TEMP.setTo(this.pivotX, this.pivotY));\r\n                point = mat.transformPoint(point);\r\n                this._globalPosy = point.y;\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalPosy;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获得相对于stage的全局旋转值（会叠加父亲节点的旋转值）。\r\n     */\r\n    get globalRotation(): number {\r\n        if (!this._cacheGlobal) {\r\n            //循环算法\r\n            var angle: number = 0;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                angle += ele.rotation;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return angle;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalRotate = this.rotation;\r\n                else {\r\n                    this._globalRotate = this.rotation + (this.parent as Sprite).globalRotation;\r\n                }\r\n            }\r\n            return this._globalRotate;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    set globalRotation(value: number) {\r\n        if (!this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix) && value == this.globalRotation) {\r\n            return;\r\n        }\r\n        //set local\r\n        if (this._parent == ILaya.stage || !this._parent) {\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        } else {\r\n            this._setRotation(value - (this.parent as Sprite).globalRotation);\r\n            this._setTranformChange();\r\n        }\r\n        if (this._cacheGlobal) {\r\n            this._globalRotate = value;\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局X轴缩放值（会叠加父亲节点的缩放值）。\r\n     */\r\n    get globalScaleX(): number {\r\n        if (!this._cacheGlobal) {\r\n            var scale: number = 1;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                scale *= ele.scaleX;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return scale;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, false);\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalScalex = this.scaleX;\r\n                else {\r\n                    this._globalScalex = this.scaleX * (this.parent as Sprite).globalScaleX;\r\n                }\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalScalex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局Y轴缩放值（会叠加父亲节点的缩放值）。\r\n     */\r\n    get globalScaleY(): number {\r\n        if (!this._cacheGlobal) {\r\n            var scale: number = 1;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                scale *= ele.scaleY;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return scale;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, false);\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalScaley = this.scaleY;\r\n                else {\r\n                    this._globalScaley = this.scaleY * (this.parent as Sprite).globalScaleY;\r\n                }\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalScaley;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getGlobalCacheFlag(type: number): boolean {\r\n        return (this._globalDeltaFlages & type) != 0;\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    private _setGlobalCacheFlag(type: number, value: boolean): void {\r\n        if (value)\r\n            this._globalDeltaFlages |= type;\r\n        else\r\n            this._globalDeltaFlages &= ~type;\r\n        if (value) {\r\n            this.event(\"GlobaChange\", type)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal \r\n    */\r\n    get globalDeltaFlages(): number {\r\n        return this._globalDeltaFlages;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param flag \r\n     * @param value \r\n     */\r\n    _syncGlobalFlag(flag: number, value: boolean) {\r\n        if (this.cacheGlobal) {\r\n            this._children.forEach(element => {\r\n                (element as Sprite)._setGlobalCacheFlag(flag, value);\r\n                (element as Sprite)._syncGlobalFlag(flag, value);\r\n            });\r\n        }\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Config } from \"./../../Config\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p>动画基类，提供了基础的动画播放控制方法和帧标签事件相关功能。</p>\r\n * <p>可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。</p>\r\n */\r\nexport class AnimationBase extends Sprite {\r\n    /**动画播放顺序类型：正序播放。 */\r\n    static WRAP_POSITIVE: number = 0;\r\n    /**动画播放顺序类型：逆序播放。 */\r\n    static WRAP_REVERSE: number = 1;\r\n    /**动画播放顺序类型：pingpong播放(当按指定顺序播放完结尾后，如果继续播放，则会改变播放顺序)。 */\r\n    static WRAP_PINGPONG: number = 2;\r\n\r\n    /**是否循环播放，调用play(...)方法时，会将此值设置为指定的参数值。*/\r\n    loop: boolean;\r\n    /**播放顺序类型：AnimationBase.WRAP_POSITIVE为正序播放(默认值)，AnimationBase.WRAP_REVERSE为倒序播放，AnimationBase.WRAP_PINGPONG为pingpong播放(当按指定顺序播放完结尾后，如果继续播发，则会改变播放顺序)。*/\r\n    wrapMode: number = 0;\r\n    /**@private 播放间隔(单位：毫秒)。*/\r\n    protected _interval: number = Config.animationInterval;\r\n    /**@private */\r\n    protected _index: number;\r\n    /**@private */\r\n    protected _count: number;\r\n    /**@private */\r\n    protected _isPlaying: boolean;\r\n    /**@private */\r\n    protected _labels: any;\r\n    /**是否是逆序播放*/\r\n    protected _isReverse: boolean = false;\r\n    /**@private */\r\n    protected _frameRateChanged: boolean = false;\r\n    /**@private */\r\n    protected _actionName: string;\r\n    /**@private */\r\n    private _controlNode: Sprite;\r\n\r\n    /**\r\n     * 可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**\r\n     * <p>开始播放动画。play(...)方法被设计为在创建实例后的任何时候都可以被调用，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否正在播放中，如果是，则进行播放。</p>\r\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\r\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param\tloop\t（可选）是否循环播放。\r\n     * @param\tname\t（可选）动画名称。\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        this._isPlaying = true;\r\n        this._actionName = name;\r\n        this.index = (typeof (start) == 'string') ? this._getFrameByLabel(<string>start) : start;\r\n        this.loop = loop;\r\n        this._isReverse = this.wrapMode === AnimationBase.WRAP_REVERSE;\r\n        if (this.index == 0 && this._isReverse) {\r\n            this.index = this.count - 1;\r\n        }\r\n        if (this.interval > 0) this.timerLoop(this.interval, this, this._frameLoop, null, true, true);\r\n    }\r\n\r\n    /**\r\n     * <p>动画播放的帧间隔时间(单位：毫秒)。默认值依赖于Config.animationInterval=50，通过Config.animationInterval可以修改默认帧间隔时间。</p>\r\n     * <p>要想为某动画设置独立的帧间隔时间，可以使用set interval，注意：如果动画正在播放，设置后会重置帧循环定时器的起始时间为当前时间，也就是说，如果频繁设置interval，会导致动画帧更新的时间间隔会比预想的要慢，甚至不更新。</p>\r\n     */\r\n    get interval(): number {\r\n        return this._interval;\r\n    }\r\n\r\n    set interval(value: number) {\r\n        if (this._interval != value) {\r\n            this._frameRateChanged = true;\r\n            this._interval = value;\r\n            if (this._isPlaying && value > 0) {\r\n                this.timerLoop(value, this, this._frameLoop, null, true, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _getFrameByLabel(label: string): number {\r\n        for (var i: number = 0; i < this._count; i++) {\r\n            var item: any = this._labels[i];\r\n            if (item && ((<any[]>item)).indexOf(label) > -1) return i;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**@private */\r\n    protected _frameLoop(): void {\r\n        if (!this._controlNode || this._controlNode._destroyed) {\r\n            this.clearTimer(this, this._frameLoop);\r\n            return;\r\n        }\r\n        if (this._isReverse) {\r\n            this._index--;\r\n            if (this._index < 0) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count > 0 ? 1 : 0;\r\n                        this._isReverse = false;\r\n                    } else {\r\n                        this._index = this._count - 1;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index = 0;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            this._index++;\r\n            if (this._index >= this._count) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count - 2 >= 0 ? this._count - 2 : 0;\r\n                        this._isReverse = true;\r\n                    } else {\r\n                        this._index = 0;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index--;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.index = this._index;\r\n    }\r\n\r\n    /**@internal */\r\n    _setControlNode(node: Sprite): void {\r\n        if (this._controlNode) {\r\n            this._controlNode.off(Event.DISPLAY, this, this._resumePlay);\r\n            this._controlNode.off(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n        this._controlNode = node;\r\n        if (node && node != this) {\r\n            node.on(Event.DISPLAY, this, this._resumePlay);\r\n            node.on(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        super._setDisplay(value);\r\n        this._resumePlay();\r\n    }\r\n\r\n    /**@private */\r\n    protected _resumePlay(): void {\r\n        if (this._isPlaying) {\r\n            if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName);\r\n            else this.clearTimer(this, this._frameLoop);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放。\r\n     */\r\n    stop(): void {\r\n        this._isPlaying = false;\r\n        this.clearTimer(this, this._frameLoop);\r\n    }\r\n\r\n    /**\r\n     * 是否正在播放中。\r\n     */\r\n    get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * 增加一个帧标签到指定索引的帧上。当动画播放到此索引的帧时会派发Event.LABEL事件，派发事件是在完成当前帧画面更新之后。\r\n     * @param\tlabel\t帧标签名称\r\n     * @param\tindex\t帧索引\r\n     */\r\n    addLabel(label: string, index: number): void {\r\n        if (!this._labels) this._labels = {};\r\n        if (!this._labels[index]) this._labels[index] = [];\r\n        this._labels[index].push(label);\r\n    }\r\n\r\n    /**\r\n     * 删除指定的帧标签。\r\n     * @param\tlabel 帧标签名称。注意：如果为空，则删除所有帧标签！\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (!label) this._labels = null;\r\n        else if (this._labels) {\r\n            for (var name in this._labels) {\r\n                this._removeLabelFromList(this._labels[name], label);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _removeLabelFromList(list: any[], label: string): void {\r\n        if (!list) return;\r\n        for (var i: number = list.length - 1; i >= 0; i--) {\r\n            if (list[i] == label) {\r\n                list.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将动画切换到指定帧并停在那里。\r\n     * @param\tposition 帧索引或帧标签\r\n     */\r\n    gotoAndStop(position: any): void {\r\n        this.index = (typeof (position) == 'string') ? this._getFrameByLabel(<string>position) : position;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * 动画当前帧的索引。\r\n     */\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        this._displayToIndex(value);\r\n        if (this._labels && this._labels[value]) {\r\n            var tArr: any[] = this._labels[value];\r\n            for (var i: number = 0, len: number = tArr.length; i < len; i++) {\r\n                this.event(Event.LABEL, tArr[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 显示到某帧\r\n     * @param value 帧索引\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n    }\r\n\r\n    /**\r\n     * 当前动画中帧的总数。\r\n     */\r\n    get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @return 返回对象本身\r\n     */\r\n    clear(): AnimationBase {\r\n        this.stop();\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n}","import { Handler } from \"../utils/Handler\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { URL } from \"./URL\";\r\n\r\n/**\r\n * 自动图集管理类\r\n * @private\r\n */\r\nexport class AtlasInfoManager {\r\n\r\n    static _fileLoadDic: Record<string, { url: string, baseUrl?: string }> = {};\r\n\r\n    static enable(infoFile: string, callback: Handler | null = null): void {\r\n        ILaya.loader.fetch(infoFile, \"json\").then(data => {\r\n            if (!data)\r\n                return;\r\n\r\n            AtlasInfoManager.addAtlases(data);\r\n            callback && callback.run();\r\n        });\r\n    }\r\n\r\n    static addAtlases(data: Record<string, [string, string[]]>) {\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        for (let key in data) {\r\n            let arr = data[key];\r\n            let prefix = URL.formatURL(arr[0]);\r\n            let frames = arr[1];\r\n            let len = frames.length;\r\n            let entry = { url: key };\r\n            for (let i = 0; i < len; i++) {\r\n                dic[prefix + frames[i]] = entry;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addAtlas(atlasUrl: string, prefix: string, frames: Array<string>) {\r\n        prefix = URL.formatURL(prefix);\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        let entry = { url: atlasUrl };\r\n        for (let i of frames) {\r\n            dic[prefix + i] = entry;\r\n        }\r\n    }\r\n\r\n    static getFileLoadPath(file: string): { url: string, baseUrl?: string } {\r\n        return AtlasInfoManager._fileLoadDic[file];\r\n    }\r\n}\r\n\r\n\r\n","import { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * Worker Image加载器\r\n */\r\nexport class WorkerLoader {\r\n\r\n    /**worker.js的路径 */\r\n    static workerPath: string = \"libs/laya.workerloader.js\";\r\n\r\n    private static _worker: Worker;\r\n    private static _dispatcher: EventDispatcher;\r\n    private static _enable: boolean = false;\r\n\r\n    /**\r\n     * 是否支持worker\r\n     * @return 是否支持worker\r\n     */\r\n    static workerSupported(): boolean {\r\n        return Worker ? true : false;\r\n    }\r\n\r\n    /**\r\n     * 是否启用。\r\n     */\r\n    static set enable(value: boolean) {\r\n        if (WorkerLoader._enable != value) {\r\n            if (value) {\r\n                if (!Worker)\r\n                    return;\r\n\r\n                if (!WorkerLoader._worker) {\r\n                    WorkerLoader._worker = new Worker(WorkerLoader.workerPath);\r\n                    WorkerLoader._worker.onmessage = WorkerLoader.workerMessage;\r\n                    WorkerLoader._dispatcher = new EventDispatcher();\r\n                }\r\n            }\r\n            WorkerLoader._enable = value;\r\n        }\r\n    }\r\n\r\n    static get enable(): boolean {\r\n        return WorkerLoader._enable;\r\n    }\r\n\r\n    static load(url: string, options: any): Promise<any> {\r\n        return new Promise(resolve => {\r\n            WorkerLoader._worker.postMessage({ url, options });\r\n            WorkerLoader._dispatcher.once(url, resolve);\r\n        });\r\n    }\r\n\r\n    private static workerMessage(evt: any): void {\r\n        let data = evt.data;\r\n        if (data) {\r\n            switch (data.type) {\r\n                case \"Image\":\r\n                    WorkerLoader._dispatcher.event(data.url, data.imageBitmap);\r\n                    break;\r\n                case \"Disable\":\r\n                    WorkerLoader.enable = false;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Resource } from \"./Resource\";\r\nimport { Texture } from \"./Texture\";\r\n/**\r\n * 大图合集资源\r\n */\r\nexport class AtlasResource extends Resource {\r\n    readonly dir: string;\r\n    readonly textures: Array<Texture>;\r\n    readonly frames: Array<Texture>;\r\n\r\n    /**\r\n     * 实例化体格大图合集资源\r\n     * @param dir \r\n     * @param textures \r\n     * @param frames \r\n     */\r\n    constructor(dir: string, textures: Array<Texture>, frames: Array<Texture>) {\r\n        super();\r\n\r\n        this.dir = dir;\r\n        this.textures = textures;\r\n        this.frames = frames;\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _disposeResource(): void {\r\n        for (let tex of this.textures) {\r\n            if (tex)\r\n                tex.destroy();\r\n        }\r\n\r\n        for (let tex of this.frames)\r\n            tex.destroy();\r\n\r\n        this.frames.length = 0;\r\n        this.textures.length = 0;\r\n    }\r\n}","export type ProgressCallback = (progress: number) => void;\r\n\r\nexport interface IBatchProgress {\r\n    readonly itemCount: number;\r\n    createCallback(weight?: number): ProgressCallback;\r\n    update(index: number, progress: number): void;\r\n}\r\n\r\nexport class BatchProgress implements IBatchProgress {\r\n    private _callback: ProgressCallback;\r\n    private _items: Array<number>;\r\n    private _weights: Array<number>;\r\n    private _progress: number;\r\n\r\n    constructor(callback: ProgressCallback) {\r\n        this._callback = callback;\r\n        this._items = [];\r\n        this._weights = [];\r\n        this._progress = 0;\r\n    }\r\n\r\n    get itemCount() {\r\n        return this._items.length;\r\n    }\r\n\r\n    reset() {\r\n        this._items.length = 0;\r\n        this._weights.length = 0;\r\n        this._progress = 0;\r\n    }\r\n\r\n    createCallback(weight?: number): ProgressCallback {\r\n        let index = this._items.length;\r\n        this._items.push(0);\r\n        if (weight == null)\r\n            this._weights.push(null);\r\n        else\r\n            this._weights.push(Math.max(0, Math.min(weight, 1)));\r\n\r\n        return (progress: number) => this.update(index, progress);\r\n    }\r\n\r\n    update(index: number, value: number) {\r\n        if (index != -1) {\r\n            this._items[index] = Math.max(0, Math.min(value, 1));\r\n\r\n            let np = 0;\r\n            let col = this._items;\r\n            let ws = this._weights;\r\n            let perc = 1 / col.length;\r\n            for (let i = 0; i < col.length; i++) {\r\n                let p = col[i];\r\n                let w = ws[i];\r\n                if (p != null)\r\n                    np += p * (w != null ? w : perc);\r\n            }\r\n            value = np;\r\n            if (value > 1) value = 1;\r\n        }\r\n\r\n        if (value > this._progress) {\r\n            this._progress = value;\r\n            this._callback(value);\r\n        }\r\n    }\r\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n* 图片二进制处理类\r\n* @ author:xs\r\n* @ data: 2021-11-03 10:54\r\n*/\r\nexport class ImgUtils {\r\n\r\n    /**存储数据池*/\r\n    static data: any = {};\r\n    /**是否保存使用的数据*/\r\n    static isSavaData: boolean = false;\r\n\r\n    /**\r\n     * 比较版本内容\r\n     * @param curVersion 当前版本\r\n     * @param needVersion 要求的版本\r\n     * @returns \r\n     */\r\n    private static compareVersion(curVersion: string, needVersion: string) {\r\n        let curVersionArr = curVersion.split('.');\r\n        let needVersionArr = needVersion.split('.');\r\n        const len = Math.max(curVersionArr.length, needVersionArr.length);\r\n        while (curVersionArr.length < len) {\r\n            curVersionArr.push('0');\r\n        }\r\n        while (needVersionArr.length < len) {\r\n            needVersionArr.push('0');\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const num1 = parseInt(curVersionArr[i]);\r\n            const num2 = parseInt(needVersionArr[i]);\r\n            if (num1 > num2) {\r\n                return true;\r\n            } else if (num1 < num2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否支持数据预处理\r\n     */\r\n    static get isSupport(): boolean {\r\n        if (Browser._isMiniGame) {\r\n            var version: string = Browser.window.wx.getSystemInfoSync().SDKVersion;\r\n            return ImgUtils.compareVersion(version, '2.14.0');\r\n        }\r\n        else if (Browser.onLayaRuntime) {\r\n            return true;\r\n        } else if (Browser.window.Blob)\r\n            return Browser.window.Blob ? true : false;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过二进制获取URL对象\r\n     * @param url \r\n     * @param arrayBuffer \r\n     * @returns \r\n     */\r\n    static arrayBufferToURL(url: string, arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return url;\r\n        if (ImgUtils.data[url])\r\n            return ImgUtils.data[url];\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        if (ImgUtils.isSavaData)\r\n            ImgUtils.data[url] = newurl;\r\n        return newurl;\r\n    }\r\n\r\n    static _arrayBufferToURL(arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return null;\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        return newurl;\r\n    }\r\n\r\n    /**\r\n     * 销毁指定URL的二进制内存数据\r\n     * @param url \r\n     */\r\n    static destroy(url: string) {\r\n        if (!ImgUtils.isSupport) return;\r\n        var newurl: string = ImgUtils.data[url];\r\n        if (newurl) {\r\n            if (Browser._isMiniGame || Browser.onLayaRuntime)\r\n                Browser.window.wx.revokeBufferURL(newurl);\r\n            else if (Browser.window.Blob)\r\n                Browser.window.URL.revokeObjectURL(newurl);\r\n            delete ImgUtils.data[url];\r\n        }\r\n    }\r\n}","export class XMLUtils {\r\n    public static decodeString(aSource: string): string {\r\n        let len = aSource.length;\r\n        let sb: string = \"\";\r\n        let pos1 = 0, pos2 = 0;\r\n\r\n        while (true) {\r\n            pos2 = aSource.indexOf('&', pos1);\r\n            if (pos2 == -1) {\r\n                sb += aSource.substring(pos1);\r\n                break;\r\n            }\r\n            sb += aSource.substring(pos1, pos2);\r\n\r\n            pos1 = pos2 + 1;\r\n            pos2 = pos1;\r\n            let end = Math.min(len, pos2 + 10);\r\n            for (; pos2 < end; pos2++) {\r\n                if (aSource[pos2] == ';')\r\n                    break;\r\n            }\r\n            if (pos2 < end && pos2 > pos1) {\r\n                let entity: string = aSource.substring(pos1, pos2);\r\n                let u = 0;\r\n                if (entity[0] == '#') {\r\n                    if (entity.length > 1) {\r\n                        if (entity[1] == 'x')\r\n                            u = parseInt(entity.substring(2), 16);\r\n                        else\r\n                            u = parseInt(entity.substring(1));\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n                else {\r\n                    switch (entity) {\r\n                        case \"amp\":\r\n                            u = 38;\r\n                            break;\r\n\r\n                        case \"apos\":\r\n                            u = 39;\r\n                            break;\r\n\r\n                        case \"gt\":\r\n                            u = 62;\r\n                            break;\r\n\r\n                        case \"lt\":\r\n                            u = 60;\r\n                            break;\r\n\r\n                        case \"nbsp\":\r\n                            u = 32;\r\n                            break;\r\n\r\n                        case \"quot\":\r\n                            u = 34;\r\n                            break;\r\n                    }\r\n                    if (u > 0) {\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n            }\r\n            else {\r\n                sb += '&';\r\n            }\r\n        }\r\n\r\n        return sb;\r\n    }\r\n\r\n    public static encodeString(str: string): string {\r\n        return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\").replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\");\r\n    }\r\n\r\n    public static getString(attrs: any, attrName: string, defValue?: string): string {\r\n        if (attrs == null)\r\n            return defValue == null ? null : defValue;\r\n\r\n        let ret = attrs[attrName];\r\n        if (ret != null)\r\n            return \"\" + ret;\r\n        else\r\n            return defValue == null ? null : defValue;\r\n    }\r\n\r\n    public static getInt(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value != null && value.length > 0) {\r\n            if (value[value.length - 1] == '%') {\r\n                let ret = parseInt(value.substring(0, value.length - 1));\r\n                if (!isNaN(ret))\r\n                    return Math.ceil(ret / 100.0 * defValue);\r\n            }\r\n            else {\r\n                let ret = parseInt(value);\r\n                if (!isNaN(ret))\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        return defValue == null ? 0 : defValue;\r\n    }\r\n\r\n    public static getFloat(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? 0 : defValue;\r\n\r\n        let ret = parseFloat(value);\r\n        if (isNaN(ret))\r\n            return defValue == null ? 0 : defValue;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    public static getBool(attrs: any, attrName: string, defValue?: boolean): boolean {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? false : defValue;\r\n\r\n        if (value == \"true\" || value == \"1\")\r\n            return true;\r\n        else if (value == \"false\" || value == \"0\")\r\n            return false;\r\n        else\r\n            return defValue == null ? false : defValue;\r\n    }\r\n}","import { XMLUtils } from \"./XMLUtils\";\r\n\r\nexport enum XMLTagType {\r\n    Start,\r\n    End,\r\n    Void,\r\n    CDATA,\r\n    Comment,\r\n    Instruction\r\n};\r\n\r\nconst CDATA_START = \"<![CDATA[\";\r\nconst CDATA_END = \"]]>\";\r\nconst COMMENT_START = \"<!--\";\r\nconst COMMENT_END = \"-->\";\r\n\r\nexport class XMLIterator {\r\n    public static tagName: string;\r\n    public static tagType: XMLTagType;\r\n    public static lastTagName: string;\r\n\r\n    static source: string;\r\n    static sourceLen: number;\r\n    static parsePos: number;\r\n    static tagPos: number;\r\n    static tagLength: number;\r\n    static lastTagEnd: number;\r\n    static attrParsed: boolean;\r\n    static lowerCaseName: boolean;\r\n\r\n    private static _attrs: any = {};\r\n\r\n    public static begin(source: string, lowerCaseName?: boolean) {\r\n        XMLIterator.source = source;\r\n        XMLIterator.lowerCaseName = lowerCaseName;\r\n        this.sourceLen = source.length;\r\n        this.parsePos = 0;\r\n        this.lastTagEnd = 0;\r\n        this.tagPos = 0;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n    }\r\n\r\n    public static nextTag(): boolean {\r\n        let pos: number;\r\n        let c: string;\r\n        let buffer = \"\";\r\n\r\n        this.tagType = XMLTagType.Start;\r\n        this.lastTagEnd = this.parsePos;\r\n        this.attrParsed = false;\r\n        this.lastTagName = this.tagName;\r\n\r\n        while ((pos = this.source.indexOf('<', this.parsePos)) != -1) {\r\n            this.parsePos = pos;\r\n            pos++;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            c = this.source[pos];\r\n            if (c == '!') {\r\n                if (this.sourceLen > pos + 7 && this.source.substring(pos - 1, pos + 8) == CDATA_START) {\r\n                    pos = this.source.indexOf(CDATA_END, pos);\r\n                    this.tagType = XMLTagType.CDATA;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else if (this.sourceLen > pos + 2 && this.source.substring(pos - 1, pos + 3) == COMMENT_START) {\r\n                    pos = this.source.indexOf(COMMENT_END, pos);\r\n                    this.tagType = XMLTagType.Comment;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else {\r\n                    pos++;\r\n                    this.tagType = XMLTagType.Instruction;\r\n                }\r\n            }\r\n            else if (c == '/') {\r\n                pos++;\r\n                this.tagType = XMLTagType.End;\r\n            }\r\n            else if (c == '?') {\r\n                pos++;\r\n                this.tagType = XMLTagType.Instruction;\r\n            }\r\n\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            buffer += this.source.substring(this.parsePos + 1, pos);\r\n            if (buffer.length > 0 && buffer[0] == '/')\r\n                buffer = buffer.substring(1);\r\n\r\n            let singleQuoted: boolean = false, doubleQuoted: boolean = false;\r\n            let possibleEnd: number = -1;\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (c == '\"') {\r\n                    if (!singleQuoted)\r\n                        doubleQuoted = !doubleQuoted;\r\n                }\r\n                else if (c == '\\'') {\r\n                    if (!doubleQuoted)\r\n                        singleQuoted = !singleQuoted;\r\n                }\r\n\r\n                if (c == '>') {\r\n                    if (!(singleQuoted || doubleQuoted)) {\r\n                        possibleEnd = -1;\r\n                        break;\r\n                    }\r\n\r\n                    possibleEnd = pos;\r\n                }\r\n                else if (c == '<')\r\n                    break;\r\n            }\r\n            if (possibleEnd != -1)\r\n                pos = possibleEnd;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            if (this.source[pos - 1] == '/')\r\n                this.tagType = XMLTagType.Void;\r\n\r\n            this.tagName = buffer;\r\n            if (this.lowerCaseName)\r\n                this.tagName = this.tagName.toLowerCase();\r\n            this.tagPos = this.parsePos;\r\n            this.tagLength = pos + 1 - this.parsePos;\r\n            this.parsePos += this.tagLength;\r\n\r\n            return true;\r\n        }\r\n\r\n        this.tagPos = this.sourceLen;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n        return false;\r\n    }\r\n\r\n    public static getTagSource(): string {\r\n        return this.source.substring(this.tagPos, this.tagPos + this.tagLength);\r\n    }\r\n\r\n    public static getRawText(trim?: boolean) {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return this.source.substring(i, this.tagPos).trim();\r\n        }\r\n        else\r\n            return this.source.substring(this.lastTagEnd, this.tagPos);\r\n    }\r\n\r\n    public static getText(trim?: boolean): string {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return XMLUtils.decodeString(this.source.substring(i, this.tagPos)).trimEnd();\r\n        }\r\n        else\r\n            return XMLUtils.decodeString(this.source.substring(this.lastTagEnd, this.tagPos));\r\n    }\r\n\r\n    public static get attributes() {\r\n        if (!this.attrParsed) {\r\n            for (let key in this._attrs) {\r\n                delete this._attrs[key];\r\n            }\r\n            this.parseAttributes(this._attrs);\r\n            this.attrParsed = true;\r\n        }\r\n\r\n        return this._attrs;\r\n    }\r\n\r\n    public static getAttribute(attrName: string): string {\r\n        return this.attributes[attrName];\r\n    }\r\n\r\n    static parseAttributes(attrs: any) {\r\n        let attrName: string;\r\n        let valueStart: number = 0;\r\n        let valueEnd: number = 0;\r\n        let waitValue: boolean = false;\r\n        let quoted: number = 0;\r\n        let buffer: string = \"\";\r\n        let i = this.tagPos;\r\n        let attrEnd = this.tagPos + this.tagLength;\r\n\r\n        if (i < attrEnd && this.source[i] == '<') {\r\n            for (; i < attrEnd; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (; i < attrEnd; i++) {\r\n            let c: string = this.source[i];\r\n            if (c == '=') {\r\n                valueStart = -1;\r\n                valueEnd = -1;\r\n                quoted = 0;\r\n                for (let j = i + 1; j < attrEnd; j++) {\r\n                    let c2 = this.source[j];\r\n                    if (' \\t\\n\\r\\v'.indexOf(c2) != -1) {\r\n                        if (valueStart != -1 && quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '>') {\r\n                        if (quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\"') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 1) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 2;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\\'') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 2) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 1;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (valueStart == -1) {\r\n                        valueStart = j;\r\n                    }\r\n                }\r\n\r\n                if (valueStart != -1 && valueEnd != -1) {\r\n                    attrName = buffer;\r\n                    if (this.lowerCaseName)\r\n                        attrName = attrName.toLowerCase();\r\n                    buffer = \"\";\r\n                    attrs[attrName] = XMLUtils.decodeString(this.source.substring(valueStart, valueEnd + 1));\r\n                    i = valueEnd + 1;\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n            else if (' \\t\\n\\r\\v'.indexOf(c) == -1) {\r\n                if (waitValue || c == '/' || c == '>') {\r\n                    if (buffer.length > 0) {\r\n                        attrName = buffer;\r\n                        if (this.lowerCaseName)\r\n                            attrName = attrName.toLowerCase();\r\n                        attrs[attrName] = \"\";\r\n                        buffer = \"\";\r\n                    }\r\n\r\n                    waitValue = false;\r\n                }\r\n\r\n                if (c != '/' && c != '>')\r\n                    buffer += c;\r\n            }\r\n            else {\r\n                if (buffer.length > 0)\r\n                    waitValue = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nif (!String.prototype.trimEnd) {\r\n    String.prototype.trimEnd = function (this: string) {\r\n        return this.replace(/\\s+$/g, \"\");\r\n    }\r\n}","import { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nexport class XML {\r\n    public name: string;\r\n    public text: string;\r\n\r\n    private _attrs: Record<string, string>;\r\n    private _children: Array<XML>;\r\n\r\n    public constructor(XmlString?: string) {\r\n        if (XmlString)\r\n            this.parse(XmlString);\r\n    }\r\n\r\n    public get attributes(): Record<string, string> {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n        return this._attrs;\r\n    }\r\n\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public setAttribute(attrName: string, attrValue: string) {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    public getNode(selector: string): XML {\r\n        if (!this._children)\r\n            return null;\r\n        else\r\n            return this._children.find(value => {\r\n                return value.name == selector;\r\n            });\r\n    }\r\n\r\n    public elements(selector?: string): Array<XML> {\r\n        if (!this._children)\r\n            this._children = new Array<XML>();\r\n        if (selector)\r\n            return this._children.filter(value => {\r\n                return value.name == selector;\r\n            });\r\n        else\r\n            return this._children;\r\n    }\r\n\r\n    public parse(aSource: string) {\r\n        this.reset();\r\n\r\n        let lastOpenNode: XML;\r\n        let nodeStack: Array<XML> = new Array<XML>();\r\n\r\n        XMLIterator.begin(aSource);\r\n        while (XMLIterator.nextTag()) {\r\n            if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                let childNode: XML;\r\n                if (lastOpenNode)\r\n                    childNode = new XML();\r\n                else {\r\n                    if (this.name != null) {\r\n                        this.reset();\r\n                        throw new Error(\"Invalid xml format - no root node.\");\r\n                    }\r\n                    childNode = this;\r\n                }\r\n\r\n                childNode.name = XMLIterator.tagName;\r\n                childNode._attrs = Object.assign({}, XMLIterator.attributes);\r\n\r\n                if (lastOpenNode) {\r\n                    if (XMLIterator.tagType != XMLTagType.Void)\r\n                        nodeStack.push(lastOpenNode);\r\n                    if (lastOpenNode._children == null)\r\n                        lastOpenNode._children = new Array<XML>();\r\n                    lastOpenNode._children.push(childNode);\r\n                }\r\n                if (XMLIterator.tagType != XMLTagType.Void)\r\n                    lastOpenNode = childNode;\r\n            }\r\n            else if (XMLIterator.tagType == XMLTagType.End) {\r\n                if (lastOpenNode == null || lastOpenNode.name != XMLIterator.tagName) {\r\n                    this.reset();\r\n                    throw new Error(\"Invalid xml format - <\" + XMLIterator.tagName + \"> dismatched.\");\r\n                }\r\n\r\n                if (lastOpenNode._children == null || lastOpenNode._children.length == 0) {\r\n                    lastOpenNode.text = XMLIterator.getText();\r\n                }\r\n\r\n                if (nodeStack.length > 0)\r\n                    lastOpenNode = nodeStack.pop();\r\n                else\r\n                    lastOpenNode = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this._attrs = null;\r\n        if (this._children != null)\r\n            this._children.length == 0;\r\n        this.text = null;\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * 请求进度改变时调度。\r\n * @eventType Event.PROGRESS\r\n * */\r\n/*[Event(name = \"progress\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求结束后调度。\r\n * @eventType Event.COMPLETE\r\n * */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求出错时调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>HttpRequest</code> 通过封装 HTML <code>XMLHttpRequest</code> 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。 <code>HttpRequest</code> 只提供以异步的形式返回 Web 服务器的响应，并且能够以文本或者二进制的形式返回内容。</p>\r\n * <p><b>注意：</b>建议每次请求都使用新的 <code>HttpRequest</code> 对象，因为每次调用该对象的send方法时，都会清空之前设置的数据，并重置 HTTP 请求的状态，这会导致之前还未返回响应的请求被重置，从而得不到之前请求的响应结果。</p>\r\n */\r\nexport class HttpRequest extends EventDispatcher {\r\n    /**@private */\r\n    protected _http = new XMLHttpRequest();\r\n    /**@private */\r\n    private static _urlEncode: Function = encodeURI;\r\n    /**@private */\r\n    protected _responseType: string;\r\n    /**@private */\r\n    protected _data: any;\r\n    /**@private */\r\n    protected _url: string;\r\n\r\n    /**\r\n     * 发送 HTTP 请求。\r\n     * @param\turl\t\t\t\t请求的地址。大多数浏览器实施了一个同源安全策略，并且要求这个 URL 与包含脚本的文本具有相同的主机名和端口。\r\n     * @param\tdata\t\t\t(default = null)发送的数据。\r\n     * @param\tmethod\t\t\t(default = \"get\")用于请求的 HTTP 方法。值包括 \"get\"、\"post\"、\"head\"。\r\n     * @param\tresponseType\t(default = \"text\")Web 服务器的响应类型，可设置为 \"text\"、\"json\"、\"xml\"、\"arraybuffer\"。\r\n     * @param\theaders\t\t\t(default = null) HTTP 请求的头部信息。参数形如key-value数组：key是头部的名称，不应该包括空白、冒号或换行；value是头部的值，不应该包括换行。比如[\"Content-Type\", \"application/json\"]。\r\n     */\r\n    send(url: string, data: any = null,\r\n        method: \"get\" | \"post\" | \"head\" = \"get\",\r\n        responseType: \"text\" | \"json\" | \"xml\" | \"arraybuffer\" = \"text\",\r\n        headers?: string[]): void {\r\n        this._responseType = responseType;\r\n        this._data = null;\r\n\r\n        if (Browser.onVVMiniGame || Browser.onQGMiniGame || Browser.onQQMiniGame || Browser.onAlipayMiniGame || Browser.onBLMiniGame || Browser.onHWMiniGame || Browser.onTTMiniGame || Browser.onTBMiniGame) {\r\n            url = HttpRequest._urlEncode(url);\r\n        }\r\n        this._url = url;\r\n\r\n        let http = this._http;\r\n        http.open(method, url, true);\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            }\r\n            else {\r\n                http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                if (!(data instanceof ArrayBuffer))\r\n                    data = JSON.stringify(data);\r\n            }\r\n        }\r\n        else if (Browser.onBLMiniGame && Browser.onAndroid)\r\n            data = {};\r\n\r\n        if (headers) {\r\n            for (let i = 0; i < headers.length; i++) {\r\n                http.setRequestHeader(headers[i++], headers[i]);\r\n            }\r\n        }\r\n\r\n        let restype: XMLHttpRequestResponseType = responseType !== \"arraybuffer\" ? \"text\" : \"arraybuffer\";\r\n        http.responseType = restype;\r\n        if ((http as any).dataType) {//for Ali\r\n            (http as any).dataType = restype;\r\n        }\r\n        http.onerror = (e: any) => {\r\n            this._onError(e);\r\n        }\r\n        http.onabort = (e: any) => {\r\n            this._onAbort(e);\r\n        }\r\n        http.onprogress = (e: any) => {\r\n            this._onProgress(e);\r\n        }\r\n        http.onload = (e: any) => {\r\n            this._onLoad(e);\r\n        }\r\n\r\n        http.send(data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求进度的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onProgress(e: any): void {\r\n        if (e && e.lengthComputable) this.event(Event.PROGRESS, e.loaded / e.total);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求中断的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onAbort(e: any): void {\r\n        this.error(\"Request was aborted by user\");\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求出错侦的听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.error(\"Request failed Status:\" + this._http.status + \" text:\" + this._http.statusText);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求消息返回的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onLoad(e: any): void {\r\n        var http: any = this._http;\r\n        var status: number = http.status !== undefined ? http.status : 200;\r\n\r\n        if (status === 200 || status === 204 || status === 0) {\r\n            this.complete();\r\n        } else {\r\n            this.error(\"[\" + http.status + \"]\" + http.statusText + \":\" + http.responseURL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求错误的处理函数。\r\n     * @param\tmessage 错误信息。\r\n     */\r\n    protected error(message: string): void {\r\n        this.clear();\r\n        //console.warn(this.url, message);\r\n        this.event(Event.ERROR, message);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求成功完成的处理函数。\r\n     */\r\n    protected complete(): void {\r\n        this.clear();\r\n        var flag: boolean = true;\r\n        try {\r\n            if (this._responseType === \"json\") {\r\n                this._data = JSON.parse(this._http.responseText);\r\n            } else if (this._responseType === \"xml\") {\r\n                this._data = new XML(this._http.responseText);\r\n            } else {\r\n                this._data = this._http.response || this._http.responseText;\r\n            }\r\n        } catch (e: any) {\r\n            flag = false;\r\n            this.error(e.message);\r\n        }\r\n        flag && this.event(Event.COMPLETE, this._data instanceof Array ? [this._data] : this._data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清除当前请求。\r\n     */\r\n    protected clear(): void {\r\n        var http: any = this._http;\r\n        http.onerror = http.onabort = http.onprogress = http.onload = null;\r\n    }\r\n\r\n    /** 请求的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /** 返回的数据。*/\r\n    get data(): any {\r\n        return this._data;\r\n    }\r\n\r\n    /**\r\n     * 本对象所封装的原生 XMLHttpRequest 引用。\r\n     */\r\n    get http(): any {\r\n        return this._http;\r\n    }\r\n\r\n    reset() {\r\n        this.offAll();\r\n        this._data = null;\r\n    }\r\n}\r\n\r\n","import { Event } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { ImgUtils } from \"../utils/ImgUtils\";\r\nimport { HttpRequest } from \"./HttpRequest\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\n\r\nexport class Downloader {\r\n    common(owner: any, url: string, originalUrl: string, contentType: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let http = this.getRequestInst();\r\n        http.on(Event.COMPLETE, () => {\r\n            let data = http.data;\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(data);\r\n        });\r\n        http.on(Event.ERROR, null, (error: string) => {\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(null, error);\r\n        });\r\n        if (onProgress)\r\n            http.on(Event.PROGRESS, onProgress);\r\n        http.send(url, null, \"get\", <any>contentType);\r\n        owner.$ref = http; //保持引用避免gc掉\r\n    }\r\n\r\n    image(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let image: HTMLImageElement = new Browser.window.Image();\r\n        image.crossOrigin = \"\";\r\n        image.onload = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(image);\r\n        };\r\n        image.onerror = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        image.src = url;\r\n        owner.$ref = image; //保持引用避免gc掉\r\n    }\r\n\r\n    imageWithBlob(owner: any, blob: ArrayBuffer, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let url = ImgUtils.arrayBufferToURL(originalUrl, blob);\r\n        this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    imageWithWorker(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        WorkerLoader.enable = true;\r\n        if (WorkerLoader.enable) {\r\n            WorkerLoader.load(url, owner.workerLoaderOptions).then(ret => {\r\n                if (ret)\r\n                    onComplete(ret);\r\n                else\r\n                    onComplete(null, \"workerloader failed!\");\r\n            });\r\n        }\r\n        else\r\n            this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    audio(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void) {\r\n        let audio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        audio.crossOrigin = \"\";\r\n        audio.oncanplaythrough = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(audio);\r\n        };\r\n        audio.onerror = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        audio.src = url;\r\n        owner.$ref = audio; //保持引用避免gc掉\r\n    }\r\n\r\n    httpRequestPool: Array<HttpRequest> = [];\r\n    protected getRequestInst() {\r\n        if (this.httpRequestPool.length == 0\r\n            || Browser.onVVMiniGame || Browser.onHWMiniGame /*临时修复vivo复用xmlhttprequest的bug*/) {\r\n            return new HttpRequest();\r\n        } else {\r\n            return this.httpRequestPool.pop();\r\n        }\r\n    }\r\n\r\n    protected returnRequestInst(inst: HttpRequest) {\r\n        inst.reset();\r\n        if (this.httpRequestPool.length < 10)\r\n            this.httpRequestPool.push(inst);\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Event } from \"../events/Event\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Delegate } from \"../utils/Delegate\";\r\nimport { AtlasInfoManager } from \"./AtlasInfoManager\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { IBatchProgress, ProgressCallback, BatchProgress } from \"./BatchProgress\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Downloader } from \"./Downloader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { XML } from \"../html/XML\";\r\n\r\nexport interface ILoadTask {\r\n    readonly type: string;\r\n    readonly url: string;\r\n    readonly uuid: string;\r\n    readonly ext: string;\r\n    readonly loader: Loader;\r\n    readonly obsoluteInst: Resource;\r\n    readonly options: Readonly<ILoadOptions>;\r\n    readonly progress: IBatchProgress;\r\n}\r\n\r\nexport interface IResourceLoader {\r\n    load(task: ILoadTask): Promise<any>;\r\n}\r\n\r\nexport interface ILoadOptions {\r\n    type?: string;\r\n    priority?: number;\r\n    group?: string;\r\n    cache?: boolean;\r\n    noRetry?: boolean;\r\n    silent?: boolean;\r\n    useWorkerLoader?: boolean;\r\n    constructParams?: TextureConstructParams;\r\n    propertyParams?: TexturePropertyParams;\r\n    blob?: ArrayBuffer;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface ILoadURL extends ILoadOptions {\r\n    url: string;\r\n}\r\n\r\ninterface ContentTypeMap {\r\n    \"text\": string,\r\n    \"json\": any,\r\n    \"xml\": XML,\r\n    \"arraybuffer\": ArrayBuffer,\r\n    \"image\": HTMLImageElement | ImageBitmap,\r\n    \"sound\": HTMLAudioElement\r\n}\r\n\r\nvar typeIdCounter = 0;\r\ntype TypeMapEntry = { typeId: number, loaderType: new () => IResourceLoader };\r\n\r\ninterface URLInfo {\r\n    ext: string,\r\n    typeId: number,\r\n    main: boolean,\r\n    loaderType: new () => IResourceLoader,\r\n}\r\nconst NullURLInfo: Readonly<URLInfo> = { ext: null, typeId: null, main: false, loaderType: null };\r\n\r\n/**\r\n * <code>Loader</code> 类可用来加载文本、JSON、XML、二进制、图像等资源。\r\n */\r\nexport class Loader extends EventDispatcher {\r\n    /**文本类型，加载完成后返回包含string的TextResource对象。*/\r\n    static TEXT = \"text\";\r\n    /**JSON 类型，加载完成后返回包含json数据的TextResource对象。*/\r\n    static JSON = \"json\";\r\n    /**XML 类型，加载完成后返回包含domXML的TextResource对象。*/\r\n    static XML = \"xml\";\r\n    /**二进制类型，加载完成后返回包含arraybuffer的TextResource对象。*/\r\n    static BUFFER = \"arraybuffer\";\r\n    /**纹理类型，加载完成后返回Texture。*/\r\n    static IMAGE = \"image\";\r\n    /**声音类型，加载完成后返回Sound。*/\r\n    static SOUND = \"sound\";\r\n    /**视频类型，加载完成后返回VideoTexture。*/\r\n    static VIDEO = \"video\";\r\n    /**图集类型，加载完成后返回图集json信息(并创建图集内小图Texture)。*/\r\n    static ATLAS = \"atlas\";\r\n    /**位图字体类型，加载完成后返回BitmapFont，加载后，会根据文件名自动注册为位图字体。*/\r\n    static FONT = \"font\";\r\n    /** TTF字体类型，加载完成后返回一个对象。*/\r\n    static TTF = \"ttf\";\r\n    /**Hierarchy资源。*/\r\n    static HIERARCHY = \"HIERARCHY\";\r\n    /**Mesh资源。*/\r\n    static MESH = \"MESH\";\r\n    /**Material资源。*/\r\n    static MATERIAL = \"MATERIAL\";\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D = \"TEXTURE2D\"; //这里是为了兼容，实际应该是BaseTexture\r\n    /**TextureCube资源。*/\r\n    static TEXTURECUBE = \"TEXTURE2D\"; //兼容处理，现在TEXTURE2D类型可以载入Texture或者TextureCube\r\n    /**AnimationClip资源。*/\r\n    static ANIMATIONCLIP = \"ANIMATIONCLIP\";\r\n    /**Terrain资源。*/\r\n    static TERRAINHEIGHTDATA = \"TERRAINHEIGHTDATA\";\r\n    /**Terrain资源。*/\r\n    static TERRAINRES = \"TERRAIN\";\r\n    /** Spine 资源 */\r\n    static SPINE = \"SPINE\";\r\n\r\n    /** 加载出错后的重试次数，默认重试一次*/\r\n    retryNum: number = 1;\r\n    /** 延迟时间多久再进行错误重试，默认立即重试*/\r\n    retryDelay: number = 0;\r\n    /** 最大下载线程，默认为5个*/\r\n    maxLoader: number = 5;\r\n\r\n    static readonly extMap: { [ext: string]: Array<TypeMapEntry> } = {};\r\n    static readonly typeMap: { [type: string]: TypeMapEntry } = {};\r\n\r\n    static downloader = new Downloader();\r\n\r\n    /**\r\n     * 注册一种资源装载器。\r\n     * @param exts 扩展名\r\n     * @param cls\r\n     * @param type 类型标识。如果这种资源需要支持识别没有扩展名的情况，或者一个扩展名对应了多种资源类型的情况，那么指定type参数是个最优实践。\r\n     */\r\n    static registerLoader(exts: string[], cls: new () => IResourceLoader, type?: string) {\r\n        let typeEntry: TypeMapEntry;\r\n        if (type) {\r\n            typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                Loader.typeMap[type] = typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n            else if (typeEntry.loaderType != cls)\r\n                typeEntry = { typeId: typeEntry.typeId, loaderType: cls };\r\n        }\r\n        else\r\n            typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n\r\n        for (let ext of exts) {\r\n            let entry = Loader.extMap[ext];\r\n            if (entry && type) { //这个扩展名已经被注册为其他资源类型\r\n                let i = entry.findIndex(e => e.typeId == typeEntry.typeId);\r\n                if (i == -1) //注册为次类型\r\n                    entry.push(typeEntry);\r\n                else //覆盖旧的设置\r\n                    entry[i].loaderType = cls;\r\n            }\r\n            else {\r\n                Loader.extMap[ext] = [typeEntry];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**资源分组对应表。*/\r\n    static groupMap: { [name: string]: Set<string> } = {};\r\n    /**已加载的资源池。*/\r\n    static loadedMap: { [url: string]: Array<any> } = {};\r\n    /** 预加载的数据文件。如果一个url在这里有记录，则请求时直接使用这里的数据，放弃网络加载。*/\r\n    static preLoadedMap: { [url: string]: any } = {};\r\n\r\n    /**@private */\r\n    private _loadings: Map<string, LoadTask>;\r\n    /**@private */\r\n    private _queue: Array<DownloadItem>;\r\n    /**@private */\r\n    private _downloadings: Set<DownloadItem>;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>Loader</code> 实例。</p>\r\n     * <p><b>注意：</b>请使用Laya.loader加载资源，这是一个单例，不要手动实例化此类，否则会导致不可预料的问题。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._loadings = new Map();\r\n        this._queue = [];\r\n        this._downloadings = new Set();\r\n    }\r\n\r\n    /**\r\n     * 是否有任何的加载任务在进行\r\n     */\r\n    public get loading(): boolean {\r\n        return this._loadings.size > 0;\r\n    }\r\n\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param type 资源类型。比如：Loader.IMAGE。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], type?: string, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param options 加载选项。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], options?: Readonly<ILoadOptions>, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>这是兼容2.0引擎的加载接口</p>\r\n     * <p>加载资源。</p>\r\n     * @param url\t\t要加载的单个资源地址或资源信息数组。比如：简单数组：[\"a.png\",\"b.png\"]；复杂数组[{url:\"a.png\",type:Loader.IMAGE,size:100,priority:1},{url:\"b.json\",type:Loader.JSON,size:50,priority:1}]。\r\n     * @param complete\t加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     * @param progress\t加载进度回调。回调参数值为当前资源的加载进度信息(0-1)。\r\n     * @param type\t\t资源类型。比如：Loader.IMAGE。\r\n     * @param priority\t(default = 0)加载的优先级，数字越大优先级越高，优先级高的优先加载。\r\n     * @param cache\t\t是否缓存。\r\n     * @param group\t\t分组，方便对资源进行管理。\r\n     * @param ignoreCache\t参数已废弃。\r\n     * @param useWorkerLoader(default = false)是否使用worker加载（只针对IMAGE类型和ATLAS类型，并且浏览器支持的情况下生效）\r\n     * @return Promise对象\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], complete?: Handler, progress?: Handler, type?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any>;\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], arg1?: string | Readonly<ILoadOptions> | Handler, arg2?: ProgressCallback | Handler, arg3?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any> {\r\n        let complete: Handler;\r\n        let type: string;\r\n        let options: ILoadOptions = dummyOptions;\r\n        if (arg1 instanceof Handler) {\r\n            complete = arg1;\r\n            type = arg3;\r\n        }\r\n        else if (typeof (arg1) === \"string\")\r\n            type = arg1;\r\n        else if (arg1 != null) {\r\n            type = arg1.type;\r\n            options = arg1;\r\n        }\r\n\r\n        if (priority != null || cache != null || group != null || useWorkerLoader != null) {\r\n            if (options === dummyOptions)\r\n                options = { priority, cache, group, useWorkerLoader };\r\n            else\r\n                options = Object.assign(options, { priority, cache, group, useWorkerLoader });\r\n        }\r\n\r\n        let onProgress: ProgressCallback;\r\n        if (arg2 instanceof Handler)\r\n            onProgress = (value: number) => arg2.runWith(value);\r\n        else\r\n            onProgress = arg2;\r\n\r\n        let promise: Promise<any>;\r\n        if (Array.isArray(url)) {\r\n            let pd: BatchProgress;\r\n            if (onProgress)\r\n                pd = new BatchProgress(onProgress);\r\n\r\n            let promises: Array<Promise<any>> = [];\r\n            for (let i = 0; i < url.length; i++) {\r\n                let url2 = url[i];\r\n                if (!url2)\r\n                    continue;\r\n\r\n                if (typeof (url2) === \"string\") {\r\n                    promises.push(this._load1(url2, type, options, pd?.createCallback()));\r\n                }\r\n                else {\r\n                    promises.push(this._load1(url2.url, url2.type || type,\r\n                        options !== dummyOptions ? Object.assign({}, options, url2) : url2, pd?.createCallback()));\r\n                }\r\n            }\r\n\r\n            promise = Promise.all(promises);\r\n        }\r\n        else if (typeof (url) === \"string\")\r\n            promise = this._load1(url, type, options, onProgress);\r\n        else\r\n            promise = this._load1(url.url, url.type || type,\r\n                options !== dummyOptions ? Object.assign({}, options, url) : url, onProgress);\r\n\r\n        if (complete)\r\n            return promise.then(result => {\r\n                complete.runWith(result);\r\n                return result;\r\n            });\r\n        else\r\n            return promise;\r\n    }\r\n\r\n    private _load1(url: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        if (LayaEnv.isPreview) {\r\n            if (url.startsWith(\"res://\")) {\r\n                let uuid = url.substring(6);\r\n                return AssetDb.inst.UUID_to_URL_async(uuid).then(url2 => {\r\n                    if (url2)\r\n                        return this._load2(url2, uuid, type, options, onProgress);\r\n                    else {\r\n                        !options.silent && Loader.warnFailed(url);\r\n                        return Promise.resolve(null);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return AssetDb.inst.URL_to_UUID_async(url).then(uuid => {\r\n                    return this._load2(url, uuid, type, options, onProgress);\r\n                });\r\n            }\r\n        }\r\n        else\r\n            return this._load2(url, null, type, options, onProgress);\r\n    }\r\n\r\n    private _load2(url: string, uuid: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        let { ext, typeId, main, loaderType } = Loader.getURLInfo(url, type);\r\n        if (!loaderType) {\r\n            !options.silent && Loader.warnFailed(url);\r\n            return Promise.resolve(null);\r\n        }\r\n        let formattedUrl = URL.formatURL(url);\r\n\r\n        if (options.group) {\r\n            let set = Loader.groupMap[options.group];\r\n            if (!set)\r\n                set = Loader.groupMap[options.group] = new Set();\r\n            set.add(formattedUrl);\r\n        }\r\n\r\n        let obsoluteRes: Resource;\r\n        if (options.cache == null || options.cache) {\r\n            let cacheRes = Loader._getRes(formattedUrl, type);\r\n            if (cacheRes !== undefined) {\r\n                if (cacheRes == null)\r\n                    return Promise.resolve(null);\r\n                else {\r\n                    if (!(cacheRes instanceof Resource))\r\n                        return Promise.resolve(cacheRes);\r\n\r\n                    if (cacheRes.obsolute)\r\n                        obsoluteRes = cacheRes;\r\n\r\n                    if (!obsoluteRes && (!cacheRes.uuid || !uuid || uuid == cacheRes.uuid))\r\n                        return Promise.resolve(cacheRes);\r\n                }\r\n            }\r\n        }\r\n\r\n        let loadingKey = formattedUrl;\r\n        if (!main)\r\n            loadingKey += \"@\" + typeId;\r\n        let task = this._loadings.get(loadingKey);\r\n        if (task) {\r\n            if (onProgress)\r\n                task.onProgress.add(onProgress);\r\n            return new Promise((resolve) => task.onComplete.add(resolve));\r\n        }\r\n\r\n        //判断是否在自动图集里\r\n        let atlasInfo = AtlasInfoManager.getFileLoadPath(formattedUrl);\r\n        if (atlasInfo) {\r\n            return this.load(atlasInfo.url, { type: Loader.ATLAS, baseUrl: atlasInfo.baseUrl }).then(() => {\r\n                return Loader.getRes(url, type);\r\n            });\r\n        }\r\n\r\n        if (loadTaskPool.length > 0)\r\n            task = loadTaskPool.pop();\r\n        else\r\n            task = new LoadTask();\r\n        task.type = type;\r\n        task.url = url;\r\n        task.uuid = uuid;\r\n        task.ext = ext;\r\n        options = Object.assign(task.options, options);\r\n        delete options.type;\r\n        if (options.priority == null)\r\n            options.priority = 0;\r\n        if (options.useWorkerLoader == null)\r\n            options.useWorkerLoader = WorkerLoader.enable;\r\n        if (onProgress)\r\n            task.onProgress.add(onProgress);\r\n        task.loader = this;\r\n        task.obsoluteInst = obsoluteRes;\r\n\r\n        let assetLoader = new loaderType();\r\n        this._loadings.set(loadingKey, task);\r\n\r\n        let promise: Promise<any>;\r\n        try {\r\n            promise = assetLoader.load(task);\r\n        }\r\n        catch (err: any) {\r\n            !options.silent && Loader.warnFailed(url, err);\r\n\r\n            promise = Promise.resolve(null);\r\n        }\r\n\r\n        return promise.then(content => {\r\n            if (content instanceof Resource) {\r\n                content._setCreateURL(url, uuid);\r\n            }\r\n\r\n            if (task.options.cache == null || task.options.cache)\r\n                Loader._cacheRes(formattedUrl, content, typeId, main);\r\n\r\n            task.progress.update(-1, 1);\r\n\r\n            //console.log(\"Loaded \" + url);\r\n            task.onComplete.invoke(content);\r\n            return content;\r\n        }).catch(error => {\r\n            !options.silent && Loader.warnFailed(url, error);\r\n\r\n            if (task.options.cache == null || task.options.cache)\r\n                Loader._cacheRes(formattedUrl, null, typeId, main);\r\n\r\n            task.onComplete.invoke(null);\r\n            return null;\r\n        }).then((result: any) => {\r\n            this._loadings.delete(loadingKey);\r\n            task.reset();\r\n            loadTaskPool.push(task);\r\n            if (this._loadings.size == 0)\r\n                this.event(Event.COMPLETE);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 从指定URL下载。这是较为底层的下载资源的方法，它和load方法不同，不对返回的数据进行解析，也不会缓存下载的内容。\r\n     * 成功则返回下载的数据，失败返回null。\r\n     */\r\n    fetch<K extends keyof ContentTypeMap>(url: string, contentType: K, onProgress?: ProgressCallback, options?: Readonly<ILoadOptions>): Promise<ContentTypeMap[K]> {\r\n        options = options || dummyOptions;\r\n        let task: DownloadItem = {\r\n            originalUrl: url,\r\n            url: url,\r\n            contentType: contentType,\r\n            priority: options.priority ?? 1,\r\n            retryCnt: 0,\r\n            onProgress: onProgress,\r\n            onComplete: null,\r\n        };\r\n        if (options.useWorkerLoader) {\r\n            task.useWorkerLoader = true;\r\n            task.workerLoaderOptions = options.workerLoaderOptions;\r\n        }\r\n        if (options.blob)\r\n            task.blob = options.blob;\r\n        if (options.noRetry)\r\n            task.retryCnt = -1;\r\n        if (options.silent)\r\n            task.silent = true;\r\n\r\n        return AssetDb.inst.resolveURL(url).then(url => {\r\n            return new Promise((resolve) => {\r\n                task.url = URL.formatURL(url);\r\n                task.onComplete = resolve;\r\n                this.queueToDownload(task);\r\n            });\r\n        });\r\n    }\r\n\r\n    private queueToDownload(item: DownloadItem) {\r\n        if (this._downloadings.size < this.maxLoader) {\r\n            this.download(item);\r\n            return;\r\n        }\r\n\r\n        let priority = item.priority;\r\n        if (priority == 0)\r\n            this._queue.push(item);\r\n        else {\r\n            let i = this._queue.findIndex(e => e.priority < priority);\r\n            if (i != -1)\r\n                this._queue.splice(i, 0, item);\r\n            else\r\n                this._queue.push(item);\r\n        }\r\n    }\r\n\r\n    private download(item: DownloadItem) {\r\n        this._downloadings.add(item);\r\n        let url = URL.postFormatURL(item.url);\r\n\r\n        if (item.contentType == \"image\") {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                if (!(preloadedContent instanceof ArrayBuffer)) {\r\n                    this.completeItem(item, preloadedContent);\r\n                    return;\r\n                }\r\n\r\n                //cache as arraybuffer\r\n                item.blob = preloadedContent;\r\n            }\r\n\r\n            if (item.blob) {\r\n                Loader.downloader.imageWithBlob(item, item.blob, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.retryCnt = -1; //失败无需重试\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else if (item.useWorkerLoader) {\r\n                Loader.downloader.imageWithWorker(item, url, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.useWorkerLoader = false; //重试不用worker\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else {\r\n                Loader.downloader.image(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                    this.completeItem(item, data, error));\r\n            }\r\n        }\r\n        else if (item.contentType == \"sound\") {\r\n            Loader.downloader.audio(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n        else {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                this.completeItem(item, preloadedContent);\r\n                return;\r\n            }\r\n\r\n            Loader.downloader.common(item, url, item.originalUrl, item.contentType, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n    }\r\n\r\n    private completeItem(item: DownloadItem, content: any, error?: string) {\r\n        this._downloadings.delete(item);\r\n        if (content) {\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            item.onComplete(content);\r\n        }\r\n        else if (item.retryCnt != -1 && item.retryCnt < this.retryNum) {\r\n            item.retryCnt++;\r\n            if (!item.silent)\r\n                console.debug(`Retry to load ${item.url} (${item.retryCnt})`);\r\n            ILaya.systemTimer.once(this.retryDelay, this, this.queueToDownload, [item], false);\r\n        }\r\n        else {\r\n            !item.silent && Loader.warnFailed(item.url);\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    private static getURLInfo(url: string, type?: string): URLInfo {\r\n        //先根据扩展名获得注册信息A\r\n        let ext = url.startsWith(\"data:\") ? \"png\" : Utils.getFileExtension(url);\r\n        let extEntry: Array<TypeMapEntry>;\r\n        if (ext.length > 0)\r\n            extEntry = Loader.extMap[ext];\r\n\r\n        let typeId: number;\r\n        let main: boolean;\r\n        let loaderType: new () => IResourceLoader;\r\n\r\n        if (type) { //指定了类型\r\n            let typeEntry = Loader.typeMap[type];\r\n            if (!typeEntry) {\r\n                Loader.warn(`not recognize type: '${type}'`);\r\n                return NullURLInfo;\r\n            }\r\n            typeId = typeEntry.typeId;\r\n\r\n            let i: number = 0;\r\n            if (extEntry) {\r\n                if (extEntry[0].typeId === typeId //优化，大部分情况均为如此\r\n                    || (i = extEntry.findIndex(e => e.typeId === typeId)) != -1) {\r\n                    main = i == 0;\r\n                    loaderType = extEntry[i].loaderType;\r\n                }\r\n                else {\r\n                    //未与扩展名匹配的情况，例如a.lh试图以Loader.JSON类型加载，这种组合没有注册，但仍然允许加载为副资源\r\n                    main = false;\r\n                    loaderType = typeEntry.loaderType;\r\n                }\r\n            }\r\n            else { //扩展名没有注册的情况\r\n                main = type != Loader.TEXTURE2D;\r\n                loaderType = typeEntry.loaderType;\r\n            }\r\n        }\r\n        else {\r\n            if (!extEntry) {\r\n                Loader.warn(`not recognize the resource suffix: '${url}'`);\r\n                return NullURLInfo;\r\n            }\r\n\r\n            //没有自定类型，则认为是主资源\r\n            main = true;\r\n            typeId = extEntry[0].typeId;\r\n            loaderType = extEntry[0].loaderType;\r\n        }\r\n\r\n        return { ext, main, typeId, loaderType };\r\n    }\r\n\r\n    private static warnFailed(url: string, err?: any) {\r\n        this.warn(`Failed to load ${url}`, err);\r\n    }\r\n\r\n    public static warn(msg: string, err?: any) {\r\n        let errMsg = err ? (err.stack ? err.stack : err) : \"\";\r\n        if (errMsg)\r\n            errMsg = \": \" + errMsg;\r\n        console.warn(msg + errMsg);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的资源。\r\n     * @param url 资源地址。\r\n     * @return 返回资源。\r\n     */\r\n    static getRes(url: string, type?: string): any {\r\n        url = URL.formatURL(url);\r\n        let ret = Loader._getRes(url, type);\r\n        return ret || null;\r\n    }\r\n\r\n    private static _getRes(url: string, type?: string): any {\r\n        let resArr = Loader.loadedMap[url];\r\n        if (!resArr)\r\n            return undefined;\r\n\r\n        let ret: any;\r\n        if (type) {\r\n            let typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                return undefined;\r\n\r\n            if (resArr.length == 2) { //优化，大部分情况都是只有主资源，也就是两个元素\r\n                if (resArr[0] == typeEntry.typeId)\r\n                    ret = resArr[1];\r\n            }\r\n            else {\r\n                let i = resArr.indexOf(typeEntry.typeId);\r\n                if (i != -1)\r\n                    ret = resArr[i + 1];\r\n            }\r\n        }\r\n        else\r\n            ret = resArr[1]; //主资源\r\n\r\n        if ((ret instanceof Resource) && ret.destroyed)\r\n            return undefined;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getTexture2D(url: string): Texture2D {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getBaseTexture<T extends BaseTexture>(url: string): T {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的图集地址列表。\r\n     * @param url 图集地址。\r\n     * @return 返回地址集合。\r\n     */\r\n    static getAtlas(url: string): AtlasResource {\r\n        return Loader.getRes(url, Loader.ATLAS);\r\n    }\r\n\r\n    getRes(url: string, type?: string): any {\r\n        return Loader.getRes(url, type);\r\n    }\r\n\r\n    static createNodes<T extends Node>(url: string): T {\r\n        return <T>(<Prefab>Loader.getRes(url))?.create();\r\n    }\r\n\r\n    /**\r\n     * 缓存资源。\r\n     * @param url 资源地址。\r\n     * @param data 要缓存的内容。\r\n     */\r\n    static cacheRes(url: string, data: any, type?: string): void {\r\n        url = URL.formatURL(url);\r\n        let urlInfo = Loader.getURLInfo(url, type);\r\n        if (urlInfo.typeId != null)\r\n            Loader._cacheRes(url, data, urlInfo.typeId, urlInfo.main);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _cacheRes(url: string, data: any, typeId: number, main: boolean) {\r\n        let entry: Array<any> = Loader.loadedMap[url];\r\n        if (main) {\r\n            if (entry) {\r\n                entry[0] = typeId;\r\n                entry[1] = data;\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [typeId, data];\r\n        }\r\n        else {\r\n            if (entry) {\r\n                let i = entry.findIndex(e => e === typeId);\r\n                if (i != -1)\r\n                    entry[i + 1] = data;\r\n                else\r\n                    entry.push(typeId, data);\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [null, undefined, typeId, data];\r\n        }\r\n    }\r\n\r\n    cacheRes(url: string, data: any, type?: string): void {\r\n        Loader.cacheRes(url, data, type);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    static clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _clearRes(url: string, checkObj?: any) {\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n\r\n        if (checkObj) {\r\n            if (entry[1] == checkObj) {\r\n                if (entry.length == 2)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry[1] = undefined;\r\n            }\r\n            else {\r\n                let i = entry.indexOf(checkObj);\r\n                if (i == -1)\r\n                    return;\r\n\r\n                if (entry.length == 4 && entry[0] == null)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry.splice(i - 1, 2);\r\n            }\r\n\r\n            if ((checkObj instanceof Resource) && !checkObj.destroyed) {\r\n                checkObj.destroy();\r\n            }\r\n        }\r\n        else {\r\n            delete Loader.loadedMap[url];\r\n\r\n            if (entry.length > 2) {\r\n                for (let i = 1; i < entry.length; i += 2) {\r\n                    let obj = entry[i];\r\n                    if ((obj instanceof Resource) && !obj.destroyed) {\r\n                        obj.destroy();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let obj = entry[1];\r\n                if ((obj instanceof Resource) && !obj.destroyed) {\r\n                    obj.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁Texture使用的图片资源，保留texture壳，如果下次渲染的时候，发现texture使用的图片资源不存在，则会自动恢复\r\n     * 相比clearRes，clearTextureRes只是清理texture里面使用的图片资源，并不销毁texture，再次使用到的时候会自动恢复图片资源\r\n     * 而clearRes会彻底销毁texture，导致不能再使用；clearTextureRes能确保立即销毁图片资源，并且不用担心销毁错误\r\n     * @param url 图集地址或者texture地址，比如 \"res/atlas/comp.atlas\"或\"hall/bg.jpg\"\r\n     */\r\n    clearTextureRes(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n        let res = entry[1];\r\n        if (res instanceof Texture) {\r\n            res.disposeBitmap();\r\n        }\r\n        else if (res instanceof AtlasResource) {\r\n            for (let tex of res.textures)\r\n                tex.disposeBitmap();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置资源分组。\r\n     * @param url 资源地址。\r\n     * @param group 分组名。\r\n     */\r\n    static setGroup(url: string, group: string): void {\r\n        url = URL.formatURL(url);\r\n        let set = Loader.groupMap[group];\r\n        if (!set)\r\n            set = Loader.groupMap[group] = new Set();\r\n        set.add(url);\r\n    }\r\n\r\n    /**\r\n     * 根据分组清理资源。\r\n     * @param group 分组名\r\n     */\r\n    static clearResByGroup(group: string): void {\r\n        let set = Loader.groupMap[group];\r\n        if (set) {\r\n            for (let k of set)\r\n                Loader._clearRes(k);\r\n        }\r\n    }\r\n\r\n    /** 清理当前未完成的加载，所有未加载的内容全部停止加载。*/\r\n    clearUnLoaded(): void {\r\n        if (this._queue.length == 0)\r\n            return;\r\n\r\n        let arr = this._queue.concat();\r\n        this._queue.length = 0;\r\n        for (let item of arr)\r\n            item.onComplete(null);\r\n    }\r\n\r\n    /**\r\n     * 根据地址集合清理掉未加载的内容\r\n     * @param urls 资源地址集合\r\n     */\r\n    cancelLoadByUrls(urls: any[]): void {\r\n        if (!urls) return;\r\n        for (var i: number = 0, n: number = urls.length; i < n; i++) {\r\n            this.cancelLoadByUrl(urls[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址清理掉未加载的内容\r\n     * @param url 资源地址\r\n     */\r\n    cancelLoadByUrl(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let i = this._queue.findIndex(item => item.url == url);\r\n        if (i != -1) {\r\n            let item = this._queue[i];\r\n            this._queue.splice(i, 1);\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 载入一个分包\r\n     * @path 小游戏的分包路径\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, onProgress?: ProgressCallback): Promise<void>;\r\n    /**\r\n     * 载入一个分包。\r\n     * @path 分包路径\r\n     * @remoteUrl 如果分包是一个远程包，那需要提供远程资源服务器的地址，例如\"http://cdn.com/\"\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, remoteUrl?: string, onProgress?: ProgressCallback): Promise<void>;\r\n    loadPackage(path: string, arg2?: string | ProgressCallback, arg3?: ProgressCallback): Promise<void> {\r\n        let progress: ProgressCallback;\r\n        let remoteUrl: string;\r\n\r\n        if (typeof (arg2) === \"string\") {\r\n            remoteUrl = arg2;\r\n            progress = arg3;\r\n        } else {\r\n            progress = arg2;\r\n        }\r\n\r\n        if (remoteUrl) {\r\n            if (!remoteUrl.endsWith(\"/\"))\r\n                remoteUrl += \"/\";\r\n            let tmpPath: string = path + \"/\";\r\n            URL.basePaths[tmpPath] = remoteUrl;\r\n            return this._loadSubFileConfig(path, progress);\r\n        } else {\r\n            if (LayaEnv.isPreview)\r\n                return Promise.resolve();\r\n            let plat: any = null;\r\n            if (ILaya.Browser.onMiniGame) {\r\n                // wechat\r\n                plat = ILaya.Browser.window.wx;\r\n            } else if (ILaya.Browser.onTTMiniGame) {\r\n                // bytedance\r\n                plat = ILaya.Browser.window.tt;\r\n            } else if (ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onQGMiniGame) {\r\n                // mi/vivo/oppo\r\n                plat = ILaya.Browser.window.qg;\r\n            } else if (ILaya.Browser.onAlipayMiniGame) {\r\n                // alipay\r\n                plat = ILaya.Browser.window.my;\r\n            } else {\r\n                return this._loadSubFileConfig(path, progress);\r\n            }\r\n\r\n            return this._loadMiniPackage(plat, path, progress).then(() =>\r\n                this._loadSubFileConfig(path, progress)\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    private _loadMiniPackage(mini: any, packName: string, progress?: ProgressCallback): Promise<any> {\r\n        if (!(packName.length > 0)) return Promise.resolve();\r\n        return new Promise((resolve: (value: any) => void, reject: (reason?: any) => void) => {\r\n            let loadTask: any = mini.loadSubpackage({\r\n                name: packName,\r\n                success: (res: any) => {\r\n                    resolve(res);\r\n                },\r\n                fail: (res: any) => {\r\n                    resolve(res);\r\n                }\r\n            });\r\n\r\n            loadTask.onProgressUpdate((res: any) => {\r\n                progress && progress(res);\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    private _loadSubFileConfig(path: string, onProgress: ProgressCallback): Promise<any> {\r\n        if (path.length > 0)\r\n            path += \"/\";\r\n\r\n        return this.fetch(path + \"fileconfig.json\", \"json\", onProgress).then(fileConfig => {\r\n            let files: Array<string> = [];\r\n            let col = fileConfig.files;\r\n            for (let k in col) {\r\n                if (k.length > 0) {\r\n                    for (let file of col[k])\r\n                        files.push(k + \"/\" + file);\r\n                }\r\n                else {\r\n                    for (let file of col[k])\r\n                        files.push(file);\r\n                }\r\n            }\r\n\r\n            if (fileConfig.hash) {\r\n                let i = 0;\r\n                let version = URL.version;\r\n                for (let k of fileConfig.hash) {\r\n                    if (k != null)\r\n                        version[files[i]] = k;\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            let configs: Array<any> = fileConfig.config;\r\n            let len = configs.length;\r\n            let i = 0, j = 0, m = 0, k = 0, n = 0;\r\n            let indice: Array<number>;\r\n            let c: any;\r\n            let metaMap = AssetDb.inst.metaMap;\r\n            while (true) {\r\n                if (indice == null) {\r\n                    if (i >= len)\r\n                        break;\r\n                    c = configs[i];\r\n                    indice = c.i;\r\n                    if (Array.isArray(indice))\r\n                        n = indice.length;\r\n                    else {\r\n                        m = indice;\r\n                        n = 0;\r\n                        k = 1;\r\n                    }\r\n                    j = 0;\r\n                }\r\n                if (k == 0) {\r\n                    if (j >= n) {\r\n                        i++;\r\n                        indice = null;\r\n                        continue;\r\n                    }\r\n                    k = indice[j++];\r\n                    if (k > 0) {\r\n                        m = k;\r\n                        k = 0;\r\n                    }\r\n                    else\r\n                        k = -k;\r\n                }\r\n                else\r\n                    k--;\r\n\r\n                let file = files[m + k];\r\n                switch (c.t) {\r\n                    case 0: //图片\r\n                        metaMap[file] = c;\r\n                        break;\r\n                    case 1: //自动图集\r\n                        AtlasInfoManager.addAtlas(file, c.prefix, c.frames);\r\n                        break;\r\n                    case 2: //Shader\r\n                        AssetDb.inst.shaderNameMap[c.shaderName] = file;\r\n                        break;\r\n                    case 3: //render texture\r\n                        Loader.preLoadedMap[URL.formatURL(file)] = c;\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass LoadTask implements ILoadTask {\r\n    type: string;\r\n    url: string;\r\n    uuid: string;\r\n    ext: string;\r\n    options: ILoadOptions;\r\n    loader: Loader;\r\n    progress: BatchProgress;\r\n    obsoluteInst: Resource;\r\n\r\n    onProgress: Delegate;\r\n    onComplete: Delegate;\r\n\r\n    constructor() {\r\n        this.options = {};\r\n        this.onProgress = new Delegate();\r\n        this.onComplete = new Delegate();\r\n        this.progress = new BatchProgress((progress: number) => this.onProgress.invoke(progress));\r\n    }\r\n\r\n    public reset() {\r\n        for (let k in this.options)\r\n            delete this.options[k];\r\n        this.onProgress.clear();\r\n        this.onComplete.clear();\r\n        this.progress.reset();\r\n        this.obsoluteInst = null;\r\n    }\r\n}\r\n\r\nconst loadTaskPool: Array<LoadTask> = [];\r\nconst dummyOptions: ILoadOptions = {};\r\n\r\ninterface DownloadItem {\r\n    url: string;\r\n    originalUrl: string;\r\n    contentType: string;\r\n    priority: number;\r\n    useWorkerLoader?: boolean;\r\n    workerLoaderOptions?: Record<string, any>;\r\n    blob?: ArrayBuffer;\r\n    retryCnt?: number;\r\n    silent?: boolean;\r\n    onComplete: (content: any) => void;\r\n    onProgress: ProgressCallback;\r\n}","/**\r\n\t * @private\r\n\t * <code>MathUtil</code> 是一个数据处理工具类。\r\n\t */\r\nexport class MathUtil {\r\n\r\n    static subtractVector3(l: Float32Array, r: Float32Array, o: Float32Array): void {\r\n        o[0] = l[0] - r[0];\r\n        o[1] = l[1] - r[1];\r\n        o[2] = l[2] - r[2];\r\n    }\r\n\r\n    static lerp(left: number, right: number, amount: number): number {\r\n        return left * (1 - amount) + right * amount;\r\n    }\r\n\r\n    static scaleVector3(f: Float32Array, b: number, e: Float32Array): void {\r\n        e[0] = f[0] * b;\r\n        e[1] = f[1] * b;\r\n        e[2] = f[2] * b;\r\n    }\r\n\r\n    static lerpVector3(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n    }\r\n\r\n    static lerpVector4(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2], aw: number = l[3];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n        o[3] = aw + t * (r[3] - aw);\r\n    }\r\n\r\n    static slerpQuaternionArray(a: Float32Array, Offset1: number, b: Float32Array, Offset2: number, t: number, out: Float32Array, Offset3: number): Float32Array {\r\n\r\n        var ax: number = a[Offset1 + 0], ay: number = a[Offset1 + 1], az: number = a[Offset1 + 2], aw: number = a[Offset1 + 3], bx: number = b[Offset2 + 0], by: number = b[Offset2 + 1], bz: number = b[Offset2 + 2], bw: number = b[Offset2 + 3];\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out[Offset3 + 0] = scale0 * ax + scale1 * bx;\r\n        out[Offset3 + 1] = scale0 * ay + scale1 * by;\r\n        out[Offset3 + 2] = scale0 * az + scale1 * bz;\r\n        out[Offset3 + 3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取指定的两个点组成的线段的角度值。\r\n     * @param\tx0 点一的 X 轴坐标值。\r\n     * @param\ty0 点一的 Y 轴坐标值。\r\n     * @param\tx1 点二的 X 轴坐标值。\r\n     * @param\ty1 点二的 Y 轴坐标值。\r\n     * @return 角度值。\r\n     */\r\n    static getRotation(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.atan2(y1 - y0, x1 - x0) / Math.PI * 180;\r\n    }\r\n\r\n    /**\r\n     * 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @return 如果a等于b 则值为0；如果b>a则值为1；如果b<则值为-1。\r\n     */\r\n    static sortBigFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? 1 : -1;\r\n    }\r\n\r\n    /**\r\n     * 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @return 如果a等于b 则值为0；如果b>a则值为-1；如果b<则值为1。\r\n     */\r\n    static sortSmallFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * 将指定的元素转为数字进行比较。\r\n     * @param\ta 待比较元素。\r\n     * @param\tb 待比较元素。\r\n     * @return b、a转化成数字的差值 (b-a)。\r\n     */\r\n    static sortNumBigFirst(a: any, b: any): number {\r\n        return parseFloat(b) - parseFloat(a);\r\n    }\r\n\r\n    /**\r\n     * 将指定的元素转为数字进行比较。\r\n     * @param\ta 待比较元素。\r\n     * @param\tb 待比较元素。\r\n     * @return a、b转化成数字的差值 (a-b)。\r\n     */\r\n    static sortNumSmallFirst(a: any, b: any): number {\r\n        return parseFloat(a) - parseFloat(b);\r\n    }\r\n\r\n    /**\r\n     * 返回根据对象指定的属性进行排序的比较函数。\r\n     * @param\tkey 排序要依据的元素属性名。\r\n     * @param\tbigFirst 如果值为true，则按照由大到小的顺序进行排序，否则按照由小到大的顺序进行排序。\r\n     * @param\tforceNum 如果值为true，则将排序的元素转为数字进行比较。\r\n     * @return 排序函数。\r\n     */\r\n    static sortByKey(key: string, bigFirst: boolean = false, forceNum: boolean = true): (a: any, b: any) => number {\r\n        var _sortFun: Function;\r\n        if (bigFirst) {\r\n            _sortFun = forceNum ? MathUtil.sortNumBigFirst : MathUtil.sortBigFirst;\r\n        } else {\r\n            _sortFun = forceNum ? MathUtil.sortNumSmallFirst : MathUtil.sortSmallFirst;\r\n        }\r\n        return function (a: any, b: any): number {\r\n            return _sortFun(a[key], b[key]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { MathUtil } from \"../maths/MathUtil\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 节点关键帧动画播放类。解析播放IDE内制作的节点动画。\r\n */\r\nexport class FrameAnimation extends AnimationBase {\r\n\r\n    /**@private */\r\n    private static _sortIndexFun(objpre: any, objnext: any) {\r\n        return objpre.index - objnext.index\r\n    }\r\n\r\n    /**@internal id对象表*/\r\n    _targetDic: any;\r\n    /**@internal 动画数据*/\r\n    _animationData: any;\r\n    /**@private */\r\n    protected _usedFrames: any[];\r\n\r\n    constructor() {\r\n        super();\r\n        if (FrameAnimation._sortIndexFun === undefined) {\r\n            FrameAnimation._sortIndexFun = MathUtil.sortByKey(\"index\", false, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 初始化动画数据\r\n     * @param targetDic 节点ID索引\r\n     * @param animationData 动画数据\r\n     */\r\n    _setUp(targetDic: any, animationData: any): void {\r\n        this._targetDic = targetDic;\r\n        this._animationData = animationData;\r\n        this.interval = 1000 / animationData.frameRate;\r\n        if (animationData.parsed) {\r\n            this._count = animationData.count;\r\n            this._labels = animationData.labels;\r\n            this._usedFrames = animationData.animationNewFrames;\r\n        } else {\r\n            this._usedFrames = [];\r\n            this._calculateDatas();\r\n\r\n            animationData.parsed = true;\r\n            animationData.labels = this._labels;\r\n            animationData.count = this._count;\r\n            animationData.animationNewFrames = this._usedFrames;\r\n        }\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this._targetDic = null;\r\n        this._animationData = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 将节点设置到某一帧的状态\r\n     * @param node 节点ID\r\n     * @param frame\r\n     * @param targetDic 节点表\r\n     */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!targetDic) targetDic = this._targetDic;\r\n        var target: any = targetDic[node.target];\r\n        if (!target) {\r\n            //trace(\"loseTarget:\",node.target);\r\n            return;\r\n        }\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            if (propFrames.length > frame) {\r\n                value = propFrames[frame];\r\n            } else {\r\n                value = propFrames[propFrames.length - 1];\r\n            }\r\n            target[key] = value;\r\n        }\r\n        var funkeys: any[] = node.funkeys;\r\n        len = funkeys.length;\r\n        var funFrames: any;\r\n        if (len == 0) return;\r\n        for (i = 0; i < len; i++) {\r\n            key = funkeys[i];\r\n            funFrames = frames[key];\r\n            if (funFrames[frame] !== undefined) {\r\n                target[key] && target[key].apply(target, funFrames[frame]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算帧数据\r\n     */\r\n    private _calculateDatas(): void {\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length, tNode: any;\r\n        this._count = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            this._calculateKeyFrames(tNode);\r\n        }\r\n        this._count += 1;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算某个节点的帧数据\r\n     */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n        if (!node.frames) node.frames = {};\r\n        if (!node.keys) node.keys = [];\r\n        else node.keys.length = 0;\r\n\r\n        if (!node.funkeys) node.funkeys = [];\r\n        else node.funkeys.length = 0;\r\n\r\n        if (!node.initValues) node.initValues = {};\r\n        for (key in keyFrames) {\r\n            var isFun: boolean = key.indexOf(\"()\") != -1;\r\n            tKeyFrames = keyFrames[key];\r\n            if (isFun) key = key.substr(0, key.length - 2);\r\n            if (!node.frames[key]) {\r\n                node.frames[key] = [];\r\n            }\r\n            if (!isFun) {\r\n                if (this._targetDic && this._targetDic[target]) {\r\n                    node.initValues[key] = this._targetDic[target][key];\r\n                }\r\n\r\n                tKeyFrames.sort(FrameAnimation._sortIndexFun);\r\n                node.keys.push(key);\r\n                this._calculateNodePropFrames(tKeyFrames, node.frames[key], key, target);\r\n            }\r\n            else {\r\n                node.funkeys.push(key);\r\n                var map: any[] = node.frames[key];\r\n                for (var i: number = 0; i < tKeyFrames.length; i++) {\r\n                    var temp: any = tKeyFrames[i];\r\n                    map[temp.index] = temp.value;\r\n                    if (temp.index > this._count) this._count = temp.index;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置节点，使节点恢复到动画之前的状态，方便其他动画控制\r\n     */\r\n    resetNodes(): void {\r\n        if (!this._targetDic) return;\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        var tNode: any;\r\n        var initValues: any;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            initValues = tNode.initValues;\r\n            if (!initValues) continue;\r\n            var target: any = this._targetDic[tNode.target];\r\n            if (!target) continue;\r\n            var key: string;\r\n            for (key in initValues) {\r\n                target[key] = initValues[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算节点某个属性的帧数据\r\n     */\r\n    private _calculateNodePropFrames(keyframes: any[], frames: any[], key: string, target: number): void {\r\n        var i: number, len: number = keyframes.length - 1;\r\n        frames.length = keyframes[len].index + 1;\r\n        for (i = 0; i < len; i++) {\r\n            this._dealKeyFrame(keyframes[i]);\r\n            this._calculateFrameValues(keyframes[i], keyframes[i + 1], frames);\r\n        }\r\n        if (len == 0) {\r\n            frames[0] = keyframes[0].value;\r\n            if (this._usedFrames) this._usedFrames[keyframes[0].index] = true;\r\n        }\r\n        this._dealKeyFrame(keyframes[i]);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _dealKeyFrame(keyFrame: any): void {\r\n        if (keyFrame.label && keyFrame.label != \"\") this.addLabel(keyFrame.label, keyFrame.index);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算两个关键帧直接的帧数据\r\n     */\r\n    private _calculateFrameValues(startFrame: any, endFrame: any, result: any[]): void {\r\n        var i: number, easeFun: Function;\r\n        var start: number = startFrame.index, end: number = endFrame.index;\r\n        var startValue: number = startFrame.value;\r\n        var dValue: number = endFrame.value - startFrame.value;\r\n        var dLen: number = end - start;\r\n        var frames: any[] = this._usedFrames;\r\n        if (end > this._count) this._count = end;\r\n        if (startFrame.tween) {\r\n            easeFun = (Ease as any)[startFrame.tweenMethod];\r\n            if (easeFun == null) easeFun = Ease.linearNone;\r\n            for (i = start; i < end; i++) {\r\n                result[i] = easeFun(i - start, startValue, dValue, dLen);\r\n                if (frames) frames[i] = true;\r\n            }\r\n        } else {\r\n            for (i = start; i < end; i++) {\r\n                result[i] = startValue;\r\n            }\r\n        }\r\n        if (frames) {\r\n            frames[startFrame.index] = true;\r\n            frames[endFrame.index] = true;\r\n        }\r\n        result[endFrame.index] = endFrame.value;\r\n    }\r\n}\r\n","import { FrameAnimation } from \"./FrameAnimation\"\r\nimport { Graphics } from \"./Graphics\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\n\r\n/**\r\n * Graphics动画解析器\r\n * @private\r\n */\r\nexport class GraphicAnimation extends FrameAnimation {\r\n    /**@private */\r\n    animationList: any[];\r\n    /**@private */\r\n    animationDic: any;\r\n    /**@private */\r\n    protected _nodeList: any[];\r\n    /**@private */\r\n    protected _nodeDefaultProps: any;\r\n    /**@private */\r\n    protected _gList: any[];\r\n    /**@private */\r\n    protected _nodeIDAniDic: any = {};\r\n\r\n    /**@private */\r\n    protected static _drawTextureCmd: any[] = [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", -1], [\"height\", -1], [\"pivotX\", 0], [\"pivotY\", 0], [\"scaleX\", 1], [\"scaleY\", 1], [\"rotation\", 0], [\"alpha\", 1], [\"skewX\", 0], [\"skewY\", 0], [\"anchorX\", 0], [\"anchorY\", 0]];\r\n    /**@private */\r\n    protected static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _I: GraphicAnimation;\r\n    /**@private */\r\n    private static _rootMatrix: Matrix;\r\n    /**@private */\r\n    private _rootNode: any;\r\n    /**@private */\r\n    protected _nodeGDic: any;\r\n\r\n    /**@private */\r\n    private _parseNodeList(uiView: any): void {\r\n        if (!this._nodeList) this._nodeList = [];\r\n        this._nodeDefaultProps[uiView.compId] = uiView.props;\r\n        if (uiView.compId) this._nodeList.push(uiView.compId);\r\n        var childs: any[] = uiView.child;\r\n        if (childs) {\r\n            var i: number, len: number = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._parseNodeList(childs[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _calGraphicData(aniData: any): void {\r\n        this._setUp(null, aniData);\r\n        this._createGraphicData();\r\n        if (this._nodeIDAniDic) {\r\n            var key: string;\r\n            for (key in this._nodeIDAniDic) {\r\n                this._nodeIDAniDic[key] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _createGraphicData(): void {\r\n        var gList: any[] = [];\r\n        var i: number, len: number = this.count;\r\n        var animationDataNew: any[] = this._usedFrames;\r\n        if (!animationDataNew) animationDataNew = [];\r\n        var preGraphic: Graphics;\r\n        for (i = 0; i < len; i++) {\r\n            if (animationDataNew[i] || !preGraphic) {\r\n                preGraphic = this._createFrameGraphic(i);\r\n            }\r\n            gList.push(preGraphic);\r\n        }\r\n        this._gList = gList;\r\n    }\r\n\r\n    /**@private */\r\n    protected _createFrameGraphic(frame: number): any {\r\n        var g: Graphics = new Graphics();\r\n        if (!GraphicAnimation._rootMatrix) GraphicAnimation._rootMatrix = new Matrix();\r\n        this._updateNodeGraphic(this._rootNode, frame, GraphicAnimation._rootMatrix, g);\r\n        //_updateNodeGraphic2(_rootNode, frame, g);\r\n        return g;\r\n    }\r\n\r\n    protected _updateNodeGraphic(node: any, frame: number, parentTransfrom: Matrix, g: Graphics, alpha: number = 1): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!tNodeG.resultTransform)\r\n            tNodeG.resultTransform = new Matrix();\r\n        var tResultTransform: Matrix;\r\n        tResultTransform = tNodeG.resultTransform;\r\n        Matrix.mul(tNodeG.transform, parentTransfrom, tResultTransform);\r\n        var tTex: Texture;\r\n        var tGraphicAlpha: number = tNodeG.alpha * alpha;\r\n        if (tGraphicAlpha < 0.01) return;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                if (tResultTransform._checkTransform()) {\r\n                    g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tResultTransform, tGraphicAlpha);\r\n                    tNodeG.resultTransform = null;\r\n                } else {\r\n                    g.drawTexture(tTex, tResultTransform.tx, tResultTransform.ty, tNodeG.width, tNodeG.height, null, tGraphicAlpha);\r\n                }\r\n            }\r\n        }\r\n        var childs: any[] = node.child;\r\n        if (!childs) return;\r\n        var i: number, len: number;\r\n        len = childs.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._updateNodeGraphic(childs[i], frame, tResultTransform, g, tGraphicAlpha);\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param tNodeG \r\n     * @param g \r\n     */\r\n    protected _updateNoChilds(tNodeG: GraphicNode, g: Graphics): void {\r\n        if (!tNodeG.skin) return;\r\n        var tTex: Texture = this._getTextureByUrl(tNodeG.skin);\r\n        if (!tTex) return;\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        if (!onlyTranslate) {\r\n            g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tTransform.clone(), tNodeG.alpha);\r\n        } else {\r\n            g.drawTexture(tTex, tTransform.tx, tTransform.ty, tNodeG.width, tNodeG.height, null, tNodeG.alpha);\r\n        }\r\n    }\r\n\r\n    protected _updateNodeGraphic2(node: any, frame: number, g: Graphics): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!node.child) {\r\n            this._updateNoChilds(tNodeG, g);\r\n            return;\r\n        }\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        var hasTrans: boolean;\r\n        hasTrans = onlyTranslate && (tTransform.tx != 0 || tTransform.ty != 0);\r\n        var ifSave: boolean;\r\n        ifSave = (tTransform._bTransform) || tNodeG.alpha != 1;\r\n        if (ifSave) g.save();\r\n        if (tNodeG.alpha != 1) g.alpha(tNodeG.alpha);\r\n        if (!onlyTranslate) g.transform(tTransform.clone());\r\n        else if (hasTrans) g.translate(tTransform.tx, tTransform.ty);\r\n\r\n        var childs: any[] = node.child;\r\n        var tTex: Texture;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                g.drawImage(tTex, 0, 0, tNodeG.width, tNodeG.height);\r\n            }\r\n        }\r\n\r\n        if (childs) {\r\n            var i: number, len: number;\r\n            len = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._updateNodeGraphic2(childs[i], frame, g);\r\n            }\r\n        }\r\n\r\n        if (ifSave) {\r\n            g.restore();\r\n        } else {\r\n            if (!onlyTranslate) {\r\n                g.transform(tTransform.clone().invert());\r\n            } else if (hasTrans) {\r\n                g.translate(-tTransform.tx, -tTransform.ty);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        this._nodeIDAniDic[node.target] = node;\r\n    }\r\n\r\n    /**@private */\r\n    protected getNodeDataByID(nodeID: number): any {\r\n        return this._nodeIDAniDic[nodeID];\r\n    }\r\n\r\n    /**@private */\r\n    protected _getParams(obj: any, params: any[], frame: number, obj2: any): any[] {\r\n        var rst: any[] = GraphicAnimation._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], frame, params[i][1], obj2);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private */\r\n    private _getObjVar(obj: any, key: string, frame: number, noValue: any, obj2: any): any {\r\n        if (key in obj) {\r\n            var vArr: any[] = obj[key];\r\n            if (frame >= vArr.length) frame = vArr.length - 1;\r\n            return obj[key][frame];\r\n        }\r\n        if (key in obj2) {\r\n            return obj2[key];\r\n        }\r\n        return noValue;\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param nodeID \r\n     * @param frame \r\n     * @param rst \r\n     */\r\n    protected _getNodeGraphicData(nodeID: number, frame: number, rst: GraphicNode): GraphicNode {\r\n        if (!rst)\r\n            rst = new GraphicNode();\r\n        if (!rst.transform) {\r\n            rst.transform = new Matrix();\r\n        } else {\r\n            rst.transform.identity();\r\n        }\r\n\r\n        var node: any = this.getNodeDataByID(nodeID);\r\n        if (!node) return rst;\r\n        var frameData: any = node.frames;\r\n        var params: any[] = this._getParams(frameData, GraphicAnimation._drawTextureCmd, frame, this._nodeDefaultProps[nodeID]);\r\n        var url: string = params[0];\r\n        var width: number, height: number;\r\n        var px: number = params[5], py: number = params[6];\r\n        var aX: number = params[13], aY: number = params[14];\r\n        var sx: number = params[7], sy: number = params[8];\r\n        var rotate: number = params[9];\r\n        var skewX: number = params[11], skewY: number = params[12]\r\n        width = params[3];\r\n        height = params[4];\r\n        if (width == 0 || height == 0) url = null;\r\n        if (width == -1) width = 0;\r\n        if (height == -1) height = 0;\r\n        var tex: Texture;\r\n        rst.skin = url;\r\n        rst.width = width;\r\n        rst.height = height;\r\n        if (url) {\r\n            tex = this._getTextureByUrl(url);\r\n            if (tex) {\r\n                if (!width)\r\n                    width = tex.sourceWidth;\r\n                if (!height)\r\n                    height = tex.sourceHeight;\r\n            } else {\r\n                console.warn(\"lost skin:\", url, \",you may load pics first\");\r\n            }\r\n        }\r\n\r\n        rst.alpha = params[10];\r\n\r\n        var m: Matrix = rst.transform;\r\n        if (aX != 0) {\r\n            px = aX * width;\r\n        }\r\n        if (aY != 0) {\r\n            py = aY * height;\r\n        }\r\n        if (px != 0 || py != 0) {\r\n            m.translate(-px, -py);\r\n        }\r\n        var tm: Matrix = null;\r\n        if (rotate || sx !== 1 || sy !== 1 || skewX || skewY) {\r\n            tm = GraphicAnimation._tempMt;\r\n            tm.identity();\r\n            tm._bTransform = true;\r\n            var skx: number = (rotate - skewX) * 0.0174532922222222; //laya.CONST.PI180;\r\n            var sky: number = (rotate + skewY) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            tm.a = sx * cx;\r\n            tm.b = sx * ssx;\r\n            tm.c = -sy * cy;\r\n            tm.d = sy * ssy;\r\n            tm.tx = tm.ty = 0;\r\n        }\r\n        if (tm) {\r\n            m = Matrix.mul(m, tm, m);\r\n        }\r\n\r\n        m.translate(params[1], params[2]);\r\n\r\n        return rst;\r\n    }\r\n    private static _tempMt: Matrix = new Matrix();\r\n\r\n    /**@private */\r\n    protected _getTextureByUrl(url: string): any {\r\n        return Loader.getRes(url);\r\n    }\r\n\r\n    /**@private */\r\n    setAniData(uiView: any, aniName: string = null): void {\r\n        if (uiView.animations) {\r\n            this._nodeDefaultProps = {};\r\n            this._nodeGDic = {};\r\n            if (this._nodeList) this._nodeList.length = 0;\r\n            this._rootNode = uiView;\r\n            this._parseNodeList(uiView);\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                this._labels = null;\r\n                if (aniName && aniName != tAniO.name) {\r\n                    continue;\r\n                }\r\n                if (!tAniO)\r\n                    continue;\r\n                try {\r\n                    this._calGraphicData(tAniO);\r\n                } catch (e) {\r\n                    console.warn(\"parse animation fail:\" + tAniO.name + \",empty animation created\");\r\n                    this._gList = [];\r\n                }\r\n                var frameO: any = {};\r\n                frameO.interval = 1000 / tAniO[\"frameRate\"];\r\n                frameO.frames = this._gList;\r\n                frameO.labels = this._labels;\r\n                frameO.name = tAniO.name;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n        GraphicAnimation._temParam.length = 0;\r\n\r\n    }\r\n\r\n    parseByData(aniData: any): any {\r\n        var rootNode: any, aniO: any;\r\n        rootNode = aniData.nodeRoot;\r\n        aniO = aniData.aniO;\r\n        delete aniData.nodeRoot;\r\n        delete aniData.aniO;\r\n        this._nodeDefaultProps = {};\r\n        this._nodeGDic = {};\r\n        if (this._nodeList) this._nodeList.length = 0;\r\n        this._rootNode = rootNode;\r\n        this._parseNodeList(rootNode);\r\n        this._labels = null;\r\n        try {\r\n            this._calGraphicData(aniO);\r\n        } catch (e) {\r\n            console.warn(\"parse animation fail:\" + aniO.name + \",empty animation created\");\r\n            this._gList = [];\r\n        }\r\n        var frameO: any = aniData;\r\n        frameO.interval = 1000 / aniO[\"frameRate\"];\r\n        frameO.frames = this._gList;\r\n        frameO.labels = this._labels;\r\n        frameO.name = aniO.name;\r\n        return frameO;\r\n    }\r\n\r\n    /**@private */\r\n    setUpAniData(uiView: any): void {\r\n        if (uiView.animations) {\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                if (!tAniO) continue;\r\n                var frameO: any = {};\r\n                frameO.name = tAniO.name;\r\n                frameO.aniO = tAniO;\r\n                frameO.nodeRoot = uiView;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _clear(): void {\r\n        this.animationList = null;\r\n        this.animationDic = null;\r\n        this._gList = null;\r\n        this._nodeGDic = null;\r\n    }\r\n\r\n    static parseAnimationByData(animationObject: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        var rst: any;\r\n        rst = GraphicAnimation._I.parseByData(animationObject);\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n\r\n    static parseAnimationData(aniData: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        GraphicAnimation._I.setUpAniData(aniData);\r\n        var rst: any;\r\n        rst = {};\r\n        rst.animationList = GraphicAnimation._I.animationList;\r\n        rst.animationDic = GraphicAnimation._I.animationDic;\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n}\r\n\r\n\r\n/**@internal */\r\nclass GraphicNode {\r\n    skin: string;\r\n    transform: Matrix;\r\n    resultTransform: Matrix;\r\n    width: number;\r\n    height: number;\r\n    alpha: number = 1;\r\n}\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Loader } from \"../net/Loader\"\r\nimport { GraphicAnimation } from \"./GraphicAnimation\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Animation</code> 是Graphics动画类。实现了基于Graphics的动画创建、播放、控制接口。</p>\r\n * <p>本类使用了动画模版缓存池，它以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\r\n * <p>使用set source、loadImages(...)、loadAtlas(...)、loadAnimation(...)方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\r\n * @example <caption>以下示例代码，创建了一个 <code>Text</code> 实例。</caption>\r\n * package\r\n * {\r\n * \timport laya.display.Animation;\r\n * \timport laya.net.Loader;\r\n * \timport laya.utils.Handler;\r\n * \tpublic class Animation_Example\r\n * \t{\r\n * \t\tpublic function Animation_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tinit();//初始化\r\n * \t\t}\r\n * \t\tprivate function init():void\r\n * \t\t{\r\n * \t\t\tvar animation:Animation = new Animation();//创建一个 Animation 类的实例对象 animation 。\r\n * \t\t\tanimation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n * \t\t\tanimation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n * \t\t\tanimation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n * \t\t\tanimation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n * \t\t\tanimation.play();//播放动画。\r\n * \t\t\tLaya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n * \t\t}\r\n * \t}\r\n * }\r\n *\r\n * @example\r\n * Animation_Example();\r\n * function Animation_Example(){\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     init();//初始化\r\n * }\r\n * function init()\r\n * {\r\n *     var animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\r\n *     animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n *     animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *     animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *     animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n *     animation.play();//播放动画。\r\n *     Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n * }\r\n *\r\n * @example\r\n * import Animation = laya.display.Animation;\r\n * class Animation_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.init();\r\n *     }\r\n *     private init(): void {\r\n *         var animation:Animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\r\n *         animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n *         animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *         animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *         animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n *         animation.play();//播放动画。\r\n *         Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n *     }\r\n * }\r\n * new Animation_Example();\r\n */\r\nexport class Animation extends AnimationBase {\r\n    /**\r\n     * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\r\n     * <p>使用loadImages(...)、loadAtlas(...)、loadAnimation(...)、set source方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\r\n     */\r\n    static framesMap: any = {};\r\n    /**@private */\r\n    protected _frames: any[];\r\n\r\n    private _source: string;\r\n\r\n    private _autoPlay = false;\r\n\r\n\r\n    /**\r\n     * 创建一个新的 <code>Animation</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setControlNode(this);\r\n    }\r\n\r\n    /** @inheritDoc\r\n     *  @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.stop();\r\n        super.destroy(destroyChild);\r\n        this._frames = null;\r\n        this._labels = null;\r\n    }\r\n\r\n    /**\r\n     * <p>开始播放动画。会在动画模版缓存池中查找key值为name的动画模版，存在则用此动画模版初始化当前序列帧， 如果不存在，则使用当前序列帧。</p>\r\n     * <p>play(...)方法被设计为在创建实例后的任何时候都可以被调用，调用后就处于播放状态，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否处于播放状态，如果是，则开始播放。</p>\r\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\r\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param\tloop\t（可选）是否循环播放。\r\n     * @param\tname\t（可选）动画模板在动画模版缓存池中的key，也可认为是动画名称。如果name为空，则播放当前动画序列帧；如果不为空，则在动画模版缓存池中寻找key值为name的动画模版，如果存在则用此动画模版初始化当前序列帧并播放，如果不存在，则仍然播放当前动画序列帧；如果没有当前动画的帧数据，则不播放，但该实例仍然处于播放状态。\r\n     * @override\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (name) this._setFramesFromCache(name, true);\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    protected _setFramesFromCache(name: string, showWarn: boolean = false): boolean {\r\n        if (this._url) name = this._url + \"#\" + name;\r\n        if (name && Animation.framesMap[name]) {\r\n            var tAniO: any = Animation.framesMap[name];\r\n            if (tAniO instanceof Array) {\r\n                this._frames = Animation.framesMap[name];\r\n                this._count = this._frames.length;\r\n            } else {\r\n                if (tAniO.nodeRoot) {\r\n                    //如果动画数据未解析过,则先进行解析\r\n                    Animation.framesMap[name] = GraphicAnimation.parseAnimationByData(tAniO);\r\n                    tAniO = Animation.framesMap[name];\r\n                }\r\n                this._frames = tAniO.frames;\r\n                this._count = this._frames.length;\r\n                //如果读取的是动画配置信息，帧率按照动画设置的帧率播放\r\n                if (!this._frameRateChanged) this._interval = tAniO.interval;\r\n                this._labels = this._copyLabels(tAniO.labels);\r\n            }\r\n            return true;\r\n        } else {\r\n            if (showWarn) console.log(\"ani not found:\", name);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**@private */\r\n    private _copyLabels(labels: any): any {\r\n        if (!labels) return null;\r\n        var rst: any;\r\n        rst = {};\r\n        var key: string;\r\n        for (key in labels) {\r\n            rst[key] = Utils.copyArray([], labels[key]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private \r\n    *  @override\r\n    */\r\n    protected _frameLoop(): void {\r\n        if (this._visible && this._style.alpha > 0.01 && this._frames) {\r\n            super._frameLoop();\r\n        }\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (this._frames) this.graphics = this._frames[value];\r\n    }\r\n\r\n    /**\r\n     * 当前动画的帧图像数组。本类中，每个帧图像是一个Graphics对象，而动画播放就是定时切换Graphics对象的过程。\r\n     */\r\n    get frames(): any[] {\r\n        return this._frames;\r\n    }\r\n\r\n    set frames(value: any[]) {\r\n        this._frames = value;\r\n        if (value) {\r\n            this._count = value.length;\r\n            //if (_isPlaying) play(_index, loop, _actionName);\r\n            if (this._actionName) this._setFramesFromCache(this._actionName, true);\r\n            this.index = this._index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>动画数据源。</p>\r\n     * <p>类型如下：<br/>\r\n     * 1. LayaAir IDE动画文件路径：使用此类型需要预加载所需的图集资源，否则会创建失败，如果不想预加载或者需要创建完毕的回调，请使用loadAnimation(...)方法；<br/>\r\n     * 2. 图集路径：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存或者创建完毕的回调，请使用loadAtlas(...)方法；<br/>\r\n     * 3. 图片路径集合：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存，请使用loadImages(...)方法。</p>\r\n     * @param value\t数据源。比如：图集：\"xx/a1.atlas\"；图片集合：\"a1.png,a2.png,a3.png\"；LayaAir IDE动画\"xx/a1.ani\"。\r\n     */\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n\r\n        if (!value)\r\n            this.clear();\r\n        else if (value.indexOf(\".ani\") > -1)\r\n            this.loadAnimation(value);\r\n        else if (value.startsWith(\"res://\") || value.indexOf(\".json\") > -1 || value.indexOf(\"als\") > -1 || value.indexOf(\"atlas\") > -1)\r\n            this.loadAtlas(value);\r\n        else\r\n            this.loadImages(value.split(\",\"));\r\n    }\r\n\r\n    /**\r\n     * 是否自动播放，默认为false。如果设置为true，则动画被创建并添加到舞台后自动播放。\r\n     */\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value)\r\n            this.play();\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @override\r\n     */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this.stop();\r\n        this.graphics = null;\r\n        this._frames = null;\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图片集合并创建动画模版。注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadImages(...).loadImages(...).play(...);。</p>\r\n     * @param\turls\t\t图片路径集合。需要创建动画模版时，会以此为数据源。参数形如：[url1,url2,url3,...]。\r\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回Animation对象本身。\r\n     */\r\n    loadImages(urls: any[], cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(urls, cacheName);\r\n        }\r\n        if (!this._isPlaying && this._autoPlay)\r\n            this.play();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图集并创建动画模版。</p>\r\n     * <p>注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAtlas(...).loadAtlas(...).play(...);。</p>\r\n     * @param\turl\t\t\t图集路径。需要创建动画模版时，会以此为数据源。\r\n     * @param\tloaded\t\t（可选）使用指定图集初始化动画完毕的回调。\r\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回动画本身。\r\n     */\r\n    loadAtlas(url: string, loaded: Handler = null, cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            let onLoaded = (loadUrl: string) => {\r\n                if (url === loadUrl) {\r\n                    this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(url, cacheName);\r\n                    if (!this._isPlaying && this._autoPlay)\r\n                        this.play();\r\n                    if (loaded) loaded.run();\r\n                }\r\n            }\r\n            if (Loader.getAtlas(url)) onLoaded(url);\r\n            else ILaya.loader.load(url, Handler.create(null, onLoaded, [url]), null, Loader.ATLAS);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>加载并解析由LayaAir IDE制作的动画文件，此文件中可能包含多个动画。默认帧率为在IDE中设计的帧率，如果调用过set interval，则使用此帧间隔对应的帧率。加载后创建动画模版，并缓存到动画模版缓存池，key \"url#动画名称\" 对应相应动画名称的动画模板，key \"url#\" 对应动画模版集合的默认动画模版。</p>\r\n     * <p>注意：如果调用本方法前，还没有预加载动画使用的图集，请将atlas参数指定为对应的图集路径，否则会导致动画创建失败。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAnimation(...).loadAnimation(...).play(...);。</p>\r\n     * @param\turl \t动画文件路径。可由LayaAir IDE创建并发布。\r\n     * @param\tloaded\t（可选）使用指定动画资源初始化动画完毕的回调。\r\n     * @param\tatlas\t（可选）动画用到的图集地址（可选）。\r\n     * @return \t返回动画本身。\r\n     * @deprecated\r\n     */\r\n    loadAnimation(url: string, loaded: Handler = null, atlas: string = null): Animation {\r\n        this._url = url;\r\n        var _this: Animation = this;\r\n        if (!this._actionName) this._actionName = \"\";\r\n        if (!_this._setFramesFromCache(this._actionName)) {\r\n            if (!atlas || Loader.getAtlas(atlas)) {\r\n                this._loadAnimationData(url, loaded, atlas);\r\n            } else {\r\n                ILaya.loader.load(atlas, Handler.create(this, this._loadAnimationData, [url, loaded, atlas]), null, Loader.ATLAS)\r\n            }\r\n        } else {\r\n            _this._setFramesFromCache(this._actionName, true);\r\n            this.index = 0;\r\n            if (loaded) loaded.run();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**@private */\r\n    private _loadAnimationData(url: string, loaded: Handler = null, atlas: string = null): void {\r\n        if (atlas && !Loader.getAtlas(atlas)) {\r\n            console.warn(\"atlas load fail:\" + atlas);\r\n            return;\r\n        }\r\n\r\n        ILaya.loader.fetch(url, \"json\").then(data => {\r\n            if (this._url !== url)\r\n                return;\r\n\r\n            if (!data) {\r\n                // 如果getRes失败了，有可能是相同的文件已经被删掉了，因为下面在用完后会立即删除\r\n                // 这时候可以取frameMap中去找，如果找到了，走正常流程。--王伟\r\n                if (Animation.framesMap[url + \"#\"]) {\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                    this._resumePlay();\r\n                    if (loaded) loaded.run();\r\n                }\r\n                return;\r\n            }\r\n\r\n            let tAniO: any;\r\n            if (!Animation.framesMap[url + \"#\"]) {\r\n                //此次解析仅返回动画数据，并不真正解析动画graphic数据\r\n                let aniData: any = GraphicAnimation.parseAnimationData(data);\r\n                if (!aniData) return;\r\n                //缓存动画数据\r\n                let aniList: any[] = aniData.animationList;\r\n                let len: number = aniList.length;\r\n                let defaultO: any;\r\n                for (let i = 0; i < len; i++) {\r\n                    tAniO = aniList[i];\r\n                    Animation.framesMap[url + \"#\" + tAniO.name] = tAniO;\r\n                    if (!defaultO) defaultO = tAniO;\r\n                }\r\n                if (defaultO) {\r\n                    Animation.framesMap[url + \"#\"] = defaultO;\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                }\r\n                this._resumePlay();\r\n            } else {\r\n                this._setFramesFromCache(this._actionName, true);\r\n                this.index = 0;\r\n                this._resumePlay();\r\n            }\r\n            if (loaded) loaded.run();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * <p>创建动画模板，多个动画可共享同一份动画模板，而不必每次都创建一份新的，从而节省创建Graphics集合的开销。</p>\r\n     * @param\turl\t\t\t图集路径或者图片路径数组。如果是图集路径，需要相应图集已经被预加载，如果没有预加载，会导致创建失败。\r\n     * @param\tname\t\t动画模板在动画模版缓存池中的key。如果不为空，则以此为key缓存动画模板，否则不缓存。\r\n     * @return\t动画模板。\r\n     */\r\n    static createFrames(url: string | string[], name: string): any[] {\r\n        var arr: any[];\r\n        if (typeof (url) == 'string') {\r\n            var atlas: AtlasResource = Loader.getAtlas(<string>url);\r\n            if (atlas && atlas.frames.length) {\r\n                let frames = atlas.frames;\r\n                arr = [];\r\n                for (var i: number = 0, n: number = frames.length; i < n; i++) {\r\n                    var g: Graphics = new Graphics();\r\n                    g.drawImage(frames[i], 0, 0);\r\n                    arr.push(g);\r\n                }\r\n            }\r\n        } else if (url instanceof Array) {\r\n            arr = [];\r\n            for (i = 0, n = url.length; i < n; i++) {\r\n                g = new Graphics();\r\n                g.loadImage(url[i], 0, 0);\r\n                arr.push(g);\r\n            }\r\n        }\r\n        if (name) Animation.framesMap[name] = arr;\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * <p>从动画模版缓存池中清除指定key值的动画数据。</p>\r\n     * <p>开发者在调用创建动画模版函数时，可以手动指定此值。而如果是由LayaAir IDE创建的动画集，解析后的key格式为：\"url#\"：表示动画集的默认动画模版，如果以此值为参数，会清除整个动画集数据；\"url#aniName\"：表示相应名称的动画模版。</p>\r\n     * @param key 动画模板在动画模版缓存池中的key。\r\n     */\r\n    static clearCache(key: string): void {\r\n        var cache: any = Animation.framesMap;\r\n        var val: string;\r\n        var key2: string = key + \"#\";\r\n        for (val in cache) {\r\n            if (val === key || val.indexOf(key2) === 0) {\r\n                delete Animation.framesMap[val];\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    onAfterDeserialize(): void {\r\n        super.onAfterDeserialize();\r\n\r\n        if ((<any>this).images) {\r\n            if (!this._source)\r\n                this.loadImages((<any>this).images);\r\n            delete (<any>this).images;\r\n        }\r\n    }\r\n}\r\n\r\n","import { Texture } from \"../resource/Texture\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * <code>BitmapFont</code> 是位图字体类，用于定义位图字体信息。\r\n * 字体制作及使用方法，请参考文章\r\n * @see http://ldc2.layabox.com/doc/?nav=ch-js-1-2-5\r\n */\r\nexport class BitmapFont extends Resource {\r\n    texture: Texture;\r\n    dict: Record<string, BMGlyph> = {};\r\n\r\n    padding: any[];\r\n\r\n    /**当前位图字体字号，使用时，如果字号和设置不同，并且autoScaleSize=true，则按照设置字号比率进行缩放显示。*/\r\n    fontSize: number = 12;\r\n    /**表示是否根据实际使用的字体大小缩放位图字体大小。*/\r\n    autoScaleSize: boolean = false;\r\n    tint: boolean = true;\r\n    maxWidth: number = 0;\r\n    lineHeight: number = 12;\r\n    letterSpacing = 0;\r\n\r\n    /**\r\n     * 通过指定位图字体文件路径，加载位图字体文件，加载完成后会自动解析。\r\n     * @param\tpath\t\t位图字体文件的路径。\r\n     * @param\tcomplete\t加载并解析完成的回调。\r\n     */\r\n    static loadFont(path: string, complete: Handler): void {\r\n        ILaya.loader.load(path, Loader.FONT).then(font => {\r\n            complete && complete.runWith(font);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super(false);\r\n    }\r\n\r\n    /**\r\n     * 解析字体文件。\r\n     * @param\txml\t\t\t字体文件XML。\r\n     * @param\ttexture\t\t字体的纹理。\r\n     */\r\n    parseFont(xml: XML, texture: Texture): void {\r\n        if (xml == null || texture == null) return;\r\n        this.texture = texture;\r\n        texture._addReference();\r\n\r\n        let scale: number = 1;\r\n        let info = xml.getNode(\"info\");\r\n        this.fontSize = info.getAttrInt(\"size\", 12);\r\n        this.autoScaleSize = info.getAttrBool(\"autoScaleSize\");\r\n        this.lineHeight = info.getAttrInt(\"lineHeight\", this.fontSize);\r\n        if (this.lineHeight == 0)\r\n            this.lineHeight = this.fontSize;\r\n\r\n        let padding: string = info.getAttrString(\"padding\", \"\");\r\n        let paddingArray: any[] = padding.split(\",\");\r\n        this.padding = [parseInt(paddingArray[0]), parseInt(paddingArray[1]), parseInt(paddingArray[2]), parseInt(paddingArray[3])];\r\n\r\n        let chars = xml.getNode(\"chars\")?.elements(\"char\") || [];\r\n        let maxWidth = 0;\r\n        let dict = this.dict;\r\n        for (let i = 0, n = chars.length; i < n; i++) {\r\n            let ct = chars[i];\r\n            let id = ct.getAttrInt(\"id\");\r\n\r\n            let xOffset = ct.getAttrInt(\"xoffset\") / scale;\r\n            let yOffset = ct.getAttrInt(\"yoffset\") / scale;\r\n            let advance = ct.getAttrInt(\"xadvance\") / scale;\r\n\r\n            let x = ct.getAttrInt(\"x\");\r\n            let y = ct.getAttrInt(\"y\");\r\n            let width = ct.getAttrInt(\"width\");\r\n            let height = ct.getAttrInt(\"height\");\r\n\r\n            let tex = Texture.create(texture, x, y, width, height, xOffset, yOffset);\r\n\r\n            if (advance == 0)\r\n                advance = width;\r\n            advance += this.letterSpacing;\r\n            maxWidth = Math.max(maxWidth, advance);\r\n\r\n            dict[id] = { x: 0, y: 0, width, height, advance, texture: tex };\r\n        }\r\n\r\n        if (maxWidth > 0)\r\n            this.maxWidth = maxWidth;\r\n        else\r\n            this.maxWidth = this.fontSize;\r\n\r\n        if (!dict[32]) //space\r\n            dict[32] = { x: 0, y: 0, advance: Math.floor(this.fontSize * 0.5) + this.letterSpacing };\r\n    }\r\n\r\n    /**\r\n     * 销毁位图字体，调用Text.unregisterBitmapFont 时，默认会销毁。\r\n     */\r\n    protected _disposeResource(): void {\r\n        if (this.texture) {\r\n            for (let k in this.dict) {\r\n                this.dict[k].texture?.destroy();\r\n            }\r\n            this.texture._removeReference();\r\n            this.dict = null;\r\n            this.texture = null;\r\n            this.padding = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取指定文本内容的宽度。\r\n     * @param\ttext 文本内容。\r\n     * @return  宽度。\r\n     */\r\n    getTextWidth(text: string, fontSize?: number): number {\r\n        let w = 0;\r\n        for (let i = 0, n = text.length; i < n; i++) {\r\n            let g = this.dict[text.charCodeAt(i)];\r\n            if (g) {\r\n                let scale = this.autoScaleSize ? (fontSize / this.fontSize) : 1;\r\n                w += Math.round(g.advance * scale);\r\n            }\r\n        }\r\n        return w;\r\n    }\r\n\r\n    /**\r\n     * 获取最大字符宽度。\r\n     */\r\n    getMaxWidth(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.maxWidth * (fontSize / this.fontSize));\r\n        else\r\n            return this.maxWidth;\r\n    }\r\n\r\n    /**\r\n     * 获取最大字符高度。\r\n     */\r\n    getMaxHeight(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.lineHeight * (fontSize / this.fontSize));\r\n        else\r\n            return this.lineHeight;\r\n    }\r\n}\r\n\r\nexport interface BMGlyph {\r\n    x?: number;\r\n    y?: number;\r\n    width?: number;\r\n    height?: number;\r\n    advance?: number;\r\n    texture?: Texture;\r\n}","import { FrameAnimation } from \"./FrameAnimation\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * <p> 动效模板。用于为指定目标对象添加动画效果。每个动效有唯一的目标对象，而同一个对象可以添加多个动效。 当一个动效开始播放时，其他动效会自动停止播放。</p>\r\n * <p> 可以通过LayaAir IDE创建。 </p>\r\n */\r\nexport class EffectAnimation extends FrameAnimation {\r\n    /**\r\n     * @private\r\n     * 动效开始事件。\r\n     */\r\n    private static EFFECT_BEGIN: string = \"effectbegin\";\r\n\r\n    /**@internal */\r\n    private _target: any;\r\n    /**@internal */\r\n    private _playEvent: string;\r\n    /**@internal */\r\n    private _initData: any = {};\r\n    /**@internal */\r\n    private _aniKeys: any[];\r\n    /**@internal */\r\n    private _effectClass: new () => any;\r\n\r\n    /**\r\n     * 本实例的目标对象。通过本实例控制目标对象的属性变化。\r\n     * @param v 指定的目标对象。\r\n     */\r\n    set target(v: any) {\r\n        if (this._target) this._target.off(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._target = v;\r\n        if (this._target) this._target.on(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._addEvent();\r\n    }\r\n\r\n    get target(): any {\r\n        return this._target;\r\n    }\r\n\r\n    /**@private */\r\n    private _onOtherBegin(effect: any): void {\r\n        if (effect === this) return;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * 设置开始播放的事件。本实例会侦听目标对象的指定事件，触发后播放相应动画效果。\r\n     * @param event\r\n     */\r\n    set playEvent(event: string) {\r\n        this._playEvent = event;\r\n        if (!event) return;\r\n        this._addEvent();\r\n    }\r\n\r\n    /**@internal */\r\n    private _addEvent(): void {\r\n        if (!this._target || !this._playEvent) return;\r\n        this._setControlNode(this._target);\r\n        this._target.on(this._playEvent, this, this._onPlayAction);\r\n    }\r\n\r\n    /**@internal */\r\n    private _onPlayAction(): void {\r\n        this.play(0, false);\r\n    }\r\n    /**\r\n     * @param start \r\n     * @param loop \r\n     * @param name \r\n     * @override\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (!this._target)\r\n            return;\r\n        this._target.event(EffectAnimation.EFFECT_BEGIN, [this]);\r\n        this._recordInitData();\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    private _recordInitData(): void {\r\n        if (!this._aniKeys) return;\r\n        var i: number, len: number;\r\n        len = this._aniKeys.length;\r\n        var key: string;\r\n        for (i = 0; i < len; i++) {\r\n            key = this._aniKeys[i];\r\n            this._initData[key] = this._target[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置提供数据的类。\r\n     * @param classStr 类路径\r\n     */\r\n    set effectClass(classStr: string) {\r\n        this._effectClass = ClassUtils.getClass(classStr);\r\n        if (this._effectClass) {\r\n            var uiData: any = (this._effectClass as any)[\"uiView\"];\r\n            if (uiData) {\r\n                var aniData: any[] = uiData[\"animations\"];\r\n                if (aniData && aniData[0]) {\r\n                    var data: any = aniData[0];\r\n                    this._setUp({}, data);\r\n                    if (data.nodes && data.nodes[0]) {\r\n                        this._aniKeys = data.nodes[0].keys;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置动画数据。\r\n     * @param uiData\r\n     */\r\n    set effectData(uiData: any) {\r\n        if (uiData) {\r\n            var aniData: any[] = uiData[\"animations\"];\r\n            if (aniData && aniData[0]) {\r\n                var data: any = aniData[0];\r\n                this._setUp({}, data);\r\n                if (data.nodes && data.nodes[0]) {\r\n                    this._aniKeys = data.nodes[0].keys;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        len = len > 1 ? 1 : len;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n    */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!this._target) return;\r\n        var target: any = this._target;\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        var secondFrames: any = node.secondFrames;\r\n        var tSecondFrame: number;\r\n        var easeFun: Function;\r\n        var tKeyFrames: any[];\r\n        var startFrame: any;\r\n        var endFrame: any;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            tSecondFrame = secondFrames[key];\r\n            if (tSecondFrame == -1) {\r\n                value = this._initData[key];\r\n            } else {\r\n                if (frame < tSecondFrame) {\r\n                    tKeyFrames = node.keyframes[key];\r\n                    startFrame = tKeyFrames[0];\r\n                    if (startFrame.tween) {\r\n                        easeFun = (Ease as any)[startFrame.tweenMethod];\r\n                        if (easeFun == null) easeFun = Ease.linearNone;\r\n                        endFrame = tKeyFrames[1];\r\n                        value = easeFun(frame, this._initData[key], endFrame.value - this._initData[key], endFrame.index);\r\n                    } else {\r\n                        value = this._initData[key];\r\n                    }\r\n\r\n                } else {\r\n                    if (propFrames.length > frame) value = propFrames[frame];\r\n                    else value = propFrames[propFrames.length - 1];\r\n                }\r\n            }\r\n            target[key] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n\r\n        var secondFrames: any = {};\r\n        node.secondFrames = secondFrames;\r\n        for (key in keyFrames) {\r\n            tKeyFrames = keyFrames[key];\r\n            if (tKeyFrames.length <= 1) secondFrames[key] = -1;\r\n            else secondFrames[key] = tKeyFrames[1].index;\r\n        }\r\n    }\r\n}","/**\r\n * 文本的样式类\r\n */\r\nexport class TextStyle {\r\n    /**字体*/\r\n    font: string;\r\n    /**字号*/\r\n    fontSize: number;\r\n    /**文字颜色*/\r\n    color: string;\r\n    /**是否为粗体*/\r\n    bold: boolean;\r\n    /**\r\n     * 表示使用此文本格式的文本是否为斜体。\r\n     * @default false\r\n     */\r\n    italic: boolean;\r\n\r\n    /**是否显示下划线*/\r\n    underline: boolean;\r\n    /**下划线颜色*/\r\n    underlineColor: string;\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的水平对齐方式。</p>\r\n     * @default  \"left\"\r\n     */\r\n    align: string;\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的垂直对齐方式。</p>\r\n     * @default  \"top\"\r\n     */\r\n    valign: string;\r\n\r\n    /**\r\n     * <p>垂直行间距（以像素为单位）</p>\r\n     */\r\n    leading: number;\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @default 0\r\n     */\r\n    stroke: number;\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * @default \"#000000\";\r\n     */\r\n    strokeColor: string;\r\n\r\n    strikethrough: boolean;\r\n\r\n    constructor() {\r\n        this.font = \"\";\r\n        this.fontSize = 12;\r\n        this.color = \"#000000\";\r\n        this.bold = false;\r\n        this.italic = false;\r\n        this.underline = false;\r\n        this.underlineColor = null;\r\n        this.align = \"left\";\r\n        this.valign = \"top\";\r\n        this.leading = 2;\r\n        this.stroke = 0;\r\n        this.strokeColor = \"#000000\";\r\n    }\r\n}\r\n\r\n","import { XMLIterator } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { TextStyle } from \"../display/css/TextStyle\";\r\nimport { Pool } from \"../utils/Pool\";\r\n\r\nexport enum HtmlElementType {\r\n    Text,\r\n    Link,\r\n    Image,\r\n    Input,\r\n    Select,\r\n    Object,\r\n\r\n    //internal\r\n    LinkEnd,\r\n}\r\n\r\nexport class HtmlElement {\r\n    public type: HtmlElementType;\r\n    public name: string;\r\n    public text: string;\r\n    public style: TextStyle;\r\n\r\n    public obj: IHtmlObject;\r\n    public space: number;\r\n\r\n    public _attrs: Record<string, any>;\r\n\r\n    public constructor() {\r\n        this.style = new TextStyle();\r\n    }\r\n\r\n    public getAttr(attrName: string): any {\r\n        if (this._attrs == null)\r\n            return null;\r\n\r\n        return this._attrs[attrName];\r\n    }\r\n\r\n    public setAttr(attrName: string, attrValue: any) {\r\n        if (this._attrs == null)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public fetchAttributes() {\r\n        this._attrs = Object.assign({}, XMLIterator.attributes);\r\n    }\r\n\r\n    public reset() {\r\n        this.name = null;\r\n        this.text = null;\r\n        if (this.obj) {\r\n            this.obj.release();\r\n            Pool.recoverByClass(this.obj);\r\n            this.obj = null;\r\n        }\r\n        this._attrs = null;\r\n    }\r\n\r\n    static pool: Array<HtmlElement> = [];\r\n    static getFromPool(type: HtmlElementType): HtmlElement {\r\n        let ele: HtmlElement;\r\n        if (this.pool.length > 0)\r\n            ele = this.pool.pop();\r\n        else\r\n            ele = new HtmlElement();\r\n        ele.type = type;\r\n        if (ele.type != HtmlElementType.Text && !ele._attrs)\r\n            ele._attrs = {};\r\n        return ele;\r\n    }\r\n\r\n    static returnToPool(ele: HtmlElement | Array<HtmlElement>) {\r\n        if (Array.isArray(ele)) {\r\n            for (let e of ele)\r\n                e.reset();\r\n            this.pool.push(...ele);\r\n            ele.length = 0;\r\n        }\r\n        else {\r\n            ele.reset();\r\n            this.pool.push(ele);\r\n        }\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\nexport class HtmlImage implements IHtmlObject {\r\n    public readonly obj: Sprite;\r\n\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n\r\n    public constructor() {\r\n        this.obj = new Sprite();\r\n    }\r\n\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get width(): number {\r\n        return this.obj.width;\r\n    }\r\n\r\n    public get height(): number {\r\n        return this.obj.height;\r\n    }\r\n\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this.obj);\r\n\r\n        let src = this._element.getAttrString(\"src\");\r\n        this.loadTexture(src);\r\n    }\r\n\r\n    protected loadTexture(src: string) {\r\n        let width = this._element.getAttrInt(\"width\", -1);\r\n        let height = this._element.getAttrInt(\"height\", -1);\r\n        if (width != -1)\r\n            this.obj.width = width;\r\n        if (height != -1)\r\n            this.obj.height = height;\r\n\r\n        let tex = Loader.getRes(src);\r\n        if (tex) {\r\n            this.obj.texture = tex;\r\n            if (width == -1)\r\n                this.obj.width = tex.sourceWidth;\r\n            if (height == -1)\r\n                this.obj.height = tex.sourceHeight;\r\n        }\r\n        else {\r\n            ILaya.loader.load(src, { silent: true }).then(tex => {\r\n                let w = this.obj.width;\r\n                let h = this.obj.height;\r\n                this.obj.texture = tex;\r\n                if (width == -1)\r\n                    this.obj.width = tex ? tex.sourceWidth : 0;\r\n                if (height == -1)\r\n                    this.obj.height = tex ? tex.sourceHeight : 0;\r\n                if (this._owner && (w != this.obj.width || h != this.obj.height))\r\n                    this._owner.refreshLayout();\r\n            });\r\n        }\r\n    }\r\n\r\n    public pos(x: number, y: number): void {\r\n        this.obj.pos(x, y);\r\n    }\r\n\r\n    public release(): void {\r\n        this.obj.removeSelf();\r\n        this.obj.offAll();\r\n        this.obj.texture = null;\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.obj.destroy();\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\nexport class HtmlLink implements IHtmlObject, IHitArea {\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n    private _shape: Sprite;\r\n    private _rects: Array<Rectangle>;\r\n    private _rectCnt: number;\r\n\r\n    public constructor() {\r\n        this._shape = new Sprite();\r\n        this._shape.hitArea = this;\r\n        this._shape.on(Event.CLICK, () => {\r\n            this._owner.bubbleEvent(Event.LINK, this._element.getAttrString(\"href\"));\r\n        });\r\n\r\n        this._rects = [];\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get width(): number {\r\n        return 0;\r\n    }\r\n\r\n    public get height(): number {\r\n        return 0;\r\n    }\r\n\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this._shape);\r\n    }\r\n\r\n    public resetArea() {\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    public addRect(x: number, y: number, width: number, height: number) {\r\n        let rect = this._rects[this._rectCnt];\r\n        if (!rect)\r\n            rect = this._rects[this._rectCnt] = new Rectangle();\r\n        this._rectCnt++;\r\n        rect.setTo(x, y, width, height);\r\n    }\r\n\r\n    public contains(x: number, y: number): boolean {\r\n        for (let i = 0; i < this._rectCnt; i++) {\r\n            if (this._rects[i].contains(x, y))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public pos(x: number, y: number): void {\r\n    }\r\n\r\n    public release(): void {\r\n        this._shape.removeSelf();\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this._shape.destroy();\r\n    }\r\n}","import { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport class HtmlParseOptions {\r\n    public linkUnderline: boolean;\r\n    public linkColor: string;\r\n    public ignoreWhiteSpace: boolean;\r\n\r\n    public static defaultLinkUnderline: boolean = true;\r\n    public static defaultLinkColor: string = null;\r\n\r\n    public constructor() {\r\n        this.linkUnderline = HtmlParseOptions.defaultLinkUnderline;\r\n        this.linkColor = HtmlParseOptions.defaultLinkColor;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HtmlParseOptions\", HtmlParseOptions);","import { TextStyle } from \"../display/css/TextStyle\";\r\nimport { HtmlElement, HtmlElementType } from \"./HtmlElement\";\r\nimport { HtmlImage } from \"./HtmlImage\";\r\nimport { HtmlLink } from \"./HtmlLink\";\r\nimport { HtmlParseOptions } from \"./HtmlParseOptions\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nconst s_list1 = new Array<string>();\r\nconst s_list2 = new Array<string>();\r\n\r\nexport class HtmlParser {\r\n    static defaultParser: HtmlParser = new HtmlParser();\r\n\r\n    static classMap: Record<number, new () => IHtmlObject> = {\r\n        [HtmlElementType.Image]: HtmlImage,\r\n        [HtmlElementType.Link]: HtmlLink\r\n    };\r\n\r\n    protected _styleStack: Array<TextStyle>;\r\n    protected _styleStackTop: number;\r\n    protected _style: TextStyle;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _options: HtmlParseOptions;\r\n\r\n    public constructor() {\r\n        this._styleStack = new Array<TextStyle>();\r\n        this._style = new TextStyle();\r\n        this._options = new HtmlParseOptions();\r\n    }\r\n\r\n    public parse(aSource: string, style: TextStyle, out: Array<HtmlElement>, options?: HtmlParseOptions): void {\r\n        if (options == null)\r\n            options = this._options;\r\n\r\n        this._elements = out;\r\n        this._styleStackTop = 0;\r\n        Object.assign(this._style, style);\r\n        (<any>this._style).colorChanged = false;\r\n        let skipText: number = 0;\r\n        let ignoreWhiteSpace: boolean = options.ignoreWhiteSpace;\r\n        let skipNextCR: boolean = false;\r\n        let text: string\r\n\r\n        XMLIterator.begin(aSource, true);\r\n        while (XMLIterator.nextTag()) {\r\n            if (skipText == 0) {\r\n                text = XMLIterator.getText(ignoreWhiteSpace);\r\n                if (text.length > 0) {\r\n                    if (skipNextCR && text[0] == '\\n')\r\n                        text = text.substring(1);\r\n                    this.appendText(text);\r\n                }\r\n            }\r\n\r\n            skipNextCR = false;\r\n            switch (XMLIterator.tagName) {\r\n                case \"b\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.bold = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"i\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.italic = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"u\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.underline = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.strikethrough = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                // case \"sub\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Subscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                // case \"sup\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Superscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                case \"font\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.fontSize = XMLUtils.getInt(XMLIterator.attributes, \"size\", this._style.fontSize);\r\n                        let color: string = XMLIterator.getAttribute(\"color\");\r\n                        if (color != null) {\r\n                            this._style.color = color;\r\n                            (<any>this._style).colorChanged = true;\r\n                        }\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"br\":\r\n                    this.appendText(\"\\n\");\r\n                    break;\r\n\r\n                case \"img\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                        let element: HtmlElement = HtmlElement.getFromPool(HtmlElementType.Image);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        element.style.underline = this._style.underline;\r\n                        element.style.underlineColor = this._style.underlineColor;\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"a\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.underline = this._style.underline || options.linkUnderline;\r\n                        if (!(<any>this._style).colorChanged && options.linkColor != null)\r\n                            this._style.color = options.linkColor;\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Link);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        this._elements.push(element);\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.popStyle();\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.LinkEnd);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"input\":\r\n                    {\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Input);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        Object.assign(element.style, this._style);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"select\":\r\n                    {\r\n                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                            let element = HtmlElement.getFromPool(HtmlElementType.Select);\r\n                            element.fetchAttributes();\r\n                            if (XMLIterator.tagType == XMLTagType.Start) {\r\n                                s_list1.length = 0;\r\n                                s_list2.length = 0;\r\n                                while (XMLIterator.nextTag()) {\r\n                                    if (XMLIterator.tagName == \"select\")\r\n                                        break;\r\n\r\n                                    if (XMLIterator.tagName == \"option\") {\r\n                                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void)\r\n                                            s_list2.push(XMLUtils.getString(XMLIterator.attributes, \"value\", \"\"));\r\n                                        else\r\n                                            s_list1.push(XMLIterator.getText());\r\n                                    }\r\n                                }\r\n                                element.setAttr(\"items\", s_list1.slice());\r\n                                element.setAttr(\"values\", s_list2.slice());\r\n                            }\r\n                            element.name = element.getAttrString(\"name\");\r\n                            Object.assign(element.style, this._style);\r\n                            this._elements.push(element);\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case \"p\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.align = XMLIterator.getAttribute(\"align\");\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n\r\n                        this.popStyle();\r\n                    }\r\n                    break;\r\n\r\n                case \"ui\":\r\n                case \"div\":\r\n                case \"li\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n                    }\r\n                    break;\r\n\r\n                case \"html\":\r\n                case \"body\":\r\n                    //full html\r\n                    ignoreWhiteSpace = true;\r\n                    break;\r\n\r\n                case \"head\":\r\n                case \"style\":\r\n                case \"script\":\r\n                case \"form\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start)\r\n                        skipText++;\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        skipText--;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (skipText == 0) {\r\n            text = XMLIterator.getText(ignoreWhiteSpace);\r\n            if (text.length > 0) {\r\n                if (skipNextCR && text[0] == '\\n')\r\n                    text = text.substring(1);\r\n                this.appendText(text);\r\n            }\r\n        }\r\n\r\n        this._elements = null;\r\n    }\r\n\r\n    protected pushStyle() {\r\n        let tf: TextStyle;\r\n        if (this._styleStack.length <= this._styleStackTop) {\r\n            tf = new TextStyle();\r\n            this._styleStack.push(tf);\r\n        }\r\n        else\r\n            tf = this._styleStack[this._styleStackTop];\r\n        Object.assign(tf, this._style);\r\n        this._styleStackTop++;\r\n    }\r\n\r\n    protected popStyle() {\r\n        if (this._styleStackTop > 0) {\r\n            let tf = this._styleStack[this._styleStackTop - 1];\r\n            Object.assign(this._style, tf);\r\n            this._styleStackTop--;\r\n        }\r\n    }\r\n\r\n    protected isNewLine(): boolean {\r\n        if (this._elements.length > 0) {\r\n            let element: HtmlElement = this._elements[this._elements.length - 1];\r\n            if (element && element.type == HtmlElementType.Text)\r\n                return element.text.endsWith(\"\\n\");\r\n            else\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected appendText(text: string) {\r\n        let element: HtmlElement;\r\n        if (this._elements.length > 0) {\r\n            element = this._elements[this._elements.length - 1];\r\n            if (element.type == HtmlElementType.Text && equalStyle(element.style, this._style)) {\r\n                element.text += text;\r\n                return;\r\n            }\r\n        }\r\n\r\n        element = HtmlElement.getFromPool(HtmlElementType.Text);\r\n        element.text = text;\r\n        Object.assign(element.style, this._style);\r\n        this._elements.push(element);\r\n    }\r\n}\r\n\r\nfunction equalStyle(s1: TextStyle, s2: TextStyle) {\r\n    for (let k in s1) {\r\n        if (!k.startsWith(\"_\") && (<any>s1)[k] != (<any>s2)[k])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n","export interface ITagHandler {\r\n    (tagName: string, end: boolean, attr: string): string;\r\n}\r\n\r\nexport class UBBParser {\r\n    static defaultParser: UBBParser = new UBBParser();\r\n\r\n    private _text: string;\r\n    private _readPos: number = 0;\r\n\r\n    protected _handlers: Record<string, ITagHandler>;\r\n\r\n    public defaultImgWidth: number = 0;\r\n    public defaultImgHeight: number = 0;\r\n    public lastColor: string;\r\n    public lastSize: string;\r\n\r\n    constructor() {\r\n        this._handlers = {};\r\n        this._handlers[\"url\"] = this.onTag_URL;\r\n        this._handlers[\"img\"] = this.onTag_IMG;\r\n        this._handlers[\"b\"] = this.onTag_B;\r\n        this._handlers[\"i\"] = this.onTag_I;\r\n        this._handlers[\"u\"] = this.onTag_U;\r\n        this._handlers[\"sup\"] = this.onTag_Simple;\r\n        this._handlers[\"sub\"] = this.onTag_Simple;\r\n        this._handlers[\"color\"] = this.onTag_COLOR;\r\n        this._handlers[\"font\"] = this.onTag_FONT;\r\n        this._handlers[\"size\"] = this.onTag_SIZE;\r\n    }\r\n\r\n    protected onTag_URL(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            if (attr != null)\r\n                return \"<a href=\\\"\" + attr + \"\\\">\";\r\n            else {\r\n                var href: string = this.getTagText();\r\n                return \"<a href=\\\"\" + href + \"\\\">\";\r\n            }\r\n        }\r\n        else\r\n            return \"</a>\";\r\n    }\r\n\r\n    protected onTag_IMG(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            var src: string = this.getTagText(true);\r\n            if (!src)\r\n                return null;\r\n\r\n            if (this.defaultImgWidth)\r\n                return \"<img src=\\\"\" + src + \"\\\" width=\\\"\" + this.defaultImgWidth + \"\\\" height=\\\"\" + this.defaultImgHeight + \"\\\"/>\";\r\n            else\r\n                return \"<img src=\\\"\" + src + \"\\\"/>\";\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n    protected onTag_B(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</b>\") : (\"<b>\");\r\n    }\r\n\r\n    protected onTag_I(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</i>\") : (\"<i>\");\r\n    }\r\n\r\n    protected onTag_U(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</u>\") : (\"<u>\");\r\n    }\r\n\r\n    protected onTag_Simple(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</\" + tagName + \">\") : (\"<\" + tagName + \">\");\r\n    }\r\n\r\n    protected onTag_COLOR(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastColor = attr;\r\n            return \"<font color=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_FONT(tagName: string, end: boolean, attr: string): string {\r\n        if (!end)\r\n            return \"<font face=\\\"\" + attr + \"\\\">\";\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_SIZE(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastSize = attr;\r\n            return \"<font size=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected getTagText(remove?: boolean): string {\r\n        var pos1: number = this._readPos;\r\n        var pos2: number;\r\n        var result: string = \"\";\r\n        while ((pos2 = this._text.indexOf(\"[\", pos1)) != -1) {\r\n            if (this._text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += this._text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n            }\r\n            else {\r\n                result += this._text.substring(pos1, pos2);\r\n                break;\r\n            }\r\n        }\r\n        if (pos2 == -1)\r\n            return null;\r\n\r\n        if (remove)\r\n            this._readPos = pos2;\r\n\r\n        return result;\r\n    }\r\n\r\n    public parse(text: string, remove?: boolean): string {\r\n        this._text = text;\r\n        this.lastColor = null;\r\n        this.lastSize = null;\r\n\r\n        var pos1: number = 0, pos2: number, pos3: number;\r\n        var end: boolean;\r\n        var tag: string, attr: string;\r\n        var repl: string;\r\n        var func: Function;\r\n        var result: string = \"\";\r\n        while ((pos2 = text.indexOf(\"[\", pos1)) != -1) {\r\n            if (pos2 > 0 && text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += text.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = text.indexOf(\"]\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            end = text.charAt(pos1 + 1) == '/';\r\n            tag = text.substring(end ? pos1 + 2 : pos1 + 1, pos2);\r\n            this._readPos = pos2 + 1;\r\n            attr = null;\r\n            repl = null;\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                attr = tag.substring(pos3 + 1);\r\n                tag = tag.substring(0, pos3);\r\n            }\r\n            tag = tag.toLowerCase();\r\n            func = this._handlers[tag];\r\n            if (func != null) {\r\n                if (!remove) {\r\n                    repl = func.call(this, tag, end, attr);\r\n                    if (repl != null)\r\n                        result += repl;\r\n                }\r\n            }\r\n            else\r\n                result += text.substring(pos1, this._readPos);\r\n            pos1 = this._readPos;\r\n        }\r\n\r\n        if (pos1 < text.length)\r\n            result += text.substring(pos1);\r\n\r\n        this._text = null;\r\n\r\n        return result;\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { BitmapFont } from \"./BitmapFont\";\r\nimport { TextStyle } from \"./css/TextStyle\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { WordText } from \"../utils/WordText\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Config } from \"../../Config\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\";\r\nimport { HtmlElement, HtmlElementType } from \"../html/HtmlElement\";\r\nimport { HtmlLink } from \"../html/HtmlLink\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { IHtmlObject } from \"../html/IHtmlObject\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { HtmlParser } from \"../html/HtmlParser\";\r\nimport { UBBParser } from \"../html/UBBParser\";\r\nimport { HtmlParseOptions } from \"../html/HtmlParseOptions\";\r\n\r\n/**\r\n * 文本内容发生改变后调度。\r\n * @eventType Event.CHANGE\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Text</code> 类用于创建显示对象以显示文本。</p>\r\n * <p>\r\n * 注意：如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。\r\n * </p>\r\n * @example\r\n * package\r\n * {\r\n * \timport laya.display.Text;\r\n * \tpublic class Text_Example\r\n * \t{\r\n * \t\tpublic function Text_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tonInit();\r\n * \t\t}\r\n * \t\tprivate function onInit():void\r\n * \t\t{\r\n * \t\t\tvar text:Text = new Text();//创建一个 Text 类的实例对象 text 。\r\n * \t\t\ttext.text = \"这个是一个 Text 文本示例。\";\r\n * \t\t\ttext.color = \"#008fff\";//设置 text 的文本颜色。\r\n * \t\t\ttext.font = \"Arial\";//设置 text 的文本字体。\r\n * \t\t\ttext.bold = true;//设置 text 的文本显示为粗体。\r\n * \t\t\ttext.fontSize = 30;//设置 text 的字体大小。\r\n * \t\t\ttext.wordWrap = true;//设置 text 的文本自动换行。\r\n * \t\t\ttext.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n * \t\t\ttext.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n * \t\t\ttext.width = 300;//设置 text 的宽度。\r\n * \t\t\ttext.height = 200;//设置 text 的高度。\r\n * \t\t\ttext.italic = true;//设置 text 的文本显示为斜体。\r\n * \t\t\ttext.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n * \t\t\tLaya.stage.addChild(text);//将 text 添加到显示列表。\r\n * \t\t}\r\n * \t}\r\n * }\r\n * @example\r\n * Text_Example();\r\n * function Text_Example()\r\n * {\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     onInit();\r\n * }\r\n * function onInit()\r\n * {\r\n *     var text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\r\n *     text.text = \"这个是一个 Text 文本示例。\";\r\n *     text.color = \"#008fff\";//设置 text 的文本颜色。\r\n *     text.font = \"Arial\";//设置 text 的文本字体。\r\n *     text.bold = true;//设置 text 的文本显示为粗体。\r\n *     text.fontSize = 30;//设置 text 的字体大小。\r\n *     text.wordWrap = true;//设置 text 的文本自动换行。\r\n *     text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n *     text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n *     text.width = 300;//设置 text 的宽度。\r\n *     text.height = 200;//设置 text 的高度。\r\n *     text.italic = true;//设置 text 的文本显示为斜体。\r\n *     text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n *     Laya.stage.addChild(text);//将 text 添加到显示列表。\r\n * }\r\n * @example\r\n * class Text_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         var text: laya.display.Text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\r\n *         text.text = \"这个是一个 Text 文本示例。\";\r\n *         text.color = \"#008fff\";//设置 text 的文本颜色。\r\n *         text.font = \"Arial\";//设置 text 的文本字体。\r\n *         text.bold = true;//设置 text 的文本显示为粗体。\r\n *         text.fontSize = 30;//设置 text 的字体大小。\r\n *         text.wordWrap = true;//设置 text 的文本自动换行。\r\n *         text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n *         text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n *         text.width = 300;//设置 text 的宽度。\r\n *         text.height = 200;//设置 text 的高度。\r\n *         text.italic = true;//设置 text 的文本显示为斜体。\r\n *         text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n *         Laya.stage.addChild(text);//将 text 添加到显示列表。\r\n *     }\r\n * }\r\n */\r\nexport class Text extends Sprite {\r\n\r\n    /**visible不进行任何裁切。*/\r\n    static VISIBLE: string = \"visible\";\r\n    /**scroll 不显示文本域外的字符像素，并且支持 scroll 接口。*/\r\n    static SCROLL: string = \"scroll\";\r\n    /**hidden 不显示超出文本域的字符。*/\r\n    static HIDDEN: string = \"hidden\";\r\n    /**shrink 超出文本域时，文本整体缩小以适应文本框。*/\r\n    static SHRINK: string = \"shrink\";\r\n    /**ellipsis 超出文本域时，文本被截断，并且文本最后显示省略号。*/\r\n    static ELLIPSIS: string = \"ellipsis\";\r\n\r\n    /**语言包，是一个包含key:value的集合，用key索引，替换为目标value语言*/\r\n    static langPacks: Record<string, string>;\r\n    /**是否是从右向左的显示顺序*/\r\n    static RightToLeft: boolean = false;\r\n\r\n    /**@internal 预测长度的文字，用来提升计算效率，不同语言找一个最大的字符即可*/\r\n    static _testWord: string = \"游\";\r\n    static _passwordChar = \"●\";\r\n\r\n    /**@private 位图字体字典。*/\r\n    private static _bitmapFonts: Record<string, BitmapFont> = {};\r\n\r\n    /** 标记此文本是否忽略语言包 */\r\n    ignoreLang: boolean;\r\n\r\n    /**表示文本内容字符串。*/\r\n    protected _text: string;\r\n    protected _overflow: string = Text.VISIBLE;\r\n    protected _singleCharRender: boolean = false;\t// 拆分渲染\r\n    protected _textStyle: TextStyle;\r\n    protected _prompt: string = '';\r\n    /**输入提示符颜色。*/\r\n    protected _promptColor: string;\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    protected _bgColor: string;\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    protected _borderColor: string;\r\n    /**\r\n     * <p>默认边距信息</p>\r\n     * <p>[上边距，右边距，下边距，左边距]（边距以像素为单位）</p>\r\n     */\r\n    protected _padding: number[];\r\n    /**\r\n     * <p>表示使用此文本格式的文本字段是否自动换行。</p>\r\n     * 如果 wordWrap 的值为 true，则该文本字段自动换行；如果值为 false，则该文本字段不自动换行。\r\n     * @default false。\r\n     */\r\n    protected _wordWrap: boolean;\r\n\r\n    /**\r\n     * <p>指定文本字段是否是密码文本字段。</p>\r\n     * 如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。\r\n     */\r\n    protected _asPassword: boolean;\r\n\r\n    protected _htmlParseOptions: HtmlParseOptions;\r\n\r\n    protected _templateVars: Record<string, string>;\r\n\r\n    /**表示文本内容是否发生改变。*/\r\n    protected _isChanged: boolean;\r\n    /**表示文本的宽度，以像素为单位。*/\r\n    protected _textWidth: number = 0;\r\n    /**表示文本的高度，以像素为单位。*/\r\n    protected _textHeight: number = 0;\r\n    protected _realFont: string;\r\n    protected _bitmapFont: BitmapFont;\r\n    protected _scrollPos: Point | null;\r\n    protected _bgDrawCmd: DrawRectCmd;\r\n    protected _html: boolean;\r\n    protected _ubb: boolean;\r\n    protected _lines: Array<ITextLine>;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _objContainer: Sprite;\r\n    protected _maxWidth: number;\r\n    protected _hideText: boolean;\r\n\r\n    private _updatingLayout: boolean;\r\n    private _fontSizeScale: number;\r\n\r\n    /**是否将字符串中的\\n,\\t转换为实际功能的字符 */\r\n    _parseEscapeChars: boolean;\r\n    _onPostLayout: () => void;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Text</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._textStyle = new TextStyle();\r\n        this._textStyle.fontSize = Config.defaultFontSize;\r\n        this._text = \"\";\r\n        this.font = \"\";\r\n        this._elements = [];\r\n        this._lines = [];\r\n        this._padding = [0, 0, 0, 0];\r\n        this._fontSizeScale = 1;\r\n    }\r\n\r\n    /**\r\n     * 注册位图字体。\r\n     * @param\tname\t\t位图字体的名称。\r\n     * @param\tbitmapFont\t位图字体文件。\r\n     */\r\n    static registerBitmapFont(name: string, bitmapFont: BitmapFont): void {\r\n        bitmapFont._addReference();\r\n        Text._bitmapFonts[name] = bitmapFont;\r\n    }\r\n\r\n    /**\r\n     * 移除注册的位图字体文件。\r\n     * @param\tname\t\t位图字体的名称。\r\n     * @param\tdestroy\t\t是否销毁指定的字体文件。\r\n     */\r\n    static unregisterBitmapFont(name: string, destroy: boolean = true): void {\r\n        let font = Text._bitmapFonts[name];\r\n        if (font) {\r\n            font._removeReference();\r\n            if (destroy) font.destroy();\r\n            delete Text._bitmapFonts[name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        recoverLines(this._lines);\r\n        HtmlElement.returnToPool(this._elements);\r\n\r\n        super.destroy(destroyChild);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec._getBoundPoints();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        return this.textWidth;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        return this.textHeight;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * 表示文本的宽度，以像素为单位。\r\n     */\r\n    get textWidth(): number {\r\n        this.typeset();\r\n        return this._textWidth;\r\n    }\r\n\r\n    /**\r\n     * 表示文本的高度，以像素为单位。\r\n     */\r\n    get textHeight(): number {\r\n        this.typeset();\r\n        return this._textHeight;\r\n    }\r\n\r\n    /** 当前文本的内容字符串。*/\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (!this.ignoreLang && Text.langPacks)\r\n            value = Text.langPacks[value] || value;\r\n\r\n        if (this._text != value) {\r\n            this._text = value;\r\n            this.markChanged();\r\n            this.event(Event.CHANGE);\r\n        }\r\n    }\r\n\r\n    /** @deprecated **/\r\n    changeText(text: string): void {\r\n        this.text = text;\r\n    }\r\n\r\n    /**\r\n     * <p>文本的字体名称，以字符串形式表示。</p>\r\n     * <p>默认值为：\"Arial\"，可以通过Config.defaultFont设置默认字体。</p>\r\n     * <p>如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。</p>\r\n     */\r\n    get font(): string {\r\n        return this._textStyle.font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._textStyle.font = value;\r\n        if (!value) {\r\n            value = Config.defaultFont;\r\n            if (!value)\r\n                value = \"Arial\";\r\n        }\r\n\r\n        this._realFont = value;\r\n        this._bitmapFont = Text._bitmapFonts[value];\r\n\r\n        if (this._bitmapFont) {\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n        else if (value && (Utils.getFileExtension(value) || value.startsWith(\"res://\"))) {\r\n            let t = value;\r\n            ILaya.loader.load(value).then(fontObj => {\r\n                if (!fontObj || this._realFont != t)\r\n                    return;\r\n\r\n                if (fontObj instanceof BitmapFont)\r\n                    this._bitmapFont = fontObj;\r\n                else\r\n                    this._realFont = fontObj.family;\r\n                if (this._text)\r\n                    this.markChanged();\r\n            });\r\n        }\r\n        else {\r\n            this._realFont = (ILaya.Browser.onIPhone ? (Config.fontFamilyMap[value] || value) : value);\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>指定文本的字体大小（以像素为单位）。</p>\r\n     * <p>默认为20像素，可以通过 <code>Config.defaultFontSize</code> 设置默认大小。</p>\r\n     */\r\n    get fontSize(): number {\r\n        return this._textStyle.fontSize;\r\n    }\r\n\r\n    set fontSize(value: number) {\r\n        if (this._textStyle.fontSize != value) {\r\n            this._textStyle.fontSize = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的颜色值。可以通过 <code>Text.defaultColor</code> 设置默认颜色。</p>\r\n     * <p>默认值为黑色。</p>\r\n     */\r\n    get color(): string {\r\n        return this._textStyle.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this.set_color(value);\r\n    }\r\n\r\n    set_color(value: string): void {\r\n        if (this._textStyle.color != value) {\r\n            this._textStyle.color = value;\r\n            //如果仅仅更新颜色，无需重新排版\r\n            if (!this._isChanged && this._graphics && this._elements.length == 0)\r\n                this._graphics.replaceTextColor(this._textStyle.color);\r\n            else\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>指定文本是否为粗体字。</p>\r\n     * <p>默认值为 false，这意味着不使用粗体字。如果值为 true，则文本为粗体字。</p>\r\n     */\r\n    get bold(): boolean {\r\n        return this._textStyle.bold;\r\n    }\r\n\r\n    set bold(value: boolean) {\r\n        if (this._textStyle.bold != value) {\r\n            this._textStyle.bold = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本是否为斜体。</p>\r\n     * <p>默认值为 false，这意味着不使用斜体。如果值为 true，则文本为斜体。</p>\r\n     */\r\n    get italic(): boolean {\r\n        return this._textStyle.italic;\r\n    }\r\n\r\n    set italic(value: boolean) {\r\n        if (this._textStyle.italic != value) {\r\n            this._textStyle.italic = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的水平显示方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"left\"： 居左对齐显示。</li>\r\n     * <li>\"center\"： 居中对齐显示。</li>\r\n     * <li>\"right\"： 居右对齐显示。</li>\r\n     * </p>\r\n     */\r\n    get align(): string {\r\n        return this._textStyle.align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        if (this._textStyle.align != value) {\r\n            this._textStyle.align = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的垂直显示方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"top\"： 居顶部对齐显示。</li>\r\n     * <li>\"middle\"： 居中对齐显示。</li>\r\n     * <li>\"bottom\"： 居底部对齐显示。</li>\r\n     * </p>\r\n     */\r\n    get valign(): string {\r\n        return this._textStyle.valign;\r\n    }\r\n\r\n    set valign(value: string) {\r\n        if (this._textStyle.valign != value) {\r\n            this._textStyle.valign = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本是否自动换行，默认为false。</p>\r\n     * <p>若值为true，则自动换行；否则不自动换行。</p>\r\n     */\r\n    get wordWrap(): boolean {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(value: boolean) {\r\n        if (this._wordWrap != value) {\r\n            this._wordWrap = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 垂直行间距（以像素为单位）。\r\n     */\r\n    get leading(): number {\r\n        return this._textStyle.leading;\r\n    }\r\n\r\n    set leading(value: number) {\r\n        if (this._textStyle.leading != value) {\r\n            this._textStyle.leading = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>边距信息。</p>\r\n     * <p>数据格式：[上边距，右边距，下边距，左边距]（边距以像素为单位）。</p>\r\n     */\r\n    get padding(): number[] {\r\n        return this._padding;\r\n    }\r\n\r\n    set padding(value: number[] | string) {\r\n        if (typeof (value) == 'string') {\r\n            let arr = value.split(\",\");\r\n            this._padding.length = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let v = parseFloat(arr[i]);\r\n                if (isNaN(v))\r\n                    v = 0;\r\n                this._padding.push(v);\r\n            }\r\n        }\r\n        else\r\n            this._padding = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    get borderColor(): string {\r\n        return this._borderColor;\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._borderColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * <p>默认值0，表示不描边。</p>\r\n     */\r\n    get stroke(): number {\r\n        return this._textStyle.stroke;\r\n    }\r\n\r\n    set stroke(value: number) {\r\n        if (this._textStyle.stroke != value) {\r\n            this._textStyle.stroke = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * <p>默认值为 \"#000000\"（黑色）;</p>\r\n     */\r\n    get strokeColor(): string {\r\n        return this._textStyle.strokeColor;\r\n    }\r\n\r\n    set strokeColor(value: string) {\r\n        if (this._textStyle.strokeColor != value) {\r\n            this._textStyle.strokeColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定文本超出文本域后的行为\r\n     * @tips: <p>值为:可见visible、隐藏hidden、滚动:scroll、自动收缩shrink、显示省略号ellipsis。</p>\r\n     * @tips: <p>作用：可见，表示文本不受文本宽高约束全部可见；隐藏，超过文本宽高就会被裁切掉，性能最好；\r\n     * 滚动，表示超出宽高的部分被隐藏，可以通过划动控制显示在宽高内区域；自动收缩，表示文本会跟随宽高的大小而自动调整文本的大小，始终全部显示在文本宽高内。\r\n     * 显示省略号，表示当文本超出宽高后，未尾的几位字符会替换为省略号，表示当前文本还有未显示的内容</p>\r\n     */\r\n    get overflow(): string {\r\n        return this._overflow;\r\n    }\r\n\r\n    set overflow(value: string) {\r\n        if (this._overflow != value) {\r\n            this._overflow = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**是否显示下划线。*/\r\n    get underline(): boolean {\r\n        return this._textStyle.underline;\r\n    }\r\n\r\n    set underline(value: boolean) {\r\n        if (this._textStyle.underline != value) {\r\n            this._textStyle.underline = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**下划线的颜色，为null则使用字体颜色。*/\r\n    get underlineColor(): string {\r\n        return this._textStyle.underlineColor;\r\n    }\r\n\r\n    set underlineColor(value: string) {\r\n        if (this._textStyle.underlineColor != value) {\r\n            this._textStyle.underlineColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get singleCharRender(): boolean {\r\n        return this._singleCharRender;\r\n    }\r\n\r\n    /** 设置是否单个字符渲染，如果Textd的内容一直改变，例如是一个增加的数字，就设置这个，防止无效占用缓存 */\r\n    set singleCharRender(value: boolean) {\r\n        this._singleCharRender = value;\r\n    }\r\n\r\n    get html(): boolean {\r\n        return this._html;\r\n    }\r\n\r\n    /** 设置是否富文本，支持html语法 */\r\n    set html(value: boolean) {\r\n        if (this._html != value) {\r\n            this._html = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get ubb(): boolean {\r\n        return this._ubb;\r\n    }\r\n\r\n    /** 设置是否使用UBB语法解析文本 */\r\n    set ubb(value: boolean) {\r\n        if (this._ubb != value) {\r\n            this._ubb = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get maxWidth(): number {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\r\n    set maxWidth(value: number) {\r\n        if (this._maxWidth != value) {\r\n            this._maxWidth = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get htmlParseOptions(): HtmlParseOptions {\r\n        return this._htmlParseOptions;\r\n    }\r\n\r\n    set htmlParseOptions(value: HtmlParseOptions) {\r\n        this._htmlParseOptions = value;\r\n    }\r\n\r\n    protected parseTemplate(template: string): string {\r\n        let pos1: number = 0, pos2: number, pos3: number;\r\n        let tag: string;\r\n        let value: string;\r\n        let result: string = \"\";\r\n        while ((pos2 = template.indexOf(\"{\", pos1)) != -1) {\r\n            if (pos2 > 0 && template.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += template.substring(pos1, pos2 - 1);\r\n                result += \"{\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += template.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = template.indexOf(\"}\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            if (pos2 == pos1 + 1) {\r\n                result += template.substring(pos1, pos1 + 2);\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            tag = template.substring(pos1 + 1, pos2);\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                value = this._templateVars[tag.substring(0, pos3)];\r\n                if (value == null)\r\n                    result += tag.substring(pos3 + 1);\r\n                else\r\n                    result += value;\r\n            }\r\n            else {\r\n                value = this._templateVars[tag];\r\n                if (value != null)\r\n                    result += value;\r\n            }\r\n            pos1 = pos2 + 1;\r\n        }\r\n\r\n        if (pos1 < template.length)\r\n            result += template.substring(pos1);\r\n\r\n        return result;\r\n    }\r\n\r\n    public get templateVars(): Record<string, any> {\r\n        return this._templateVars;\r\n    }\r\n\r\n    public set templateVars(value: Record<string, any> | boolean) {\r\n        if (!this._templateVars && !value)\r\n            return;\r\n\r\n        if (value === true)\r\n            this._templateVars = {};\r\n        else if (value === false)\r\n            this._templateVars = null;\r\n        else\r\n            this._templateVars = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    public setVar(name: string, value: any): Text {\r\n        if (!this._templateVars)\r\n            this._templateVars = {};\r\n        this._templateVars[name] = value;\r\n        this.markChanged();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * <p>设置横向滚动量。</p>\r\n    * <p>即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。</p>\r\n    */\r\n    set scrollX(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollX = this.maxScrollX;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollX ? maxScrollX : value;\r\n\r\n        this._scrollPos.x = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * 获取横向滚动量。\r\n     */\r\n    get scrollX(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.x;\r\n    }\r\n\r\n    /**\r\n     * 设置纵向滚动量（px)。即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。\r\n     */\r\n    set scrollY(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollY = this.maxScrollY;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollY ? maxScrollY : value;\r\n\r\n        this._scrollPos.y = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * 获取纵向滚动量。\r\n     */\r\n    get scrollY(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.y;\r\n    }\r\n\r\n    /**\r\n     * 获取横向可滚动最大值。\r\n     */\r\n    get maxScrollX(): number {\r\n        let r = this.textWidth - this._width;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**\r\n     * 获取纵向可滚动最大值。\r\n     */\r\n    get maxScrollY(): number {\r\n        let r = this.textHeight - this._height;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**返回文字行信息*/\r\n    get lines(): ReadonlyArray<ITextLine> {\r\n        this.typeset();\r\n        return this._lines;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected markChanged() {\r\n        if (!this._isChanged) {\r\n            this._isChanged = true;\r\n            ILaya.systemTimer.callLater(this, this._typeset);\r\n        }\r\n    }\r\n\r\n    typeset() {\r\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this._typeset);\r\n    }\r\n\r\n    refreshLayout() {\r\n        ILaya.systemTimer.callLater(this, this.doLayout);\r\n    }\r\n\r\n    get objContainer(): Sprite {\r\n        if (!this._objContainer) {\r\n            this._objContainer = new Sprite();\r\n            this._objContainer.hideFlags |= HideFlags.HideAndDontSave;\r\n            this.addChild(this._objContainer);\r\n        }\r\n        return this._objContainer;\r\n    }\r\n\r\n    /**\r\n     * <p>排版文本。</p>\r\n     * <p>进行宽高计算，渲染、重绘文本。</p>\r\n     */\r\n    protected _typeset(): void {\r\n        this._isChanged = false;\r\n        if (this._hideText || this._destroyed)\r\n            return;\r\n\r\n        HtmlElement.returnToPool(this._elements);\r\n        if (this._objContainer)\r\n            this._objContainer.removeChildren();\r\n\r\n        let text = this._text;\r\n        let isPrompt: boolean;\r\n        if (!text && this._prompt) {\r\n            text = this._prompt;\r\n            isPrompt = true;\r\n        }\r\n\r\n        if (!text) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n\r\n            this._textWidth = this._textHeight = 0;\r\n            this._scrollPos = null;\r\n            if (this._onPostLayout) {\r\n                this._updatingLayout = true;\r\n                this._onPostLayout();\r\n                this._updatingLayout = false;\r\n            }\r\n            return;\r\n        }\r\n\r\n        let html = this._html;\r\n        text = text.replace(normalizeCR, \"\\n\");\r\n        if (this._parseEscapeChars)\r\n            text = text.replace(escapeCharsPattern, getReplaceStr);\r\n        if (!isPrompt && this._templateVars)\r\n            text = this.parseTemplate(text);\r\n\r\n        if (this._ubb) {\r\n            text = UBBParser.defaultParser.parse(text);\r\n            html = true;\r\n        }\r\n        if (!isPrompt && this._asPassword)\r\n            text = Text._passwordChar.repeat(text.length);\r\n\r\n        let saveColor: string;\r\n        if (isPrompt) {\r\n            saveColor = this._textStyle.color;\r\n            this._textStyle.color = this._promptColor;\r\n        }\r\n        if (html)\r\n            HtmlParser.defaultParser.parse(text, this._textStyle, this._elements, this._htmlParseOptions);\r\n        else {\r\n            let ele = HtmlElement.getFromPool(HtmlElementType.Text);\r\n            Object.assign(ele.style, this._textStyle);\r\n            ele.text = text;\r\n            this._elements.push(ele);\r\n        }\r\n        if (isPrompt)\r\n            this._textStyle.color = saveColor;\r\n\r\n        this.doLayout();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 分析文本换行。\r\n     */\r\n    protected doLayout(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._updatingLayout = true;\r\n        this._fontSizeScale = 1;\r\n\r\n        let wordWrap = this._wordWrap || this._overflow == Text.ELLIPSIS;\r\n        let padding = this._padding;\r\n        let rectWidth: number;\r\n        if (this._isWidthSet)\r\n            rectWidth = this._width - padding[3] - padding[1];\r\n        else\r\n            rectWidth = Number.MAX_VALUE;\r\n        if (this._maxWidth > 0) {\r\n            let m = this._maxWidth - padding[3] - padding[1];\r\n            if (!wordWrap || m < rectWidth)\r\n                rectWidth = m;\r\n            wordWrap = true;\r\n        }\r\n        let rectHeight = this._isHeightSet ? (this._height - padding[0] - padding[2]) : Number.MAX_VALUE;\r\n        let bfont = this._bitmapFont;\r\n\r\n        let lineX: number, lineY: number;\r\n        let curLine: ITextLine;\r\n        let lastCmd: ITextCmd;\r\n        let charWidth: number, charHeight: number;\r\n        let fontSize: number;\r\n\r\n        let getTextWidth = (text: string) => {\r\n            if (bfont)\r\n                return bfont.getTextWidth(text, fontSize);\r\n            else {\r\n                let ret = ILaya.Browser.context.measureText(text);\r\n                return ret ? ret.width : 100;\r\n            }\r\n        };\r\n\r\n        let buildLines = (text: string, style: TextStyle) => {\r\n            if (bfont) {\r\n                charWidth = bfont.getMaxWidth(fontSize);\r\n                charHeight = bfont.getMaxHeight(fontSize);\r\n            } else {\r\n                let ctxFont = (style.italic ? \"italic \" : \"\") + (style.bold ? \"bold \" : \"\") + fontSize + \"px \" + this._realFont;\r\n                (<any>style)._ctxFont = ctxFont; //缓存起来，避免renderText里又拼一次\r\n\r\n                ILaya.Browser.context.font = ctxFont;\r\n                let mr: any = ILaya.Browser.context.measureText(Text._testWord);\r\n                \r\n                if (mr) {\r\n                    charWidth = mr.width;\r\n                    charHeight = Math.ceil(mr.height || fontSize);\r\n                }\r\n                else {\r\n                    charWidth = 100;\r\n                    charHeight = fontSize;\r\n                }\r\n            }\r\n\r\n            let lines = text.split(\"\\n\");\r\n            if (wordWrap) {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        wrapText(line, style);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        addCmd(line, style, null);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        let addCmd = (target: string | IHtmlObject, style: TextStyle, width?: number) => {\r\n            let cmd: ITextCmd = cmdPool.length > 0 ? cmdPool.pop() : <any>{};\r\n            cmd.x = lineX;\r\n            cmd.y = lineY;\r\n            if (typeof (target) === \"string\") {\r\n                if (!width)\r\n                    width = getTextWidth(target);\r\n                if (!cmd.wt)\r\n                    cmd.wt = new WordText();\r\n                cmd.wt.setText(target);\r\n                cmd.wt.width = width;\r\n                cmd.wt.splitRender = this._singleCharRender;\r\n                cmd.width = width;\r\n                cmd.height = charHeight;\r\n            }\r\n            else {\r\n                cmd.obj = target;\r\n                cmd.x++;\r\n                cmd.width = target.width + 2;\r\n                cmd.height = target.height;\r\n            }\r\n            cmd.style = style;\r\n            cmd.linkEnd = false;\r\n            cmd.next = null;\r\n            lineX += Math.round(cmd.width);\r\n\r\n            if (!curLine.cmd)\r\n                curLine.cmd = cmd;\r\n            else\r\n                lastCmd.next = cmd;\r\n            lastCmd = cmd;\r\n        };\r\n\r\n        let endLine = () => {\r\n            //计算行高\r\n            let lineHeight = 0;\r\n            let cmd = curLine.cmd;\r\n            while (cmd) {\r\n                if (cmd.height > lineHeight) lineHeight = cmd.height;\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            //调整元素y位置\r\n            cmd = curLine.cmd;\r\n            while (cmd) {\r\n                cmd.y = Math.floor((lineHeight - cmd.height) * 0.5);\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (lineHeight == 0)\r\n                lineHeight = charHeight;\r\n            lineHeight++; //预览一个像素用来放下划线\r\n\r\n            curLine.height = lineHeight;\r\n            curLine.width = lineX;\r\n        };\r\n\r\n        let startLine = () => {\r\n            lineX = 0;\r\n            if (curLine)\r\n                lineY += curLine.height + Math.floor(this._textStyle.leading * this._fontSizeScale);\r\n\r\n            curLine = linePool.length > 0 ? linePool.pop() : <any>{ cmds: [] };\r\n            curLine.x = 0;\r\n            curLine.y = lineY;\r\n            this._lines.push(curLine);\r\n\r\n            return curLine;\r\n        };\r\n\r\n        let wrapText = (text: string, style: TextStyle) => {\r\n            let remainWidth = Math.max(0, rectWidth - lineX);\r\n\r\n            let tw = getTextWidth(text);\r\n            //优化1，如果一行小于宽度，则直接跳过遍历\r\n            if (tw <= remainWidth) {\r\n                addCmd(text, style, tw);\r\n                return;\r\n            }\r\n\r\n            let maybeIndex = 0;\r\n            let wordWidth = 0;\r\n            let startIndex = 0;\r\n\r\n            let isEmoji = testEmoji(text);\r\n            if (!bfont && !isEmoji) {\r\n                //优化2，预算第几个字符会超出，减少遍历及字符宽度度量\r\n                maybeIndex = Math.floor(remainWidth / charWidth);\r\n                (maybeIndex == 0) && (maybeIndex = 1);\r\n                wordWidth = getTextWidth(text.substring(0, maybeIndex));\r\n                if (remainWidth < wordWidth && lineX != 0) {\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                }\r\n            }\r\n\r\n            let len = text.length;\r\n            for (let j = maybeIndex; j < len; j++) {\r\n                // 逐字符测量后加入到总宽度中，在某些情况下自动换行不准确。\r\n                // 目前已知在全是字符1的自动换行就会出现这种情况。\r\n                // 考虑性能，保留这种非方式。\r\n                tw = getTextWidth(text.charAt(j));\r\n                wordWidth += tw;\r\n                let isEmojiChar = false;\r\n                if (isEmoji && j + 1 < len && testEmoji(text.charAt(j) + text.charAt(j + 1))) {\r\n                    wordWidth += tw >> 1;\r\n                    j++;\r\n                    isEmojiChar = true;\r\n                }\r\n\r\n                // 如果j的位置已经超出范围，要从startIndex到j找到一个能拆分的地方\r\n                if (wordWidth > remainWidth) {\r\n                    if (isEmojiChar) {\r\n                        if (wordWidth == tw + (tw >> 1)) {\r\n                            //这里是代表第一个就是emoji表情的逻辑\r\n                            j++;\r\n                        } else {\r\n                            j--;\r\n                        }\r\n                    }\r\n\r\n                    if (j == 0) {\r\n                        if (lineX > 0) {\r\n                            endLine();\r\n                            startLine();\r\n                            remainWidth = rectWidth;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    //截断换行单词\r\n                    let newLine = text.substring(startIndex, j);\r\n                    wordWidth -= tw;\r\n\r\n                    // 如果最后一个是中文则直接截断，否则找空格或者-来拆分\r\n                    let ccode = newLine.charCodeAt(newLine.length - 1);\r\n                    if (isEnglishChar(ccode)) {\r\n                        //按照英文单词字边界截取 因此将会无视中文\r\n                        let execResult = wordBoundaryTest.exec(newLine);// 找不是 空格和标点符号的\r\n                        if (execResult) {\r\n                            j = execResult.index + startIndex;\r\n                            //此行只够容纳这一个单词 强制换行\r\n                            if (execResult.index == 0)\r\n                                j += newLine.length;\r\n                            //此行有多个单词 按单词分行\r\n                            else {\r\n                                wordWidth = null;\r\n                                newLine = text.substring(startIndex, j);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //如果自动换行，则另起一行\r\n                    addCmd(newLine, style, wordWidth);\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                    //如果非自动换行，则只截取字符串\r\n\r\n                    startIndex = j;\r\n                    if (j + maybeIndex < len) {\r\n                        if (maybeIndex != 0)\r\n                            j += maybeIndex - 1;\r\n                        wordWidth = getTextWidth(text.substring(startIndex, j + 1));\r\n                    } else {\r\n                        //此处执行将不会在循环结束后再push一次\r\n                        addCmd(text.substring(startIndex, len), style);\r\n                        startIndex = -1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (startIndex != -1)\r\n                addCmd(text.substring(startIndex, len), style);\r\n        };\r\n\r\n        let calcTextSize = () => {\r\n            let nw: number = 0, nh: number = 0;\r\n            for (let line of this._lines) {\r\n                if (line.width > nw)\r\n                    nw = line.width;\r\n            }\r\n            if (nw > 0)\r\n                nw += padding[1] + padding[3];\r\n            this._textWidth = nw;\r\n\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            if (lastLine)\r\n                nh = lastLine.y + lastLine.height;\r\n            if (nh > 0)\r\n                nh += padding[0] + padding[2];\r\n            this._textHeight = nh;\r\n        };\r\n\r\n        let run = () => {\r\n            lineX = lineY = charWidth = charHeight = 0;\r\n            curLine = null;\r\n            lastCmd = null;\r\n\r\n            recoverLines(this._lines);\r\n            startLine();\r\n\r\n            let elements = this._elements;\r\n            for (let i = 0, n = elements.length; i < n; i++) {\r\n                let ele = elements[i];\r\n                if (ele.type == HtmlElementType.Text) {\r\n                    fontSize = Math.floor(ele.style.fontSize * this._fontSizeScale);\r\n                    if (fontSize == 0)\r\n                        fontSize = 1;\r\n                    buildLines(ele.text, ele.style);\r\n                }\r\n                else if (ele.type == HtmlElementType.LinkEnd) {\r\n                    if (lastCmd)\r\n                        lastCmd.linkEnd = true;\r\n                }\r\n                else {\r\n                    let htmlObj = ele.obj;\r\n                    if (!htmlObj) {\r\n                        let cls = HtmlParser.classMap[ele.type];\r\n                        if (cls) {\r\n                            htmlObj = Pool.createByClass(cls);\r\n                            htmlObj.create(this, ele);\r\n                            ele.obj = htmlObj;\r\n                        }\r\n                    }\r\n\r\n                    if (htmlObj) {\r\n                        if (wordWrap) {\r\n                            let remainWidth = rectWidth - lineX;\r\n                            if (remainWidth < htmlObj.width + 1) {\r\n                                if (lineX > 0) { //如果已经是开始位置了，就算放不下也不换行\r\n                                    endLine();\r\n                                    startLine();\r\n                                }\r\n                            }\r\n                        }\r\n                        addCmd(htmlObj, ele.style);\r\n                    }\r\n                }\r\n            }\r\n\r\n            endLine();\r\n            calcTextSize();\r\n        };\r\n\r\n        run();\r\n\r\n        if (this._overflow == Text.SHRINK) {\r\n            if (this._lines.length > 1 && this._textHeight > rectHeight) {\r\n                //多行的情况，涉及到自动换行，得用二分法查找最合适的比例，会消耗多一点计算资源\r\n                let low = 0;\r\n                let high = this._textStyle.fontSize;\r\n\r\n                //先尝试猜测一个比例\r\n                this._fontSizeScale = Math.sqrt(rectHeight / this._textHeight);\r\n                let cur = Math.floor(this._fontSizeScale * this._textStyle.fontSize);\r\n\r\n                while (true) {\r\n                    run();\r\n\r\n                    if (this._textWidth > rectWidth || this._textHeight > rectHeight)\r\n                        high = cur;\r\n                    else\r\n                        low = cur;\r\n                    if (high - low > 1 || high != low && cur == high) {\r\n                        cur = low + (high - low) / 2;\r\n                        this._fontSizeScale = cur / this._textStyle.fontSize;\r\n                    }\r\n                    else\r\n                        break;\r\n                }\r\n            }\r\n            else if (this._textWidth > rectWidth) {\r\n                this._fontSizeScale = rectWidth / this._textWidth;\r\n\r\n                run();\r\n\r\n                if (this._textWidth > rectWidth) //如果还超出，缩小一点再来一次\r\n                {\r\n                    let size = Math.floor(this._textStyle.fontSize * this._fontSizeScale);\r\n                    size--;\r\n                    this._fontSizeScale = size / this._textStyle.fontSize;\r\n\r\n                    run();\r\n                }\r\n            }\r\n        }\r\n        else if (this._overflow == Text.ELLIPSIS && (this._textWidth > rectWidth || this._textHeight > rectHeight)) {\r\n            //删掉超出的行\r\n            let i = this._lines.findIndex(line => line.y + line.height > rectHeight);\r\n            if (i == 0) i = 1;\r\n            let linesDeleted = false;\r\n            if (i != -1 && this._lines.length > i) {\r\n                recoverLines(this._lines.splice(i, this._lines.length - i));\r\n                linesDeleted = true;\r\n            }\r\n\r\n            //在最后一行加省略号\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            let cmd = lastLine.cmd;\r\n            let next: ITextCmd;\r\n            let done = false;\r\n            while (cmd) {\r\n                next = cmd.next;\r\n\r\n                if (done) {\r\n                    if (cmd.obj)\r\n                        cmd.obj = null;\r\n                    else if (cmd.wt)\r\n                        cmd.wt.cleanCache();\r\n                    cmdPool.push(cmd);\r\n                }\r\n                else if ((!next && linesDeleted) || cmd.x + cmd.width > rectWidth) {\r\n                    if (cmd.obj) //如果最后是个图片，那就删除图片，换成省略号\r\n                        cmd.obj = null;\r\n                    if (!cmd.wt)\r\n                        cmd.wt = new WordText();\r\n\r\n                    cmd.wt.setText(cmd.wt.text.substring(0, Math.max(0, cmd.wt.text.length - 2)) + ellipsisStr);\r\n                    fontSize = cmd.style.fontSize;\r\n                    cmd.width = cmd.wt.width = getTextWidth(cmd.wt.text);\r\n                    cmd.wt.splitRender = this._singleCharRender;\r\n                    cmd.next = null;\r\n                    done = true;\r\n                }\r\n\r\n                cmd = next;\r\n            }\r\n\r\n            if (done)\r\n                calcTextSize();\r\n        }\r\n\r\n        if (this._onPostLayout)\r\n            this._onPostLayout();\r\n\r\n        //处理水平对齐\r\n        let align = this._textStyle.align == \"center\" ? 1 : (this._textStyle.align == \"right\" ? 2 : 0);\r\n        if (align != 0 && this._isWidthSet) {\r\n            let rectWidth = this._width - padding[3] - padding[1];\r\n            for (let line of this._lines) {\r\n                let offsetX = 0;\r\n                if (align == 1)\r\n                    offsetX = Math.floor((rectWidth - line.width) * 0.5);\r\n                else if (align == 2)\r\n                    offsetX = rectWidth - line.width;\r\n\r\n                if (offsetX > 0)\r\n                    line.x = offsetX;\r\n            }\r\n        }\r\n\r\n        //处理垂直对齐\r\n        if (this._isHeightSet && this._textHeight < this._height) {\r\n            let offsetY = 0;\r\n            if (this._textStyle.valign === \"middle\")\r\n                offsetY = Math.floor((this._height - this._textHeight) * 0.5);\r\n            else if (this._textStyle.valign === \"bottom\")\r\n                offsetY = this._height - this._textHeight;\r\n\r\n            if (offsetY > 0) {\r\n                for (let line of this._lines) {\r\n                    line.y += offsetY;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._overflow == Text.SCROLL\r\n            && (this._isWidthSet && this._textWidth > this._width || this._isHeightSet && this._textHeight > this._height)) {\r\n            if (!this._scrollPos)\r\n                this._scrollPos = new Point(0, 0);\r\n            else {\r\n                let maxScrollX = this.maxScrollX;\r\n                let maxScrollY = this.maxScrollY;\r\n                if (this._scrollPos.x > maxScrollX)\r\n                    this._scrollPos.x = maxScrollX;\r\n                if (this._scrollPos.y > maxScrollY)\r\n                    this._scrollPos.y = maxScrollY;\r\n            }\r\n        }\r\n        else\r\n            this._scrollPos = null;\r\n\r\n        if (this._objContainer) {\r\n            this._objContainer.size(this._width, this._height);\r\n\r\n            if (this._scrollPos || this._overflow == Text.HIDDEN && this._objContainer.numChildren > 0) {\r\n                if (!this._objContainer.scrollRect)\r\n                    this._objContainer.scrollRect = new Rectangle();\r\n                this._objContainer.scrollRect.setTo(0, 0, this._width, this._height);\r\n            }\r\n            else\r\n                this._objContainer.scrollRect = null;\r\n        }\r\n\r\n        this._updatingLayout = false;\r\n\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    * 渲染文字。\r\n    * @param\tbegin 开始渲染的行索引。\r\n    * @param\tvisibleLineCount 渲染的行数。\r\n    */\r\n    protected renderText(): void {\r\n        let graphics = this.graphics;\r\n        graphics.clear(true);\r\n        this.drawBg();\r\n\r\n        let padding = this._padding;\r\n        let paddingLeft = padding[3];\r\n        let paddingTop = padding[0];\r\n        let bfont = this._bitmapFont;\r\n        let scrollPos = this._scrollPos;\r\n        let rectWidth = this._isWidthSet ? this._width : this._textWidth;\r\n        let rectHeight = this._isHeightSet ? this._height : this._textHeight;\r\n        let bottom = rectHeight - padding[2];\r\n        let clipped = this._overflow == Text.HIDDEN || this._overflow == Text.SCROLL;\r\n\r\n        if (clipped) {\r\n            graphics.save();\r\n            graphics.clipRect(0, 0, rectWidth, rectHeight);\r\n            this.repaint();\r\n        }\r\n\r\n        rectWidth -= (padding[3] + padding[1]);\r\n        rectHeight -= (padding[0] + padding[2]);\r\n\r\n        let x = 0, y = 0;\r\n        let lines = this._lines;\r\n        let lineCnt = lines.length;\r\n        let curLink: HtmlLink;\r\n        let linkStartX: number;\r\n        for (let i = 0; i < lineCnt; i++) {\r\n            let line = lines[i];\r\n            x = paddingLeft + line.x;\r\n            y = paddingTop + line.y;\r\n            if (scrollPos) {\r\n                x -= scrollPos.x;\r\n                y -= scrollPos.y;\r\n            }\r\n            let lineClipped = clipped && ((y + line.height) <= paddingTop || y >= bottom);\r\n\r\n            let cmd = line.cmd;\r\n            while (cmd) {\r\n                if (cmd.linkEnd) {\r\n                    if (curLink) {\r\n                        curLink.addRect(linkStartX, y, x + cmd.x + cmd.width - linkStartX, line.height);\r\n                        curLink = null;\r\n                    }\r\n                }\r\n\r\n                if (cmd.obj) {\r\n                    cmd.obj.pos(x + cmd.x, y + cmd.y);\r\n\r\n                    if (cmd.obj.element.type == HtmlElementType.Link) {\r\n                        curLink = <HtmlLink>cmd.obj;\r\n                        curLink.resetArea();\r\n                        linkStartX = x + cmd.x;\r\n                    }\r\n                }\r\n                else if (!lineClipped) {\r\n                    if (bfont) {\r\n                        let tx: number = 0;\r\n                        let str = cmd.wt.text;\r\n                        let color = bfont.tint ? cmd.style.color : \"#FFFFFF\";\r\n                        let scale = Math.floor((bfont.autoScaleSize ? cmd.style.fontSize : bfont.fontSize) * this._fontSizeScale) / bfont.fontSize;\r\n                        for (let i = 0, n = str.length; i < n; i++) {\r\n                            let c = str.charCodeAt(i);\r\n                            let g = bfont.dict[c];\r\n                            if (g) {\r\n                                if (g.texture)\r\n                                    graphics.drawImage(g.texture, x + cmd.x + tx + g.x * scale, y + cmd.y + g.y * scale, g.width * scale, g.height * scale, color);\r\n                                tx += Math.round(g.advance * scale);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let ctxFont = (<any>cmd.style)._ctxFont;\r\n                        if (cmd.style.stroke)\r\n                            graphics.fillBorderText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null, cmd.style.stroke, cmd.style.strokeColor);\r\n                        else\r\n                            graphics.fillText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null);\r\n                    }\r\n                }\r\n\r\n                if (!lineClipped && cmd.style.underline) {\r\n                    let thickness = Math.max(1, cmd.style.fontSize * this._fontSizeScale / 16);\r\n                    graphics.drawLine(x + cmd.x, y + line.height - thickness, x + cmd.x + cmd.width, y + line.height - thickness, cmd.style.underlineColor || cmd.style.color, thickness);\r\n                }\r\n\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (curLink) {\r\n                curLink.addRect(linkStartX, y, rectWidth - linkStartX + paddingLeft, line.height);\r\n                linkStartX = paddingLeft;\r\n            }\r\n        }\r\n\r\n        if (clipped)\r\n            graphics.restore();\r\n    }\r\n\r\n    protected drawBg() {\r\n        let cmd = this._bgDrawCmd;\r\n        if (this._bgColor || this._borderColor) {\r\n            if (!cmd) {\r\n                cmd = new DrawRectCmd();\r\n                cmd.x = cmd.y = 0;\r\n                cmd.width = cmd.height = 1;\r\n                cmd.percent = true;\r\n                this._bgDrawCmd = cmd;\r\n            }\r\n            cmd.fillColor = this._bgColor;\r\n            cmd.lineColor = this._borderColor;\r\n            cmd.lineWidth = this._borderColor ? 1 : 0;\r\n\r\n            let cmds = this.graphics.cmds;\r\n            let i = cmds.indexOf(cmd);\r\n            if (i != 0) {\r\n                if (i != -1)\r\n                    cmds.splice(i, 1);\r\n                cmds.unshift(cmd);\r\n                this.graphics.cmds = cmds;\r\n            }\r\n        }\r\n        else if (cmd) {\r\n            this.graphics.removeCmd(cmd);\r\n        }\r\n    }\r\n}\r\nexport interface ITextCmd {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    style: TextStyle;\r\n    wt: WordText;\r\n    obj: IHtmlObject;\r\n    linkEnd: boolean;\r\n    next: ITextCmd;\r\n}\r\n\r\nexport interface ITextLine {\r\n    x: number;\r\n    y: number;\r\n    height: number;\r\n    width: number;\r\n    cmd: ITextCmd;\r\n}\r\n\r\nconst cmdPool: Array<ITextCmd> = [];\r\nconst linePool: Array<ITextLine> = [];\r\n\r\nfunction recoverLines(lines: Array<ITextLine>) {\r\n    for (let line of lines) {\r\n        let cmd = line.cmd;\r\n        while (cmd) {\r\n            if (cmd.obj)\r\n                cmd.obj = null;\r\n            else if (cmd.wt)\r\n                cmd.wt.cleanCache();\r\n            cmdPool.push(cmd);\r\n            cmd = cmd.next;\r\n        }\r\n        line.cmd = null;\r\n    }\r\n\r\n    linePool.push(...lines);\r\n    lines.length = 0;\r\n}\r\n\r\nconst emojiTest = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nfunction testEmoji(str: string) {\r\n    if (null == str) return false;\r\n    return emojiTest.test(str);\r\n}\r\nfunction isEnglishChar(unicode:number):boolean {\r\n    return (unicode >= 65 && unicode <= 90) ||  // A-Z\r\n           (unicode >= 97 && unicode <= 122) || // a-z\r\n           unicode === 39; // 单引号\r\n  }\r\n  \r\n\r\nconst wordBoundaryTest = /(?:[^\\s\\!-\\/])+$/;\r\nconst normalizeCR = /\\r\\n/g;\r\nconst escapeCharsPattern = /\\\\(\\w)/g;\r\nconst escapeSequence: any = { \"\\\\n\": \"\\n\", \"\\\\t\": \"\\t\" };\r\nconst ellipsisStr = \"…\";\r\n\r\nfunction getReplaceStr(word: string): string {\r\n    return escapeSequence[word];\r\n}","import { HideFlags, NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Stage } from \"../display/Stage\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Event, ITouchInfo } from \"./Event\";\r\n\r\nvar _isFirstTouch = true;\r\nconst _tempPoint = new Point();\r\nconst _tempRect = new Rectangle();\r\nconst _rollOverChain: Array<Node> = [];\r\nconst _rollOutChain: Array<Node> = [];\r\nvar _inst: InputManager;\r\n\r\nexport class InputManager {\r\n\r\n    /**是否开启多点触控*/\r\n    static multiTouchEnabled: boolean = true;\r\n    /**是否开启鼠标/触摸事件，默认为true*/\r\n    static mouseEventsEnabled: boolean = true;\r\n    /**是否开启键盘事件，默认为true*/\r\n    static keyEventsEnabled: boolean = true;\r\n    /**如果鼠标按下的位置和弹起的位置距离超过这个阀值，则不视为一次点击*/\r\n    static clickTestThreshold = 10;\r\n\r\n    /** canvas 上的鼠标X坐标。*/\r\n    static mouseX: number = 0;\r\n    /** canvas 上的鼠标Y坐标。*/\r\n    static mouseY: number = 0;\r\n    /** 当前是否正在输入文字 */\r\n    static isTextInputting = false;\r\n    static isiOSWKwebView: boolean = false;\r\n    protected _stage: Stage;\r\n    protected _mouseTouch: TouchInfo;\r\n    protected _touches: TouchInfo[];\r\n    protected _touchPool: TouchInfo[];\r\n    protected _touchTarget: Node;\r\n\r\n    //用于IDE处理\r\n    protected _eventType: number;\r\n    protected _nativeEvent: MouseEvent | WheelEvent | TouchEvent;\r\n\r\n    protected _pressKeys: Set<string | number>;\r\n    protected _keyEvent: Event;\r\n\r\n    private _touchInput: boolean;\r\n\r\n    constructor() {\r\n        this._touches = [];\r\n        this._touchPool = [];\r\n        this._mouseTouch = new TouchInfo(this._touches);\r\n        this._pressKeys = new Set();\r\n        this._keyEvent = new Event();\r\n        this._keyEvent._touches = this._touches;\r\n    }\r\n\r\n    static get inst() {\r\n        return _inst;\r\n    }\r\n\r\n    static getTouchPos(touchId?: number): Readonly<Point> {\r\n        if (touchId == null)\r\n            return _inst._touches[0]?.pos || Point.EMPTY;\r\n        else\r\n            return _inst.getTouch(touchId)?.pos || Point.EMPTY;\r\n    }\r\n\r\n    static get touchTarget(): Node {\r\n        return _inst._touchTarget;\r\n    }\r\n\r\n    static get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return _inst._touches;\r\n    }\r\n\r\n    static get touchCount(): number {\r\n        return _inst._touches.length;\r\n    }\r\n\r\n    static cancelClick(touchId?: number): void {\r\n        let touch = touchId == null ? _inst._touches[0] : _inst.getTouch(touchId);\r\n        if (touch)\r\n            touch.clickCancelled = true;\r\n    }\r\n\r\n    /**\r\n     * 返回指定键是否被按下。\r\n     * @param\tkey 键值。参考：https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\r\n     * @return 是否被按下。\r\n     */\r\n    static hasKeyDown(key: string | number): boolean {\r\n        return _inst._pressKeys.has(key);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 初始化。\r\n     */\r\n    static __init__(stage: Stage, canvas: HTMLCanvasElement): void {\r\n        let inst = _inst = new InputManager();\r\n        inst._stage = stage;\r\n\r\n        canvas.oncontextmenu = () => {\r\n            return false;\r\n        };\r\n        canvas.addEventListener(\"mousedown\", ev => {\r\n            if (!Browser.onIE)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseup\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mousemove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseout\", ev => {\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 3);\r\n        }, { passive: false });\r\n        // canvas.addEventListener(\"mouseover\", ev => {\r\n        // });\r\n\r\n        canvas.addEventListener(\"touchstart\", ev => {\r\n            inst._touchInput = true;\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchend\", ev => {\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            _isFirstTouch = false;\r\n            inst.handleTouch(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchmove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchcancel\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 3);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"wheel\", ev => {\r\n            inst.handleMouse(ev, 4);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"pointerdown\", ev => {\r\n            canvas.setPointerCapture(ev.pointerId);\r\n        });\r\n        canvas.addEventListener(\"pointerup\", ev => {\r\n            canvas.releasePointerCapture(ev.pointerId);\r\n        }, true);\r\n\r\n        let document = <Document>Browser.document;\r\n        document.addEventListener(\"keydown\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keypress\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keyup\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n    }\r\n\r\n    handleMouse(ev: MouseEvent | WheelEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n\r\n        //console.log(\"handleMouse\", type);\r\n        let touch: TouchInfo = this._mouseTouch;\r\n\r\n        _tempPoint.setTo(ev.pageX || ev.clientX, ev.pageY || ev.clientY);\r\n        if (this._stage._canvasTransform)\r\n            this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n        InputManager.mouseX = _tempPoint.x;\r\n        InputManager.mouseY = _tempPoint.y;\r\n        let x = _tempPoint.x / this._stage.clientScaleX;\r\n        let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n        touch.event.nativeEvent = ev;\r\n        if (type == 3 || !InputManager.mouseEventsEnabled)\r\n            touch.target = this._touchTarget = null;\r\n        else {\r\n            touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n\r\n            let ix = Math.round(x);\r\n            let iy = Math.round(y);\r\n\r\n            if (ix != touch.pos.x || iy != touch.pos.y) {\r\n                this._stage._mouseMoveTime = Browser.now();\r\n\r\n                touch.pos.setTo(ix, iy);\r\n                touch.move();\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                    for (let t of touch.downTargets)\r\n                        t.event(Event.MOUSE_DRAG, touch.event);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (touch.lastRollOver != touch.target)\r\n            this.handleRollOver(touch);\r\n\r\n        if (type == 0) {\r\n            if (!touch.began) {\r\n                touch.begin();\r\n                this._touches[0] = touch;\r\n                touch.event.button = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    this.handleFocus();\r\n\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_DOWN, touch.event);\r\n                }\r\n            }\r\n        }\r\n        else if (type == 1) {\r\n            if (touch.began) {\r\n                touch.end();\r\n                this._touches.length = 0;\r\n                touch.event.button = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_UP, touch.event);\r\n\r\n                    if (touch.moved) {\r\n                        for (let t of touch.downTargets)\r\n                            t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                    }\r\n\r\n                    let clickTarget = touch.clickTest();\r\n                    if (clickTarget) {\r\n                        if (ev.button == 0) {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                            clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                            if (touch.clickCount == 2)\r\n                                clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                        else {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n                            clickTarget.bubbleEvent(Event.RIGHT_CLICK, touch.event);\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                touch.event.button = 0;\r\n            }\r\n        }\r\n        else if (type == 4) {\r\n            if (InputManager.mouseEventsEnabled) {\r\n                touch.event.delta = (<WheelEvent>ev).deltaY * 0.025;\r\n                touch.target?.bubbleEvent(Event.MOUSE_WHEEL, touch.event);\r\n                touch.event.delta = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTouch(ev: TouchEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n\r\n        let touches = ev.changedTouches;\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let uTouch: Touch = touches[i];\r\n\r\n            if (!InputManager.multiTouchEnabled\r\n                && this._touches.length > 0\r\n                && this._touches[0].touchId != uTouch.identifier)\r\n                continue;\r\n\r\n            _tempPoint.setTo(uTouch.pageX, uTouch.pageY);\r\n            if (this._stage._canvasTransform)\r\n                this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n            InputManager.mouseX = _tempPoint.x;\r\n            InputManager.mouseY = _tempPoint.y;\r\n            let x = _tempPoint.x / this._stage.clientScaleX;\r\n            let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n            let touch = this.getTouch(uTouch.identifier, type == 0);\r\n            if (!touch)\r\n                continue;\r\n\r\n            touch.event.nativeEvent = ev;\r\n            touch.event.touchId = touch.touchId;\r\n            if (type == 3 || !InputManager.mouseEventsEnabled)\r\n                touch.target = this._touchTarget = null;\r\n            else {\r\n                touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n                this._stage._mouseMoveTime = Browser.now();\r\n\r\n                let ix = Math.round(x);\r\n                let iy = Math.round(y);\r\n\r\n                if (Math.abs(ix - touch.pos.x) > 1.5 || Math.abs(iy - touch.pos.y) > 1.5) {\r\n                    touch.pos.setTo(ix, iy);\r\n\r\n                    if (type == 2) {\r\n                        touch.move();\r\n\r\n                        if (InputManager.mouseEventsEnabled) {\r\n\r\n                            touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG, touch.event);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (touch.lastRollOver != touch.target)\r\n                this.handleRollOver(touch);\r\n\r\n            if (type == 0) {\r\n                if (!touch.began) {\r\n                    touch.begin();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        this.handleFocus();\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    }\r\n                }\r\n            }\r\n            else if (type == 1 || type == 3) {\r\n                if (touch.began) {\r\n                    touch.end();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n\r\n                        if (touch.moved) {\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                        }\r\n\r\n                        if (type != 3) {\r\n                            let clickTarget = touch.clickTest();\r\n                            if (clickTarget != null) {\r\n                                touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                                clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                                if (touch.clickCount == 2)\r\n                                    clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                                touch.event.isDblClick = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    touch.target = null;\r\n                    this.handleRollOver(touch);\r\n\r\n                    touch.reset();\r\n                    this._touches.splice(this._touches.indexOf(touch), 1);\r\n                    this._touchPool.push(touch);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getTouch(touchId: number, shouldCreate?: boolean): TouchInfo {\r\n        let touch = this._touches.find(e => e.touchId == touchId);\r\n        if (touch || !shouldCreate)\r\n            return touch;\r\n\r\n        touch = this._touchPool.length > 0 ? this._touchPool.pop() : new TouchInfo(this._touches);\r\n        touch.touchId = touchId;\r\n        this._touches.push(touch);\r\n\r\n        return touch;\r\n    }\r\n\r\n    private handleFocus() {\r\n        if (InputManager.isTextInputting\r\n            && this._stage.focus && (<any>this._stage.focus)[\"focus\"]\r\n            && !this._stage.focus.contains(this._touchTarget)) {\r\n            // 从UI Input组件中取得Input引用\r\n            // _tf 是TextInput的属性\r\n            let pre_input: any = (<any>this._stage.focus)['_tf'] || this._stage.focus;\r\n            let new_input = (<any>this._touchTarget)['_tf'] || this._touchTarget;\r\n\r\n            // 新的焦点是Input的情况下，不需要blur；\r\n            // 不过如果是Input和TextArea之间的切换，还是需要重新弹出输入法；\r\n            if (new_input.nativeInput && new_input.multiline == pre_input.multiline)\r\n                pre_input['_focusOut']();\r\n            else\r\n                pre_input.focus = false;\r\n        }\r\n    }\r\n\r\n    handleKeys(ev: KeyboardEvent): void {\r\n        let type = ev.type;\r\n        let keyCode = ev.keyCode;\r\n        //判断同时按下的键\r\n        if (type === \"keydown\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.add(keyCode);\r\n            this._pressKeys.add(ev.key);\r\n        }\r\n        else if (type === \"keyup\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.delete(keyCode);\r\n            this._pressKeys.delete(ev.key);\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = ev;\r\n\r\n        if (InputManager.keyEventsEnabled) {\r\n            let target = (this._stage.focus && (this._stage.focus.event != null) && this._stage.focus.displayedInStage) ? this._stage.focus : this._stage;\r\n            let ct = target;\r\n            while (ct) {\r\n                ct.event(type, this._keyEvent.setTo(type, ct, target));\r\n                ct = ct.parent;\r\n            }\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = null;\r\n    }\r\n\r\n    getNodeUnderPoint(x: number, y: number): Node {\r\n        let target: Node = this.getSpriteUnderPoint(this._stage, x, y);\r\n        if (!target)\r\n            target = this.getSprite3DUnderPoint(x, y);\r\n        return target || this._stage;\r\n    }\r\n\r\n    /**\r\n     * 获取指定坐标下的sprite。x/y值是sp的本地坐标\r\n     * @param sp\r\n     * @param x\r\n     * @param y\r\n     */\r\n    getSpriteUnderPoint(sp: Sprite, x: number, y: number): Sprite {\r\n        //如果有裁剪，则先判断是否在裁剪范围内\r\n        let scrollRect = sp._style.scrollRect;\r\n        if (scrollRect && !sp._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\r\n            _tempRect.setTo(scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\r\n            if (!_tempRect.contains(x, y))\r\n                return null;\r\n        }\r\n\r\n        let editing = sp._getBit(NodeFlags.EDITING_NODE);\r\n\r\n        if (!editing && sp.hitTestPrior && !sp.mouseThrough && sp != this._stage && !this.hitTest(sp, x, y))\r\n            return null;\r\n\r\n        for (let i = sp._children.length - 1; i > -1; i--) {\r\n            let child = <Sprite>sp._children[i];\r\n            let childEditing = editing || child._getBit(NodeFlags.EDITING_NODE);\r\n            //只有接受交互事件的，才进行处理\r\n            if (!child._destroyed\r\n                && (childEditing ? ((!child.hasHideFlag(HideFlags.HideInHierarchy) || child.mouseThrough) && !child._getBit(NodeFlags.HIDE_BY_EDITOR)) : child._mouseState > 1)\r\n                && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY))) {\r\n                _tempPoint.setTo(x, y);\r\n                child.fromParentPoint(_tempPoint);\r\n                let ret = this.getSpriteUnderPoint(child, _tempPoint.x, _tempPoint.y);\r\n                if (ret)\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        if (editing) {\r\n            if (!sp._getBit(NodeFlags.LOCK_BY_EDITOR)\r\n                && !sp.hasHideFlag(HideFlags.HideInHierarchy)\r\n                && this.hitTest(sp, x, y, editing))\r\n                return sp;\r\n        }\r\n        else if (sp != this._stage) {\r\n            if (sp.hitTestPrior && !sp.mouseThrough || this.hitTest(sp, x, y))\r\n                return sp;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSprite3DUnderPoint(x: number, y: number): Node {\r\n        return null;\r\n    }\r\n\r\n    hitTest(sp: Sprite, x: number, y: number, editing?: boolean): boolean {\r\n        let isHit: boolean = false;\r\n        if (sp.scrollRect) {\r\n            x -= sp._style.scrollRect.x;\r\n            y -= sp._style.scrollRect.y;\r\n        }\r\n        let hitArea = sp._style.hitArea;\r\n        let mouseThrough = sp.mouseThrough;\r\n        if (editing) {\r\n            hitArea = null;\r\n            mouseThrough = false;\r\n        }\r\n\r\n        if (hitArea) {\r\n            return hitArea.contains(x, y, sp);\r\n        }\r\n\r\n        if (sp.width > 0 && sp.height > 0 || mouseThrough || hitArea) {\r\n            //判断是否在矩形区域内\r\n            if (!mouseThrough)\r\n                isHit = (hitArea ? hitArea : _tempRect.setTo(0, 0, sp.width, sp.height)).contains(x, y);\r\n            else //如果可穿透，则根据子对象实际大小进行碰撞\r\n                isHit = sp.getGraphicBounds().contains(x, y);\r\n        }\r\n        return isHit;\r\n    }\r\n\r\n    private handleRollOver(touch: TouchInfo) {\r\n        if (!InputManager.mouseEventsEnabled) {\r\n            touch.lastRollOver = touch.target;\r\n            return;\r\n        }\r\n\r\n        _rollOverChain.length = 0;\r\n        _rollOutChain.length = 0;\r\n\r\n        let ele = touch.lastRollOver;\r\n        while (ele) {\r\n            _rollOutChain.push(ele);\r\n            ele = ele.parent;\r\n        }\r\n        touch.lastRollOver = touch.target;\r\n\r\n        ele = touch.target;\r\n        while (ele) {\r\n            let i = _rollOutChain.indexOf(ele);\r\n            if (i != -1) {\r\n                _rollOutChain.splice(i, _rollOutChain.length - i);\r\n                break;\r\n            }\r\n\r\n            _rollOverChain.push(ele);\r\n\r\n            ele = ele.parent;\r\n        }\r\n\r\n        let cnt = _rollOutChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOutChain[i];\r\n                if (!ele._destroyed)\r\n                    ele.event(Event.MOUSE_OUT, touch.event.setTo(Event.MOUSE_OUT, ele, ele));\r\n            }\r\n            _rollOutChain.length = 0;\r\n        }\r\n\r\n        cnt = _rollOverChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOverChain[i];\r\n                if (ele.activeInHierarchy)\r\n                    ele.event(Event.MOUSE_OVER, touch.event.setTo(Event.MOUSE_OVER, ele, ele));\r\n            }\r\n            _rollOverChain.length = 0;\r\n        };\r\n    }\r\n}\r\n\r\nconst clickTrack: Record<number, { pos: Point, time: number, button: number }> = {};\r\n\r\nclass TouchInfo implements ITouchInfo {\r\n    readonly event: Event;\r\n    readonly pos: Point;\r\n    touchId: number;\r\n    clickCount: number;\r\n    began: boolean;\r\n    target: Node;\r\n    lastRollOver: Node;\r\n    clickCancelled: boolean;\r\n    moved: boolean;\r\n    readonly downTargets: Node[];\r\n\r\n    private downPos: Point;\r\n\r\n    constructor(touches: Array<TouchInfo>) {\r\n        this.downPos = new Point();\r\n        this.downTargets = [];\r\n        this.event = new Event();\r\n        this.event._touches = touches;\r\n        this.pos = this.event.touchPos;\r\n        this.reset();\r\n    }\r\n\r\n    begin() {\r\n        this.began = true;\r\n        this.clickCancelled = false;\r\n        this.moved = false;\r\n        this.downPos.copy(this.pos);\r\n\r\n        this.downTargets.length = 0;\r\n        if (this.target) {\r\n            let ele = this.target;\r\n            while (ele) {\r\n                this.downTargets.push(ele);\r\n                ele = ele.parent;\r\n            }\r\n        }\r\n    }\r\n\r\n    move() {\r\n        this.moved = true;\r\n\r\n        if (Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold)\r\n            this.clickCancelled = true;\r\n    }\r\n\r\n    end() {\r\n        this.began = false;\r\n        let now = performance.now();\r\n\r\n        let lastClick = clickTrack[this.touchId];\r\n        if (!lastClick) {\r\n            lastClick = { pos: new Point(), time: 0, button: 0 };\r\n            clickTrack[this.touchId] = lastClick;\r\n        }\r\n\r\n        if (this.downTargets.length == 0\r\n            || this.clickCancelled\r\n            || Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold) {\r\n            this.clickCancelled = true;\r\n            lastClick.time = 0;\r\n            this.clickCount = 1;\r\n        }\r\n        else {\r\n            if (now - lastClick.time < 350\r\n                && Math.abs(this.pos.x - lastClick.pos.x) < InputManager.clickTestThreshold\r\n                && Math.abs(this.pos.y - lastClick.pos.y) < InputManager.clickTestThreshold\r\n                && lastClick.button == this.event.button) {\r\n                this.clickCount = 2;\r\n            }\r\n            else\r\n                this.clickCount = 1;\r\n            lastClick.time = now;\r\n            lastClick.pos.copy(this.pos);\r\n            lastClick.button = this.event.button;\r\n        }\r\n    }\r\n\r\n    clickTest(): Node {\r\n        if (this.clickCancelled) {\r\n            this.downTargets.length = 0;\r\n            return null;\r\n        }\r\n\r\n        let obj = this.downTargets[0];\r\n        if (obj.activeInHierarchy) {\r\n            this.downTargets.length = 0;\r\n            return obj;\r\n        }\r\n\r\n        obj = this.target;\r\n        while (obj) {\r\n            let i = this.downTargets.indexOf(obj);\r\n            if (i != -1 && obj.activeInHierarchy)\r\n                break;\r\n\r\n            obj = obj.parent;\r\n        }\r\n\r\n        this.downTargets.length = 0;\r\n\r\n        return obj;\r\n    }\r\n\r\n    reset() {\r\n        this.pos.setTo(0, 0);\r\n        this.touchId = 0;\r\n        this.clickCount = 0;\r\n        this.began = false;\r\n        this.moved = false;\r\n        this.target = null;\r\n        this.downTargets.length = 0;\r\n        this.lastRollOver = null;\r\n        this.clickCancelled = false;\r\n    }\r\n}\r\n","import { ILaya } from \"./../../ILaya\";\r\nimport { Config } from \"./../../Config\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { VertexElementFormat } from \"./VertexElementFormat\";\r\n\r\n/**\r\n * <code>Render</code> 是渲染管理类。它是一个单例，可以使用 Laya.render 访问。\r\n */\r\nexport class Render {\r\n    /** @internal */\r\n    static _context: Context;\r\n    /** @internal 主画布。canvas和webgl渲染都用这个画布*/\r\n    static _mainCanvas: HTMLCanvas;\r\n    /** 表示是否是 3D 模式。*/\r\n    static is3DMode: boolean;\r\n    /**自定义帧循环 */\r\n    static _customRequestAnimationFrame: any;\r\n    /**帧循环函数 */\r\n    static _loopFunction: any;\r\n\r\n    /** 当前的帧数 */\r\n    private static lastFrm = 0;\r\n    /** 第一次运行标记 */\r\n    private _first = true;\r\n    /** 刚启动的时间。由于微信的rAF不标准，传入的stamp参数不对，因此自己计算一个从启动开始的相对时间 */\r\n    private _startTm = 0;\r\n\r\n    /** @internal */\r\n    private static ifps = 1000 / 60;\r\n\r\n    static _Render: Render;\r\n\r\n    static customRequestAnimationFrame(value: any, loopFun: any) {\r\n        Render._customRequestAnimationFrame = value;\r\n        Render._loopFunction = loopFun;\r\n    }\r\n\r\n    private static _customEngine: IRenderEngine;\r\n    static set customRenderEngine(engine: IRenderEngine) {\r\n        Render._customEngine = engine;\r\n    }\r\n    static get customRenderEngine() {\r\n        return Render._customEngine;\r\n    }\r\n\r\n\r\n    /**\r\n     * 初始化引擎。\r\n     * @param\twidth 游戏窗口宽度。\r\n     * @param\theight\t游戏窗口高度。\r\n     */\r\n    constructor(width: number, height: number, mainCanv: HTMLCanvas) {\r\n        Render._Render = this;\r\n        Render._mainCanvas = mainCanv;\r\n        let source: HTMLCanvasElement = Render._mainCanvas.source as HTMLCanvasElement;\r\n        //创建主画布。改到Browser中了，因为为了runtime，主画布必须是第一个\r\n        source.id = \"layaCanvas\";\r\n        source.width = width;\r\n        source.height = height;\r\n        if (LayaEnv.isConch) {\r\n            document.body.appendChild(source);\r\n        }\r\n\r\n        this.initRender(Render._mainCanvas, width, height);\r\n        window.requestAnimationFrame(loop);\r\n        let me = this;\r\n        let lastFrmTm = performance.now();\r\n        let fps = Config.FPS;\r\n        let ifps = Render.ifps = 1000 / fps; //如果VR的话，需要改这个\r\n        function loop(stamp: number) {\r\n            //let perf = PerfHUD.inst;\r\n            let sttm = performance.now();\r\n            //perf && perf.updateValue(0, sttm-lastFrmTm);\r\n            lastFrmTm = sttm;\r\n            if (me._first) {\r\n                // 把starttm转成帧对齐\r\n                me._startTm = Math.floor(stamp / ifps) * ifps;\r\n                me._first = false;\r\n            }\r\n            // 与第一帧开始时间的delta\r\n            stamp -= me._startTm;\r\n            // 计算当前帧数\r\n            let frm = Math.floor(stamp / ifps);    // 不能|0 在微信下会变成负的\r\n            // 是否已经跨帧了\r\n            let dfrm = frm - Render.lastFrm;\r\n            if (dfrm > 0 || LayaEnv.isConch || !Config.fixedFrames) {\r\n                //不限制\r\n                Render.lastFrm = frm;\r\n                ILaya.stage._loop();\r\n            }\r\n            //perf && perf.updateValue(1, performance.now()-sttm);\r\n\r\n            if (!!Render._customRequestAnimationFrame && !!Render._loopFunction) {\r\n                Render._customRequestAnimationFrame(Render._loopFunction);\r\n            }\r\n            else\r\n                window.requestAnimationFrame(loop);\r\n        }\r\n        ILaya.stage.on(\"visibilitychange\", this, this._onVisibilitychange);\r\n    }\r\n\r\n    /**@private */\r\n    private _timeId: number = 0;\r\n\r\n    /**@private */\r\n    private _onVisibilitychange(): void {\r\n        if (!ILaya.stage.isVisibility) {\r\n            this._timeId = window.setInterval(this._enterFrame, 1000);\r\n        } else if (this._timeId != 0) {\r\n            window.clearInterval(this._timeId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取帧对齐的时间。\r\n     * 用这个做动画的时间参数会更平滑。\r\n     * 从render构造开始算起。\r\n     * @returns \r\n     */\r\n    static vsyncTime() {\r\n        return Render.lastFrm * Render.ifps;\r\n    }\r\n\r\n    initRender(canvas: HTMLCanvas, w: number, h: number): boolean {\r\n\r\n        canvas.size(w, h);\t//在ctx之后调用。\r\n        ShaderDefines2D.__init__();\r\n        VertexElementFormat.__init__();\r\n        Context.__init__();\r\n        SubmitBase.__init__();\r\n\r\n        var ctx: Context = new Context();\r\n        Context._rendercontex = ctx;\r\n        ctx.isMain = true;\r\n        Render._context = ctx;\r\n        canvas._setContext(ctx);\r\n\r\n\r\n        Shader2D.__init__();\r\n        BlendMode._init_();\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**@private */\r\n    private _enterFrame(e: any = null): void {\r\n        ILaya.stage._loop();\r\n    }\r\n\r\n    /** 目前使用的渲染器。*/\r\n    static get context(): Context {\r\n        return Render._context;\r\n    }\r\n\r\n    /** 渲染使用的原生画布引用。 */\r\n    static get canvas(): any {\r\n        return Render._mainCanvas.source;\r\n    }\r\n}\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport const TypedArrayClasses: Record<string, any> = {\r\n    \"Int8Array\": Int8Array,\r\n    \"Uint8Array\": Uint8Array,\r\n    \"Int16Array\": Int16Array,\r\n    \"Uint16Array\": Uint16Array,\r\n    \"Int32Array\": Int32Array,\r\n    \"Uint32Array\": Uint32Array,\r\n    \"Float32Array\": Float32Array,\r\n    \"Float64Array\": Float64Array\r\n};\r\n\r\nexport interface IDecodeObjOptions {\r\n    outErrors?: Array<string>;\r\n    getNodeByRef?: (id: string | string[]) => Node;\r\n    getNodeData?: (node: Node) => any;\r\n}\r\n\r\nvar _errors: Array<string>;\r\nvar _getNodeByRef: (id: string | string[]) => Node;\r\nvar _getNodeData: (node: Node) => any;\r\n\r\nexport class SerializeUtil {\r\n    public static isDeserializing = false;\r\n\r\n    public static decodeObj(data: any, obj?: any, options?: IDecodeObjOptions) {\r\n        if (options) {\r\n            _errors = options.outErrors;\r\n            _getNodeByRef = options.getNodeByRef;\r\n            _getNodeData = options.getNodeData;\r\n        }\r\n        else {\r\n            _errors = null;\r\n            _getNodeByRef = null;\r\n            _getNodeData = null;\r\n        }\r\n\r\n        SerializeUtil.isDeserializing = true;\r\n        try {\r\n            return SerializeUtil._decodeObj(data, obj);\r\n        } finally {\r\n            SerializeUtil.isDeserializing = false;\r\n        }\r\n    }\r\n\r\n    private static _decodeObj(data: any, obj?: any): any {\r\n        if (data == null)\r\n            return null;\r\n        else if (Array.isArray(data)) {\r\n            let arr: any[] = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let v = data[i];\r\n                if (v != null) {\r\n                    try {\r\n                        arr[i] = SerializeUtil._decodeObj(v);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                        arr[i] = null;\r\n                    }\r\n                }\r\n                else\r\n                    arr[i] = null;\r\n            }\r\n            return arr;\r\n        }\r\n        else if (typeof (data) === \"object\") {\r\n            if (data._$uuid != null) {\r\n                let url = URL.getResURLByUUID(data._$uuid);\r\n                return ILaya.loader.getRes(url, SerializeUtil.getLoadTypeByEngineType(data._$type));\r\n            }\r\n\r\n            if (data._$ref != null) {\r\n                let node = _getNodeByRef?.(data._$ref);\r\n                if (node && data._$type) {\r\n                    let cls: any = ClassUtils.getClass(data._$type);\r\n                    if (cls)\r\n                        return node.getComponent(cls);\r\n                    else\r\n                        return null;\r\n                }\r\n                else\r\n                    return node;\r\n            }\r\n\r\n            let type = data._$type;\r\n\r\n            if (type === \"any\") {\r\n                if (data._$type)\r\n                    return data.value;\r\n                else\r\n                    return data;\r\n            }\r\n\r\n            let typedArray = TypedArrayClasses[type];\r\n            if (typedArray != null) {\r\n                if (data._$type)\r\n                    return new typedArray(data.value);\r\n                else\r\n                    return new typedArray(data);\r\n            }\r\n\r\n            if (!obj) {\r\n                let cls: any = ClassUtils.getClass(type);\r\n                if (!cls) {\r\n                    //this._errors.push(new Error(`missing type '${type}'`));\r\n                    return null;\r\n                }\r\n\r\n                obj = new cls();\r\n            }\r\n\r\n            for (let key in data) {\r\n                if (key.startsWith(\"_$\"))\r\n                    continue;\r\n\r\n                let v = data[key];\r\n                if (v == null || typeof (v) !== \"object\" || Array.isArray(v)\r\n                    || v._$type || v._$uuid || v._$ref) {\r\n                    try {\r\n                        let v2 = SerializeUtil._decodeObj(v);\r\n                        obj[key] = v2;\r\n\r\n                        if (v2 != null && v != null && v._$tmpl)\r\n                            obj[v._$tmpl] = _getNodeData(v2);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                    }\r\n                }\r\n                else {\r\n                    let childObj = obj[key];\r\n                    if (childObj) {\r\n                        try {\r\n                            SerializeUtil._decodeObj(v, childObj);\r\n                        }\r\n                        catch (error: any) {\r\n                            if (_errors)\r\n                                _errors.push(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (obj.onAfterDeserialize)\r\n                obj.onAfterDeserialize();\r\n\r\n            return obj;\r\n        }\r\n        else\r\n            return data;\r\n    }\r\n\r\n    static getLoadTypeByEngineType(type: string) {\r\n        switch (type) {\r\n            case \"Texture2D\":\r\n            case \"RenderTexture\":\r\n                return Loader.TEXTURE2D;\r\n            case \"TextureCube\":\r\n                return Loader.TEXTURECUBE;\r\n            case \"Prefab\":\r\n                return Loader.HIERARCHY;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n    static bakeOverrideData(overrideData: any) {\r\n        let dataMap: Record<string, Array<any>> = null;\r\n        for (let n = overrideData.length, i = n - 1; i >= 0; i--) {\r\n            let arr = overrideData[i];\r\n            if (arr && arr.length > 0) {\r\n                for (let d of arr) {\r\n                    let od = d._$override || d._$parent;\r\n                    let k: string;\r\n                    if (Array.isArray(od))\r\n                        k = od[n - i - 1];\r\n                    else if (i == n - 1)\r\n                        k = od;\r\n\r\n                    if (k != null) {\r\n                        if (!dataMap) dataMap = {};\r\n                        let arr2 = dataMap[k];\r\n                        if (!arr2)\r\n                            dataMap[k] = arr2 = [];\r\n                        arr2.push(n - i, d);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return dataMap;\r\n    }\r\n\r\n    static applyOverrideData(nodeData: any, overrideDataMap: Record<string, Array<any>>) {\r\n        function test(obj: any) {\r\n            if (overrideDataMap[obj._$id])\r\n                return true;\r\n\r\n            let children: Array<any> = obj._$child;\r\n            if (children && children.find(child => test(child)))\r\n                return true;\r\n\r\n            return false;\r\n        }\r\n\r\n        function cloneTree(obj: any) {\r\n            let ret = Object.assign({}, obj);\r\n            let children: Array<any> = ret._$child;\r\n            if (children)\r\n                ret._$child = children.map(c => cloneTree(c));\r\n            let comps: Array<any> = ret._$comp;\r\n            if (comps)\r\n                ret._$comp = comps.map(c => Object.assign({}, c));\r\n            return ret;\r\n        }\r\n\r\n        function visit(data: any) {\r\n            let children: Array<any> = data._$child;\r\n            if (children) {\r\n                for (let child of children) {\r\n                    if (child._$id)\r\n                        visit(child);\r\n                }\r\n            }\r\n\r\n            let od = overrideDataMap[data._$id];\r\n            if (od) {\r\n                for (let i = 0; i < od.length; i += 2) {\r\n                    let j = od[i];\r\n                    let e = od[i + 1];\r\n                    let idPath: string | string[];\r\n                    if (idPath = e._$override) {\r\n                        let toWrite: any;\r\n                        if (Array.isArray(idPath)) {\r\n                            if (j == idPath.length - 1) {\r\n                                let k = idPath[j];\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else\r\n                                    toWrite = children.find(c => c._$override == k);\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else if (j < idPath.length - 1) {\r\n                                let k = idPath.slice(j);\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else {\r\n                                    toWrite = children.find(c => {\r\n                                        let o = c._$override;\r\n                                        return Array.isArray(o) && arrayEquals(o, k);\r\n                                    });\r\n                                }\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else\r\n                                toWrite = data;\r\n                        }\r\n                        else\r\n                            toWrite = data;\r\n\r\n                        mergeData(toWrite, e);\r\n                        if (e._$comp) {\r\n                            let comps: Array<any> = toWrite._$comp;\r\n                            if (!comps)\r\n                                toWrite._$comp = comps = [];\r\n                            for (let comp of e._$comp) {\r\n                                let compType = comp._$type || comp._$override;\r\n                                let c = comps.find(c => c._$override == compType || c._$type == compType);\r\n                                if (!c) {\r\n                                    c = {};\r\n                                    if (comp._$type)\r\n                                        c._$type = compType;\r\n                                    else\r\n                                        c._$override = compType;\r\n                                    comps.push(c);\r\n                                }\r\n                                mergeData(c, comp);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (idPath = e._$parent) { //增加的节点\r\n                        if (!children)\r\n                            data._$child = children = [];\r\n                        let k: string | string[];\r\n                        if (j < idPath.length) { //挂接的节点在嵌套预制体内部\r\n                            if (j == idPath.length - 1)\r\n                                k = idPath[j];\r\n                            else\r\n                                k = idPath.slice(j);\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            toWrite._$parent = k;\r\n                            children.push(toWrite);\r\n                        }\r\n                        else {\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            delete toWrite._$parent;\r\n                            if (data._$prefab) {\r\n                                children.push(toWrite);\r\n                            }\r\n                            else {\r\n                                delete toWrite._$index;\r\n                                if (e._$index < children.length)\r\n                                    children.splice(e._$index, 0, toWrite);\r\n                                else\r\n                                    children.push(toWrite);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (test(nodeData)) {\r\n            nodeData = cloneTree(nodeData);\r\n            visit(nodeData);\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n}\r\n\r\nfunction mergeData(target: any, overrided: any) {\r\n    for (let k in overrided) {\r\n        if (k.startsWith(\"_$\"))\r\n            continue;\r\n\r\n        let v = overrided[k];\r\n        if (v != null && typeof (v) === \"object\" && !Array.isArray(v) && !(v._$type || v._$uuid || v._$ref)) {\r\n            let v2 = target[k];\r\n            if (v2 != null && typeof (v2) === \"object\") {\r\n                target[k] = v2 = Object.assign({}, v2);\r\n                mergeData(v2, v);\r\n            }\r\n            else\r\n                target[k] = v;\r\n        }\r\n        else\r\n            target[k] = v;\r\n    }\r\n}\r\n\r\nfunction arrayEquals(a: ReadonlyArray<any>, b: ReadonlyArray<any>): boolean {\r\n    if (a.length === b.length) {\r\n        for (var i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { Text } from \"./Text\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { InputManager } from \"../events/InputManager\";\r\nimport { Render } from \"../renders/Render\";\r\nimport { Config } from \"../../Config\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * 用户输入一个或多个文本字符时后调度。\r\n * @eventType Event.INPUT\r\n * */\r\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 文本发生变化后调度。\r\n * @eventType Event.CHANGE\r\n * */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 用户在输入框内敲回车键后，将会调度 <code>enter</code> 事件。\r\n * @eventType Event.ENTER\r\n * */\r\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 显示对象获得焦点后调度。\r\n * @eventType Event.FOCUS\r\n * */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 显示对象失去焦点后调度。\r\n * @eventType Event.BLUR\r\n * */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p><code>Input</code> 类用于创建显示对象以显示和输入文本。</p>\r\n * <p>Input 类封装了原生的文本输入框，由于不同浏览器的差异，会导致此对象的默认文本的位置与用户点击输入时的文本的位置有少许的偏差。</p>\r\n */\r\nexport class Input extends Text {\r\n    /** 常规文本域。*/\r\n    static TYPE_TEXT: string = \"text\";\r\n    /** password 类型用于密码域输入。*/\r\n    static TYPE_PASSWORD: string = \"password\";\r\n    /** email 类型用于应该包含 e-mail 地址的输入域。*/\r\n    static TYPE_EMAIL: string = \"email\";\r\n    /** url 类型用于应该包含 URL 地址的输入域。*/\r\n    static TYPE_URL: string = \"url\";\r\n    /** number 类型用于应该包含数值的输入域。*/\r\n    static TYPE_NUMBER: string = \"number\";\r\n    /**\r\n     * <p>range 类型用于应该包含一定范围内数字值的输入域。</p>\r\n     * <p>range 类型显示为滑动条。</p>\r\n     * <p>您还能够设定对所接受的数字的限定。</p>\r\n     */\r\n    static TYPE_RANGE: string = \"range\";\r\n    /**  选取日、月、年。*/\r\n    static TYPE_DATE: string = \"date\";\r\n    /** month - 选取月、年。*/\r\n    static TYPE_MONTH: string = \"month\";\r\n    /** week - 选取周和年。*/\r\n    static TYPE_WEEK: string = \"week\";\r\n    /** time - 选取时间（小时和分钟）。*/\r\n    static TYPE_TIME: string = \"time\";\r\n    /** datetime - 选取时间、日、月、年（UTC 时间）。*/\r\n    static TYPE_DATE_TIME: string = \"datetime\";\r\n    /** datetime-local - 选取时间、日、月、年（本地时间）。*/\r\n    static TYPE_DATE_TIME_LOCAL: string = \"datetime-local\";\r\n    /**\r\n     * <p>search 类型用于搜索域，比如站点搜索或 Google 搜索。</p>\r\n     * <p>search 域显示为常规的文本域。</p>\r\n     */\r\n    static TYPE_SEARCH: string = \"search\";\r\n\r\n    /**@private */\r\n    protected static input: HTMLInputElement;\r\n    /**@private */\r\n    protected static area: HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputElement: HTMLInputElement | HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputContainer: HTMLDivElement;\r\n    /**@private */\r\n    protected static confirmButton: any;\r\n    /**@private */\r\n    protected static promptStyleDOM: any;\r\n\r\n    protected _focus: boolean;\r\n    protected _multiline: boolean = false;\r\n    protected _editable: boolean = true;\r\n    protected _restrict: string;\r\n    protected _restrictPattern: any;\r\n    protected _maxChars: number = 0;\r\n\r\n    private _type: string = \"text\";\r\n\r\n    /**@private */\r\n    static IOS_IFRAME: boolean = false;\r\n\r\n    static isAppUseNewInput: boolean = false;\r\n\r\n    /**创建一个新的 <code>Input</code> 类实例。*/\r\n    constructor() {\r\n        super();\r\n        Input.IOS_IFRAME = (ILaya.Browser.onIOS && ILaya.Browser.window.top != ILaya.Browser.window.self);\r\n        this._width = 100;\r\n        this._height = 20;\r\n\r\n        this.multiline = false;\r\n        this.overflow = Text.SCROLL;\r\n        this._promptColor = \"#A9A9A9\";\r\n\r\n        this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        this.on(Event.UNDISPLAY, this, this._onUnDisplay);\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        Input._createInputElement();\r\n\r\n        // 移动端通过画布的touchend调用focus\r\n        if (ILaya.Browser.onMobile) {\r\n            var isTrue: boolean = false;\r\n            if (ILaya.Browser.onMiniGame || ILaya.Browser.onBDMiniGame || ILaya.Browser.onQGMiniGame || ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onQQMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onHWMiniGame || ILaya.Browser.onTBMiniGame) {\r\n                isTrue = true;\r\n            }\r\n            Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? \"touchend\" : \"click\") : \"touchend\", Input._popupInputMethod);\r\n        }\r\n    }\r\n\r\n    // 移动平台在单击事件触发后弹出输入法\r\n    private static _popupInputMethod(e: any): void {\r\n        //e.preventDefault();\r\n        if (!InputManager.isTextInputting) return;\r\n\r\n        var input: any = Input.inputElement;\r\n\r\n        // 弹出输入法。\r\n        input.focus();\r\n    }\r\n\r\n    private static _createInputElement(): void {\r\n        Input._initInput(Input.area = ILaya.Browser.createElement(\"textarea\"));\r\n        Input._initInput(Input.input = ILaya.Browser.createElement(\"input\"));\r\n\r\n        Input.inputContainer = ILaya.Browser.createElement(\"div\");\r\n        Input.inputContainer.style.position = \"absolute\";\r\n        Input.inputContainer.style.zIndex = '1E5';\r\n        ILaya.Browser.container.appendChild(Input.inputContainer);\r\n        (Input.inputContainer as any).setPos = function (x: number, y: number): void {\r\n            Input.inputContainer.style.left = x + 'px';\r\n            Input.inputContainer.style.top = y + 'px';\r\n        };\r\n    }\r\n\r\n    private static _initInput(input: HTMLInputElement): void {\r\n        var style = input.style;\r\n        style.cssText = \"position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;\";\r\n        style.resize = 'none';\r\n        style.backgroundColor = 'transparent';\r\n        style.border = 'none';\r\n        style.outline = 'none';\r\n        style.zIndex = '1';\r\n\r\n        input.addEventListener('input', Input._processInputting);\r\n\r\n        input.addEventListener('mousemove', Input._stopEvent, { passive: false });\r\n        input.addEventListener('mousedown', Input._stopEvent, { passive: false });\r\n        input.addEventListener('touchmove', Input._stopEvent, { passive: false });\r\n\r\n        (input as any).setFontFace = function (fontFace: string): void { input.style.fontFamily = fontFace; };\r\n        if (!(LayaEnv.isConch && !Input.isAppUseNewInput)) {\r\n            (input as any).setColor = function (color: string): void { input.style.color = color; };\r\n            (input as any).setFontSize = function (fontSize: number): void { input.style.fontSize = fontSize + 'px'; };\r\n        }\r\n    }\r\n\r\n    private static _processInputting(e: any): void {\r\n        var input: Input = (Input.inputElement as any).target;\r\n        if (!input) return;\r\n\r\n        var value = Input.inputElement.value;\r\n\r\n        // 对输入字符进行限制\r\n        if (input._restrictPattern) {\r\n            // 部分输入法兼容\r\n            value = value.replace(/\\u2006|\\x27/g, \"\");\r\n\r\n            if (input._restrictPattern.test(value)) {\r\n                value = value.replace(input._restrictPattern, \"\");\r\n                Input.inputElement.value = value;\r\n            }\r\n        }\r\n\r\n        if (value == null) value = \"\";\r\n        input._text = value;\r\n        input.event(Event.INPUT);\r\n    }\r\n\r\n    private static _stopEvent(e: any): void {\r\n        if (e.type == 'touchmove')\r\n            e.preventDefault();\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * 设置光标位置和选取字符。\r\n     * @param\tstartIndex\t光标起始位置。\r\n     * @param\tendIndex\t光标结束位置。\r\n     */\r\n    setSelection(startIndex: number, endIndex: number): void {\r\n        this.focus = true;\r\n        Input.inputElement.selectionStart = startIndex;\r\n        Input.inputElement.selectionEnd = endIndex;\r\n    }\r\n\r\n    /**表示是否是多行输入框。*/\r\n    get multiline(): boolean {\r\n        return this._multiline;\r\n    }\r\n\r\n    set multiline(value: boolean) {\r\n        this._multiline = value;\r\n        if (!SerializeUtil.isDeserializing)\r\n            this.valign = value ? \"top\" : \"middle\";\r\n    }\r\n\r\n    /**\r\n     * 获取对输入框的引用实例。\r\n     */\r\n    get nativeInput(): HTMLInputElement | HTMLTextAreaElement {\r\n        return this._multiline ? Input.area : Input.input;\r\n    }\r\n\r\n    private _onUnDisplay(e: Event = null): void {\r\n        this.focus = false;\r\n    }\r\n\r\n    private _onMouseDown(e: Event): void {\r\n        this.focus = true;\r\n    }\r\n    /**\r\n     * 在输入期间，如果 Input 实例的位置改变，调用_syncInputTransform同步输入框的位置。\r\n     */\r\n    private _syncInputTransform(): void {\r\n        var inputElement = this.nativeInput;\r\n        var transform = SpriteUtils.getTransformRelativeToWindow(this, this._padding[3], this._padding[0]);\r\n        var inputWid = this._width - this._padding[1] - this._padding[3];\r\n        var inputHei = this._height - this._padding[0] - this._padding[2];\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (inputElement as any).setScale(transform.scaleX, transform.scaleY);\r\n            (inputElement as any).setSize(inputWid, inputHei);\r\n            (inputElement as any).setPos(transform.x, transform.y);\r\n        } else {\r\n            Input.inputContainer.style.transform = Input.inputContainer.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n            inputElement.style.width = inputWid + 'px';\r\n            inputElement.style.height = inputHei + 'px';\r\n            Input.inputContainer.style.left = transform.x + 'px';\r\n            Input.inputContainer.style.top = transform.y + 'px';\r\n        }\r\n    }\r\n\r\n    /**选中当前实例的所有文本。*/\r\n    select(): void {\r\n        this.nativeInput.select();\r\n    }\r\n\r\n    /**\r\n     * 表示焦点是否在此实例上。\r\n     */\r\n    get focus(): boolean {\r\n        return this._focus;\r\n    }\r\n\r\n    // 移动平台最后单击画布才会调用focus\r\n    // 因此 调用focus接口是无法都在移动平台立刻弹出键盘的\r\n    set focus(value: boolean) {\r\n        var input = this.nativeInput;\r\n\r\n        if (this._focus !== value) {\r\n            if (value) {\r\n                if ((input as any).target) {\r\n                    (input as any).target._focusOut();\r\n                } else {\r\n                    this._setInputMethod();\r\n                }\r\n                input = this.nativeInput;\r\n                (input as any).target = this;\r\n                this._focusIn();\r\n            } else {\r\n                (input as any).target = null;\r\n                this._focusOut();\r\n                ILaya.Browser.document.body.scrollTop = 0;\r\n                input.blur();\r\n\r\n                if (LayaEnv.isConch && !Input.isAppUseNewInput) (input as any).setPos(-10000, -10000);\r\n                else if (Input.inputContainer.contains(input)) Input.inputContainer.removeChild(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _setInputMethod(): void {\r\n        Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));\r\n        Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));\r\n\r\n        // 安卓的安全键盘的问题；\r\n        // 如果设置type='password' 则会弹安全键盘\r\n        // 就算以后设置type='text' 还是会弹安全键盘，所以对于安卓，干脆全部重新生成\r\n        if (ILaya.Browser.onAndroid) {\r\n            Input.input = Input.inputElement = ILaya.Browser.createElement('input');\r\n            Input._initInput(Input.input);\r\n        }\r\n\r\n        Input.inputElement = (this._multiline ? Input.area : Input.input);\r\n        Input.inputContainer.appendChild(Input.inputElement);\r\n        if (Text.RightToLeft) {\r\n            Input.inputElement.style.direction = \"rtl\";\r\n        }\r\n    }\r\n\r\n    private _focusIn(): void {\r\n        InputManager.isTextInputting = true;\r\n        var input = this.nativeInput;\r\n\r\n        Input.input && (Input.input.type = this._type);\t\t// 设置input控件的 password\r\n\r\n        this._focus = true;\r\n\r\n        var cssStyle = input.style;\r\n        cssStyle.whiteSpace = (this.wordWrap ? \"pre-wrap\" : \"nowrap\");\r\n        this._setPromptColor();\r\n\r\n        input.readOnly = !this._editable;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setType(this._type);\r\n            (input as any).setForbidEdit(!this._editable);\r\n        }\r\n        input.maxLength = this._maxChars <= 0 ? 1E5 : this._maxChars;\r\n\r\n        input.value = this._text;\r\n        input.placeholder = this._prompt;\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.on(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = this;\r\n        this.event(Event.FOCUS);\r\n\r\n        // PC端直接调用focus进入焦点。\r\n        if (ILaya.Browser.onPC) input.focus();\r\n\r\n        // PC浏览器隐藏文字\r\n        if (!(LayaEnv.isConch && Input.isAppUseNewInput) && !ILaya.Browser.onMiniGame && !ILaya.Browser.onBDMiniGame && !ILaya.Browser.onQGMiniGame && !ILaya.Browser.onKGMiniGame && !ILaya.Browser.onVVMiniGame && !ILaya.Browser.onAlipayMiniGame && !ILaya.Browser.onQQMiniGame && !ILaya.Browser.onBLMiniGame && !ILaya.Browser.onTTMiniGame && !ILaya.Browser.onHWMiniGame && !ILaya.Browser.onTBMiniGame) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n            this._hideText = true;\r\n        }\r\n\r\n        // PC同步输入框外观。\r\n        (input as any).setColor(this.color);\r\n        (input as any).setFontSize(this.fontSize);\r\n        (input as any).setFontFace(this._realFont);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setMultiAble && (input as any).setMultiAble(this._multiline);\r\n        }\r\n        cssStyle.lineHeight = (this.leading + this.fontSize) + \"px\";\r\n        cssStyle.fontStyle = (this.italic ? \"italic\" : \"normal\");\r\n        cssStyle.fontWeight = (this.bold ? \"bold\" : \"normal\");\r\n        cssStyle.textAlign = this.align;\r\n        cssStyle.padding = \"0 0\";\r\n\r\n        // 输入框重定位。\r\n        this._syncInputTransform();\r\n        if (!LayaEnv.isConch && ILaya.Browser.onPC)\r\n            ILaya.systemTimer.frameLoop(1, this, this._syncInputTransform);\r\n    }\r\n\r\n    // 设置DOM输入框提示符颜色。\r\n    private _setPromptColor(): void {\r\n        // 创建style标签\r\n        Input.promptStyleDOM = ILaya.Browser.getElementById(\"promptStyle\");\r\n        if (!Input.promptStyleDOM) {\r\n            Input.promptStyleDOM = ILaya.Browser.createElement(\"style\");\r\n            Input.promptStyleDOM.setAttribute(\"id\", \"promptStyle\");\r\n            ILaya.Browser.document.head.appendChild(Input.promptStyleDOM);\r\n        }\r\n\r\n        // 设置style标签\r\n        Input.promptStyleDOM.innerText = \"input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-moz-placeholder, textarea:-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input::-moz-placeholder, textarea::-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-ms-input-placeholder, textarea:-ms-input-placeholder {\" + \"color:\" + this._promptColor + \"}\";\r\n    }\r\n\r\n    /**@private */\r\n    private _focusOut(): void {\r\n        if (!InputManager.isTextInputting) return;\r\n        if (!InputManager.isiOSWKwebView)\r\n            InputManager.isTextInputting = false;\r\n        this._focus = false;\r\n        this._hideText = false;\r\n\r\n        this.text = this.nativeInput.value;\r\n        this.markChanged();\r\n        this.typeset();\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = null;\r\n        this.event(Event.BLUR);\r\n        this.event(Event.CHANGE);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) this.nativeInput.blur();\r\n        // 只有PC会注册此事件。\r\n        ILaya.Browser.onPC && ILaya.systemTimer.clear(this, this._syncInputTransform);\r\n    }\r\n\r\n    /**@private */\r\n    private _onKeyDown(e: any): void {\r\n        if (e.keyCode === 13) {\r\n            // 移动平台单行输入状态下点击回车收回输入法。 \r\n            if (ILaya.Browser.onMobile && !this._multiline)\r\n                this.focus = false;\r\n\r\n            this.event(Event.ENTER);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 小游戏专用(解决键盘输入框内容和游戏输入框内容不同步的bug)\r\n     * @param value \r\n     */\r\n    miniGameTxt(value: string) {\r\n        value += '';\r\n        if (!this._multiline)\r\n            value = value.replace(/\\r?\\n/g, '');\r\n        this.text = value;\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (this._focus) {\r\n            this.nativeInput.value = value;\r\n            this.event(Event.CHANGE);\r\n        } else {\r\n            // 单行时不允许换行\r\n            if (!this._multiline)\r\n                value = value.replace(/\\r?\\n/g, '');\r\n\r\n            super.text = value;\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get text(): string {\r\n        if (this._focus)\r\n            return this.nativeInput.value;\r\n        else\r\n            return super.text;\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set_color(value: string) {\r\n        if (this._focus)\r\n            (this.nativeInput as any).setColor(value);\r\n\r\n        super.set_color(value);\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set bgColor(value: string) {\r\n        super.bgColor = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput)\r\n            (this.nativeInput as any).setBgColor(value);\r\n    }\r\n\r\n    get bgColor() {\r\n        return super.bgColor;\r\n    }\r\n\r\n    /**限制输入的字符。*/\r\n    get restrict(): string {\r\n        return this._restrict;\r\n    }\r\n\r\n    set restrict(value: string) {\r\n        this._restrict = value;\r\n        // H5保存RegExp\r\n        if (value) {\r\n            value = \"[^\" + value + \"]\";\r\n\r\n            // 如果pattern为^\\00-\\FF，则我们需要的正则表达式是\\00-\\FF\r\n            if (value.indexOf(\"^^\") > -1)\r\n                value = value.replace(\"^^\", \"\");\r\n\r\n            this._restrictPattern = new RegExp(value, \"g\");\r\n        } else\r\n            this._restrictPattern = null;\r\n    }\r\n\r\n    /**\r\n     * 是否可编辑。\r\n     */\r\n    set editable(value: boolean) {\r\n        this._editable = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (Input.input as any).setForbidEdit(!value);\r\n        }\r\n    }\r\n\r\n    get editable(): boolean {\r\n        return this._editable;\r\n    }\r\n\r\n    /**\r\n     * <p>字符数量限制，默认为10000。</p>\r\n     * <p>设置字符数量限制时，小于等于0的值将会限制字符数量为10000。</p>\r\n     */\r\n    get maxChars(): number {\r\n        return this._maxChars;\r\n    }\r\n\r\n    set maxChars(value: number) {\r\n        this._maxChars = value;\r\n    }\r\n\r\n    /**\r\n     * 设置输入提示符。\r\n     */\r\n    get prompt(): string {\r\n        return this._prompt;\r\n    }\r\n\r\n    set prompt(value: string) {\r\n        value = Text.langPacks?.[value] || value;\r\n        if (this._prompt != value) {\r\n            this._prompt = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置输入提示符颜色。\r\n     */\r\n    get promptColor(): string {\r\n        return this._promptColor;\r\n    }\r\n\r\n    set promptColor(value: string) {\r\n        if (this._promptColor != value) {\r\n            this._promptColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>输入框类型为Input静态常量之一。</p>\r\n     * <ul>\r\n     * <li>TYPE_TEXT</li>\r\n     * <li>TYPE_PASSWORD</li>\r\n     * <li>TYPE_EMAIL</li>\r\n     * <li>TYPE_URL</li>\r\n     * <li>TYPE_NUMBER</li>\r\n     * <li>TYPE_RANGE</li>\r\n     * <li>TYPE_DATE</li>\r\n     * <li>TYPE_MONTH</li>\r\n     * <li>TYPE_WEEK</li>\r\n     * <li>TYPE_TIME</li>\r\n     * <li>TYPE_DATE_TIME</li>\r\n     * <li>TYPE_DATE_TIME_LOCAL</li>\r\n     * </ul>\r\n     * <p>平台兼容性参见http://www.w3school.com.cn/html5/html_5_form_input_types.asp。</p>\r\n     */\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._asPassword = value === \"password\";\r\n        this._type = value;\r\n    }\r\n}","import { Component } from \"./Component\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * 相对布局插件\r\n */\r\nexport class Widget extends Component {\r\n    /**一个已初始化的 <code>Widget</code> 实例。*/\r\n    static EMPTY: Widget = null;// new Widget();\r\n\r\n    private _top: number = null;\r\n    private _bottom: number = null;\r\n    private _left: number = null;\r\n    private _right: number = null;\r\n    private _centerX: number = null;\r\n    private _centerY: number = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.runInEditor = true;\r\n        this.hideFlags |= HideFlags.HideAndDontSave;\r\n    }\r\n\r\n    onReset(): void {\r\n        this._top = this._bottom = this._left = this._right = this._centerX = this._centerY = null;\r\n    }\r\n\r\n    protected _onEnable(): void {\r\n        if (this.owner.parent) this._onAdded();\r\n        else this.owner.once(Event.ADDED, this, this._onAdded);\r\n    }\r\n\r\n    protected _onDisable(): void {\r\n        this.owner.off(Event.ADDED, this, this._onAdded);\r\n        if (this.owner.parent) this.owner.parent.off(Event.RESIZE, this, this._onParentResize);\r\n    }\r\n\r\n    protected _onAdded(): void {\r\n        if (this.owner.parent)\r\n            this.owner.parent.on(Event.RESIZE, this, this._onParentResize);\r\n        this.resetLayoutX();\r\n        this.resetLayoutY();\r\n    }\r\n\r\n    /**\r\n     * 父容器的 <code>Event.RESIZE</code> 事件侦听处理函数。\r\n     */\r\n    protected _onParentResize(): void {\r\n        var flagX = this.resetLayoutX();\r\n        var flagY = this.resetLayoutY();\r\n        if (flagX || flagY) this.owner.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * <p>重置对象的 <code>X</code> 轴（水平方向）布局。</p>\r\n     * @private\r\n     */\r\n    resetLayoutX(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerX != null) {\r\n                owner.x = Math.round((parent.width - owner.displayWidth) * 0.5 + this._centerX + owner.pivotX * owner.scaleX);\r\n            } else if (this._left != null) {\r\n                owner.x = Math.round(this._left + owner.pivotX * owner.scaleX);\r\n                if (this._right != null) {\r\n                    if (!parent._width) return false;\r\n                    //TODO:如果用width，会死循环\r\n                    var temp: number = (parent._width - this._left - this._right) / (owner.scaleX || 0.01);\r\n                    if (temp != owner._width) {\r\n                        owner.width = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._right != null) {\r\n                owner.x = Math.round(parent.width - owner.displayWidth - this._right + owner.pivotX * owner.scaleX);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <p>重置对象的 <code>Y</code> 轴（垂直方向）布局。</p>\r\n     * @private\r\n     */\r\n    resetLayoutY(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerY != null) {\r\n                owner.y = Math.round((parent.height - owner.displayHeight) * 0.5 + this._centerY + owner.pivotY * owner.scaleY);\r\n            } else if (this._top != null) {\r\n                owner.y = Math.round(this._top + owner.pivotY * owner.scaleY);\r\n                if (this._bottom != null) {\r\n                    if (!parent._height) return false;\r\n                    //TODO:\r\n                    var temp: number = (parent._height - this._top - this._bottom) / (owner.scaleY || 0.01);\r\n                    if (temp != owner._height) {\r\n                        owner.height = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._bottom != null) {\r\n                owner.y = Math.round(parent.height - owner.displayHeight - this._bottom + owner.pivotY * owner.scaleY);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 重新计算布局\r\n     */\r\n    resetLayout(): void {\r\n        if (this.owner) {\r\n            this.resetLayoutX();\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距顶边的距离（以像素为单位）。*/\r\n    get top(): number {\r\n        return this._top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._top != value) {\r\n            this._top = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距底边的距离（以像素为单位）。*/\r\n    get bottom(): number {\r\n        return this._bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._bottom != value) {\r\n            this._bottom = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距左边的距离（以像素为单位）。*/\r\n    get left(): number {\r\n        return this._left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._left != value) {\r\n            this._left = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距右边的距离（以像素为单位）。*/\r\n    get right(): number {\r\n        return this._right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._right != value) {\r\n            this._right = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距水平方向中心轴的距离（以像素为单位）。*/\r\n    get centerX(): number {\r\n        return this._centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerX != value) {\r\n            this._centerX = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距垂直方向中心轴的距离（以像素为单位）。*/\r\n    get centerY(): number {\r\n        return this._centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerY != value) {\r\n            this._centerY = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n}\r\n\r\nWidget.EMPTY = new Widget();\r\n","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IHitArea } from \"./IHitArea\";\r\n\r\nconst _rect: Rectangle = new Rectangle();\r\nconst _ptPoint: Point = new Point();\r\n\r\n/**\r\n * 鼠标点击区域，可以设置绘制一系列矢量图作为点击区域和非点击区域（目前只支持圆形，矩形，多边形）\r\n *\r\n */\r\nexport class HitArea implements IHitArea {\r\n    _hit: Graphics;\r\n    _unHit: Graphics;\r\n\r\n    /**\r\n     * 检测对象是否包含指定的点。\r\n     * @param\tx\t点的 X 轴坐标值（水平位置）。\r\n     * @param\ty\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number, sp: Sprite): boolean {\r\n        if (!HitArea._isHitGraphic(x, y, sp, this._hit))\r\n            return false;\r\n        return !HitArea._isHitGraphic(x, y, sp, this._unHit);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 是否击中Graphic\r\n     */\r\n    static _isHitGraphic(x: number, y: number, sp: Sprite, graphic: Graphics): boolean {\r\n        if (!graphic) return false;\r\n        let cmds = graphic.cmds;\r\n        if (cmds.length == 0) return false;\r\n        let len = cmds.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let cmd = cmds[i];\r\n            if (!cmd) continue;\r\n            switch (cmd.cmdID) {\r\n                case \"Translate\":\r\n                    x -= cmd.tx;\r\n                    y -= cmd.ty;\r\n            }\r\n            if (HitArea._isHitCmd(x, y, sp, cmd)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 是否击中绘图指令\r\n     */\r\n    static _isHitCmd(x: number, y: number, sp: Sprite, cmd: any): boolean {\r\n        if (!cmd) return false;\r\n        var rst: boolean = false;\r\n        switch (cmd.cmdID) {\r\n            case \"DrawRect\":\r\n                if (cmd.percent)\r\n                    _rect.setTo(cmd.x * sp.width, cmd.y * sp.height, cmd.width * sp.width, cmd.height * sp.height);\r\n                else\r\n                    _rect.setTo(cmd.x, cmd.y, cmd.width, cmd.height);\r\n                rst = _rect.contains(x, y);\r\n                break;\r\n            case \"DrawCircle\":\r\n                let r = cmd.radius;\r\n                var d: number;\r\n                if (cmd.percent) {\r\n                    x -= cmd.x * sp.width;\r\n                    y -= cmd.y * sp.height;\r\n                    r *= sp.width;\r\n                }\r\n                else {\r\n                    x -= cmd.x;\r\n                    y -= cmd.y;\r\n                }\r\n                d = x * x + y * y;\r\n                rst = d < r * r;\r\n                break;\r\n            case \"DrawPoly\":\r\n                x -= cmd.x;\r\n                y -= cmd.y;\r\n                rst = HitArea._ptInPolygon(x, y, cmd.points);\r\n                break;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 坐标是否在多边形内\r\n     */\r\n    static _ptInPolygon(x: number, y: number, areaPoints: any[]): boolean {\r\n        var p: Point = _ptPoint;\r\n        p.setTo(x, y);\r\n        // 交点个数\r\n        var nCross: number = 0;\r\n        var p1x: number, p1y: number, p2x: number, p2y: number;\r\n        var len: number;\r\n        len = areaPoints.length;\r\n        for (var i: number = 0; i < len; i += 2) {\r\n            p1x = areaPoints[i];\r\n            p1y = areaPoints[i + 1];\r\n            p2x = areaPoints[(i + 2) % len];\r\n            p2y = areaPoints[(i + 3) % len];\r\n            //var p1:Point = areaPoints[i];\r\n            //var p2:Point = areaPoints[(i + 1) % areaPoints.length]; // 最后一个点与第一个点连线\r\n            if (p1y == p2y) continue;\r\n            if (p.y < Math.min(p1y, p2y)) continue;\r\n            if (p.y >= Math.max(p1y, p2y)) continue;\r\n            // 求交点的x坐标\r\n            var tx: number = (p.y - p1y) * (p2x - p1x) / (p2y - p1y) + p1x;\r\n            // 只统计p1p2与p向右射线的交点\r\n            if (tx > p.x) nCross++;\r\n        }\r\n        // 交点为偶数，点在多边形之外\r\n        return (nCross % 2 == 1);\r\n    }\r\n\r\n    /**\r\n     * 可点击区域，可以设置绘制一系列矢量图作为点击区域（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get hit(): Graphics {\r\n        if (!this._hit) this._hit = new Graphics();\r\n        return this._hit;\r\n    }\r\n\r\n    set hit(value: Graphics) {\r\n        this._hit = value;\r\n    }\r\n\r\n    /**\r\n     * 不可点击区域，可以设置绘制一系列矢量图作为非点击区域（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get unHit(): Graphics {\r\n        if (!this._unHit) this._unHit = new Graphics();\r\n        return this._unHit;\r\n    }\r\n\r\n    set unHit(value: Graphics) {\r\n        this._unHit = value;\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._hitCmds) {\r\n                this.hit.cmds = (<any>this)._hitCmds;\r\n                delete (<any>this)._hitCmds;\r\n            }\r\n\r\n            if ((<any>this)._unHitCmds) {\r\n                this.unHit.cmds = (<any>this)._unHitCmds;\r\n                delete (<any>this)._unHitCmds;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HitArea\", HitArea);\r\n\r\n","import { Utils } from \"./Utils\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 封装弱引用WeakMap\r\n * 如果支持WeakMap，则使用WeakMap，如果不支持，则用Object代替\r\n * 注意：如果采用Object，为了防止内存泄漏，则采用定时清理缓存策略\r\n * \r\n * 这里的设计是错误的，为了兼容，先不删掉这个类，直接采用Object\r\n */\r\nexport class WeakObject {\r\n    /**是否支持WeakMap*/\r\n    static supportWeakMap = false;\r\n    /**如果不支持WeakMap，则多少时间清理一次缓存，默认10分钟清理一次*/\r\n    static delInterval = 10 * 60 * 1000;\r\n    /**全局WeakObject单例*/\r\n    static I: WeakObject;\r\n    /**@private */\r\n    private static _maps: any[] = [];\r\n    /**@internal */\r\n    _obj: any;\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        WeakObject.I = new WeakObject();\r\n        //WeakObject.supportWeakMap = Browser.window.WeakMap != null;\r\n        //如果不支持，10分钟回收一次\r\n        if (!WeakObject.supportWeakMap) ILaya.systemTimer.loop(WeakObject.delInterval, null, WeakObject.clearCache);\r\n    }\r\n\r\n    /**清理缓存，回收内存*/\r\n    static clearCache(): void {\r\n        for (var i = 0, n = WeakObject._maps.length; i < n; i++) {\r\n            var obj = WeakObject._maps[i];\r\n            obj._obj = {};\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this._obj = {};\r\n        WeakObject._maps.push(this);\r\n    }\r\n\r\n\t/**\r\n\t * 设置缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t * @param\tvalue object对象，可被回收\r\n\t */\r\n    set(key: any, value: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') {\r\n                this._obj[key as any] = value;\r\n            } else {\r\n                key.$_GID || (key.$_GID = Utils.getGID());\r\n                this._obj[key.$_GID] = value;\r\n            }\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t */\r\n    get(key: any): any {\r\n        if (key == null) return null;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any];\r\n            return this._obj[key.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除缓存\r\n\t */\r\n    del(key: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') delete this._obj[key as any];\r\n            else delete this._obj[this._obj.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 是否有缓存\r\n\t */\r\n    has(key: any): boolean {\r\n        if (key == null) return false;\r\n        if (WeakObject.supportWeakMap) {\r\n            return false;\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any] != null;\r\n            return this._obj[this._obj.$_GID] != null;\r\n        }\r\n    }\r\n}\r\n\r\n//WeakObject.__init__();","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { Resource } from \"./Resource\";\r\n\r\nexport class Prefab extends Resource {\r\n    public readonly version: number;\r\n    protected _deps: Array<Resource>;\r\n\r\n    /**@private */\r\n    json: any; //兼容2.0\r\n\r\n    constructor(version?: number) {\r\n        super();\r\n\r\n        this.version = version;\r\n        this._deps = [];\r\n    }\r\n\r\n    /**\r\n     * 创建实例\r\n     */\r\n    create(options?: Record<string, any>, errors?: Array<any>): Node {\r\n        if (this.json) //兼容2.0\r\n            return LegacyUIParser.createByData(null, this.json);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    get deps(): ReadonlyArray<Resource> {\r\n        return this._deps;\r\n    }\r\n\r\n    addDep(res: Resource) {\r\n        if (res instanceof Resource) {\r\n            res._addReference();\r\n            this._deps.push(res);\r\n\r\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                res.on(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    addDeps(resArr: Array<Resource>) {\r\n        for (let res of resArr) {\r\n            if (res instanceof Resource) {\r\n                res._addReference();\r\n                this._deps.push(res);\r\n\r\n                if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                    res.on(\"obsolute\", this, this.onDepObsolute);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        for (let res of this._deps) {\r\n            res._removeReference();\r\n\r\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                res.off(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    public get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        if (this._obsolute != value) {\r\n            this._obsolute = value;\r\n            if (value && !LayaEnv.isPlaying)\r\n                this.event(\"obsolute\");\r\n        }\r\n    }\r\n\r\n    private onDepObsolute() {\r\n        this.obsolute = true;\r\n    }\r\n}\r\n\r\n//旧版本兼容\r\nexport type HierarchyResource = Prefab;\r\nexport var HierarchyResource = Prefab;","import { Component } from \"../components/Component\"\r\nimport { FrameAnimation } from \"../display/FrameAnimation\"\r\nimport { Node } from \"../display/Node\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Graphics } from \"../display/Graphics\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { WeakObject } from \"../utils/WeakObject\";\r\nimport { Handler } from \"laya/utils/Handler\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\nvar _listClass: any;\r\nvar _viewClass: any;\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nexport class LegacyUIParser {\r\n    /**@private */\r\n    private static _funMap: WeakObject;\r\n    /**@private */\r\n    private static _parseWatchData: RegExp = /\\${(.*?)}/g;\r\n    /**@private */\r\n    private static _parseKeyWord: RegExp = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;\r\n    /**@internal */\r\n    static _sheet: any;\r\n\r\n    static parse(data: any, options: any) {\r\n        let root: Sprite = options?.root;\r\n        if (!root) {\r\n            let runtime: string = (LayaEnv.isPlaying && data.props.runtime) ? data.props.runtime : data.type;\r\n            let clas = ClassUtils.getClass(runtime);\r\n\r\n            if (data.props.renderType == \"instance\")\r\n                root = clas.instance || (clas.instance = new clas());\r\n            else\r\n                root = new clas();\r\n        }\r\n\r\n        if (root && (<any>root)._viewCreated)\r\n            return root;\r\n\r\n        return LegacyUIParser.createByData(root, data);\r\n    }\r\n\r\n    /**\r\n     * @private 根据字符串，返回函数表达式\r\n     */\r\n    //TODO:coverage\r\n    static getBindFun(value: string): Function {\r\n        let map = LegacyUIParser._funMap;\r\n        if (!map)\r\n            map = LegacyUIParser._funMap = new WeakObject();\r\n        var fun: Function = LegacyUIParser._funMap.get(value);\r\n        if (fun == null) {\r\n            var temp: string = \"\\\"\" + value + \"\\\"\";\r\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\r\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\r\n            fun = (window as any).Laya._runScript(str);\r\n            LegacyUIParser._funMap.set(value, fun);\r\n        }\r\n        return fun;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    //TODO:coverage\r\n    static createByData(root: Sprite, uiView: any): Sprite {\r\n        var tInitTool: InitTool = InitTool.create();\r\n\r\n        //递归创建节点\r\n        root = LegacyUIParser.createComp(uiView, root, root, null, tInitTool);\r\n        if (\"_idMap\" in root) {\r\n            (<any>root)[\"_idMap\"] = tInitTool._idMap;\r\n        }\r\n\r\n        //处理动画信息\r\n        if (uiView.animations) {\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAni: FrameAnimation;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAni = new FrameAnimation();\r\n                tAniO = animations[i];\r\n                tAni._setUp(tInitTool._idMap, tAniO);\r\n                (<any>root)[tAniO.name] = tAni;\r\n                tAni._setControlNode(root);\r\n                switch (tAniO.action) {\r\n                    case 1:\r\n                        tAni.play(0, false);\r\n                        break;\r\n                    case 2:\r\n                        tAni.play(0, true);\r\n                        break;\r\n                }\r\n                anilist.push(tAni);\r\n            }\r\n            (<any>root)._aniList = anilist;\r\n        }\r\n\r\n        //设置页面穿透\r\n        if ((root instanceof Scene) && root._width > 0 && uiView.props.hitTestPrior == null && !root.mouseThrough)\r\n            root.hitTestPrior = true;\r\n\r\n        //设置组件\r\n        tInitTool.finish();\r\n        root._setBit(NodeFlags.NOT_READY, false);\r\n        if (root.parent && root.parent.activeInHierarchy && root.active)\r\n            root._processActive(true);\r\n        return root;\r\n    }\r\n\r\n    static createInitTool(): InitTool {\r\n        return InitTool.create();\r\n    }\r\n\r\n    /**\r\n     * 根据UI数据实例化组件。\r\n     * @param uiView UI数据。\r\n     * @param comp 组件本体，如果为空，会新创建一个。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     * @return 一个 Component 对象。\r\n     */\r\n    static createComp(uiView: any, comp: Sprite = null, view: Sprite = null, dataMap: any[] = null, initTool: InitTool = null): any {\r\n        comp = comp || LegacyUIParser.getCompInstance(uiView);\r\n        if (!comp) {\r\n            if (uiView.props && uiView.props.runtime)\r\n                console.warn(\"runtime not found:\" + uiView.props.runtime);\r\n            else\r\n                console.warn(\"can not create:\" + uiView.type);\r\n            return null;\r\n        }\r\n\r\n        var child: any[] = uiView.child;\r\n        if (child) {\r\n            var isList: boolean = comp instanceof (_listClass || (_listClass = ClassUtils.getClass(\"List\")));\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var node: any = child[i];\r\n                if ('itemRender' in comp && (node.props.name == \"render\" || node.props.renderType === \"render\")) {\r\n                    //如果list的itemRender\r\n                    (<any>comp)[\"itemRender\"] = node;\r\n                } else if (node.type == \"Graphic\") {\r\n                    //绘制矢量图\r\n                    this._addGraphicsToSprite(node, comp);\r\n                } else if (this._isDrawType(node.type)) {\r\n                    this._addGraphicToSprite(node, comp, true);\r\n                } else {\r\n                    if (isList) {\r\n                        //收集数据绑定信息\r\n                        var arr: any[] = [];\r\n                        var tChild: any = LegacyUIParser.createComp(node, null, view, arr, initTool);\r\n                        if (arr.length)\r\n                            tChild[\"_$bindData\"] = arr;\r\n                    } else {\r\n                        tChild = LegacyUIParser.createComp(node, null, view, dataMap, initTool);\r\n                    }\r\n\r\n                    //处理脚本\r\n                    if (node.type == \"Script\") {\r\n                        if (tChild instanceof Component) {\r\n                            comp.addComponentInstance(tChild);\r\n                        } else {\r\n                            //兼容老版本\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = comp;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = comp;\r\n                            }\r\n                        }\r\n                    } else if (node.props.renderType == \"mask\" || node.props.name == \"mask\") {\r\n                        comp.mask = tChild;\r\n                    } else {\r\n                        tChild instanceof Node && comp.addChild(tChild);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var props: any = uiView.props;\r\n        for (var prop in props) {\r\n            var value: any = props[prop];\r\n            if (typeof (value) == 'string' && (value.indexOf(\"@node:\") >= 0 || value.indexOf(\"@Prefab:\") >= 0)) {\r\n                if (initTool) {\r\n                    initTool.addNodeRef(comp, prop, <string>value);\r\n                }\r\n            } else\r\n                LegacyUIParser.setCompValue(comp, prop, value, view, dataMap);\r\n        }\r\n\r\n        if ((<any>comp)._afterInited) {\r\n            //if (initTool) {\r\n            //initTool.addInitItem(comp);\r\n            //} else {\r\n            (<any>comp)._afterInited();\r\n            //}\r\n        }\r\n\r\n        if (uiView.compId && initTool && initTool._idMap) {\r\n            initTool._idMap[uiView.compId] = comp;\r\n        }\r\n\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置组件的属性值。\r\n     * @param comp 组件实例。\r\n     * @param prop 属性名称。\r\n     * @param value 属性值。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     */\r\n    private static setCompValue(comp: any, prop: string, value: any, view: any = null, dataMap: any[] = null): void {\r\n        //处理数据绑定\r\n        if (typeof (value) == 'string' && value.indexOf(\"${\") > -1) {\r\n            LegacyUIParser._sheet || (LegacyUIParser._sheet = ClassUtils.getClass(\"laya.data.Table\"));\r\n            if (!LegacyUIParser._sheet) {\r\n                console.warn(\"Can not find class Sheet\");\r\n                return;\r\n            }\r\n            //list的item处理\r\n            if (dataMap) {\r\n                dataMap.push(comp, prop, value);\r\n            } else if (view) {\r\n                if (value.indexOf(\"].\") == -1) {\r\n                    //TODO\r\n                    value = value.replace(\".\", \"[0].\");\r\n                }\r\n                var watcher: DataWatcher = new DataWatcher(comp, prop, value);\r\n\r\n                //执行第一次数据赋值\r\n                watcher.exe(view);\r\n                var one: any[], temp: any[];\r\n                var str: string = value.replace(/\\[.*?\\]\\./g, \".\");\r\n                while ((one = LegacyUIParser._parseWatchData.exec(str)) != null) {\r\n                    var key1: string = one[1];\r\n                    while ((temp = LegacyUIParser._parseKeyWord.exec(key1)) != null) {\r\n                        var key2: string = temp[0];\r\n                        var arr: any[] = (view._watchMap[key2] || (view._watchMap[key2] = []));\r\n                        arr.push(watcher);\r\n                        //监听数据变化\r\n                        LegacyUIParser._sheet.I.notifer.on(key2, view, view.changeData, [key2]);\r\n                    }\r\n                    //TODO\r\n                    arr = (view._watchMap[key1] || (view._watchMap[key1] = []));\r\n                    arr.push(watcher);\r\n                    LegacyUIParser._sheet.I.notifer.on(key1, view, view.changeData, [key1]);\r\n                }\r\n                //trace(view._watchMap);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (prop === \"var\" && view) {\r\n            view[value] = comp;\r\n        } else {\r\n            comp[prop] = (value === \"true\" ? true : (value === \"false\" ? false : value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过组建UI数据，获取组件实例。\r\n     * @param json UI数据。\r\n     * @return Component 对象。\r\n     */\r\n    static getCompInstance(json: any): any {\r\n        if (json.type == \"UIView\") {\r\n            if (json.props && json.props.pageData) {\r\n                return LegacyUIParser.createByData(null, json.props.pageData);\r\n            }\r\n        }\r\n        var runtime: string = LayaEnv.isPlaying ? ((json.props && json.props.runtime) || json.type) : json.type;\r\n        var compClass = ClassUtils.getClass(runtime);\r\n        if (!compClass) throw \"Can not find class \" + runtime;\r\n        if (json.type === \"Script\" && compClass.prototype._doAwake) {\r\n            var comp: any = Pool.createByClass(compClass);\r\n            comp._destroyed = false;\r\n            return comp;\r\n        }\r\n        if (json.props && \"renderType\" in json.props && json.props[\"renderType\"] == \"instance\") {\r\n            if (!(compClass as any)[\"instance\"]) (compClass as any)[\"instance\"] = new compClass();\r\n            return (compClass as any)[\"instance\"];\r\n        }\r\n\r\n        let ret = new compClass();\r\n        if (ret instanceof (_viewClass || (_viewClass = ClassUtils.getClass(\"View\")))) //3.0取消了View的_scene属性，因为它不应该是一个scene。但兼容2.0的代码，这里补回去\r\n            (<any>ret)._scene = ret;\r\n        return ret;\r\n    }\r\n\r\n    public static collectResourceLinks(uiView: any) {\r\n        let test = new Set();\r\n        let innerUrls: string[] = [];\r\n\r\n        function addInnerUrl(url: string) {\r\n            if (!test.has(url)) {\r\n                test.add(url);\r\n                innerUrls.push(url);\r\n            }\r\n        }\r\n\r\n        function check(uiView: any) {\r\n            let props: any = uiView.props;\r\n            for (let prop in props) {\r\n                let value: any = props[prop];\r\n                if (typeof (value) == 'string' && value.indexOf(\"@Prefab:\") >= 0) {\r\n                    let url = value.replace(\"@Prefab:\", \"\");\r\n                    addInnerUrl(url);\r\n                }\r\n            }\r\n\r\n            let child: any[] = uiView.child;\r\n            if (child) {\r\n                for (let i: number = 0, n: number = child.length; i < n; i++) {\r\n                    let node: any = child[i];\r\n                    check(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (uiView.loadList) {\r\n            for (let url of uiView.loadList)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        if (uiView.loadList3D) {\r\n            for (let url of uiView.loadList3D)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        check(uiView);\r\n        return innerUrls;\r\n    }\r\n\r\n    /**\r\n     * 根据指定的 json 数据创建节点对象。\r\n     * 比如:\r\n     * {\r\n     * \t\"type\":\"Sprite\",\r\n     * \t\"props\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"customProps\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"child\":[\r\n     * \t\t{\r\n     * \t\t\t\"type\":\"Text\",\r\n     * \t\t\t\"props\":{\r\n     * \t\t\t\t\"text\":\"this is a test\",\r\n     * \t\t\t\t\"var\":\"label\",\r\n     * \t\t\t\t\"rumtime\":\"\"\r\n     * \t\t\t}\r\n     * \t\t}\r\n     * \t]\r\n     * }\r\n     * @param\tjson json字符串或者Object对象。\r\n     * @param\tnode node节点，如果为空，则新创建一个。\r\n     * @param\troot 根节点，用来设置var定义。\r\n     * @return\t生成的节点。\r\n     */\r\n    static createByJson(json: any, node: any = null, root: Node = null, customHandler: Handler = null, instanceHandler: Handler = null): any {\r\n        if (typeof (json) == 'string') json = JSON.parse((<string>json));\r\n        var props: any = json.props;\r\n\r\n        if (!node) {\r\n            node = instanceHandler ? instanceHandler.runWith(json) : ClassUtils.getInstance(LayaEnv.isPlaying ? (props.runtime || json.type) : json.type);\r\n            if (!node) return null;\r\n        }\r\n\r\n        var child: any[] = json.child;\r\n        if (child) {\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var data: any = child[i];\r\n                if ((data.props.name === \"render\" || data.props.renderType === \"render\") && node[\"_$set_itemRender\"])\r\n                    node.itemRender = data;\r\n                else {\r\n                    if (data.type == \"Graphic\") {\r\n                        this._addGraphicsToSprite(data, node);\r\n                    } else if (this._isDrawType(data.type)) {\r\n                        this._addGraphicToSprite(data, node, true);\r\n                    } else {\r\n                        var tChild: any = this.createByJson(data, null, root, customHandler, instanceHandler)\r\n                        if (data.type === \"Script\") {\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = node;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = node;\r\n                            }\r\n                        } else if (data.props.renderType == \"mask\") {\r\n                            node.mask = tChild;\r\n                        } else {\r\n                            node.addChild(tChild);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props) {\r\n            for (var prop in props) {\r\n                var value: any = props[prop];\r\n                if (prop === \"var\" && root) {\r\n                    (root as any)[value] = node;\r\n                } else if (value instanceof Array && node[prop] instanceof Function) {\r\n                    node[prop].apply(node, value);\r\n                } else {\r\n                    node[prop] = value;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (customHandler && json.customProps) {\r\n            customHandler.runWith([node, json]);\r\n        }\r\n\r\n        if (node[\"created\"]) node.created();\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic对象添加到Sprite上\r\n     * @param graphicO graphic对象描述\r\n     */\r\n    static _addGraphicsToSprite(graphicO: any, sprite: Sprite): void {\r\n        var graphics: any[] = graphicO.child;\r\n        if (!graphics || graphics.length < 1) return;\r\n        var g: Graphics = this._getGraphicsFromSprite(graphicO, sprite);\r\n        var ox: number = 0;\r\n        var oy: number = 0;\r\n        if (graphicO.props) {\r\n            ox = this._getObjVar(graphicO.props, \"x\", 0);\r\n            oy = this._getObjVar(graphicO.props, \"y\", 0);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(ox, oy);\r\n        }\r\n        var i: number, len: number;\r\n        len = graphics.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._addGraphicToGraphics(graphics[i], g);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(-ox, -oy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic绘图指令添加到sprite上\r\n     * @param graphicO 绘图指令描述\r\n     */\r\n    static _addGraphicToSprite(graphicO: any, sprite: Sprite, isChild: boolean = false): void {\r\n        var g: Graphics = isChild ? this._getGraphicsFromSprite(graphicO, sprite) : sprite.graphics;\r\n        this._addGraphicToGraphics(graphicO, g);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getGraphicsFromSprite(dataO: any, sprite: Sprite): Graphics {\r\n        if (!dataO || !dataO.props) return sprite.graphics;\r\n        var propsName: string = dataO.props.renderType;\r\n        if (propsName === \"hit\" || propsName === \"unHit\") {\r\n            var hitArea: HitArea = <HitArea>sprite._style.hitArea || (sprite.hitArea = new HitArea());\r\n            if (!hitArea[propsName]) {\r\n                hitArea[propsName] = new Graphics();\r\n            }\r\n            var g: Graphics = hitArea[propsName];\r\n        }\r\n        if (!g) g = sprite.graphics;\r\n        return g;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getTransformData(propsO: any): Matrix {\r\n        var m: Matrix;\r\n\r\n        if (\"pivotX\" in propsO || \"pivotY\" in propsO) {\r\n            m = m || new Matrix();\r\n            m.translate(-this._getObjVar(propsO, \"pivotX\", 0), -this._getObjVar(propsO, \"pivotY\", 0));\r\n        }\r\n\r\n        var sx: number = this._getObjVar(propsO, \"scaleX\", 1), sy: number = this._getObjVar(propsO, \"scaleY\", 1);\r\n        var rotate: number = this._getObjVar(propsO, \"rotation\", 0);\r\n        var skewX: number = this._getObjVar(propsO, \"skewX\", 0);\r\n        var skewY: number = this._getObjVar(propsO, \"skewY\", 0);\r\n\r\n        if (sx != 1 || sy != 1 || rotate != 0) {\r\n            m = m || new Matrix();\r\n            m.scale(sx, sy);\r\n            m.rotate(rotate * 0.0174532922222222);\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _addGraphicToGraphics(graphicO: any, graphic: Graphics): void {\r\n        var propsO: any;\r\n        propsO = graphicO.props;\r\n        if (!propsO) return;\r\n        var drawConfig: any;\r\n        drawConfig = this.DrawTypeDic[graphicO.type];\r\n        if (!drawConfig) return;\r\n\r\n        var g: Graphics = graphic;\r\n        var params: any = this._getParams(propsO, drawConfig[1], drawConfig[2], drawConfig[3]);\r\n        var m: Matrix = this._tM;\r\n        if (m || this._alpha != 1) {\r\n            g.save();\r\n            if (m) g.transform(m);\r\n            if (this._alpha != 1) g.alpha(this._alpha);\r\n        }\r\n        (g as any)[drawConfig[0]].apply(g, params);\r\n        if (m || this._alpha != 1) {\r\n            g.restore();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLineData(params: any[]): any[] {\r\n        params[2] = parseFloat(params[0]) + parseFloat(params[2]);\r\n        params[3] = parseFloat(params[1]) + parseFloat(params[3]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptTextureData(params: any[]): any[] {\r\n        params[0] = ILaya.Loader.getRes(params[0]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLinesData(params: any[]): any[] {\r\n        params[2] = this._getPointListByStr(params[2]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _isDrawType(type: string): boolean {\r\n        if (type === \"Image\") return false;\r\n        return type in this.DrawTypeDic;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getParams(obj: any, params: any[], xPos: number = 0, adptFun: string = null): any[] {\r\n        var rst: any = this._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number;\r\n        len = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], params[i][1]);\r\n        }\r\n        this._alpha = this._getObjVar(obj, \"alpha\", 1);\r\n        var m: Matrix;\r\n        m = this._getTransformData(obj);\r\n        if (m) {\r\n            if (!xPos) xPos = 0;\r\n\r\n            m.translate(rst[xPos], rst[xPos + 1]);\r\n            rst[xPos] = rst[xPos + 1] = 0;\r\n            this._tM = m;\r\n        } else {\r\n            this._tM = null;\r\n        }\r\n        if (adptFun && (this as any)[adptFun]) {\r\n            rst = (this as any)[adptFun](rst);\r\n        }\r\n        return rst;\r\n    }\r\n    /**@private */\r\n    private static DrawTypeDic: any = { \"Rect\": [\"drawRect\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Circle\": [\"drawCircle\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Pie\": [\"drawPie\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"startAngle\", 0], [\"endAngle\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Image\": [\"drawTexture\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]]], \"Texture\": [\"drawTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]], 1, \"_adptTextureData\"], \"FillTexture\": [\"fillTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"repeat\", null]], 1, \"_adptTextureData\"], \"FillText\": [\"fillText\", [[\"text\", \"\"], [\"x\", 0], [\"y\", 0], [\"font\", null], [\"color\", null], [\"textAlign\", null]], 1], \"Line\": [\"drawLine\", [[\"x\", 0], [\"y\", 0], [\"toX\", 0], [\"toY\", 0], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLineData\"], \"Lines\": [\"drawLines\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Curves\": [\"drawCurves\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Poly\": [\"drawPoly\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]], 0, \"_adptLinesData\"] };\r\n    /**@private */\r\n    private static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _tM: Matrix;\r\n    /**@private */\r\n    private static _alpha: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getPointListByStr(str: string): any[] {\r\n        var pointArr: any[] = str.split(\",\");\r\n        var i: number, len: number;\r\n        len = pointArr.length;\r\n        for (i = 0; i < len; i++) {\r\n            pointArr[i] = parseFloat(pointArr[i]);\r\n        }\r\n        return pointArr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getObjVar(obj: any, key: string, noValue: any): any {\r\n        if (key in obj) {\r\n            return obj[key];\r\n        }\r\n        return noValue;\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass DataWatcher {\r\n    comp: any;\r\n    prop: string;\r\n    value: string;\r\n\r\n    //TODO:coverage\r\n    constructor(comp: any, prop: string, value: string) {\r\n        this.comp = comp;\r\n        this.prop = prop;\r\n        this.value = value;\r\n    }\r\n\r\n    exe(view: any): void {\r\n        var fun: Function = LegacyUIParser.getBindFun(this.value);\r\n        this.comp[this.prop] = fun.call(this, view);\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass InitTool {\r\n    /**@private */\r\n    private _nodeRefList: any[];\r\n    /**@private */\r\n    private _initList: any[];\r\n    /**@internal */\r\n    _idMap: { [key: string]: Sprite };\r\n\r\n    //TODO:coverage\r\n    reset(): void {\r\n        this._nodeRefList = null;\r\n        this._initList = null;\r\n        this._idMap = null;\r\n    }\r\n\r\n    //TODO:coverage\r\n    recover(): void {\r\n        this.reset();\r\n        Pool.recover(\"InitTool\", this);\r\n    }\r\n\r\n    static create(): InitTool {\r\n        var tool: InitTool = Pool.getItemByClass(\"InitTool\", InitTool);\r\n        tool._idMap = {};\r\n        return tool;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addNodeRef(node: any, prop: string, referStr: string): void {\r\n        if (!this._nodeRefList) this._nodeRefList = [];\r\n        this._nodeRefList.push([node, prop, referStr]);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    setNodeRef(): void {\r\n        if (!this._nodeRefList) return;\r\n        if (!this._idMap) {\r\n            this._nodeRefList = null;\r\n            return;\r\n        }\r\n        var i: number, len: number;\r\n        len = this._nodeRefList.length;\r\n        var tRefInfo: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tRefInfo = this._nodeRefList[i];\r\n            tRefInfo[0][tRefInfo[1]] = this.getReferData(tRefInfo[2]);\r\n        }\r\n        this._nodeRefList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    getReferData(referStr: string): any {\r\n        if (referStr.indexOf(\"@Prefab:\") >= 0) {\r\n            return new PrefabImpl(LegacyUIParser, Loader.getRes(referStr.replace(\"@Prefab:\", \"\")), 2);\r\n        } else if (referStr.indexOf(\"@arr:\") >= 0) {\r\n            referStr = referStr.replace(\"@arr:\", \"\");\r\n            var list: string[];\r\n            list = referStr.split(\",\");\r\n            var i: number, len: number;\r\n            var tStr: string;\r\n            len = list.length;\r\n            var list2: Sprite[] = [];\r\n            for (i = 0; i < len; i++) {\r\n                tStr = list[i];\r\n                if (tStr) {\r\n                    list2.push(this._idMap[tStr.replace(\"@node:\", \"\")]);\r\n                } else {\r\n                    list2.push(null);\r\n                }\r\n            }\r\n            return list2;\r\n        } else {\r\n            return this._idMap[referStr.replace(\"@node:\", \"\")];\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addInitItem(item: any): void {\r\n        if (!this._initList) this._initList = [];\r\n        this._initList.push(item);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    doInits(): void {\r\n        if (!this._initList) return;\r\n        this._initList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    finish(): void {\r\n        this.setNodeRef();\r\n        this.doInits();\r\n        this.recover();\r\n    }\r\n}","import { Node } from \"../display/Node\";\r\nimport { ILoadURL } from \"../net/Loader\";\r\nimport { Prefab } from \"./HierarchyResource\";\r\n\r\n/**\r\n * 层次结构分析器API\r\n */\r\nexport interface IHierarchyParserAPI {\r\n    /**收集资源链接 */\r\n    collectResourceLinks: (data: any, basePath: string) => (string | ILoadURL)[],\r\n    /**解析 */\r\n    parse: (data: any, options?: Record<string, any>, errors?: Array<any>) => Array<Node> | Node;\r\n}\r\n\r\n/**\r\n * 预制体导入\r\n */\r\nexport class PrefabImpl extends Prefab {\r\n    /**数据 */\r\n    data: any;\r\n    /**层次结构API */\r\n    api: IHierarchyParserAPI;\r\n\r\n    /**\r\n     * 实例化一个预制体\r\n     * @param api 层次结构API\r\n     * @param data 数据\r\n     * @param version 版本\r\n     */\r\n    constructor(api: IHierarchyParserAPI, data: any, version: number) {\r\n        super(version);\r\n\r\n        this.api = api;\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * 创建一个\r\n     * @param options \r\n     * @param errors \r\n     * @returns \r\n     */\r\n    create(options?: Record<string, any>, errors?: any[]): Node {\r\n        let ret = this.api.parse(this.data, options, errors);\r\n        if (Array.isArray(ret)) {\r\n            if (ret.length == 1) {\r\n                ret[0].url = this.url;\r\n            }\r\n            return ret[0];\r\n        }\r\n        else {\r\n            ret.url = this.url;\r\n            return ret;\r\n        }\r\n    }\r\n}\r\n","import { Sprite } from \"./Sprite\";\r\nimport { Widget } from \"../components/Widget\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Resource } from \"../resource/Resource\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { NodeFlags } from \"../Const\";\r\n\r\n/**\r\n * 场景类，负责场景创建，加载，销毁等功能\r\n * 场景被从节点移除后，并不会被自动垃圾机制回收，如果想回收，请调用destroy接口，可以通过unDestroyedScenes属性查看还未被销毁的场景列表\r\n */\r\nexport class Scene extends Sprite {\r\n    /**创建后，还未被销毁的场景列表，方便查看还未被销毁的场景列表，方便内存管理，本属性只读，请不要直接修改*/\r\n    static readonly unDestroyedScenes: Set<Scene> = new Set();\r\n    /**获取根节点*/\r\n    private static _root: Sprite;\r\n    /**@private */\r\n    private static _loadPage: Sprite;\r\n\r\n    /**场景被关闭后，是否自动销毁（销毁节点和使用到的资源），默认为false*/\r\n    autoDestroyAtClosed: boolean = false;\r\n    /**@internal */\r\n    _idMap?: any;\r\n    _scene3D: any;\r\n\r\n    /**@private 相对布局组件*/\r\n    protected _widget: Widget;\r\n\r\n    /**场景时钟*/\r\n    private _timer: Timer;\r\n    /**@private */\r\n    private _viewCreated: boolean = false;\r\n\r\n    constructor(createChildren = true) {\r\n        super();\r\n\r\n        this._timer = ILaya.timer;\r\n        this._widget = Widget.EMPTY;\r\n\r\n        this._scene = this;\r\n        if (createChildren)\r\n            this.createChildren();\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     */\r\n    protected createChildren(): void {\r\n    }\r\n\r\n    /**\r\n     * 兼容加载模式\r\n     * 加载模式设置uimap\r\n     * @param url uimapJosn的url\r\n     */\r\n    static setUIMap(url: string): void {\r\n        let uimap = ILaya.loader.getRes(url);\r\n        if (uimap) {\r\n            for (let key in uimap) {\r\n                ILaya.Loader.loadedMap[key + \".scene\"] = uimap[key];\r\n            }\r\n        } else {\r\n            throw \"请提前加载uimap的json，再使用该接口设置！\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     * 装载场景视图。用于加载模式。\r\n     * @param path 场景地址。\r\n     */\r\n    loadScene(path: string): void {\r\n        Scene.unDestroyedScenes.add(this);\r\n        let url: string = path.indexOf(\".\") > -1 ? path : path + \".scene\";\r\n        let content: Prefab = ILaya.loader.getRes(url);\r\n        if (content) {\r\n            if (!this._viewCreated) {\r\n                content.create({ root: this });\r\n                this._viewCreated = true;\r\n                Scene.unDestroyedScenes.add(this);\r\n            }\r\n        } else {\r\n            this._setBit(NodeFlags.NOT_READY, true);\r\n            ILaya.loader.load(url, null, value => {\r\n                if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            }).then((content: Prefab) => {\r\n                if (!content) throw \"Can not find scene:\" + path;\r\n                if (!this._viewCreated) {\r\n                    this.url = url;\r\n                    Scene.hideLoadingPage();\r\n\r\n                    content.create({ root: this });\r\n                    this._viewCreated = true;\r\n                    Scene.unDestroyedScenes.add(this);\r\n                }\r\n                else\r\n                    this._setBit(NodeFlags.NOT_READY, false);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    createView(view: any): void {\r\n        if (view && !this._viewCreated) {\r\n            this._viewCreated = true;\r\n            LegacyUIParser.createByData(this, view);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 根据IDE内的节点id，获得节点实例\r\n    */\r\n    getNodeByID(id: number): any {\r\n        if (this._idMap) return this._idMap[id];\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 打开场景。【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选）\r\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\r\n     */\r\n    open(closeOther: boolean = true, param: any = null): void {\r\n        if (closeOther) Scene.closeAll();\r\n        Scene.root.addChild(this);\r\n        if (this._scene3D)\r\n            ILaya.stage.addChildAt(this._scene3D, 0);\r\n        this.onOpened(param);\r\n    }\r\n\r\n    /**场景打开完成后，调用此方法（如果有弹出动画，则在动画完成后执行）*/\r\n    onOpened(param: any): void {\r\n        //trace(\"onOpened\");\r\n    }\r\n\r\n    /**\r\n     * 关闭场景\r\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param type 关闭的原因，会传递给onClosed函数\r\n     */\r\n    close(type: string = null): void {\r\n        this.onClosed(type);\r\n        if (this.autoDestroyAtClosed) {\r\n            this.destroy();\r\n            if (this._scene3D)\r\n                this._scene3D.destroy();\r\n        }\r\n        else {\r\n            this.removeSelf();\r\n            if (this._scene3D)\r\n                this._scene3D.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭完成后，调用此方法（如果有关闭动画，则在动画完成后执行）\r\n     * @param type 如果是点击默认关闭按钮触发，则传入关闭按钮的名字(name)，否则为null。\r\n     */\r\n    onClosed(type: string = null): void {\r\n        //trace(\"onClosed\");\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        if (this._scene3D) {\r\n            this._scene3D.destroy();\r\n            this._scene3D = null;\r\n        }\r\n\r\n        this._idMap = null;\r\n        Scene.unDestroyedScenes.delete(this);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * 场景时钟\r\n     * @override\r\n     */\r\n    get timer(): Timer {\r\n        return this._timer;\r\n    }\r\n\r\n    set timer(value: Timer) {\r\n        this._timer = value;\r\n    }\r\n\r\n    /**\r\n     * 场景包含的3D场景实例\r\n     */\r\n    get scene3D() {\r\n        return this._scene3D;\r\n    }\r\n\r\n    /**\r\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get top(): number {\r\n        return this._widget.top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (value != this._widget.top) {\r\n            this._getWidget().top = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get bottom(): number {\r\n        return this._widget.bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (value != this._widget.bottom) {\r\n            this._getWidget().bottom = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get left(): number {\r\n        return this._widget.left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (value != this._widget.left) {\r\n            this._getWidget().left = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get right(): number {\r\n        return this._widget.right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (value != this._widget.right) {\r\n            this._getWidget().right = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerX(): number {\r\n        return this._widget.centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (value != this._widget.centerX) {\r\n            this._getWidget().centerX = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerY(): number {\r\n        return this._widget.centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (value != this._widget.centerY) {\r\n            this._getWidget().centerY = value;\r\n        }\r\n    }\r\n\r\n    protected _shouldRefreshLayout(): void {\r\n        super._shouldRefreshLayout();\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        this.event(Event.RESIZE);\r\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\r\n    }\r\n\r\n    /**\r\n     * 重新排版\r\n     */\r\n    freshLayout() {\r\n        if (this._widget != Widget.EMPTY) {\r\n            this._widget.resetLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\r\n     */\r\n    private _getWidget(): Widget {\r\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\r\n        return this._widget;\r\n    }\r\n\r\n    //////////////////////////////////////静态方法//////////////////////////////////////////\r\n\r\n    /**获取场景根容器*/\r\n    static get root(): Sprite {\r\n        let root = Scene._root;\r\n        if (!root) {\r\n            root = Scene._root = (<Sprite>ILaya.stage.addChild(new Sprite()));\r\n            root.name = \"root\";\r\n            root.mouseThrough = true;\r\n            ILaya.stage.on(\"resize\", null, () => {\r\n                root.size(ILaya.stage.width, ILaya.stage.height);\r\n                root.event(Event.RESIZE);\r\n            });\r\n            root.size(ILaya.stage.width, ILaya.stage.height);\r\n            root.event(Event.RESIZE);\r\n        }\r\n        return root;\r\n    }\r\n\r\n    /**\r\n     * 加载场景及场景使用到的资源\r\n     * @param\turl\t\t\t场景地址\r\n     * @param\tcomplete\t加载完成回调，返回场景实例（可选）\r\n     * @param\tprogress\t加载进度回调（可选）\r\n     */\r\n    static load(url: string, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        return ILaya.loader.load(url, null, value => {\r\n            if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            progress && progress.runWith(value);\r\n        }).then((content: Prefab) => {\r\n            if (!content) throw \"Can not find scene:\" + url;\r\n\r\n            let scene: Scene;\r\n            let errors: Array<any> = [];\r\n            let ret = content.create(null, errors);\r\n            if (errors.length > 0)\r\n                console.warn(`Error loading ${url}: \\n${errors.join(\"\\n\")}`);\r\n\r\n            if (ret instanceof Scene)\r\n                scene = ret;\r\n            else if (ret._is3D) {\r\n                scene = new Scene();\r\n                scene.left = scene.right = scene.top = scene.bottom = 0;\r\n                scene._scene3D = ret;\r\n            }\r\n            else\r\n                throw \"Not a scene:\" + url;\r\n\r\n            scene._viewCreated = true;\r\n            if (scene._scene3D)\r\n                scene._scene3D._scene2D = scene;\r\n            Scene.unDestroyedScenes.add(scene);\r\n            Scene.hideLoadingPage();\r\n            complete && complete.runWith(scene);\r\n\r\n            return scene;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载并打开场景\r\n     * @param\turl\t\t\t场景地址\r\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选），【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\r\n     * @param\tcomplete\t打开完成回调，返回场景实例（可选）\r\n     * @param\tprogress\t加载进度回调（可选）\r\n     */\r\n    static open(url: string, closeOther: boolean = true, param: any = null, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        //兼容处理\r\n        if (param instanceof Handler) {\r\n            var temp: any = complete;\r\n            complete = param;\r\n            param = temp;\r\n        }\r\n        Scene.showLoadingPage();\r\n        return Scene.load(url, Handler.create(null, this._onSceneLoaded, [closeOther, complete, param]), progress);\r\n    }\r\n\r\n    /**@private */\r\n    private static _onSceneLoaded(closeOther: boolean, complete: Handler, param: any, scene: Scene): void {\r\n        scene.open(closeOther, param);\r\n        if (complete) complete.runWith(scene);\r\n    }\r\n\r\n    /**\r\n     * 根据地址，关闭场景（包括对话框）\r\n     * @param\turl\t\t场景地址\r\n     * @param\tname\t如果name不为空，name必须相同才能关闭\r\n     * @return\t返回是否关闭成功，如果url找不到，则不成功\r\n     */\r\n    static close(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene && scene.parent && scene.url === url && (name == null || scene.name == name)) {\r\n                scene.close();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * 关闭所有场景，不包括对话框，如果关闭对话框，请使用Dialog.closeAll()\r\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     */\r\n    static closeAll(): void {\r\n        let root: Sprite = Scene.root;\r\n        for (let i = 0, n = root.numChildren; i < n; i++) {\r\n            var scene = root.getChildAt(0);\r\n            if (scene instanceof Scene)\r\n                scene.close();\r\n            else\r\n                scene.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址，销毁场景（包括对话框）\r\n     * @param\turl\t\t场景地址\r\n     * @param\tname\t如果name不为空，name必须相同才能关闭\r\n     * @return\t返回是否销毁成功，如果url找不到，则不成功\r\n     */\r\n    static destroy(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene.url === url && (name == null || scene.name == name) && !scene._destroyed) {\r\n                scene.destroy();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static gc(): void {\r\n        Resource.destroyUnusedResources();\r\n    }\r\n\r\n    /**\r\n     * 设置loading界面，引擎会在调用open方法后，延迟打开loading界面，在页面添加到舞台之后，关闭loading界面\r\n     * @param\tloadPage \tload界面实例\r\n     */\r\n    static setLoadingPage(loadPage: Sprite): void {\r\n        Scene._loadPage = loadPage;\r\n    }\r\n\r\n    /**\r\n     * 显示loading界面\r\n     * @param\tparam 打开参数，如果是scene，则会传递给onOpened方法\r\n     * @param\tdelay 延迟打开时间，默认500毫秒\r\n     */\r\n    static showLoadingPage(param: any = null, delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._showLoading, [param], false);\r\n        }\r\n    }\r\n\r\n    private static _showLoading(param: any): void {\r\n        ILaya.stage.addChild(Scene._loadPage);\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.onOpened(param);\r\n    }\r\n\r\n    private static _hideLoading(): void {\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.close();\r\n        else\r\n            Scene._loadPage.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * 隐藏loading界面\r\n     * @param\tdelay 延迟关闭时间，默认500毫秒\r\n     */\r\n    static hideLoadingPage(delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._hideLoading);\r\n        }\r\n    }\r\n}","import { CallLater } from \"./CallLater\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * <code>Timer</code> 是时钟管理类。它是一个单例，不要手动实例化此类，应该通过 Laya.timer 访问。\r\n */\r\nexport class Timer {\r\n    /**@private */\r\n    static gSysTimer: Timer = null;\r\n\r\n    /**@private */\r\n    private static _pool: any[] = [];\r\n    /**@private */\r\n    static _mid: number = 1;\r\n\r\n\r\n    /** 时针缩放。*/\r\n    scale: number = 1;\r\n    /** 当前帧开始的时间。*/\r\n    currTimer: number;\r\n    /** 当前的帧数。*/\r\n    currFrame: number = 0;\r\n    /**@internal 两帧之间的时间间隔,单位毫秒。*/\r\n    _delta: number = 0;\r\n    /**@internal */\r\n    _lastTimer: number;\r\n    /**@private */\r\n    private _map: { [key: string]: TimerHandler } = {};\r\n    /**@private */\r\n    private _handlers: any[] = [];\r\n    /**@private */\r\n    private _temp: any[] = [];\r\n    /**@private */\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * 创建 <code>Timer</code> 类的一个实例。\r\n     */\r\n    constructor(autoActive: boolean = true) {\r\n        autoActive && Timer.gSysTimer && Timer.gSysTimer.frameLoop(1, this, this._update);\r\n        this.currTimer = this._getNowData();\r\n        this._lastTimer = this._getNowData();\r\n    }\r\n\r\n    /**两帧之间的时间间隔,单位毫秒。*/\r\n    get delta(): number {\r\n        return this._delta;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        if (this.scale <= 0) {\r\n            this._lastTimer = this._getNowData();\r\n            this._delta = 0;\r\n            return;\r\n        }\r\n        var frame: number = this.currFrame = this.currFrame + this.scale;\r\n        var now: number = this._getNowData();\r\n        var awake: boolean = (now - this._lastTimer) > 30000;\r\n        this._delta = (now - this._lastTimer) * this.scale;\r\n        var timer: number = this.currTimer = this.currTimer + this._delta;\r\n        this._lastTimer = now;\r\n\r\n        //处理handler\r\n        var handlers: any[] = this._handlers;\r\n        this._count = 0;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) {\r\n                var t: number = handler.userFrame ? frame : timer;\r\n                if (t >= handler.exeTime) {\r\n                    if (handler.repeat) {\r\n                        if (!handler.jumpFrame || awake) {\r\n                            handler.exeTime += handler.delay;\r\n                            handler.run(false);\r\n                            if (t > handler.exeTime) {\r\n                                //如果执行一次后还能再执行，做跳出处理，如果想用多次执行，需要设置jumpFrame=true\r\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\r\n                            }\r\n                        } else {\r\n                            while (t >= handler.exeTime) {\r\n                                handler.exeTime += handler.delay;\r\n                                handler.run(false);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        handler.run(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._count++;\r\n            }\r\n        }\r\n\r\n        if (this._count > 30 || frame % 200 === 0) this._clearHandlers();\r\n    }\r\n\r\n    /** @private */\r\n    private _clearHandlers(): void {\r\n        var handlers: any[] = this._handlers;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) this._temp.push(handler);\r\n            else this._recoverHandler(handler);\r\n        }\r\n        this._handlers = this._temp;\r\n        handlers.length = 0;\r\n        this._temp = handlers;\r\n    }\r\n\r\n    /** @private */\r\n    private _recoverHandler(handler: TimerHandler): void {\r\n        if (this._map[handler.key] == handler) delete this._map[handler.key];\r\n        handler.clear();\r\n        Timer._pool.push(handler);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * get now time data\r\n     * @returns \r\n     */\r\n    public _getNowData(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /** @internal */\r\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler {\r\n        //如果延迟为0，则立即执行\r\n        if (!delay) {\r\n            method.apply(caller, args);\r\n            return null;\r\n        }\r\n\r\n        //先覆盖相同函数的计时\r\n        if (coverBefore) {\r\n            var handler: TimerHandler = this._getHandler(caller, method);\r\n            if (handler) {\r\n                handler.repeat = repeat;\r\n                handler.userFrame = useFrame;\r\n                handler.delay = delay;\r\n                handler.caller = caller;\r\n                handler.method = method;\r\n                handler.args = args;\r\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n                return handler;\r\n            }\r\n        }\r\n\r\n        //找到一个空闲的timerHandler\r\n        handler = Timer._pool.length > 0 ? Timer._pool.pop() : new TimerHandler();\r\n        handler.repeat = repeat;\r\n        handler.userFrame = useFrame;\r\n        handler.delay = delay;\r\n        handler.caller = caller;\r\n        handler.method = method;\r\n        handler.args = args;\r\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n\r\n        //索引handler\r\n        this._indexHandler(handler);\r\n\r\n        //插入数组\r\n        this._handlers.push(handler);\r\n\r\n        return handler;\r\n    }\r\n\r\n    /** @private */\r\n    private _indexHandler(handler: TimerHandler): void {\r\n        var caller: any = handler.caller;\r\n        var method: any = handler.method;\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        handler.key = cid + \"_\" + mid;\r\n        this._map[handler.key] = handler;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次。\r\n     * @param\tdelay\t延迟时间(单位为毫秒)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    once(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行。\r\n     * @param\tdelay\t间隔时间(单位毫秒)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    loop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        var handler: TimerHandler = this._create(false, true, delay, caller, method, args, coverBefore);\r\n        if (handler) handler.jumpFrame = jumpFrame;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次(基于帧率)。\r\n     * @param\tdelay\t延迟几帧(单位为帧)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行(基于帧率)。\r\n     * @param\tdelay\t间隔几帧(单位为帧)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /** 返回统计信息。*/\r\n    toString(): string {\r\n        return \" handlers:\" + this._handlers.length + \" pool:\" + Timer._pool.length;\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clear(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理对象身上的所有定时器。\r\n     * @param\tcaller 执行域(this)。\r\n     */\r\n    clearAll(caller: any): void {\r\n        if (!caller) return;\r\n        for (var i: number = 0, n: number = this._handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = this._handlers[i];\r\n            if (handler.caller === caller) {\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): TimerHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        var key: any = cid + \"_\" + mid;\r\n        return this._map[key];\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        CallLater.I.callLater(caller, method, args);\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        CallLater.I.runCallLater(caller, method);\r\n    }\r\n\r\n    /**\r\n     * 取消执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clearCallLater(caller: any, method: Function): void {\r\n        CallLater.I.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * 立即提前执行定时器，执行之后从队列中删除\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runTimer(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停时钟\r\n     */\r\n    pause(): void {\r\n        this.scale = 0;\r\n    }\r\n\r\n    /**\r\n     * 恢复时钟\r\n     */\r\n    resume(): void {\r\n        this.scale = 1;\r\n    }\r\n\r\n\r\n    destroy() {\r\n        for (var i = 0, n = this._handlers.length; i < n; i++) {\r\n            var handler = this._handlers[i];\r\n            handler.clear();\r\n        }\r\n        this._handlers.length = 0;\r\n        this._map = {};\r\n        this._temp.length = 0;\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass TimerHandler {\r\n    key: string;\r\n    repeat: boolean;\r\n    delay: number;\r\n    userFrame: boolean;\r\n    exeTime: number;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n    jumpFrame: boolean;\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(withClear: boolean): void {\r\n        var caller: any = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method: Function = this.method;\r\n        var args: any[] = this.args;\r\n        withClear && this.clear();\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { Timer } from \"./Timer\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class CallLater {\r\n    static I = new CallLater();\r\n    /**@private */\r\n    private _pool: LaterHandler[] = [];\r\n    /**@private */\r\n    private _map: { [key: string]: LaterHandler } = {};\r\n    /**@private */\r\n    private _laters: LaterHandler[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        let laters = this._laters;\r\n        let len = laters.length;\r\n        if (len > 0) {\r\n            for (let i = 0, n = len - 1; i <= n; i++) {\r\n                let handler = laters[i];\r\n                this._map[handler.key] = null;\r\n                if (handler.method !== null) {\r\n                    handler.run();\r\n                    handler.clear();\r\n                }\r\n                this._pool.push(handler);\r\n                i === n && (n = laters.length - 1);\r\n            }\r\n            laters.length = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): LaterHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = (Timer._mid++));\r\n        return this._map[cid + '.' + mid]\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        if (this._getHandler(caller, method) == null) {\r\n            let handler: LaterHandler;\r\n            if (this._pool.length)\r\n                handler = this._pool.pop();\r\n            else\r\n                handler = new LaterHandler();\r\n            //设置属性\r\n            handler.caller = caller;\r\n            handler.method = method;\r\n            handler.args = args;\r\n            //索引handler\r\n            var cid: number = caller ? caller.$_GID : 0;\r\n            var mid: number = (method as any)[\"$_TID\"];\r\n            handler.key = cid + '.' + mid;\r\n            this._map[handler.key] = handler\r\n            //插入队列\r\n            this._laters.push(handler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run();\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    clear(caller: any, method: Function) {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            this._map[handler.key] = null;\r\n            handler.key = \"\";\r\n            handler.clear();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearAll(caller: any) {\r\n        if (!caller) return;\r\n        for (var i = 0, n = this._laters.length; i < n; i++) {\r\n            var handler = this._laters[i];\r\n            if (handler.caller === caller) {\r\n                this._map[handler.key] = null;\r\n                handler.key = \"\";\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass LaterHandler {\r\n    key: string;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(): void {\r\n        var caller = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method = this.method;\r\n        var args = this.args;\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderState2D } from \"./utils/RenderState2D\"\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WebGL {\r\n    static isNativeRender_enable: boolean = false;\r\n\r\n    static _nativeRender_enable(): void {\r\n    }\r\n\r\n    //使用webgl渲染器\r\n    static enable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    static onStageResize(width: number, height: number): void {\r\n        LayaGL.renderEngine.viewport(0, 0, width, height);\r\n        RenderState2D.width = width;\r\n        RenderState2D.height = height;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { WebGL } from \"../webgl/WebGL\"\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport class RunDriver {\r\n\r\n    /**\r\n     * 用于改变 WebGL宽高信息。\r\n     */\r\n    static changeWebGLSize: Function = function (w: number, h: number): void {\r\n        WebGL.onStageResize(w, h);\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from \"./Component\";\r\n\r\nexport class ComponentDriver {\r\n    private _onUpdates: Set<Component> = new Set();\r\n    private _onLateUpdates: Set<Component> = new Set();\r\n    private _onPreRenders: Set<Component> = new Set();\r\n    private _onPostRenders: Set<Component> = new Set();\r\n\r\n    private _toStarts: Set<Component> = new Set();\r\n    readonly _toDestroys: Set<Component> = new Set();\r\n    /**\r\n     * @internal\r\n     * 调用组件Onstart\r\n     */\r\n    callStart() {\r\n        for (let ele of this._toStarts) {\r\n            if (ele._status == 2) {\r\n                ele._status = 3;\r\n\r\n                try {\r\n                    ele.onStart();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n        this._toStarts.clear();\r\n    }\r\n    /**\r\n     * @internal\r\n     * 调用组件OnUpdate\r\n     */\r\n    callUpdate() {\r\n        for (let ele of this._onUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件LayeUpdate\r\n     */\r\n    callLateUpdate() {\r\n        for (let ele of this._onLateUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onLateUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件onPreRender\r\n     */\r\n    callPreRender() {\r\n        for (let ele of this._onPreRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPreRender();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件onPostRender\r\n     */\r\n    callPostRender() {\r\n        for (let ele of this._onPostRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPostRender();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用销毁\r\n     */\r\n    callDestroy(): void {\r\n        for (let ele of this._toDestroys) {\r\n            try {\r\n                ele._destroy(true);\r\n            }\r\n            catch (err: any) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        this._toDestroys.clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 添加一个组件\r\n     * @param comp 组件\r\n     */\r\n    add(comp: Component) {\r\n        if (comp._status == 1) {\r\n            if (comp.onStart) {\r\n                comp._status = 2;\r\n                this._toStarts.add(comp);\r\n            }\r\n            else\r\n                comp._status = 3;\r\n        }\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.add(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.add(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.add(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.add(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 移除一个组件\r\n     * @param comp 组件\r\n     */\r\n    remove(comp: Component) {\r\n        if (comp._status == 2) //starting\r\n            comp._status = 1; //cancel start\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.delete(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.delete(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.delete(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.delete(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 删除组件Driver\r\n     */\r\n    destroy() {\r\n        //TODO:\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Node } from \"./Node\";\r\nimport { Config } from \"./../../Config\";\r\nimport { Input } from \"./Input\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\nimport { InputManager } from \"../events/InputManager\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Render } from \"../renders/Render\"\r\nimport { RenderInfo } from \"../renders/RenderInfo\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { CallLater } from \"../utils/CallLater\"\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { RunDriver } from \"../utils/RunDriver\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * stage大小经过重新调整时进行调度。\r\n * @eventType Event.RESIZE\r\n */\r\n/*[Event(name = \"resize\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台获得焦点时调度。比如浏览器或者当前标签处于后台，重新切换回来时进行调度。\r\n * @eventType Event.FOCUS\r\n */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台失去焦点时调度。比如浏览器或者当前标签被切换到后台后调度。\r\n * @eventType Event.BLUR\r\n */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台焦点变化时调度，使用Laya.stage.isFocused可以获取当前舞台是否获得焦点。\r\n * @eventType Event.FOCUS_CHANGE\r\n */\r\n/*[Event(name = \"focuschange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台可见性发生变化时调度（比如浏览器或者当前标签被切换到后台后调度），使用Laya.stage.isVisibility可以获取当前是否处于显示状态。\r\n * @eventType Event.VISIBILITY_CHANGE\r\n */\r\n/*[Event(name = \"visibilitychange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 浏览器全屏更改时调度，比如进入全屏或者退出全屏。\r\n * @eventType Event.FULL_SCREEN_CHANGE\r\n */\r\n/*[Event(name = \"fullscreenchange\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Stage</code> 是舞台类，显示列表的根节点，所有显示对象都在舞台上显示。通过 Laya.stage 单例访问。</p>\r\n * <p>Stage提供几种适配模式，不同的适配模式会产生不同的画布大小，画布越大，渲染压力越大，所以要选择合适的适配方案。</p>\r\n * <p>Stage提供不同的帧率模式，帧率越高，渲染压力越大，越费电，合理使用帧率甚至动态更改帧率有利于改进手机耗电。</p>\r\n */\r\nexport class Stage extends Sprite {\r\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_NOSCALE: string = \"noscale\";\r\n    /**应用根据屏幕大小铺满全屏，非等比缩放会变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_EXACTFIT: string = \"exactfit\";\r\n    /**应用显示全部内容，按照最小比率缩放，等比缩放不变形，一边可能会留空白，stage的宽高等于设计宽高。*/\r\n    static SCALE_SHOWALL: string = \"showall\";\r\n    /**应用按照最大比率缩放显示，宽或高方向会显示一部分，等比缩放不变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_NOBORDER: string = \"noborder\";\r\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于屏幕宽高。*/\r\n    static SCALE_FULL: string = \"full\";\r\n    /**应用保持设计宽度不变，高度根据屏幕比缩放，stage的宽度等于设计高度，高度根据屏幕比率大小而变化*/\r\n    static SCALE_FIXED_WIDTH: string = \"fixedwidth\";\r\n    /**应用保持设计高度不变，宽度根据屏幕比缩放，stage的高度等于设计宽度，宽度根据屏幕比率大小而变化*/\r\n    static SCALE_FIXED_HEIGHT: string = \"fixedheight\";\r\n    /**应用保持设计比例不变，全屏显示全部内容(类似showall，但showall非全屏，会有黑边)，根据屏幕长宽比，自动选择使用SCALE_FIXED_WIDTH或SCALE_FIXED_HEIGHT*/\r\n    static SCALE_FIXED_AUTO: string = \"fixedauto\";\r\n\r\n    static SCALE_FIXED_AUTO_LAYAME: string = \"fixedauto_layame\";\r\n    static SCALE_FIXED_AUTO_LAYAVERSE: string = \"fixedauto_layaverse\";\r\n\r\n    /**画布水平居左对齐。*/\r\n    static ALIGN_LEFT: string = \"left\";\r\n    /**画布水平居右对齐。*/\r\n    static ALIGN_RIGHT: string = \"right\";\r\n    /**画布水平居中对齐。*/\r\n    static ALIGN_CENTER: string = \"center\";\r\n    /**画布垂直居上对齐。*/\r\n    static ALIGN_TOP: string = \"top\";\r\n    /**画布垂直居中对齐。*/\r\n    static ALIGN_MIDDLE: string = \"middle\";\r\n    /**画布垂直居下对齐。*/\r\n    static ALIGN_BOTTOM: string = \"bottom\";\r\n\r\n    /**不更改屏幕。*/\r\n    static SCREEN_NONE: string = \"none\";\r\n    /**自动横屏。*/\r\n    static SCREEN_HORIZONTAL: string = \"horizontal\";\r\n    /**自动竖屏。*/\r\n    static SCREEN_VERTICAL: string = \"vertical\";\r\n\r\n    /**全速模式，以60的帧率运行。*/\r\n    static FRAME_FAST: string = \"fast\";\r\n    /**慢速模式，以30的帧率运行。*/\r\n    static FRAME_SLOW: string = \"slow\";\r\n    /**自动模式，以30的帧率运行，但鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗。*/\r\n    static FRAME_MOUSE: string = \"mouse\";\r\n    /**休眠模式，以1的帧率运行*/\r\n    static FRAME_SLEEP: string = \"sleep\";\r\n\r\n    /**当前焦点对象，此对象会影响当前键盘事件的派发主体。*/\r\n    focus: Node;\r\n    /**@private 相对浏览器左上角的偏移，弃用，请使用_canvasTransform。*/\r\n    offset: Point = new Point();\r\n    /**帧率类型，支持三种模式：fast-60帧(默认)，slow-30帧，mouse-30帧（鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗），sleep-1帧。*/\r\n    private _frameRate: string = \"fast\";\r\n    /**设计宽度（初始化时设置的宽度Laya.init(width,height)）*/\r\n    designWidth: number = 0;\r\n    /**设计高度（初始化时设置的高度Laya.init(width,height)）*/\r\n    designHeight: number = 0;\r\n    /**画布是否发生翻转。*/\r\n    canvasRotation: boolean = false;\r\n    /**画布的旋转角度。*/\r\n    canvasDegree: number = 0;\r\n    /**\r\n     * <p>设置是否渲染，设置为false，可以停止渲染，画面会停留到最后一次渲染上，减少cpu消耗，此设置不影响时钟。</p>\r\n     * <p>比如非激活状态，可以设置renderingEnabled=false以节省消耗。</p>\r\n     * */\r\n    renderingEnabled: boolean = true;\r\n    /**是否启用屏幕适配，可以适配后，在某个时候关闭屏幕适配，防止某些操作导致的屏幕意外改变*/\r\n    screenAdaptationEnabled: boolean = true;\r\n    /**@internal */\r\n    _canvasTransform: Matrix = new Matrix();\r\n    /**@private */\r\n    private _screenMode: string = \"none\";\r\n    /**@private */\r\n    private _scaleMode: string = \"noscale\";\r\n    /**@private */\r\n    private _alignV: string = \"top\";\r\n    /**@private */\r\n    private _alignH: string = \"left\";\r\n    /**@private */\r\n    private _bgColor: string = \"black\";\r\n    /**@internal */\r\n    _mouseMoveTime: number = 0;\r\n    /**@private */\r\n    private _renderCount: number = 0;\r\n    /**@private */\r\n    private _safariOffsetY: number = 0;\r\n    /**@private */\r\n    private _frameStartTime: number = 0;\r\n    /**@private */\r\n    private _previousOrientation: number = Browser.window.orientation;\r\n    /**@private */\r\n    private _isFocused: boolean;\r\n    /**@private */\r\n    private _isVisibility: boolean;\r\n    /**@internal webgl Color*/\r\n    _wgColor: number[] | null = [0, 0, 0, 1];\r\n    /**@internal */\r\n    _scene3Ds: Node[] = [];\r\n\r\n    /**@private */\r\n    private _globalRepaintSet: boolean = false;\t\t// 设置全局重画标志。这个是给IDE用的。IDE的Image无法在onload的时候通知对应的sprite重画。\r\n    /**@private */\r\n    private _globalRepaintGet: boolean = false;\t\t// 一个get一个set是为了把标志延迟到下一帧的开始，防止部分对象接收不到。\r\n\r\n    /**使用物理分辨率作为canvas大小，会改进渲染效果，但是会降低性能*/\r\n    useRetinalCanvas: boolean = false;\r\n\r\n    /**场景类，引擎中只有一个stage实例，此实例可以通过Laya.stage访问。*/\r\n    constructor() {\r\n        super();\r\n        super.set_transform(this._createTransform());\r\n        //重置默认值，请不要修改\r\n        this.mouseEnabled = true;\r\n        this.hitTestPrior = true;\r\n        this.autoSize = false;\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, true);\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        this._isFocused = true;\r\n        this._isVisibility = true;\r\n\r\n        //this.drawCallOptimize=true;\r\n        this.useRetinalCanvas = Config.useRetinalCanvas;\r\n\r\n        var window: any = Browser.window;\r\n        //var _me = this;\t\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n            this._isFocused = true;\r\n            this.event(Event.FOCUS);\r\n            this.event(Event.FOCUS_CHANGE);\r\n        });\r\n        window.addEventListener(\"blur\", () => {\r\n            this._isFocused = false;\r\n            this.event(Event.BLUR);\r\n            this.event(Event.FOCUS_CHANGE);\r\n            if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n        });\r\n\r\n        // 各种浏览器兼容\r\n        var state = \"visibilityState\", visibilityChange = \"visibilitychange\";\r\n        var document: any = window.document;\r\n        if (typeof document.hidden !== \"undefined\") {\r\n            visibilityChange = \"visibilitychange\";\r\n            state = \"visibilityState\";\r\n        } else if (typeof document.mozHidden !== \"undefined\") {\r\n            visibilityChange = \"mozvisibilitychange\";\r\n            state = \"mozVisibilityState\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            visibilityChange = \"msvisibilitychange\";\r\n            state = \"msVisibilityState\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            visibilityChange = \"webkitvisibilitychange\";\r\n            state = \"webkitVisibilityState\";\r\n        }\r\n\r\n        window.document.addEventListener(visibilityChange, () => {\r\n            if (Browser.document[state] == \"hidden\") {\r\n                this._isVisibility = false;\r\n                if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n            } else {\r\n                this._isVisibility = true;\r\n            }\r\n            this.renderingEnabled = this._isVisibility;\r\n            this.event(Event.VISIBILITY_CHANGE);\r\n        });\r\n        window.addEventListener(\"resize\", () => {\r\n            // 处理屏幕旋转。旋转后收起输入法。\r\n            var orientation: any = Browser.window.orientation;\r\n            if (orientation != null && orientation != this._previousOrientation && this._isInputting()) {\r\n                (Input[\"inputElement\"] as any).target.focus = false;\r\n            }\r\n            this._previousOrientation = orientation;\r\n\r\n            // 弹出输入法不应对画布进行resize。\r\n            if (this._isInputting()) return;\r\n\r\n            // Safari横屏工具栏偏移\r\n            if (Browser.onSafari)\r\n                this._safariOffsetY = Browser.getSafariToolbarOffset();\r\n\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize();\r\n            }\r\n        });\r\n\r\n        // 微信的iframe不触发orientationchange。\r\n        window.addEventListener(\"orientationchange\", (e: any) => {\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize();\r\n            }\r\n        });\r\n\r\n        this._componentDriver = new ComponentDriver();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 在移动端输入时，输入法弹出期间不进行画布尺寸重置。\r\n     */\r\n    private _isInputting(): boolean {\r\n        return (Browser.onMobile && InputManager.isTextInputting);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set_width(value: number) {\r\n        this.designWidth = value;\r\n        super.set_width(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_width();\r\n    }\r\n\r\n    /**@inheritDoc @override */\r\n    set_height(value: number) {\r\n        this.designHeight = value;\r\n        super.set_height(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /** @override*/\r\n    get_height(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_height();\r\n    }\r\n\r\n    /**@override*/\r\n    set transform(value: Matrix) {\r\n        super.set_transform(value);\r\n    }\r\n    /**@inheritDoc @override*/\r\n    get transform(): Matrix {\r\n        if (this._tfChanged) this._adjustTransform();\r\n        return (this._transform = this._transform || this._createTransform());\r\n    }\r\n\r\n    /**\r\n     * 舞台是否获得焦点。\r\n     */\r\n    get isFocused(): boolean {\r\n        return this._isFocused;\r\n    }\r\n\r\n    /**\r\n     * 舞台是否处于可见状态(是否进入后台)。\r\n     */\r\n    get isVisibility(): boolean {\r\n        return this._isVisibility;\r\n    }\r\n\r\n    private _needUpdateCanvasSize: boolean = false;\r\n    updateCanvasSize(delay?: boolean): void {\r\n        if (delay) {\r\n            if (!this._needUpdateCanvasSize) {\r\n                this._needUpdateCanvasSize = true;\r\n                ILaya.systemTimer.callLater(this, this.updateCanvasSize);\r\n            }\r\n        }\r\n        else {\r\n            this.setScreenSize(Browser.clientWidth * Browser.pixelRatio, Browser.clientHeight * Browser.pixelRatio);\r\n        }\r\n    }\r\n\r\n    needUpdateCanvasSize() {\r\n        if (this._needUpdateCanvasSize)\r\n            this.updateCanvasSize();\r\n    }\r\n\r\n    /**\r\n     * 设置屏幕大小，场景会根据屏幕大小进行适配。可以动态调用此方法，来更改游戏显示的大小。\r\n     * @param\tscreenWidth\t\t屏幕宽度。\r\n     * @param\tscreenHeight\t屏幕高度。\r\n     */\r\n    setScreenSize(screenWidth: number, screenHeight: number): void {\r\n        this._needUpdateCanvasSize = false;\r\n\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (this._screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== this._screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var canvasStyle: any = canvas.source.style;\r\n        var mat: Matrix = this._canvasTransform.identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth;\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        this._width = this.designWidth;\r\n        this._height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            // case Stage.SCALE_FULL:\r\n            //     scaleX = scaleY = 1;\r\n            //     this._width = canvasWidth = screenWidth;\r\n            //     this._height = canvasHeight = screenHeight;\r\n            //     break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = pixelRatio;\r\n                canvasWidth = screenWidth;\r\n                canvasHeight = screenHeight;\r\n                this._width = screenWidth / pixelRatio;\r\n                this._height = screenHeight / pixelRatio;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n                this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n                this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO_LAYAME:\r\n                if (screenWidth < screenHeight) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = screenHeight / this.designWidth;\r\n                    scaleY = scaleX;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\r\n                }\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO_LAYAVERSE:\r\n                if (screenWidth > screenHeight) {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                else {\r\n                    scaleX = screenWidth / this.designHeight;\r\n                    scaleY = scaleX;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        //根据不同尺寸缩放stage画面\r\n        scaleX *= this.scaleX;\r\n        scaleY *= this.scaleY;\r\n        if (scaleX === 1 && scaleY === 1) {\r\n            this.transform.identity();\r\n        } else {\r\n            this.transform.a = this._formatData(scaleX / (realWidth / canvasWidth));\r\n            this.transform.d = this._formatData(scaleY / (realHeight / canvasHeight));\r\n        }\r\n\r\n        //处理canvas大小\r\n        canvas.size(canvasWidth, canvasHeight);\r\n        RunDriver.changeWebGLSize(canvasWidth, canvasHeight);\r\n        mat.scale(realWidth / canvasWidth / pixelRatio, realHeight / canvasHeight / pixelRatio);\r\n\r\n        //处理水平对齐\r\n        if (this._alignH === Stage.ALIGN_LEFT) this.offset.x = 0;\r\n        else if (this._alignH === Stage.ALIGN_RIGHT) this.offset.x = screenWidth - realWidth;\r\n        else this.offset.x = (screenWidth - realWidth) * 0.5 / pixelRatio;\r\n\r\n        //处理垂直对齐\r\n        if (this._alignV === Stage.ALIGN_TOP) this.offset.y = 0;\r\n        else if (this._alignV === Stage.ALIGN_BOTTOM) this.offset.y = screenHeight - realHeight;\r\n        else this.offset.y = (screenHeight - realHeight) * 0.5 / pixelRatio;\r\n\r\n        //处理用户自行设置的画布偏移\r\n        this.offset.x = Math.round(this.offset.x);\r\n        this.offset.y = Math.round(this.offset.y);\r\n        mat.translate(this.offset.x, this.offset.y);\r\n        if (this._safariOffsetY) mat.translate(0, this._safariOffsetY);\r\n\r\n        //处理横竖屏\r\n        this.canvasDegree = 0;\r\n        if (rotation) {\r\n            if (this._screenMode === Stage.SCREEN_HORIZONTAL) {\r\n                mat.rotate(Math.PI / 2);\r\n                mat.translate(screenHeight / pixelRatio, 0);\r\n                this.canvasDegree = 90;\r\n            } else {\r\n                mat.rotate(-Math.PI / 2);\r\n                mat.translate(0, screenWidth / pixelRatio);\r\n                this.canvasDegree = -90;\r\n            }\r\n        }\r\n\r\n        mat.a = this._formatData(mat.a);\r\n        mat.d = this._formatData(mat.d);\r\n        mat.tx = this._formatData(mat.tx);\r\n        mat.ty = this._formatData(mat.ty);\r\n\r\n        super.set_transform(this.transform);\r\n        canvasStyle.transformOrigin = canvasStyle.webkitTransformOrigin = canvasStyle.msTransformOrigin = canvasStyle.mozTransformOrigin = canvasStyle.oTransformOrigin = \"0px 0px 0px\";\r\n        canvasStyle.transform = canvasStyle.webkitTransform = canvasStyle.msTransform = canvasStyle.mozTransform = canvasStyle.oTransform = \"matrix(\" + mat.toString() + \")\";\r\n        canvasStyle.width = canvasWidth;\r\n        canvasStyle.height = canvasHeight;\r\n        //修正用户自行设置的偏移\r\n        if (this._safariOffsetY) mat.translate(0, -this._safariOffsetY);\r\n        mat.translate(parseInt(canvasStyle.left) || 0, parseInt(canvasStyle.top) || 0);\r\n        this.visible = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n\r\n        this.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * 屏幕旋转用layaverse 需要\r\n     * @param screenWidth \r\n     * @param screenHeight \r\n     * @param _screenMode \r\n     * @returns \r\n     */\r\n    setScreenSizeForScene(screenWidth: number, screenHeight: number, _screenMode: string) {\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (/**this.*/_screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== /**this.*/_screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var canvasStyle: any = canvas.source.style;\r\n        var mat: Matrix = this._canvasTransform/**add */.clone().identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        let /**this.*/_width = this.designWidth;\r\n        let /**this.*/_height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = 1;\r\n\t\t\t\t/**this.*/_width = canvasWidth = screenWidth;\r\n\t\t\t\t/**this.*/_height = canvasHeight = screenHeight;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n\t\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n\t\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        return {\r\n            stageWidth: _width,\r\n            stageHeight: _height,\r\n            canvasWidth: canvasWidth,\r\n            canvasHeight: canvasHeight,\r\n            scaleX: scaleX / (realWidth / canvasWidth),\r\n            scaleY: scaleY / (realHeight / canvasHeight),\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _formatData(value: number): number {\r\n        if (Math.abs(value) < 0.000001) return 0;\r\n        if (Math.abs(1 - value) < 0.001) return value > 0 ? 1 : -1;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * <p>缩放模式。默认值为 \"noscale\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"noscale\" ：不缩放；</li>\r\n     * <li>\"exactfit\" ：全屏不等比缩放；</li>\r\n     * <li>\"showall\" ：最小比例缩放；</li>\r\n     * <li>\"noborder\" ：最大比例缩放；</li>\r\n     * <li>\"full\" ：不缩放，stage的宽高等于屏幕宽高；</li>\r\n     * <li>\"fixedwidth\" ：宽度不变，高度根据屏幕比缩放；</li>\r\n     * <li>\"fixedheight\" ：高度不变，宽度根据屏幕比缩放；</li>\r\n     * <li>\"fixedauto\" ：根据宽高比，自动选择使用fixedwidth或fixedheight；</li>\r\n     * </ul></p>\r\n     */\r\n    get scaleMode(): string {\r\n        return this._scaleMode;\r\n    }\r\n\r\n    set scaleMode(value: string) {\r\n        this._scaleMode = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * <p>水平对齐方式。默认值为\"left\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"left\" ：居左对齐；</li>\r\n     * <li>\"center\" ：居中对齐；</li>\r\n     * <li>\"right\" ：居右对齐；</li>\r\n     * </ul></p>\r\n     */\r\n    get alignH(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignH;\r\n    }\r\n\r\n    set alignH(value: string) {\r\n        this._alignH = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * <p>垂直对齐方式。默认值为\"top\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"top\" ：居顶部对齐；</li>\r\n     * <li>\"middle\" ：居中对齐；</li>\r\n     * <li>\"bottom\" ：居底部对齐；</li>\r\n     * </ul></p>\r\n     */\r\n    get alignV(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignV;\r\n    }\r\n\r\n    set alignV(value: string) {\r\n        this._alignV = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**舞台的背景颜色，默认为黑色，null为透明。*/\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        if (value)\r\n            this._wgColor = ColorUtils.create(value).arrColor;\r\n        else\r\n            this._wgColor = null;\r\n\r\n        if (value) {\r\n            Render.canvas.style.background = value;\r\n        } else {\r\n            Render.canvas.style.background = \"none\";\r\n        }\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 X 轴坐标。@override*/\r\n    get mouseX(): number {\r\n        return Math.round(InputManager.mouseX / this.clientScaleX);\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 Y 轴坐标。@override*/\r\n    get mouseY(): number {\r\n        return Math.round(InputManager.mouseY / this.clientScaleY);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getMousePoint(): Point {\r\n        return Point.TEMP.setTo(this.mouseX, this.mouseY);\r\n    }\r\n\r\n    /**当前视窗由缩放模式导致的 X 轴缩放系数。*/\r\n    get clientScaleX(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleX() : 1;\r\n    }\r\n\r\n    /**当前视窗由缩放模式导致的 Y 轴缩放系数。*/\r\n    get clientScaleY(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleY() : 1;\r\n    }\r\n\r\n    /**\r\n     * <p>场景布局类型。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"none\" ：不更改屏幕</li>\r\n     * <li>\"horizontal\" ：自动横屏</li>\r\n     * <li>\"vertical\" ：自动竖屏</li>\r\n     * </ul></p>\r\n     */\r\n    get screenMode(): string {\r\n        return this._screenMode;\r\n    }\r\n\r\n    set screenMode(value: string) {\r\n        this._screenMode = value;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        this._repaint |= type;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _loop(): boolean {\r\n        this._globalRepaintGet = this._globalRepaintSet;\r\n        this._globalRepaintSet = false;\r\n        this.render(Render._context, 0, 0);\r\n        return true;\r\n    }\r\n\r\n    /**@private */\r\n    getFrameTm(): number {\r\n        return this._frameStartTime;\r\n    }\r\n\r\n    /**\r\n     * <p>获得距当前帧开始后，过了多少时间，单位为毫秒。</p>\r\n     * <p>可以用来判断函数内时间消耗，通过合理控制每帧函数处理消耗时长，避免一帧做事情太多，对复杂计算分帧处理，能有效降低帧率波动。</p>\r\n     */\r\n    getTimeFromFrameStart(): number {\r\n        return Browser.now() - this._frameStartTime;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set visible(value: boolean) {\r\n        if (this.visible !== value) {\r\n            super.set_visible(value);\r\n            var style: any = Render._mainCanvas.source.style;\r\n            style.visibility = value ? \"visible\" : \"hidden\";\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get visible() {\r\n        return super.visible;\r\n    }\r\n\r\n    /** @private */\r\n    static clear: Function = function (value: string): void {\r\n        //修改需要同步到上面的native实现中\r\n        Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\r\n        RenderState2D.worldScissorTest && LayaGL.renderEngine.scissorTest(false);\r\n        var ctx: Context = Render.context;\r\n        //兼容浏览器\r\n        var c: any[] = (ctx._submits._length == 0 || Config.preserveDrawingBuffer) ? ColorUtils.create(value).arrColor : ILaya.stage._wgColor;\r\n        if (c)\r\n            ctx.clearBG(c[0], c[1], c[2], c[3]);\r\n        else\r\n            ctx.clearBG(0, 0, 0, 0);\r\n        RenderState2D.clear();\r\n    };\r\n\r\n    /**@inheritDoc @override*/\r\n    render(context: Context, x: number, y: number): void {\r\n        if (LayaEnv.isConch) {\r\n            this.renderToNative(context, x, y);\r\n            return;\r\n        }\r\n\r\n        let delta: number = ILaya.timer._delta / 1000;\r\n        if (this._frameRate === Stage.FRAME_SLEEP) {\r\n            var now: number = Browser.now();\r\n            if (now - this._frameStartTime < 1000)\r\n                return;\r\n            this._frameStartTime = now;\r\n        } else {\r\n            if (!this._visible) {\r\n                this._renderCount++;\r\n                if (this._renderCount % 5 === 0) {\r\n                    CallLater.I._update();\r\n                    Stat.loopCount++;\r\n                    RenderInfo.loopCount = Stat.loopCount;\r\n                    this._runComponents();\r\n                    this._updateTimers();\r\n                }\r\n                return;\r\n            }\r\n            this._frameStartTime = Browser.now();\r\n            RenderInfo.loopStTm = this._frameStartTime;\r\n        }\r\n\r\n        this._renderCount++;\r\n        var frameMode: string = this._frameRate === Stage.FRAME_MOUSE ? (((this._frameStartTime - this._mouseMoveTime) < 2000) ? Stage.FRAME_FAST : Stage.FRAME_SLOW) : this._frameRate;\r\n        var isFastMode: boolean = (frameMode !== Stage.FRAME_SLOW);\r\n        var isDoubleLoop: boolean = (this._renderCount % 2 === 0);\r\n\r\n        Stat.renderSlow = !isFastMode;\r\n        if (!isFastMode && !isDoubleLoop)//统一双帧处理渲染\r\n            return;\r\n\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        if (this.renderingEnabled) {\r\n            for (let i = 0, n = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update(delta);\r\n            this._runComponents();\r\n\r\n            context.clear();\r\n\r\n            this._componentDriver.callPreRender();\r\n\r\n            super.render(context, x, y);\r\n\r\n            Stat.render(context, x, y);\r\n\r\n            Stage.clear(this._bgColor);\r\n\r\n            context.flush();\r\n\r\n            this._componentDriver.callPostRender();\r\n\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        this._updateTimers();\r\n    }\r\n\r\n    renderToNative(context: Context, x: number, y: number): void {\r\n        this._renderCount++;\r\n\r\n        if (!this._visible) {\r\n            if (this._renderCount % 5 === 0) {\r\n                CallLater.I._update();\r\n                Stat.loopCount++;\r\n                RenderInfo.loopCount = Stat.loopCount;\r\n                this._runComponents();\r\n                this._updateTimers();\r\n            }\r\n            return;\r\n        }\r\n        this._frameStartTime = Browser.now();\r\n        //update\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        //render\r\n        if (this.renderingEnabled) {\r\n            for (let i: number = 0, n: number = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update();\r\n\r\n            this._runComponents();\r\n\r\n            this._componentDriver.callPreRender();\r\n\r\n            context.clear();\r\n            super.render(context, x, y);\r\n            Stat.render(context, x, y);\r\n\r\n            this._componentDriver.callPostRender();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        //commit submit\r\n        if (this.renderingEnabled) {\r\n            Stage.clear(this._bgColor);\r\n            context.flush();\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        this._updateTimers();\r\n    }\r\n\r\n    private _runComponents() {\r\n        this._componentDriver.callStart();\r\n        this._componentDriver.callUpdate();\r\n        this._componentDriver.callLateUpdate();\r\n        this._componentDriver.callDestroy();\r\n    }\r\n\r\n    private _updateTimers(): void {\r\n        ILaya.systemTimer._update();\r\n        ILaya.physicsTimer._update();\r\n        ILaya.timer._update();\r\n    }\r\n\r\n    /**\r\n     * <p>是否开启全屏，用户点击后进入全屏。</p>\r\n     * <p>兼容性提示：部分浏览器不允许点击进入全屏，比如Iphone等。</p>\r\n     */\r\n    set fullScreenEnabled(value: boolean) {\r\n        var document: any = Browser.document;\r\n        var canvas: any = Render.canvas;\r\n        if (value) {\r\n            canvas.addEventListener('mousedown', this._requestFullscreen);\r\n            canvas.addEventListener('touchstart', this._requestFullscreen);\r\n            document.addEventListener(\"fullscreenchange\", this._fullScreenChanged);\r\n            document.addEventListener(\"mozfullscreenchange\", this._fullScreenChanged);\r\n            document.addEventListener(\"webkitfullscreenchange\", this._fullScreenChanged);\r\n            document.addEventListener(\"msfullscreenchange\", this._fullScreenChanged);\r\n        } else {\r\n            canvas.removeEventListener('mousedown', this._requestFullscreen);\r\n            canvas.removeEventListener('touchstart', this._requestFullscreen);\r\n            document.removeEventListener(\"fullscreenchange\", this._fullScreenChanged);\r\n            document.removeEventListener(\"mozfullscreenchange\", this._fullScreenChanged);\r\n            document.removeEventListener(\"webkitfullscreenchange\", this._fullScreenChanged);\r\n            document.removeEventListener(\"msfullscreenchange\", this._fullScreenChanged);\r\n        }\r\n    }\r\n\r\n    get frameRate(): string {\r\n        if (!LayaEnv.isConch) {\r\n            return this._frameRate;\r\n        } else {\r\n            return ((<any>this))._frameRateNative;\r\n        }\r\n    }\r\n\r\n    set frameRate(value: string) {\r\n        if (!LayaEnv.isConch) {\r\n            this._frameRate = value;\r\n        } else {\r\n            var c: any = ((<any>window)).conch;\r\n            switch (value) {\r\n                case Stage.FRAME_FAST:\r\n                    c.config.setLimitFPS(60);\r\n                    break;\r\n                case Stage.FRAME_MOUSE:\r\n                    c.config.setMouseFrame(2000);\r\n                    break;\r\n                case Stage.FRAME_SLOW:\r\n                    c.config.setSlowFrame(true);\r\n                    break;\r\n                case Stage.FRAME_SLEEP:\r\n                    c.config.setLimitFPS(1);\r\n                    break;\r\n            }\r\n            ((<any>this))._frameRateNative = value;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _requestFullscreen(): void {\r\n        var element: any = Browser.document.documentElement;\r\n        if (element.requestFullscreen) {\r\n            element.requestFullscreen();\r\n        } else if (element.mozRequestFullScreen) {\r\n            element.mozRequestFullScreen();\r\n        } else if (element.webkitRequestFullscreen) {\r\n            element.webkitRequestFullscreen();\r\n        } else if (element.msRequestFullscreen) {\r\n            element.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _fullScreenChanged(): void {\r\n        this.event(Event.FULL_SCREEN_CHANGE);\r\n    }\r\n\r\n    /**退出全屏模式*/\r\n    exitFullscreen(): void {\r\n        var document: any = Browser.document;\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    isGlobalRepaint(): boolean {\r\n        return this._globalRepaintGet;\r\n    }\r\n\r\n    /**@private */\r\n    setGlobalRepaint(): void {\r\n        this._globalRepaintSet = true;\r\n    }\r\n}\r\n","import { Matrix } from \"../maths/Matrix\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class BlurFilterGLRender {\r\n    private static blurinfo = new Vector2();\r\n    render(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: BlurFilter): void {\r\n        var shaderValue: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n        this.setShaderInfo(shaderValue, filter, rt.width, rt.height);\r\n        ctx.drawTarget(rt, 0, 0, width, height, Matrix.EMPTY.identity(), shaderValue);\r\n    }\r\n\r\n    setShaderInfo(shader: Value2D, filter: BlurFilter, w: number, h: number): void {\r\n        shader.defines.addDefine(ShaderDefines2D.FILTERBLUR);\r\n        var sv = <TextureSV>shader;\r\n        BlurFilterGLRender.blurinfo.x = w; BlurFilterGLRender.blurinfo.y = h;\r\n        sv.blurInfo = BlurFilterGLRender.blurinfo;\r\n        var sigma: number = filter.strength / 3.0;//3σ以外影响很小。即当σ=1的时候，半径为3;\r\n        var sigma2: number = sigma * sigma;\r\n        Vector4.tempVec4.x = filter.strength_sig2_2sig2_gauss1[0] = filter.strength;\r\n        Vector4.tempVec4.y = filter.strength_sig2_2sig2_gauss1[1] = sigma2;\t\t\t//做一些预计算传给shader，提高效率\r\n        Vector4.tempVec4.z = filter.strength_sig2_2sig2_gauss1[2] = 2.0 * sigma2;\r\n        Vector4.tempVec4.w = filter.strength_sig2_2sig2_gauss1[3] = 1.0 / (2.0 * Math.PI * sigma2);\r\n\r\n        sv.strength_sig2_2sig2_gauss1 = Vector4.tempVec4;\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { BlurFilterGLRender } from \"./BlurFilterGLRender\";\r\n\r\n/**\r\n * 模糊滤镜\r\n */\r\nexport class BlurFilter extends Filter {\r\n\r\n    /**模糊滤镜的强度(值越大，越不清晰 */\r\n    strength: number;\r\n    strength_sig2_2sig2_gauss1: number[] = [];//给shader用的。避免创建对象\r\n    strength_sig2_native: Float32Array;//给native用的\r\n    renderFunc: any;//\r\n\r\n    /**\r\n     * 模糊滤镜\r\n     * @param\tstrength\t模糊滤镜的强度值\r\n     */\r\n    constructor(strength: number = 4) {\r\n        super();\r\n        this.strength = strength;\r\n        this._glRender = new BlurFilterGLRender();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 当前滤镜的类型\r\n     * @override\r\n     */\r\n    get type(): number {\r\n        return Filter.BLUR;\r\n    }\r\n\r\n    getStrenth_sig2_2sig2_native(): Float32Array {\r\n        if (!this.strength_sig2_native) {\r\n            this.strength_sig2_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不要每次进行计算\r\n        var sigma: number = this.strength / 3.0;\r\n        var sigma2: number = sigma * sigma;\r\n        this.strength_sig2_native[0] = this.strength;\r\n        this.strength_sig2_native[1] = sigma2;\r\n        this.strength_sig2_native[2] = 2.0 * sigma2;\r\n        this.strength_sig2_native[3] = 1.0 / (2.0 * Math.PI * sigma2);\r\n        return this.strength_sig2_native;\r\n    }\r\n}\r\n\r\n","import { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\"\r\nimport { RenderStateContext } from \"../RenderEngine/RenderStateContext\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { GlowFilter } from \"./GlowFilter\";\r\n/**\r\n * @private\r\n */\r\nexport class GlowFilterGLRender {\r\n\tprivate setShaderInfo(shader: Value2D, w: number, h: number, data: GlowFilter): void {\r\n\t\tshader.defines.addDefine(data.typeDefine);\r\n\t\tvar sv = <TextureSV>shader;\r\n\t\t//data._sv_blurInfo1;// [data.blur, data.blur, data.offX, -data.offY];\r\n\t\tVector4.tempVec4.setValue(data._sv_blurInfo1[0], data._sv_blurInfo1[1], data._sv_blurInfo1[2], data._sv_blurInfo1[3]);\r\n\t\tsv.u_blurInfo1 = Vector4.tempVec4;\r\n\t\tvar info2 = data._sv_blurInfo2;\r\n\t\tinfo2[0] = w; info2[1] = h;\r\n\t\tVector4.tempVec4.setValue(info2[0], info2[1], info2[2], info2[3]);\r\n\t\tsv.u_blurInfo2 = Vector4.tempVec4;\r\n\t\tvar arry = data.getColor();\r\n\t\tVector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\r\n\t\tsv.color = Vector4.tempVec4;\r\n\t}\r\n\trender(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: GlowFilter): void {\r\n\t\tvar w: number = width, h: number = height;\r\n\t\tvar svBlur: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n\t\tthis.setShaderInfo(svBlur, w, h, filter);\r\n\t\tvar svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n\t\tvar matI: Matrix = Matrix.TEMP.identity();\r\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svBlur);\t//先画模糊的底\r\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svCP, null, 9);\t\t//再画原始图片,blend为9是为了解决文字边缘锯齿问题，主要是由于预乘alpha导致的，暂时先用这种方法解决\r\n\t\t//ctx.drawTarget(rt, 0, 0, w, h, matI, svCP);\r\n\t}\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { GlowFilterGLRender } from \"./GlowFilterGLRender\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\n\r\n/**\r\n *  发光滤镜(也可以当成阴影滤使用）\r\n */\r\nexport class GlowFilter extends Filter {\r\n\r\n    /**数据的存储，顺序R,G,B,A,blurWidth,offX,offY;*/\r\n    private _elements: Float32Array = new Float32Array(9);\r\n    /**@internal */\r\n    _sv_blurInfo1: number[] = new Array(4);\t//给shader用\r\n    /**@internal */\r\n    _sv_blurInfo2: number[] = [0, 0, 1, 0];\r\n    /**滤镜的颜色*/\r\n    private _color: ColorUtils;\r\n    /**@internal */\r\n    _color_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof1_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof2_native: Float32Array;\r\n\r\n    /**\r\n     * 创建发光滤镜\r\n     * @param\tcolor\t滤镜的颜色\r\n     * @param\tblur\t边缘模糊的大小\r\n     * @param\toffX\tX轴方向的偏移\r\n     * @param\toffY\tY轴方向的偏移\r\n     */\r\n    constructor(color: string, blur: number = 4, offX: number = 6, offY: number = 6) {\r\n        super();\r\n        this._color = new ColorUtils(color || \"#000\");\r\n        //限制最大效果为20\r\n        this.blur = Math.min(blur, 20);\r\n        this.offX = offX;\r\n        this.offY = offY;\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = this.blur; this._sv_blurInfo1[2] = offX; this._sv_blurInfo1[3] = -offY;\r\n        this._glRender = new GlowFilterGLRender();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滤镜类型\r\n     * @override\r\n     */\r\n    get type(): number {\r\n        return BlurFilter.GLOW;\r\n    }\r\n\r\n    /**@internal */\r\n    get typeDefine(): ShaderDefine {\r\n        return ShaderDefines2D.FILTERGLOW;\r\n    }\r\n\r\n    /**@private */\r\n    get offY(): number {\r\n        return this._elements[6];\r\n    }\r\n\r\n    /**@private */\r\n    set offY(value: number) {\r\n        this._elements[6] = value;\r\n        this._sv_blurInfo1[3] = -value;\r\n    }\r\n\r\n    /**@private */\r\n    get offX(): number {\r\n        return this._elements[5];\r\n    }\r\n\r\n    /**@private */\r\n    set offX(value: number) {\r\n        this._elements[5] = value;\r\n        this._sv_blurInfo1[2] = value;\r\n    }\r\n\r\n    /**@private */\r\n    get color(): string {\r\n        return this._color.strColor;\r\n    }\r\n\r\n    /**@private */\r\n    set color(value: string) {\r\n        this._color = new ColorUtils(value);\r\n    }\r\n\r\n    /**@private */\r\n    getColor(): any[] {\r\n        return this._color.arrColor;\r\n    }\r\n\r\n    /**@private */\r\n    get blur(): number {\r\n        return this._elements[4];\r\n    }\r\n\r\n    /**@private */\r\n    set blur(value: number) {\r\n        this._elements[4] = value;\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = value;\r\n    }\r\n\r\n    getColorNative(): Float32Array {\r\n        if (!this._color_native) {\r\n            this._color_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        var color: any[] = this.getColor();\r\n        this._color_native[0] = color[0];\r\n        this._color_native[1] = color[1];\r\n        this._color_native[2] = color[2];\r\n        this._color_native[3] = color[3];\r\n        return this._color_native;\r\n    }\r\n    getBlurInfo1Native(): Float32Array {\r\n        if (!this._blurInof1_native) {\r\n            this._blurInof1_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        this._blurInof1_native[0] = this._blurInof1_native[1] = this.blur;\r\n        this._blurInof1_native[2] = this.offX;\r\n        this._blurInof1_native[3] = this.offY;\r\n        return this._blurInof1_native;\r\n    }\r\n    getBlurInfo2Native(): Float32Array {\r\n        if (!this._blurInof2_native) {\r\n            this._blurInof2_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        this._blurInof2_native[2] = 1;\r\n        return this._blurInof2_native;\r\n    }\r\n}\r\n\r\n","import { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Handler } from \"../utils/Handler\"\r\n\r\n/**\r\n * <p> <code>SoundChannel</code> 用来控制程序中的声音。每个声音均分配给一个声道，而且应用程序可以具有混合在一起的多个声道。</p>\r\n * <p> <code>SoundChannel</code> 类包含控制声音的播放、暂停、停止、音量的方法，以及获取声音的播放状态、总时间、当前播放时间、总循环次数、播放地址等信息的方法。</p>\r\n */\r\nexport class SoundChannel extends EventDispatcher {\r\n    /**\r\n     * 声音地址。\r\n     */\r\n    url: string;\r\n    /**\r\n     * 循环次数。\r\n     */\r\n    loops: number;\r\n    /**\r\n     * 播放声音开始时间。\r\n     */\r\n    startTime: number;\r\n    /**\r\n     * 表示声音是否已暂停。\r\n     */\r\n    isStopped: boolean = false;\r\n    /**\r\n     * 播放完成处理器。\r\n     */\r\n    completeHandler: Handler;\r\n\r\n    /**\r\n     * 音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    set volume(v: number) {\r\n\r\n    }\r\n\r\n    get volume(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放时间，单位是秒。\r\n     */\r\n    get position(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间，单位是秒。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 播放声音。\r\n     */\r\n    play(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 停止播放。\r\n     */\r\n    stop(): void {\r\n        if (this.completeHandler) this.completeHandler.runWith(false);\r\n    }\r\n\r\n    /**\r\n     * 暂停播放。\r\n     */\r\n    pause(): void {\r\n    }\r\n\r\n    /**\r\n     * 继续播放。\r\n     */\r\n    resume(): void {\r\n    }\r\n\r\n    /**\r\n     * private\r\n     */\r\n    protected __runComplete(handler: Handler): void {\r\n        if (handler) {\r\n            handler.runWith(true);\r\n        }\r\n    }\r\n}\r\n\r\n","import { Event as LayaEvent } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\n//import { SoundManager } from \"../SoundManager\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AudioSound } from \"./AudioSound\";\r\n\r\n/**\r\n * @private\r\n * audio标签播放声音的音轨控制\r\n */\r\nexport class AudioSoundChannel extends SoundChannel {\r\n\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    private _audio: HTMLAudioElement = null;\r\n    private _onEnd: (evt: Event) => void;\r\n    private _resumePlay: (evt: Event) => void;\r\n    private _src: string;\r\n\r\n    constructor(audio: HTMLAudioElement) {\r\n        super();\r\n        this._onEnd = this.__onEnd.bind(this);\r\n        this._resumePlay = this.__resumePlay.bind(this);\r\n        audio.addEventListener(\"ended\", this._onEnd);\r\n        this._audio = audio;\r\n        this._src = audio.src;\r\n    }\r\n\r\n    private __onEnd(evt: Event): void {\r\n        if (this.loops == 1) {\r\n            if (this.completeHandler) {\r\n                ILaya.systemTimer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(LayaEvent.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    private __resumePlay(): void {\r\n        if (this._audio) this._audio.removeEventListener(\"canplay\", this._resumePlay as any);\r\n        if (this.isStopped) return;\r\n        try {\r\n            this._audio.currentTime = this.startTime;\r\n            Browser.container.appendChild(this._audio);\r\n            this._audio.play();\r\n        } catch (e) {\r\n            //this.audio.play();\r\n            this.event(LayaEvent.ERROR);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放\r\n     * @override\r\n     */\r\n    play(): void {\r\n        this.isStopped = false;\r\n        try {\r\n            this._audio.playbackRate = SoundManager.playbackRate;\r\n            this._audio.currentTime = this.startTime;\r\n        } catch (e) {\r\n            this._audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            return;\r\n        }\r\n        SoundManager.addChannel(this);\r\n        Browser.container.appendChild(this._audio);\r\n        if (\"play\" in this._audio) {\r\n            let p = this._audio.play();\r\n            if (p)\r\n                p.catch(e => { /*Auto-play was prevented*/ });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当前播放到的位置\r\n     * @return\r\n     * @override\r\n     *\r\n     */\r\n    get position(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.currentTime;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     * @override\r\n     */\r\n    get duration(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.duration;\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @override\r\n     */\r\n    stop(): void {\r\n        //trace(\"stop and remove event\");\r\n        super.stop();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            //理论上应该全部使用stop，但是不知为什么，使用pause，为了安全我只修改在加速器模式下再调用一次stop\r\n            if (LayaEnv.isConch) {\r\n                (this._audio as any).stop();\r\n            }\r\n        this._audio.pause();\r\n        this._audio.removeEventListener(\"ended\", this._onEnd as EventListener);\r\n        this._audio.removeEventListener(\"canplay\", this._resumePlay);\r\n        //ie下使用对象池可能会导致后面的声音播放不出来\r\n        if (!ILaya.Browser.onIE) {\r\n            if (this._audio != AudioSound._musicAudio) {\r\n                Pool.recover(\"audio:\" + this.url, this._audio);\r\n            }\r\n        }\r\n        Browser.removeElement(this._audio);\r\n        this._audio = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    pause(): void {\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            this._audio.pause();\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    resume(): void {\r\n        var audio = this._audio;\r\n        if (!audio)\r\n            return;\r\n        this.isStopped = false;\r\n        if (audio.readyState == 0) { //当音频放到后台一定时间后，会被卸载，音频会断开连接，并将readyState重置为0\r\n            audio.src = this._src;\r\n            audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            audio.load();\r\n        }\r\n        SoundManager.addChannel(this);\r\n        if (\"play\" in audio) {\r\n            audio.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @param v\r\n     * @override\r\n     *\r\n     */\r\n    set volume(v: number) {\r\n        if (!this._audio) return;\r\n        this._audio.volume = v;\r\n    }\r\n\r\n    /**\r\n     * 获取音量\r\n     * @return\r\n     * @override\r\n     *\r\n     */\r\n    get volume(): number {\r\n        if (!this._audio) return 1;\r\n        return this._audio.volume;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { AudioSoundChannel } from \"./AudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { URL } from \"../../net/URL\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AssetDb } from \"../../resource/AssetDb\";\r\n\r\n/**\r\n * @private\r\n * 使用Audio标签播放声音\r\n */\r\nexport class AudioSound extends EventDispatcher {\r\n\r\n    /**@private */\r\n    private static _audioCache: any = {};\r\n    /**\r\n     * 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    audio: HTMLAudioElement;\r\n    /**\r\n     * 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**@internal */\r\n    static _musicAudio: HTMLAudioElement;\r\n    /**\r\n     * 释放声音\r\n     *\r\n     */\r\n    dispose(): void {\r\n        var ad: HTMLAudioElement = AudioSound._audioCache[this.url];\r\n        Pool.clearBySign(\"audio:\" + this.url);\r\n        if (ad) {\r\n            if (!LayaEnv.isConch) {\r\n                ad.src = \"\";\r\n            }\r\n            delete AudioSound._audioCache[this.url];\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    static _initMusicAudio(): void {\r\n        if (AudioSound._musicAudio) return;\r\n        if (!AudioSound._musicAudio) AudioSound._musicAudio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        if (!LayaEnv.isConch) {\r\n            Browser.document.addEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _makeMusicOK(): void {\r\n        Browser.document.removeEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        if (!AudioSound._musicAudio.src) {\r\n            AudioSound._musicAudio.src = \"\";\r\n            AudioSound._musicAudio.load();\r\n        } else {\r\n            AudioSound._musicAudio.play();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 加载声音\r\n     * @param url\r\n     *\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        var ad: HTMLAudioElement;\r\n        if (url == SoundManager._bgMusic) {\r\n            AudioSound._initMusicAudio();\r\n            ad = AudioSound._musicAudio;\r\n            if ((<any>ad).originalUrl != url) {\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                ad = null;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[url];\r\n        }\r\n        if (ad && ad.readyState >= 2) {\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (!ad) {\r\n            if (url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                ad = AudioSound._musicAudio;\r\n            } else {\r\n                ad = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n            }\r\n            AudioSound._audioCache[url] = ad;\r\n            AssetDb.inst.resolveURL(url, url => {\r\n                ad.src = URL.postFormatURL(URL.formatURL(url));\r\n            });\r\n        }\r\n        (<any>ad).originalUrl = url;\r\n\r\n        ad.addEventListener(\"canplaythrough\", onLoaded);\r\n        ad.addEventListener(\"error\", onErr);\r\n        var me: AudioSound = this;\r\n        function onLoaded(): void {\r\n            offs();\r\n            me.loaded = true;\r\n            me.event(Event.COMPLETE);\r\n        }\r\n\r\n        function onErr(): void {\r\n            ad.load = null;\r\n            offs();\r\n            me.event(Event.ERROR);\r\n        }\r\n\r\n        function offs(): void {\r\n            ad.removeEventListener(\"canplaythrough\", onLoaded);\r\n            ad.removeEventListener(\"error\", onErr);\r\n        }\r\n\r\n        this.audio = ad;\r\n        if (ad.load) {\r\n            ad.load();\r\n        } else {\r\n            onErr();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 播放声音\r\n     * @param startTime 起始时间\r\n     * @param loops 循环次数\r\n     * @return\r\n     *\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        //trace(\"playAudioSound\");\r\n        if (!this.url)\r\n            return null;\r\n\r\n        var ad: HTMLAudioElement;\r\n        if (this.url == SoundManager._bgMusic) {\r\n            ad = AudioSound._musicAudio;\r\n            if (ad.src != \"\" && (<any>ad).originalUrl != this.url) {  //@fix 清除上一次记录 防止它释放时把音乐暂停了\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                AudioSound._audioCache[this.url] = ad;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[this.url];\r\n        }\r\n\r\n        if (!ad) return null;\r\n        var tAd: HTMLAudioElement;\r\n\r\n        tAd = Pool.getItem(\"audio:\" + this.url);\r\n\r\n        if (LayaEnv.isConch) {\r\n            if (!tAd) {\r\n                tAd = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this.url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                tAd = AudioSound._musicAudio;\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            } else {\r\n                tAd = tAd ? tAd : ad.cloneNode(true) as HTMLAudioElement;\r\n            }\r\n        }\r\n        (<any>tAd).originalUrl = this.url;\r\n\r\n        var channel: AudioSoundChannel = new AudioSoundChannel(tAd);\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     */\r\n    get duration(): number {\r\n        var ad: HTMLAudioElement;\r\n        ad = AudioSound._audioCache[this.url];\r\n        if (!ad)\r\n            return 0;\r\n        return ad.duration;\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\n/**\r\n * @private\r\n * web audio api方式播放声音的音轨控制\r\n */\r\nexport class WebAudioSoundChannel extends SoundChannel {\r\n    /**\r\n     * 声音原始文件数据\r\n     */\r\n    audioBuffer: any;\r\n\r\n    /**\r\n     * gain节点\r\n     */\r\n    private gain: any;\r\n\r\n    /**\r\n     * 播放用的数据\r\n     */\r\n    private bufferSource: any = null;\r\n    /**\r\n     * 当前时间\r\n     */\r\n    private _currentTime: number = 0;\r\n\r\n    /**\r\n     * 当前音量\r\n     */\r\n    private _volume: number = 1;\r\n\r\n    /**\r\n     * 播放开始时的时间戳\r\n     */\r\n    private _startTime: number = 0;\r\n\r\n    private _pauseTime: number = 0;\r\n\r\n    /**\r\n     * 播放设备\r\n     */\r\n    private context: AudioContext;\r\n\r\n    private _onPlayEnd: Function;\r\n    private static _tryCleanFailed: boolean = false;\r\n    static SetTargetDelay: number = 0.001;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.context = WebAudioSound.ctx;\r\n\r\n        this._onPlayEnd = this.__onPlayEnd.bind(this);\r\n        if (this.context[\"createGain\"]) {\r\n            this.gain = this.context[\"createGain\"]();\r\n        } else {\r\n            this.gain = (<any>this.context)[\"createGainNode\"]();\r\n        }\r\n    }\r\n    /**\r\n     * 播放声音\r\n     * @override\r\n     */\r\n    play(): void {\r\n        SoundManager.addChannel(this);\r\n        this.isStopped = false;\r\n        this._clearBufferSource();\r\n        if (!this.audioBuffer) return;\r\n        if (this.startTime >= this.duration) return this.stop();\r\n        var context: any = this.context;\r\n        var gain: any = this.gain;\r\n        var bufferSource: any = context.createBufferSource();\r\n        this.bufferSource = bufferSource;\r\n        bufferSource.buffer = this.audioBuffer;\r\n        bufferSource.connect(gain);\r\n        if (gain)\r\n            gain.disconnect();\r\n        gain.connect(context.destination);\r\n        bufferSource.onended = this._onPlayEnd;\r\n        // if (this.startTime >= this.duration) this.startTime = 0;\r\n        this._startTime = Browser.now();\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = this._volume;\r\n        if (this.loops == 0) {\r\n            bufferSource.loop = true;\r\n        }\r\n        if (bufferSource.playbackRate.setTargetAtTime) {\r\n            bufferSource.playbackRate.setTargetAtTime(SoundManager.playbackRate, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay)\r\n        } else\r\n            bufferSource.playbackRate.value = SoundManager.playbackRate;\r\n        bufferSource.start(0, this.startTime);\r\n        this._currentTime = 0;\r\n    }\r\n\r\n\r\n\r\n    private __onPlayEnd(): void {\r\n        if (this.loops == 1) {\r\n\r\n            if (this.completeHandler) {\r\n                ILaya.timer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放位置\r\n     * @override\r\n     */\r\n    get position(): number {\r\n        if (this.bufferSource) {\r\n            return (Browser.now() - this._startTime) / 1000 + this.startTime;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private _clearBufferSource(): void {\r\n        if (this.bufferSource) {\r\n            var sourceNode: any = this.bufferSource;\r\n            if (sourceNode.stop) {\r\n                sourceNode.stop(0);\r\n            } else {\r\n                sourceNode.noteOff(0);\r\n            }\r\n            sourceNode.disconnect(0);\r\n            sourceNode.onended = null;\r\n            if (!WebAudioSoundChannel._tryCleanFailed) this._tryClearBuffer(sourceNode);\r\n            this.bufferSource = null;\r\n        }\r\n    }\r\n\r\n    private _tryClearBuffer(sourceNode: any): void {\r\n        try {//已经支持buffer=null\r\n            sourceNode.buffer = null;\r\n        } catch (e) {\r\n            WebAudioSoundChannel._tryCleanFailed = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @override\r\n     */\r\n    stop(): void {\r\n        super.stop();\r\n        this._clearBufferSource();\r\n        this.audioBuffer = null;\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    pause(): void {\r\n        if (!this.isStopped) {\r\n            this._pauseTime = this.position;\r\n        }\r\n        this._clearBufferSource();\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    resume(): void {\r\n        this.startTime = this._pauseTime;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @override\r\n     */\r\n    set volume(v: number) {\r\n        this._volume = v;\r\n        if (this.isStopped) {\r\n            return;\r\n        }\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(v, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = v;\r\n    }\r\n\r\n    /**\r\n     * 获取音量\r\n     * @override\r\n     */\r\n    get volume(): number {\r\n        return this._volume;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { WebAudioSoundChannel } from \"./WebAudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Loader } from \"../../net/Loader\";\r\n\r\n/**\r\n * @private\r\n * web audio api方式播放声音\r\n */\r\nexport class WebAudioSound extends EventDispatcher {\r\n\r\n    /**\r\n     * 播放设备\r\n     */\r\n    static ctx: AudioContext;\r\n\r\n    /**\r\n     * 用于播放解锁声音以及解决Ios9版本的内存释放\r\n     */\r\n    static _miniBuffer: any = WebAudioSound.ctx ? WebAudioSound.ctx.createBuffer(1, 1, 22050) : undefined;\r\n\r\n    /**\r\n     * 是否已解锁声音播放\r\n     */\r\n    private static _unlocked: boolean = false;\r\n\r\n    /**\r\n     * 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**\r\n     * 声音原始文件数据\r\n     */\r\n    audioBuffer: AudioBuffer;\r\n    /**\r\n     * 待播放的声音列表\r\n     */\r\n    private __toPlays: any[];\r\n    /**\r\n     * @private\r\n     */\r\n    private _disposed: boolean = false;\r\n\r\n\r\n    /**\r\n     * 播放声音以解锁IOS的声音\r\n     *\r\n     */\r\n    private static _playEmptySound(): void {\r\n        if (WebAudioSound.ctx == null) {\r\n            return;\r\n        }\r\n        var source: any = WebAudioSound.ctx.createBufferSource();\r\n        source.buffer = WebAudioSound._miniBuffer;\r\n        source.connect(WebAudioSound.ctx.destination);\r\n        source.start(0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 尝试解锁声音\r\n     *\r\n     */\r\n    private static _unlock(): void {\r\n        if (WebAudioSound._unlocked) {\r\n            return;\r\n        }\r\n        WebAudioSound._playEmptySound();\r\n        if (WebAudioSound.ctx.state == \"running\") {\r\n            window.document.removeEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n            WebAudioSound._unlocked = true;\r\n        }\r\n    }\r\n    /*;*/\r\n\r\n    static initWebAudio(): void {\r\n        WebAudioSound.ctx = new (window[\"AudioContext\"] || (window as any)[\"webkitAudioContext\"] || (window as any)[\"mozAudioContext\"])();\r\n\r\n        if (WebAudioSound.ctx.state != \"running\") {\r\n            WebAudioSound._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\r\n            window.document.addEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载声音\r\n     * @param url\r\n     *\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        this.audioBuffer = ILaya.loader.getRes(url);\r\n        if (this.audioBuffer) {\r\n            this._loaded(this.audioBuffer);\r\n            return;\r\n        }\r\n        ILaya.loader.load(url, Loader.SOUND).then(audioBuffer => this._loaded(audioBuffer));\r\n    }\r\n\r\n    private _loaded(audioBuffer: any): void {\r\n        if (this._disposed)\r\n            return;\r\n\r\n        this.audioBuffer = audioBuffer;\r\n        this.loaded = true;\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    private __playAfterLoaded(): void {\r\n        if (!this.__toPlays) return;\r\n        var i: number, len: number;\r\n        var toPlays: any[];\r\n        toPlays = this.__toPlays;\r\n        len = toPlays.length;\r\n        var tParams: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tParams = toPlays[i];\r\n            if (tParams[2] && !((<WebAudioSoundChannel>tParams[2])).isStopped) {\r\n                this.play(tParams[0], tParams[1], tParams[2]);\r\n            }\r\n        }\r\n        this.__toPlays.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 播放声音\r\n     * @param startTime 起始时间\r\n     * @param loops 循环次数\r\n     * @return\r\n     *\r\n     */\r\n    play(startTime: number = 0, loops: number = 0, channel: WebAudioSoundChannel = null): SoundChannel {\r\n        channel = channel ? channel : new WebAudioSoundChannel();\r\n        if (!this.audioBuffer) {\r\n            if (this.url) {\r\n                if (!this.__toPlays) this.__toPlays = [];\r\n                this.__toPlays.push([startTime, loops, channel]);\r\n                this.once(Event.COMPLETE, this, this.__playAfterLoaded);\r\n                this.load(this.url);\r\n            }\r\n        }\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.audioBuffer = this.audioBuffer;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    dispose(): void {\r\n        this._disposed = true;\r\n        if (this.audioBuffer) {\r\n            ILaya.loader.clearRes(this.url, this.audioBuffer);\r\n            this.audioBuffer = null;\r\n        }\r\n        this.__toPlays = [];\r\n    }\r\n}\r\n\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { Event } from \"../events/Event\"\r\nimport { AudioSound } from \"./h5audio/AudioSound\"\r\nimport { WebAudioSound } from \"./webaudio/WebAudioSound\"\r\nimport { URL } from \"../net/URL\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Sound } from \"./Sound\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>SoundManager</code> 是一个声音管理类。提供了对背景音乐、音效的播放控制方法。\r\n * 引擎默认有两套声音方案：WebAudio和H5Audio\r\n * 播放音效，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n * 播放背景音乐，则使用H5Audio播放（使用WebAudio会增加特别大的内存，并且要等加载完毕后才能播放，有延迟）\r\n * 建议背景音乐用mp3类型，音效用wav或者mp3类型（如果打包为app，音效只能用wav格式）。\r\n * 详细教程及声音格式请参考：http://ldc2.layabox.com/doc/?nav=ch-as-1-7-0\r\n */\r\nexport class SoundManager {\r\n    /**\r\n     * 背景音乐音量。\r\n     * @default 1\r\n     */\r\n    static musicVolume: number = 1;\r\n    /**\r\n     * 音效音量。\r\n     * @default 1\r\n     */\r\n    static soundVolume: number = 1;\r\n    /**\r\n     * 声音播放速率。\r\n     * @default 1\r\n     */\r\n    static playbackRate: number = 1;\r\n    /**\r\n     * 背景音乐使用Audio标签播放。\r\n     * @default true\r\n     */\r\n    private static _useAudioMusic: boolean = true;\r\n    /**@private 是否静音，默认为false。*/\r\n    private static _muted: boolean = false;\r\n    /**@private 是否音效静音，默认为false。*/\r\n    private static _soundMuted: boolean = false;\r\n    /**@private 是否背景音乐静音，默认为false。*/\r\n    private static _musicMuted: boolean = false;\r\n    /**@internal 当前背景音乐url。*/\r\n    static _bgMusic: string = null;\r\n    /**@private 当前背景音乐声道。*/\r\n    static _musicChannel: SoundChannel = null;\r\n    /**@private 当前播放的Channel列表。*/\r\n    private static _channels: any[] = [];\r\n    /**@private */\r\n    private static _autoStopMusic: boolean;\r\n    /**@private */\r\n    private static _blurPaused: boolean = false;\r\n    /**@private */\r\n    private static _isActive: boolean = true;\r\n    /**@internal */\r\n    static _soundClass: new () => any;\r\n    /**@internal */\r\n    static _musicClass: new () => any;\r\n    /**@private */\r\n    private static _lastSoundUsedTimeDic: any = {};\r\n    /**@private */\r\n    private static _isCheckingDispose: boolean = false;\r\n    /**@private */\r\n    private static _soundCache: Record<string, Sound> = {};\r\n\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        var win: any = ILaya.Browser.window;\r\n        var supportWebAudio = win[\"AudioContext\"] || win[\"webkitAudioContext\"] || win[\"mozAudioContext\"] ? true : false;\r\n        if (supportWebAudio)\r\n            WebAudioSound.initWebAudio();\r\n        SoundManager._soundClass = supportWebAudio ? WebAudioSound : AudioSound;\r\n\r\n        if (!Browser.onTBMiniGame) {\r\n            AudioSound._initMusicAudio();\r\n        }\r\n        SoundManager._musicClass = AudioSound;\r\n\r\n        return supportWebAudio;\r\n    }\r\n\r\n    /**\r\n     * 音效播放后自动删除。\r\n     * @default true\r\n     */\r\n    static autoReleaseSound: boolean = true;\r\n\r\n    /**\r\n     * 添加播放的声音实例。\r\n     * @param channel <code>SoundChannel</code> 对象。\r\n     */\r\n    static addChannel(channel: SoundChannel): void {\r\n        if (SoundManager._channels.indexOf(channel) >= 0) return;\r\n        SoundManager._channels.push(channel);\r\n    }\r\n\r\n    /**\r\n     * 移除播放的声音实例。\r\n     * @param channel <code>SoundChannel</code> 对象。\r\n     */\r\n    static removeChannel(channel: SoundChannel): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i] == channel) {\r\n                SoundManager._channels.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static disposeSoundLater(url: string): void {\r\n        SoundManager._lastSoundUsedTimeDic[url] = ILaya.Browser.now();\r\n        if (!SoundManager._isCheckingDispose) {\r\n            SoundManager._isCheckingDispose = true;\r\n            ILaya.timer.loop(5000, null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _checkDisposeSound(): void {\r\n        let tTime: number = ILaya.Browser.now();\r\n        let hasCheck: boolean = false;\r\n        for (let key in SoundManager._lastSoundUsedTimeDic) {\r\n            if (tTime - SoundManager._lastSoundUsedTimeDic[key] > 30000) {\r\n                delete SoundManager._lastSoundUsedTimeDic[key];\r\n                SoundManager.disposeSoundIfNotUsed(key);\r\n            } else {\r\n                hasCheck = true;\r\n            }\r\n        }\r\n        if (!hasCheck) {\r\n            SoundManager._isCheckingDispose = false;\r\n            ILaya.timer.clear(null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static disposeSoundIfNotUsed(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i].url == url) {\r\n                return;\r\n            }\r\n        }\r\n        SoundManager.destroySound(url);\r\n    }\r\n\r\n    /**\r\n     * 失去焦点后是否自动停止背景音乐。\r\n     * @param v Boolean 失去焦点后是否自动停止背景音乐。\r\n     *\r\n     */\r\n    static set autoStopMusic(v: boolean) {\r\n        ILaya.stage.off(Event.BLUR, null, SoundManager._stageOnBlur);\r\n        ILaya.stage.off(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n        ILaya.stage.off(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        SoundManager._autoStopMusic = v;\r\n        if (v) {\r\n            ILaya.stage.on(Event.BLUR, null, SoundManager._stageOnBlur);\r\n            ILaya.stage.on(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n            ILaya.stage.on(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 失去焦点后是否自动停止背景音乐。\r\n     */\r\n    static get autoStopMusic(): boolean {\r\n        return SoundManager._autoStopMusic;\r\n    }\r\n\r\n    private static _visibilityChange(): void {\r\n        if (ILaya.stage.isVisibility) {\r\n            SoundManager._stageOnFocus();\r\n        } else {\r\n            SoundManager._stageOnBlur();\r\n        }\r\n    }\r\n\r\n    private static _stageOnBlur(): void {\r\n        SoundManager._isActive = false;\r\n        if (SoundManager._musicChannel) {\r\n            if (!SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = true;\r\n                SoundManager._musicChannel.pause();\r\n\r\n            }\r\n\r\n        }\r\n        SoundManager.stopAllSound();\r\n        ILaya.stage.once(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n    }\r\n\r\n    private static _recoverWebAudio(): void {\r\n        if (WebAudioSound.ctx && WebAudioSound.ctx.state != \"running\" && WebAudioSound.ctx.resume)\r\n            WebAudioSound.ctx.resume();\r\n    }\r\n\r\n    private static _stageOnFocus(): void {\r\n        SoundManager._isActive = true;\r\n        SoundManager._recoverWebAudio();\r\n        ILaya.stage.off(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n        if (SoundManager._blurPaused) {\r\n            if (SoundManager._musicChannel && SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = false;\r\n                SoundManager._musicChannel.resume();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 背景音乐和所有音效是否静音。\r\n     */\r\n    static set muted(value: boolean) {\r\n        if (value == SoundManager._muted) return;\r\n        if (value) {\r\n            SoundManager.stopAllSound();\r\n        }\r\n        SoundManager.musicMuted = value;\r\n        SoundManager._muted = value;\r\n    }\r\n\r\n    static get muted(): boolean {\r\n        return SoundManager._muted;\r\n    }\r\n\r\n    /**\r\n     * 所有音效（不包括背景音乐）是否静音。\r\n     */\r\n    static set soundMuted(value: boolean) {\r\n        SoundManager._soundMuted = value;\r\n    }\r\n\r\n    static get soundMuted(): boolean {\r\n        return SoundManager._soundMuted;\r\n    }\r\n\r\n    /**\r\n     * 背景音乐（不包括音效）是否静音。\r\n     */\r\n    static set musicMuted(value: boolean) {\r\n        if (value == SoundManager._musicMuted) return;\r\n        if (value) {\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel && !SoundManager._musicChannel.isStopped) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = true;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.pause();\r\n                    }\r\n                } else {\r\n                    SoundManager._musicChannel = null;\r\n                }\r\n            } else {\r\n                SoundManager._musicChannel = null;\r\n            }\r\n\r\n            SoundManager._musicMuted = value;\r\n        } else {\r\n            SoundManager._musicMuted = value;\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = false;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.resume();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static get musicMuted(): boolean {\r\n        return SoundManager._musicMuted;\r\n    }\r\n\r\n    static get useAudioMusic(): boolean {\r\n        return SoundManager._useAudioMusic;\r\n    }\r\n\r\n    static set useAudioMusic(value: boolean) {\r\n        SoundManager._useAudioMusic = value;\r\n        if (value) {\r\n            SoundManager._musicClass = AudioSound;\r\n        } else {\r\n            SoundManager._musicClass = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音效。音效可以同时播放多个。\r\n     * @param url\t\t\t声音文件地址。\r\n     * @param loops\t\t\t循环次数,0表示无限循环。\r\n     * @param complete\t\t声音播放完成回调  Handler对象。\r\n     * @param soundClass\t使用哪个声音类进行播放，null表示自动选择。\r\n     * @param startTime\t\t声音播放起始时间。\r\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playSound(url: string, loops: number = 1, complete: Handler = null, soundClass: new () => any = null, startTime: number = 0): SoundChannel {\r\n        if (!SoundManager._isActive || !url) return null;\r\n        if (SoundManager._muted) return null;\r\n        SoundManager._recoverWebAudio();\r\n        if (url == SoundManager._bgMusic) {\r\n            if (SoundManager._musicMuted) return null;\r\n        } else {\r\n            if (SoundManager._soundMuted) return null;\r\n        }\r\n        let tSound: Sound;\r\n        if (!Browser._isMiniGame) {\r\n            tSound = SoundManager._soundCache[url];\r\n        }\r\n        if (!soundClass) soundClass = SoundManager._soundClass;\r\n        if (!tSound) {\r\n            tSound = new soundClass();\r\n            tSound.load(url);\r\n            if (!Browser._isMiniGame) {\r\n                SoundManager._soundCache[url] = tSound;\r\n            }\r\n        }\r\n        let channel = tSound.play(startTime, loops);\r\n        if (!channel) return null;\r\n        channel.url = url;\r\n        channel.volume = (url == SoundManager._bgMusic) ? SoundManager.musicVolume : SoundManager.soundVolume;\r\n        channel.completeHandler = complete;\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源。\r\n     * @param url\t声音播放地址。\r\n     */\r\n    static destroySound(url: string): void {\r\n        let tSound = SoundManager._soundCache[url];\r\n        if (tSound) {\r\n            delete SoundManager._soundCache[url];\r\n            tSound.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播放当前的背景音乐。\r\n     * @param url\t\t声音文件地址。\r\n     * @param loops\t\t循环次数,0表示无限循环。\r\n     * @param complete\t声音播放完成回调,complete 结果参数 true: 播放完成, false/undefined ：stop触发的complete。\r\n     * @param startTime\t声音播放起始时间。\r\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playMusic(url: string, loops: number = 0, complete: Handler = null, startTime: number = 0): SoundChannel {\r\n        SoundManager._bgMusic = url;\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        return SoundManager._musicChannel = SoundManager.playSound(url, loops, complete, SoundManager._musicClass, startTime);\r\n    }\r\n\r\n    /**\r\n     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。\r\n     * @param url  声音文件地址。\r\n     */\r\n    static stopSound(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有声音（包括背景音乐和音效）。\r\n     */\r\n    static stopAll(): void {\r\n        SoundManager._bgMusic = null;\r\n        var i: number;\r\n        var channel: SoundChannel;\r\n        for (i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            channel = SoundManager._channels[i];\r\n            channel.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有音效（不包括背景音乐）。\r\n     */\r\n    static stopAllSound(): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url != SoundManager._bgMusic) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放背景音乐（不包括音效）。\r\n     * @param url  声音文件地址。\r\n     */\r\n    static stopMusic(): void {\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        SoundManager._bgMusic = null;\r\n    }\r\n\r\n    /**\r\n     * 设置声音音量。根据参数不同，可以分别设置指定声音（背景音乐或音效）音量或者所有音效（不包括背景音乐）音量。\r\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param url\t\t(default = null)声音播放地址。默认为null。为空表示设置所有音效（不包括背景音乐）的音量，不为空表示设置指定声音（背景音乐或音效）的音量。\r\n     */\r\n    static setSoundVolume(volume: number, url: string = null): void {\r\n        if (url) {\r\n            SoundManager._setVolume(url, volume);\r\n        } else {\r\n            SoundManager.soundVolume = volume;\r\n            for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n                let channel = SoundManager._channels[i];\r\n                if (channel.url != SoundManager._bgMusic) {\r\n                    channel.volume = volume;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置背景音乐音量。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    static setMusicVolume(volume: number): void {\r\n        SoundManager.musicVolume = volume;\r\n        SoundManager._setVolume(SoundManager._bgMusic, volume);\r\n    }\r\n\r\n    /**\r\n     * 设置指定声音的音量。\r\n     * @param url\t\t声音文件url\r\n     * @param volume\t音量。初始值为1。\r\n     */\r\n    private static _setVolume(url: string, volume: number): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.volume = volume;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { SoundManager } from \"./SoundManager\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * 用于播放背景音乐或者音效的节点\r\n */\r\nexport class SoundNode extends Sprite {\r\n    private _channel: SoundChannel;\r\n    private _tar: Sprite;\r\n    private _playEvents: string;\r\n    private _stopEvents: string;\r\n    private _source: string;\r\n    private _isMusic: boolean;\r\n    private _autoPlay: boolean;\r\n    private _loop: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._loop = 1;\r\n\r\n        this.on(Event.ADDED, this, this._onParentChange);\r\n        this.on(Event.REMOVED, this, this._onParentChange);\r\n    }\r\n\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n        if (value) {\r\n            if (this._autoPlay && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n                this.play();\r\n        }\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    /**\r\n     * 如果是，音乐类型为背景音乐，否则为音效\r\n     */\r\n    get isMusic() {\r\n        return this._isMusic;\r\n    }\r\n\r\n    set isMusic(value: boolean) {\r\n        this._isMusic = value;\r\n    }\r\n\r\n    /**\r\n     * 循环次数\r\n     */\r\n    get loop() {\r\n        return this._loop;\r\n    }\r\n\r\n    set loop(value: number) {\r\n        this._loop = value;\r\n    }\r\n\r\n    /**\r\n     * 是否自动播放\r\n     */\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value && this._source && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n            this.play();\r\n    }\r\n\r\n    /**@private */\r\n    private _onParentChange(): void {\r\n        this.target = (<Sprite>this.parent);\r\n    }\r\n\r\n    /**\r\n     * 播放\r\n     * @param loops 循环次数\r\n     * @param complete 完成回调\r\n     *\r\n     */\r\n    play(loops?: number, complete?: Handler): void {\r\n        if (!this._source) return;\r\n\r\n        if (loops == null || isNaN(loops))\r\n            loops = this._loop;\r\n\r\n        this.stop();\r\n\r\n        if (this._isMusic)\r\n            this._channel = SoundManager.playMusic(this._source, loops, complete);\r\n        else\r\n            this._channel = SoundManager.playSound(this._source, loops, complete);\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     *\r\n     */\r\n    stop(): void {\r\n        if (this._channel && !this._channel.isStopped) {\r\n            this._channel.stop();\r\n        }\r\n        this._channel = null;\r\n    }\r\n\r\n    /**@private */\r\n    private _setPlayAction(tar: Sprite, event: string, action: string, add: boolean = true): void {\r\n        if (!(this as any)[action]) return;\r\n        if (!tar) return;\r\n        if (add) {\r\n            tar.on(event, this, (this as any)[action]);\r\n        } else {\r\n            tar.off(event, this, (this as any)[action]);\r\n        }\r\n\r\n    }\r\n\r\n    /**@private */\r\n    private _setPlayActions(tar: Sprite, events: string, action: string, add: boolean = true): void {\r\n        if (!tar) return;\r\n        if (!events) return;\r\n        let eventArr = events.split(\",\");\r\n        let len = eventArr.length;\r\n        for (let i = 0; i < len; i++) {\r\n            this._setPlayAction(tar, eventArr[i], action, add);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置触发播放的事件\r\n     * @param events\r\n     *\r\n     */\r\n    set playEvent(events: string) {\r\n        this._playEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"play\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置控制播放的对象\r\n     * @param tar\r\n     *\r\n     */\r\n    set target(tar: Sprite) {\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", false);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", false);\r\n        }\r\n        this._tar = tar;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", true);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置触发停止的事件\r\n     * @param events\r\n     *\r\n     */\r\n    set stopEvent(events: string) {\r\n        this._stopEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"stop\");\r\n        }\r\n    }\r\n}\r\n","import { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { URL } from \"../net/URL\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Event as LayaEvent } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * <code>VideoTexture</code> 多媒体纹理\r\n */\r\nexport class VideoTexture extends BaseTexture {\r\n    public readonly element: HTMLVideoElement;\r\n\r\n    private _source: string;\r\n    private _listeningEvents: Record<string, (evt: Event) => void>;\r\n    private immediatelyPlay: boolean;\r\n    /**\r\n     * 是否开发者自己调用Render\r\n     */\r\n    private _frameRender: boolean;\r\n    /** @inernal 避免重复的加载 */\r\n    _isLoaded: boolean;\r\n    _needUpdate: boolean;\r\n\r\n    /**\r\n     * 创建VideoTexture对象，\r\n     */\r\n    constructor() {\r\n        let ele: HTMLVideoElement = ILaya.Browser.createElement(\"video\");\r\n        super(ele.videoWidth, ele.videoHeight, RenderTargetFormat.R8G8B8);\r\n        this._frameRender = true;\r\n        this._isLoaded = false;\r\n        this._needUpdate = false;\r\n        this.immediatelyPlay = false;\r\n        this.element = ele;\r\n\r\n        this._listeningEvents = {};\r\n\r\n        this._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n        // ele.setAttribute('crossorigin', 'Anonymous');\r\n\r\n        var style: any = this.element.style;\r\n        style.position = 'absolute';\r\n        style.top = '0px';\r\n        style.left = '0px';\r\n\r\n        // 默认放开webGL对纹理数据的跨域限制\r\n        ele.setAttribute('crossorigin', 'anonymous');\r\n        if (ILaya.Browser.onMobile) {\r\n            //@ts-ignore\r\n            ele[\"x5-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"x5-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.x5PlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsInline = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.webkitPlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsinline = true;\r\n            //@ts-ignore\r\n            ele.style.playsInline = true;\r\n            ele.crossOrigin = \"anonymous\";\r\n            ele.setAttribute('playsinline', 'true');\r\n            ele.setAttribute('x5-playsinline', 'true');\r\n            ele.setAttribute('webkit-playsinline', 'true');\r\n            ele.autoplay = true;\r\n        }\r\n\r\n        ele.addEventListener(\"loadedmetadata\", () => {\r\n            this.loadedmetadata();\r\n        });\r\n        const scope = this;\r\n        function updateVideo() {\r\n            scope._needUpdate = true;\r\n            //@ts-ignore\r\n            ele.requestVideoFrameCallback(updateVideo);\r\n\r\n        }\r\n        if ('requestVideoFrameCallback' in ele) {\r\n            //@ts-ignore\r\n            ele.requestVideoFrameCallback(updateVideo);\r\n        }\r\n        //ios微信浏览器环境下默认不触发loadedmetadata，在主动调用play方法的时候才会触发loadedmetadata事件\r\n        if (ILaya.Browser.onWeiXin) {\r\n            this.loadedmetadata();\r\n        }\r\n    }\r\n\r\n    private isNeedUpdate() {\r\n        return this._needUpdate;\r\n    }\r\n\r\n    loadedmetadata() {\r\n        if (this._isLoaded)\r\n            return;\r\n        //flag only TODO\r\n        this._width = this.element.videoWidth;\r\n        this._height = this.element.videoHeight;\r\n        if (Browser.onLayaRuntime) {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8A8, false, false, false);\r\n        }\r\n        else {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8, false, false, false);\r\n        }\r\n        this.wrapModeU = WrapMode.Clamp;\r\n        this.wrapModeV = WrapMode.Clamp;\r\n        this.filterMode = FilterMode.Bilinear;\r\n        LayaGL.textureContext.initVideoTextureData(this._texture);\r\n        this._texture.gammaCorrection = 2.2;//这里使用srgb会变得特别的卡，所以srgb的转换放入Shader中进行\r\n        if (this.immediatelyPlay) {\r\n            this.play();\r\n        }\r\n        this._isLoaded = true;\r\n        this.event(LayaEvent.READY, this);\r\n    }\r\n\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    get gammaCorrection() {\r\n        return 2.2;\r\n    }\r\n\r\n    /**\r\n    * 设置播放源路径\r\n    * @param url 播放源路径\r\n    */\r\n    set source(url: string) {\r\n        this._source = url;\r\n        if (!url)\r\n            return;\r\n\r\n        AssetDb.inst.resolveURL(url, url => {\r\n            while (this.element.childElementCount)\r\n                this.element.firstChild.remove();\r\n\r\n            if (url.startsWith(\"blob:\"))\r\n                this.element.src = url;\r\n            else\r\n                this.appendSource(url);\r\n        });\r\n    }\r\n\r\n    private appendSource(source: string): void {\r\n        var sourceElement: HTMLSourceElement = ILaya.Browser.createElement(\"source\");\r\n        sourceElement.src = URL.postFormatURL(URL.formatURL(source));\r\n        let extension = Utils.getFileExtension(source);\r\n        sourceElement.type = extension == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + extension);\r\n        this.element.appendChild(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    render() {\r\n\r\n        if (this.element.readyState == 0)\r\n            return;\r\n        if (this.isNeedUpdate() || Browser.onLayaRuntime) {\r\n            LayaGL.textureContext.updateVideoTexture(this._texture, this.element, false, false);\r\n            this._needUpdate = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否每一帧都渲染\r\n     */\r\n    set frameRender(value: boolean) {\r\n        if (this._frameRender && !value) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n        if (!this._frameRender && value) {\r\n            ILaya.timer.frameLoop(1, this, this.render);\r\n        }\r\n        this._frameRender = value;\r\n    }\r\n\r\n    get frameRender() {\r\n        return this._frameRender;\r\n    }\r\n\r\n\r\n    /**\r\n     * 开始播放视频\r\n     */\r\n    play() {\r\n        if (!this._texture) {\r\n            this.immediatelyPlay = true;\r\n        } else {\r\n            this.element.play().catch(() => {\r\n                this.event(\"NotAllowedError\");\r\n            });\r\n            if (this._frameRender) {\r\n                ILaya.timer.frameLoop(1, this, this.render);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _getSource() {\r\n        return this._texture ? this._texture.resource : null;\r\n    }\r\n\r\n    get defaultTexture() {\r\n        return Texture2D.whiteTexture;\r\n    }\r\n\r\n    /**\r\n     * 暂停播放视频\r\n     */\r\n    pause() {\r\n        this.element.pause();\r\n        if (this._frameRender) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 重新加载视频。\r\n     */\r\n    load(): void {\r\n        this.element.load();\r\n    }\r\n\r\n    /**\r\n     * 检测是否支持播放指定格式视频。\r\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * <ul>\r\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\r\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\r\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\r\n     * </ul>\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        type = type == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + type);\r\n        return this.element.canPlayType(type);\r\n    }\r\n\r\n    /**\r\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\r\n     * @return TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this.element.buffered;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放源路径。\r\n     */\r\n    get currentSrc(): string {\r\n        return this.element.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前播放头位置。\r\n     */\r\n    get currentTime(): number {\r\n        return this.element.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this.element)\r\n            return;\r\n\r\n        this.element.currentTime = value;\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前音量。\r\n     */\r\n    set volume(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.volume = value;\r\n    }\r\n\r\n    get volume(): number {\r\n        return this.element.volume;\r\n    }\r\n\r\n    /**\r\n     * 表示视频元素的就绪状态：\r\n     * <ul>\r\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\r\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\r\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\r\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\r\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\r\n     * </ul>\r\n     */\r\n    get readyState(): any {\r\n        return this.element.readyState;\r\n    }\r\n\r\n    /**\r\n     * 获取视频源尺寸。ready事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this.element.videoWidth;\r\n    }\r\n\r\n    get videoHeight(): number {\r\n        return this.element.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * 获取视频长度（秒）。ready事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this.element.duration;\r\n    }\r\n\r\n    /**\r\n     * 返回音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this.element.ended;\r\n    }\r\n\r\n    /**\r\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\r\n     */\r\n    get error(): MediaError {\r\n        return this.element.error;\r\n    }\r\n\r\n    /**\r\n     * 设置或返回音频/视频是否应在结束时重新播放。\r\n     */\r\n    get loop(): boolean {\r\n        return this.element.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.loop = value;\r\n    }\r\n\r\n    /**\r\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\r\n     * <ul>\r\n     * <li>1.0 正常速度</li>\r\n     * <li>0.5 半速（更慢）</li>\r\n     * <li>2.0 倍速（更快）</li>\r\n     * <li>-1.0 向后，正常速度</li>\r\n     * <li>-0.5 向后，半速</li>\r\n     * </ul>\r\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\r\n     */\r\n    get playbackRate(): number {\r\n        return this.element.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * 获取和设置静音状态。\r\n     */\r\n    get muted(): boolean {\r\n        return this.element.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.muted = value;\r\n    }\r\n\r\n    /**\r\n     * 返回视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this.element.paused;\r\n    }\r\n\r\n    /**\r\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\r\n     * <ul>\r\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\r\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\r\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\r\n     * </ul>\r\n     */\r\n    get preload(): string {\r\n        return this.element.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this.element)\r\n            return;\r\n        //@ts-ignore\r\n        this.element.preload = value;\r\n    }\r\n\r\n    /**\r\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\r\n     */\r\n    get seekable(): any {\r\n        return this.element.seekable;\r\n    }\r\n\r\n    /**\r\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\r\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this.element.seeking;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string): void {\r\n        if (videoEvents.has(type)) {\r\n            let func = this._listeningEvents[type];\r\n            if (!func)\r\n                func = this._listeningEvents[type] = () => {\r\n                    this.event(type);\r\n                };\r\n\r\n            this.element.addEventListener(type, func);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        var isConchApp: boolean = LayaEnv.isConch;\r\n        if (isConchApp) {\r\n            (<any>this.element)._destroy();\r\n        }\r\n\r\n        ILaya.timer.clear(this, this.render);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nconst videoEvents = new Set([\r\n    \"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"error\", \"loadeddata\",\r\n    \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\",\r\n    \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\", \"ended\"\r\n]);","import { Sprite } from \"../display/Sprite\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { VideoTexture } from \"./VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n/**\r\n * <code>VideoNode</code>将视频显示到Canvas上。<code>Video</code>可能不会在所有浏览器有效。\r\n * <p>关于Video支持的所有事件参见：<i>http://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp</i>。</p>\r\n * <p>\r\n * <b>注意：</b><br/>\r\n * 在PC端可以在任何时机调用<code>play()</code>因此，可以在程序开始运行时就使Video开始播放。但是在移动端，只有在用户第一次触碰屏幕后才可以调用play()，所以移动端不可能在程序开始运行时就自动开始播放Video。\r\n * </p>\r\n *\r\n * <p>MDN Video链接： <i>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video</i></p>\r\n */\r\nexport class VideoNode extends Sprite {\r\n    private _videoTexture: VideoTexture;\r\n    private _internalTex: Texture;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.texture = this._internalTex = new Texture();\r\n\r\n        if (LayaEnv.isPlaying && ILaya.Browser.onMobile) {\r\n            let func = () => {\r\n                ILaya.Browser.document.removeEventListener(\"touchend\", func);\r\n\r\n                if (!this._videoTexture)\r\n                    return;\r\n\r\n                if (Browser.onIOS) {\r\n                    this._videoTexture.load();\r\n                } else {\r\n                    this._videoTexture.play();\r\n                    this._videoTexture.pause();\r\n                }\r\n            }\r\n\r\n            ILaya.Browser.document.addEventListener(\"touchend\", func);\r\n        }\r\n    }\r\n\r\n    get videoTexture(): VideoTexture {\r\n        return this._videoTexture;\r\n    }\r\n\r\n    set videoTexture(value: VideoTexture) {\r\n        if (this._videoTexture) {\r\n            this._videoTexture._removeReference();\r\n            this._videoTexture.off(Event.READY, this, this.onVideoMetaLoaded);\r\n        }\r\n\r\n        this._videoTexture = value;\r\n        if (value) {\r\n            this._videoTexture._addReference();\r\n            this._videoTexture.on(Event.READY, this, this.onVideoMetaLoaded);\r\n            if (this._videoTexture._isLoaded)\r\n                this._internalTex.setTo(this._videoTexture);\r\n        }\r\n        else {\r\n            this._internalTex.setTo(null);\r\n        }\r\n    }\r\n\r\n    get source() {\r\n        return this._videoTexture?.source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        if (value) {\r\n            if (!this._videoTexture)\r\n                this.videoTexture = new VideoTexture();\r\n            this._videoTexture.source = value;\r\n        }\r\n        else if (this._videoTexture)\r\n            this._videoTexture.source = value;\r\n    }\r\n\r\n    /**\r\n     * 设置播放源。\r\n     * @param url\t播放源路径。\r\n     */\r\n    load(url: string): void {\r\n        this.source = url;\r\n    }\r\n\r\n    /**\r\n     * 开始播放视频。\r\n     */\r\n    play(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.play();\r\n    }\r\n\r\n    /**\r\n     * 暂停视频播放。\r\n     */\r\n    pause(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.pause();\r\n    }\r\n\r\n    /**\r\n     * 重新加载视频。\r\n     */\r\n    reload(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.load();\r\n    }\r\n\r\n    /**\r\n     * 检测是否支持播放指定格式视频。\r\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * <ul>\r\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\r\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\r\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\r\n     * </ul>\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        if (!this._videoTexture)\r\n            this.videoTexture = new VideoTexture();\r\n        return this._videoTexture.canPlayType(type);\r\n    }\r\n\r\n    private onVideoMetaLoaded(): void {\r\n        this._internalTex.setTo(this._videoTexture);\r\n    }\r\n\r\n    /**\r\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\r\n     * @return TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this._videoTexture?.buffered;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放源路径。\r\n     */\r\n    get currentSrc(): string {\r\n        return this._videoTexture?.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前播放头位置。\r\n     */\r\n    get currentTime(): number {\r\n        return this._videoTexture?.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.currentTime = value;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前音量。\r\n     */\r\n    set volume(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.volume = value;\r\n    }\r\n\r\n    get volume(): number {\r\n        return this._videoTexture?.volume;\r\n    }\r\n\r\n    /**\r\n     * 表示视频元素的就绪状态：\r\n     * <ul>\r\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\r\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\r\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\r\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\r\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\r\n     * </ul>\r\n     */\r\n    get readyState(): any {\r\n        return this._videoTexture?.readyState;\r\n    }\r\n\r\n    /**\r\n     * 获取视频源尺寸。ready事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this._videoTexture?.videoWidth;\r\n    }\r\n\r\n    get videoHeight(): number {\r\n        return this._videoTexture?.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * 获取视频长度（秒）。ready事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this._videoTexture?.duration;\r\n    }\r\n\r\n    /**\r\n     * 返回音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this._videoTexture?.ended;\r\n    }\r\n\r\n    /**\r\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\r\n     */\r\n    get error(): MediaError {\r\n        return this._videoTexture?.error;\r\n    }\r\n\r\n    /**\r\n     * 设置或返回音频/视频是否应在结束时重新播放。\r\n     */\r\n    get loop(): boolean {\r\n        return this._videoTexture?.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.loop = value;\r\n    }\r\n\r\n    /**\r\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\r\n     * <ul>\r\n     * <li>1.0 正常速度</li>\r\n     * <li>0.5 半速（更慢）</li>\r\n     * <li>2.0 倍速（更快）</li>\r\n     * <li>-1.0 向后，正常速度</li>\r\n     * <li>-0.5 向后，半速</li>\r\n     * </ul>\r\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\r\n     */\r\n    get playbackRate(): number {\r\n        return this._videoTexture?.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * 获取和设置静音状态。\r\n     */\r\n    get muted(): boolean {\r\n        return this._videoTexture?.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.muted = value;\r\n    }\r\n\r\n    /**\r\n     * 返回视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this._videoTexture?.paused;\r\n    }\r\n\r\n    /**\r\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\r\n     * <ul>\r\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\r\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\r\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\r\n     * </ul>\r\n     */\r\n    get preload(): string {\r\n        return this._videoTexture?.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        //@ts-ignore\r\n        this._videoTexture.preload = value;\r\n    }\r\n\r\n    /**\r\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\r\n     */\r\n    get seekable(): any {\r\n        return this._videoTexture?.seekable;\r\n    }\r\n\r\n    /**\r\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\r\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this._videoTexture?.seeking;\r\n    }\r\n\r\n    /**\r\n    * @override\r\n    */\r\n    _setX(value: number): void {\r\n        super._setX(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.left = transform.x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setY(value: number): void {\r\n        super._setY(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.top = transform.y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.width = value * transform.scaleX;\r\n        }\r\n        else {\r\n            this._videoTexture.element.width = this.width / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set_height(value: number) {\r\n        super.set_height(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.height = value * transform.scaleY;\r\n\r\n        }\r\n        else {\r\n            this._videoTexture.element.height = this.height / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁内部事件绑定。\r\n     * @override\r\n     */\r\n    destroy(detroyChildren: boolean = true): void {\r\n        this.videoTexture = null;\r\n        super.destroy(detroyChildren);\r\n    }\r\n}","import { AnimatorState2D } from \"./AnimatorState2D\";\r\n\r\nexport class AnimatorPlayState2D {\r\n\t_finish: boolean;\r\n\t/**@internal */\r\n\t_startPlayTime: number;\r\n\t/**@internal */\r\n\t_lastElapsedTime: number;\r\n\t/**@internal 动画播放时间*/\r\n\t_elapsedTime: number;\r\n\t/**@internal 播放的次数*/\r\n\t_playNum: number;\r\n\r\n\t/**播放总时间，不受speed为负数的影响 */\r\n\t_playAllTime: number;\r\n\r\n\t/**@internal 单词播放归一化时间 */\r\n\t_normalizedPlayTime: number;\r\n\t/**@internal */\r\n\t_duration: number;\r\n\t/**@internal 上次播放的时间，event事件使用*/\r\n\t_parentPlayTime: number;\r\n\t/**@internal */\r\n\t_lastIsFront: boolean;\r\n\t/**@internal */\r\n\t_currentState: AnimatorState2D | null = null;\r\n\r\n\t/**是为正向播放 */\r\n\t_frontPlay = true;\r\n\r\n\r\n\t/**\r\n\t * 当前动画的持续时间，以秒为单位。\r\n\t */\r\n\tget duration(): number {\r\n\t\treturn this._duration;\r\n\t}\r\n\r\n\t// checkPlayNext(): Animation2DNext {\r\n\t//     var nexts = this._currentState.nexts;\r\n\t//     if (nexts) {\r\n\t//         for (var i = 0, len = nexts.length; i < len; i++) {\r\n\t//             var no = nexts[i];\r\n\t//             //TODO 需要检测next的条件\r\n\t//             return no;\r\n\t//         }\r\n\t//     }\r\n\t//     return null;\r\n\t// }\r\n\r\n\t/**\r\n\t * 动画状态机。\r\n\t */\r\n\tget animatorState(): AnimatorState2D {\r\n\t\treturn this._currentState!;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>AnimatorPlayState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_resetPlayState(startTime: number, clipDuration: number): void {\r\n\t\tthis._finish = false;\r\n\t\tthis._startPlayTime = startTime;\r\n\t\tthis._elapsedTime = startTime;\r\n\t\tthis._lastIsFront = true;\r\n\t\tthis._parentPlayTime = null;\r\n\t\tthis._playNum = 0;\r\n\t\tthis._parentPlayTime = null;\r\n\t\tthis._playAllTime = 0;\r\n\t\tvar playTime = (this._elapsedTime / clipDuration) % 1.0;\r\n\t\tthis._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\t\tthis._frontPlay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_cloneTo(dest: AnimatorPlayState2D): void {\r\n\t\tdest._finish = this._finish;\r\n\t\tdest._startPlayTime = this._startPlayTime;\r\n\t\tdest._elapsedTime = this._elapsedTime;\r\n\t\tdest._playNum = this._playNum;\r\n\t\tdest._parentPlayTime = this._parentPlayTime;\r\n\t\tdest._normalizedPlayTime = this._normalizedPlayTime;\r\n\t\tdest._lastIsFront = this._lastIsFront;\r\n\t\tdest._frontPlay = this._frontPlay;\r\n\t\tdest._playAllTime = this._playAllTime;\r\n\t}\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\nexport class AnimatorControllerLayer2D implements IClone {\r\n\r\n    /**混合模式_覆盖。 */\r\n    static BLENDINGMODE_OVERRIDE: number = 0;\r\n\r\n    /**混合模式_叠加。 */\r\n    static BLENDINGMODE_ADDTIVE: number = 1;\r\n\r\n    /**@internal */\r\n    private _defaultState: AnimatorState2D | null;\r\n\r\n    /**@internal */\r\n    private _referenceCount = 0;\r\n\r\n    /**@internal */\r\n    private _defaultStateNameCatch: string;\r\n\r\n    /**@internal*/\r\n    _playStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossPlayStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossMark: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersCount: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersIndicesMap: any = {};\r\n\r\n    /**@internal */\r\n    _srcCrossClipNodeIndices: number[] = [];\r\n\r\n    /**@internal */\r\n    _destCrossClipNodeIndices: number[] = [];\r\n    \r\n    /**@internal */\r\n    _enterTransition: AnimatorTransition2D;\r\n\r\n    /**\r\n     * 层的名字\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 是否开始时播放\r\n     */\r\n    playOnWake = true;\r\n\r\n    /**\r\n     * 默认权重\r\n     */\r\n    defaultWeight = 1.0;\r\n\r\n    /**\r\n     * 混合模式\r\n     */\r\n    blendingMode = AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n\r\n    /**\r\n     * 是否开启\r\n     */\r\n    enable = true;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _states: AnimatorState2D[] = [];\r\n\r\n    /**\r\n     * @internal \r\n     * 0:常规播放、1:动态融合播放、2:固定融合播放\r\n     */\r\n    _playType = -1;\r\n\r\n    /**\r\n     * 实例化一个2D动画控制器\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * 设置状态机\r\n     */\r\n    set states(states: ReadonlyArray<AnimatorState2D>) {\r\n        if (this._states === states)\r\n            return;\r\n        for (let i = this.states.length - 1; i >= 0; i--) {\r\n            this.removeState(this.states[i]);\r\n        }\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            this.addState(states[i]);\r\n        }\r\n    }\r\n\r\n    get states(): ReadonlyArray<AnimatorState2D> {\r\n        return this._states;\r\n    }\r\n\r\n    /**\r\n     * 默认状态名称\r\n     */\r\n    set defaultStateName(str: string) {\r\n        this._defaultState = this.getStateByName(str);\r\n        if (null == this._defaultState) {\r\n            if (0 == this._states.length) {\r\n                this._defaultStateNameCatch = str;\r\n            } else {\r\n                for (var i = this._states.length - 1; i >= 0; i--) {\r\n                    if (this._states[i].name == str) {\r\n                        this._defaultState = this._states[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get defaultStateName() {\r\n        if (!this._defaultState) {\r\n            return null;\r\n        }\r\n        return this._defaultState.name;\r\n    }\r\n\r\n    /**\r\n     * 默认动画状态机。\r\n     */\r\n    get defaultState(): AnimatorState2D {\r\n        return this._defaultState!;\r\n    }\r\n\r\n    set defaultState(value: AnimatorState2D) {\r\n        this._defaultState = value;\r\n        //this._statesMap[value.name] = value;\r\n    }\r\n\r\n    /**\r\n     * 移除Clip\r\n     * @param clipStateInfos \r\n     * @param index \r\n     * @param state \r\n     */\r\n    private _removeClip(clipStateInfos: AnimatorState2D[], index: number, state: AnimatorState2D): void {\r\n        clipStateInfos.splice(index, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._addReference(count);\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count = 1): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._removeReference(count);\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n\r\n    /**\r\n    * 获取当前的播放状态。\r\n    * @return 动画播放状态。\r\n    */\r\n    getCurrentPlayState(): AnimatorPlayState2D {\r\n        return this._playStateInfo!;\r\n    }\r\n\r\n    /**\r\n     * 状态机名称\r\n     * @param str \r\n     * @returns \r\n     */\r\n    getStateByName(str: string) {\r\n        for (let i = this._states.length - 1; i >= 0; i--) {\r\n            if (this._states[i].name == str) {\r\n                return this._states[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 添加动画状态。\r\n     * @param\tstate 动画状态。\r\n     * @param   layerIndex 层索引。\r\n     */\r\n    addState(state: AnimatorState2D): void {\r\n        var stateName = state.name;\r\n        if (this.getStateByName(stateName)) {\r\n            throw \"AnimatorControllerLayer:this stat's name has exist.\";\r\n        } else {\r\n            this._states.push(state);\r\n            if (stateName == this._defaultStateNameCatch) {\r\n                this._defaultState = state;\r\n                this._defaultStateNameCatch = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除动画状态。\r\n     * @param\tstate 动画状态。\r\n     * @param   layerIndex 层索引。\r\n     */\r\n    removeState(state: AnimatorState2D): void {\r\n        var states = this._states;\r\n        var index = -1;\r\n        for (var i = 0, n = states.length; i < n; i++) {\r\n            if (states[i] === state) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (-1 != index)\r\n            this._removeClip(states, index, state);\r\n    }\r\n\r\n    /**\r\n         * 克隆。\r\n         * @return\t 克隆副本。\r\n         */\r\n    clone() {\r\n        var dest: AnimatorControllerLayer2D = new AnimatorControllerLayer2D(this.name);\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorControllerLayer2D = (<AnimatorControllerLayer2D>destObject);\r\n        dest.name = this.name;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        this._removeReference();\r\n        for (var i = 0, n = this._states.length; i < n; i++) {\r\n            this._states[i].destroy();\r\n        }\r\n        this._states.length = 0;\r\n    }\r\n}","import { AvatarMask } from \"../d3/component/Animator/AvatarMask\";\r\n\r\nexport interface TypeAnimatorControllerData {\r\n    layerW: number,\r\n    controllerLayers: TypeAnimatorLayer[];\r\n    cullingMode?: number,\r\n    enable?: boolean,\r\n    animatorParams?: TypeAnimatorParams[],\r\n}\r\nexport interface TypeAnimatorParams {\r\n    id: number,\r\n    name: string,\r\n    type: AniParmType,\r\n    val: number | boolean,\r\n}\r\nexport interface TypeAnimatorLayer {\r\n    defaultStateName?: string,\r\n    name: string,\r\n    blendingMode: number,\r\n    states: TypeAnimatorState[],\r\n    playOnWake: boolean,\r\n    defaultWeight: number,\r\n    avatarMask?: any,\r\n\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\n\r\nexport enum AniParmType {\r\n    Float,\r\n    Bool,\r\n    Trigger,\r\n}\r\n\r\n/**\r\n * 动画状态条件类型\r\n */\r\nexport enum AniStateConditionType {\r\n    Number,\r\n    Bool,\r\n    Trigger\r\n}\r\n\r\nexport interface TypeAnimatorState {\r\n    x: number,\r\n    y: number,\r\n    /**-1代表enter，-2代表exit，-3代表anyState */\r\n    id: string,\r\n    name: string,\r\n    speed?: number,\r\n    clipStart?: number,\r\n    clipEnd?: number,\r\n    loop?: number,\r\n    yoyo?: boolean,\r\n    soloTransitions?: TypeAnimatorTransition[],\r\n    clip?: { _$uuid: string, },\r\n    scripts?: string[],\r\n\r\n\r\n    states?: TypeAnimatorState[],\r\n    defaultStateName?: string,\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\nexport interface TypeAnimatorTransition {\r\n    id: string,\r\n    name?: string,\r\n    mute?: boolean,\r\n    solo?: boolean,\r\n    exitTime?: number,\r\n    transduration?: number,\r\n    transstartoffset?: number,\r\n    exitByTime?: boolean,\r\n    conditions?: TypeAnimatorConditions[],\r\n}\r\nexport interface TypeAnimatorConditions {\r\n    id?: number,\r\n    type?: AniStateConditionNumberCompressType,\r\n    checkValue?: number | boolean,\r\n    name?: string,\r\n}\r\n\r\nexport enum AniStateConditionNumberCompressType {\r\n    Less,\r\n    Greater\r\n}\r\n\r\nexport class AnimatorControllerParse {\r\n    static parse(data: TypeAnimatorControllerData) {\r\n        //let ret: TypeAnimatorControllerData = JSON.parse(JSON.stringify(data));\r\n        let ret = data;\r\n        let layers = ret.controllerLayers;\r\n        if (null == layers) {\r\n            layers = [];\r\n        }\r\n\r\n        let clipsID: string[] = [];\r\n\r\n\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let states = l.states;\r\n            if (!states) {\r\n                states = [];\r\n                l.states = states;\r\n            }\r\n\r\n            l.defaultStateName = null;\r\n            let retobj = this.checkStates(states, clipsID, ret);\r\n            if (retobj) {\r\n                l.defaultStateName = retobj.enterName;\r\n            } else {\r\n                layers.splice(i, 1);\r\n            }\r\n        }\r\n        return { ret: ret, clipsID: clipsID };\r\n    }\r\n\r\n\r\n    private static checkStates(states: TypeAnimatorState[], clipsID: string[], data: TypeAnimatorControllerData) {\r\n        let clipState: TypeAnimatorState[] = null;\r\n        let enterState: TypeAnimatorState = null;\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            let state = states[j];\r\n            if (state.states) {\r\n                if (null == this.checkStates(state.states, clipsID, data)) {\r\n                    states.splice(j, 1);\r\n                } else {\r\n                    if (null == clipState) {\r\n                        clipState = [];\r\n                    }\r\n                    clipState.push(state);\r\n                }\r\n            } else if (\"-1\" == state.id) {\r\n                enterState = state;\r\n                // let defName = this.checkDefault(state, states);\r\n                // if (null != defName) {\r\n                //     l.defaultStateName = defName;\r\n                // }\r\n            } else if (\"-2\" == state.id) {\r\n                //TODO any\r\n            } else if (\"-3\" == state.id) {\r\n                //TODO exit\r\n            } else if (null == state.clip || null == state.clip._$uuid || \"\" == state.clip._$uuid) {\r\n                states.splice(j, 1);\r\n            } else {\r\n                if (0 > clipsID.indexOf(state.clip._$uuid)) {\r\n                    clipsID.push(state.clip._$uuid);\r\n                }\r\n\r\n                this.checkNext(state, states, data);\r\n                if (null == clipState) {\r\n                    clipState = [];\r\n                }\r\n                clipState.push(state);\r\n            }\r\n        }\r\n        let ret: { states: TypeAnimatorState[], enterName: string } = null;\r\n        if (clipState && enterState) {\r\n            let defName = this.checkDefault(enterState, clipState);\r\n            if (null != defName) {\r\n                ret = { states: clipState, enterName: defName };\r\n            }\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    private static checkNext(state: TypeAnimatorState, states: TypeAnimatorState[], data: TypeAnimatorControllerData) {\r\n        let nexts = state.soloTransitions;\r\n        if (nexts) {\r\n            for (let i = nexts.length - 1; i >= 0; i--) {\r\n                let next = nexts[i];\r\n                let nState = this.getStateByID(states, next.id);\r\n                if (!nState || (null == nState.clip && \"-3\" != nState.id && null == nState.states)) {\r\n                    nexts.splice(i, 1);\r\n                } else {\r\n                    next.name = nState.name;\r\n\r\n                    next.conditions = this.checkConditions(next.conditions, data);\r\n\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static checkConditions(conditions: TypeAnimatorConditions[], data: TypeAnimatorControllerData) {\r\n        if (!conditions || 0 == conditions.length || null == data.animatorParams || 0 == data.animatorParams.length) {\r\n            return [];\r\n        }\r\n\r\n        let parms = data.animatorParams;\r\n\r\n        for (let i = conditions.length - 1; i >= 0; i--) {\r\n            let o = conditions[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                conditions.splice(i, 1);\r\n            } else {\r\n                o.name = parm.name;\r\n                if (parm.type == AniParmType.Float) {\r\n                    let num = Number(o.checkValue);\r\n                    if (isNaN(num)) {\r\n                        o.checkValue = 0;\r\n                    }\r\n                    num = Number(o.type);\r\n                    if (isNaN(num)) {\r\n                        o.type = 0;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return conditions;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    private static checkDefault(state: TypeAnimatorState, states: TypeAnimatorState[]) {\r\n        let nexts = state.soloTransitions;\r\n        let id: string = null;\r\n        if (nexts && 0 < nexts.length) {\r\n            id = nexts[0].id;\r\n        }\r\n\r\n        let defState: TypeAnimatorState = null;\r\n        if (null != id) {\r\n            defState = this.getStateByID(states, id);\r\n        }\r\n        if (null != defState && (null != defState.clip || null != defState.states)) {\r\n            return defState.name;\r\n        }\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            if (states[i].clip) {\r\n                return states[i].name;\r\n            }\r\n        }\r\n\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n    private static getStateByID(states: TypeAnimatorState[], id: string) {\r\n        if (states) {\r\n            for (let i = states.length - 1; i >= 0; i--) {\r\n                if (states[i].id == id) {\r\n                    return states[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","/**\r\n * 动画更新模式\r\n */\r\nexport enum AnimatorUpdateMode {\r\n    /**正常更新。*/\r\n    Normal = 0,\r\n    /**低频率更新 */\r\n    LowFrame = 1,\r\n    /**不更新 */\r\n    UnScaleTime = 2\r\n}\r\n","\r\n/**\r\n * 动画条件类型\r\n */\r\nexport enum AniConditionType {\r\n    /**\r\n     * 大于\r\n     */\r\n    Greater,\r\n    /**\r\n     * 小于\r\n     */\r\n    Less,\r\n    /**\r\n     * 等于\r\n     */\r\n    Equals,\r\n    /**\r\n     * 不等于\r\n     */\r\n    NotEqual,//不等于\r\n}\r\n\r\n/**\r\n * 2D动画类型\r\n */\r\nexport class Animation2DCondition {\r\n    /**\r\n     * id编号\r\n     */\r\n    id: number;\r\n    /**\r\n     * 动画条件\r\n     */\r\n    type: AniConditionType;\r\n    /**\r\n     * 检测值\r\n     */\r\n    checkValue: any\r\n}","import { Resource } from \"./Resource\";\r\n/**\r\n * 文字资源格式\r\n */\r\nexport enum TextResourceFormat {\r\n    /**Buffer */\r\n    Buffer,\r\n    /**TODO */\r\n    Plain,\r\n    /**Json */\r\n    JSON,\r\n    /**XML */\r\n    XML\r\n}\r\n\r\n/**\r\n * 文字资源\r\n */\r\nexport class TextResource extends Resource {\r\n    /**数据 */\r\n    public readonly data: any;\r\n    /**格式 */\r\n    public readonly format: TextResourceFormat;\r\n    /**\r\n     * 实例化文字资源\r\n     * @param data \r\n     * @param format \r\n     */\r\n    constructor(data: any, format: TextResourceFormat) {\r\n        super();\r\n        this.data = data;\r\n        this.format = format;\r\n    }\r\n}","\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { Component } from \"./Component\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Node } from \"../../laya/display/Node\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimatorController2D } from \"./AnimatorController2D\";\r\nimport { AniParmType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { AnimatorUpdateMode } from \"./AnimatorUpdateMode\";\r\n\r\n/**\r\n * <code>Animator2D<code/>2D动画组件\r\n */\r\nexport class Animator2D extends Component {\r\n    /**@internal */\r\n    private _speed = 1;\r\n    /**@internal 更新模式*/\r\n    private _updateMode = AnimatorUpdateMode.Normal;\r\n    /**@internal 降低更新频率调整值*/\r\n    private _lowUpdateDelty = 20;\r\n    /**@internal */\r\n    private _isPlaying = true;\r\n    /**@internal */\r\n    private _ownerMap: Map<KeyframeNode2D, { ower: Node, pro?: { ower: any, key: string, defVal: any } }>\r\n    /**@internal */\r\n    _parameters: Record<string, Animation2DParm>;\r\n    /**@internal */\r\n    _controllerLayers: AnimatorControllerLayer2D[];\r\n    /**@internal */\r\n    _controller: AnimatorController2D;\r\n    /**@internal */\r\n    _checkEnterIndex: number[];\r\n\r\n    /**\r\n     * 实例化2D动画组件\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._controllerLayers = [];\r\n        this._parameters = {};\r\n    }\r\n\r\n    /**\r\n     * 2D动画控制器\r\n     */\r\n    set controller(val: AnimatorController2D) {\r\n        this._controller = val;\r\n        if (val) {\r\n            val.updateTo(this);\r\n        }\r\n    }\r\n\r\n    get controller() {\r\n        return this._controller;\r\n    }\r\n\r\n    /**\r\n     * 动画参数\r\n     */\r\n    set parameters(val: Record<string, Animation2DParm>) {\r\n        this._parameters = val;\r\n    }\r\n\r\n    get parameters() {\r\n        return this._parameters;\r\n    }\r\n\r\n    /**\r\n     * 播放速度\r\n     */\r\n    set speed(num: number) {\r\n        this._speed = num;\r\n    }\r\n\r\n    get speed() {\r\n        return this._speed;\r\n    }\r\n\r\n    /**\r\n     * 是否正在播放中\r\n     */\r\n    get isPlaying() {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     */\r\n    private _updateStateFinish(animatorState: AnimatorState2D, playState: AnimatorPlayState2D): void {\r\n        if (playState._finish) {\r\n            animatorState._eventExit();//派发播放完成的事件\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 赋值Node数据\r\n     * @param stateInfo 动画状态\r\n     * @param additive 是否为addtive\r\n     * @param weight state权重\r\n     * @param isFirstLayer 是否是第一层\r\n     */\r\n    private _setClipDatasToNode(stateInfo: AnimatorState2D, additive: boolean, weight: number, controllerLayer: AnimatorControllerLayer2D = null): void {\r\n        var realtimeDatas = stateInfo._realtimeDatas;\r\n        var nodes = stateInfo._clip!._nodes!;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            if (null == realtimeDatas[i]) continue;\r\n            var node = nodes.getNodeByIndex(i);\r\n            var o = this.getOwner(node);\r\n            o && this._applyFloat(o, additive, weight, realtimeDatas[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param o \r\n     * @param additive \r\n     * @param weight \r\n     * @param isFirstLayer \r\n     * @param data \r\n     */\r\n    private _applyFloat(o: { ower: Node, pro?: { ower: any, key: string, defVal: any } }, additive: boolean, weight: number, data: string | number | boolean): void {\r\n        var pro = o.pro;\r\n        if (pro && pro.ower) {\r\n            if (additive && \"number\" == typeof data) {\r\n                pro.ower[pro.key] = pro.defVal + weight * data;\r\n            } else if (\"number\" == typeof data) {\r\n                pro.ower[pro.key] = weight * data;\r\n            } else {\r\n                pro.ower[pro.key] = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param node \r\n     * @returns \r\n     */\r\n    private getOwner(node: KeyframeNode2D) {\r\n        var ret: { ower: Node, pro?: { ower: any, key: string, defVal: any } };\r\n        if (this._ownerMap) {\r\n            ret = this._ownerMap.get(node);\r\n            if (ret) {\r\n                return ret;\r\n            }\r\n        }\r\n\r\n        var property = this.owner;\r\n        for (var j = 0, m = node.ownerPathCount; j < m; j++) {\r\n            var ownPat = node.getOwnerPathByIndex(j);\r\n            if (\"\" == ownPat) {\r\n                continue;\r\n            } else {\r\n                property = property.getChildByName(ownPat);\r\n                if (!property)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        ret = { ower: property };\r\n\r\n        if (property) {\r\n            var pobj: any = property;\r\n            var propertyCount = node.propertyCount;\r\n\r\n            if (1 == propertyCount) {\r\n                var pname = node.getPropertyByIndex(0);\r\n                ret.pro = { ower: property, key: pname, defVal: (property as any)[pname] };\r\n            } else {\r\n                for (var i = 0; i < propertyCount; i++) {\r\n                    var pname = node.getPropertyByIndex(i);\r\n\r\n                    if (i == propertyCount - 1 || null == pobj) {\r\n                        ret.pro = { ower: pobj, key: pname, defVal: pobj ? pobj[pname] : null }\r\n                        break;\r\n                    }\r\n\r\n                    if (null == pobj[pname] && property == pobj) {\r\n                        //有可能是组件,查找组件逻辑\r\n                        pobj = null;\r\n                        var classObj = ClassUtils.getClass(pname);\r\n                        if (classObj) {\r\n                            pobj = property.getComponent(classObj);\r\n                        }\r\n\r\n                    } else {\r\n                        pobj = pobj[pname];\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (null == this._ownerMap) {\r\n            this._ownerMap = new Map();\r\n        }\r\n        this._ownerMap.set(node, ret);\r\n        return ret;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 更新clip数据\r\n     * @internal\r\n     */\r\n    private _updateClipDatas(animatorState: AnimatorState2D, addtive: boolean, playStateInfo: AnimatorPlayState2D): void {\r\n        var clip = animatorState._clip;\r\n        var clipDuration = clip!._duration;\r\n\r\n        var curPlayTime = animatorState.clipStart * clipDuration + playStateInfo._normalizedPlayTime * playStateInfo._duration;\r\n        var currentFrameIndices = animatorState._currentFrameIndices;\r\n        //var frontPlay = playStateInfo._frontPlay;\r\n        let frontPlay = true;\r\n        clip!._evaluateClipDatasRealTime(curPlayTime, currentFrameIndices, addtive, frontPlay, animatorState._realtimeDatas);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     * @param elapsedTime \r\n     * @param loop \r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    private _updatePlayer(animatorState: AnimatorState2D, playState: AnimatorPlayState2D, elapsedTime: number, loop: number, layerIndex: number): void {\r\n\r\n        let isReplay = false;\r\n        var clipDuration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n        var lastElapsedTime = playState._elapsedTime;\r\n\r\n        let pAllTime = playState._playAllTime;\r\n\r\n        playState._playAllTime += Math.abs(elapsedTime);\r\n\r\n        //动画播放总时间\r\n        elapsedTime = lastElapsedTime + elapsedTime;\r\n        //动画播放的上次总时间\r\n        playState._lastElapsedTime = lastElapsedTime;\r\n        playState._elapsedTime = elapsedTime;\r\n        var normalizedTime = elapsedTime / clipDuration;\r\n\r\n        let scale = 1;\r\n        if (animatorState.yoyo) {\r\n            scale = 2;\r\n        }\r\n\r\n        //总播放次数\r\n        let pTime = playState._playAllTime / (clipDuration * scale);\r\n\r\n        if (Math.floor(pAllTime / (clipDuration * scale)) < Math.floor(pTime)) {\r\n            isReplay = true;\r\n        }\r\n\r\n        var playTime = normalizedTime % 1.0;\r\n        let normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n        playState._normalizedPlayTime = normalizedPlayTime;\r\n        playState._duration = clipDuration;\r\n\r\n        if (1 != scale) {\r\n            normalizedTime = playState._playAllTime / (clipDuration * scale);\r\n            playTime = normalizedTime % 1.0;\r\n            normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\r\n            if (animatorState.yoyo) {\r\n                if (0.5 > normalizedPlayTime) {\r\n                    if (!playState._frontPlay) {\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        }\r\n                        playState._frontPlay = true;\r\n                    }\r\n                } else {\r\n                    if (playState._frontPlay) {\r\n                        playState._frontPlay = false;\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        animatorState._eventStateUpdate(normalizedPlayTime);\r\n        let ret = this._applyTransition(layerIndex, animatorState._eventtransition(normalizedPlayTime, this.parameters, isReplay));\r\n\r\n        if (!ret && isReplay) {\r\n            let absTime = playState._playAllTime / (clipDuration * scale);\r\n            if (0 < loop && loop <= absTime) {\r\n                playState._finish = true;\r\n\r\n                if (0 > animatorState.speed) {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    }\r\n                } else {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    }\r\n                }\r\n                return;\r\n            } else {\r\n                animatorState._eventLoop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param stateInfo \r\n     * @param playStateInfo \r\n     */\r\n    private _updateEventScript(stateInfo: AnimatorState2D, playStateInfo: AnimatorPlayState2D): void {\r\n        let clip = stateInfo._clip;\r\n        let events = clip!._animationEvents;\r\n        if (!events || 0 == events.length) return;\r\n        let clipDuration = clip!._duration;\r\n        let time = playStateInfo._normalizedPlayTime * clipDuration;\r\n        let frontPlay = playStateInfo._frontPlay;\r\n        let parentPlayTime = playStateInfo._parentPlayTime;\r\n        if (null == parentPlayTime) {\r\n            if (frontPlay) {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            } else {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n        if (frontPlay) {\r\n            if (time < parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipEnd, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            }\r\n        } else {\r\n            if (time > parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipStart, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n\r\n\r\n        this._eventScript(events, parentPlayTime, time, frontPlay);\r\n        playStateInfo._parentPlayTime = time;\r\n    }\r\n    /**\r\n    * @internal\r\n    */\r\n    private _eventScript(events: Animation2DEvent[], parentPlayTime: number, currPlayTime: number, frontPlay: boolean) {\r\n        let scripts = this.owner.components;\r\n        if (frontPlay) {\r\n            for (let i = 0, len = events.length; i < len; i++) {\r\n                let e = events[i];\r\n                if (e.time > parentPlayTime && e.time <= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time > currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                let e = events[i];\r\n                if (e.time < parentPlayTime && e.time >= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time < currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    // private _eventScript(events: Animation2DEvent[], eventIndex: number, endTime: number, front: boolean, startTime = 0): number {\r\n    //     let scripts = this.owner.components;\r\n    //     if (front) {\r\n    //         for (let n = events.length; eventIndex < n; eventIndex++) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time <= endTime) {\r\n    //                 if (event.time >= startTime) {\r\n    //                     for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                         let script = scripts[j];\r\n    //                         if (script._isScript()) {\r\n    //                             let fun: Function = (script as any)[event.eventName];\r\n    //                             (fun) && (fun.apply(script, event.params));\r\n    //                         }\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     } else {\r\n    //         for (; eventIndex >= 0; eventIndex--) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time >= endTime) {\r\n    //                 for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                     let script = scripts[j];\r\n    //                     if (script._isScript()) {\r\n    //                         let fun = (script as any)[event.eventName];\r\n    //                         (fun) && (fun.apply(script, event.params));\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return eventIndex;\r\n    // }\r\n\r\n    /**\r\n     * 启用过渡\r\n     * @param layerindex \r\n     * @param transition \r\n     * @returns \r\n     */\r\n    private _applyTransition(layerindex: number, transition: AnimatorTransition2D) {\r\n        if (!transition)\r\n            return false;\r\n        return this.crossFade(transition.destState.name, transition.transduration, layerindex, transition.transstartoffset);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param delta \r\n     * @returns \r\n     */\r\n    private _applyUpdateMode(delta: number): number {\r\n        let ret;\r\n        switch (this._updateMode) {\r\n            case AnimatorUpdateMode.Normal:\r\n                ret = delta;\r\n                break;\r\n            case AnimatorUpdateMode.LowFrame:\r\n                ret = (Stat.loopCount % this._lowUpdateDelty == 0) ? delta * this._lowUpdateDelty : 0;\r\n                break;\r\n            case AnimatorUpdateMode.UnScaleTime:\r\n                ret = 0;\r\n                break;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    gotoAndStopByFrame(name: string, layerIndex: number, frame: number) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var animatorState = controllerLayer.getStateByName(name);\r\n            if (!animatorState || !animatorState._clip)\r\n                return;\r\n            var allFrame = animatorState._clip!._duration * animatorState._clip!._frameRate;\r\n            let normalizedTime = frame / allFrame;\r\n            if (1 < normalizedTime) normalizedTime = 1;\r\n            this.gotoAndStop(name, layerIndex, normalizedTime);\r\n        }\r\n    }\r\n\r\n    gotoAndStop(name: string, layerIndex: number, normalizedTime: number) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var animatorState = controllerLayer.getStateByName(name);\r\n            if (!animatorState || !animatorState._clip)\r\n                return;\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n            playStateInfo._normalizedPlayTime = normalizedTime;\r\n            controllerLayer._playType = 0;\r\n            if (curPlayState !== animatorState) {\r\n                playStateInfo._currentState = animatorState;\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n            let addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @param name 动画名称\r\n     * @param layerIndex 层索引\r\n     * @param normalizedTime 归一化时间\r\n     * @returns \r\n     */\r\n    play(name?: string, layerIndex = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        if (this._checkEnterIndex) {\r\n            let i = this._checkEnterIndex.indexOf(layerIndex);\r\n            if (0 <= i) {\r\n                this._checkEnterIndex.splice(i, 1);\r\n            }\r\n        }\r\n        this._isPlaying = true;\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var defaultState = controllerLayer.defaultState;\r\n            if (!name && !defaultState)\r\n                throw new Error(\"Animator:must have default clip value,please set clip property.\");\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n            var animatorState = name ? controllerLayer.getStateByName(name) : defaultState;\r\n\r\n            if (!animatorState._clip)\r\n                return;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            // this.resetDefOwerVal();\r\n            // playStateInfo._resetPlayState(0.0, calclipduration);\r\n            // if (curPlayState != animatorState) {\r\n            //     playStateInfo._currentState = animatorState;\r\n            // }\r\n            // controllerLayer._playType = 0;、\r\n\r\n            if (curPlayState !== animatorState) {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                else\r\n                    playStateInfo._resetPlayState(0.0, calclipduration);\r\n                (curPlayState !== null && curPlayState !== animatorState);\r\n                controllerLayer._playType = 0;\r\n                playStateInfo._currentState = animatorState;\r\n            } else {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY) {\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                    controllerLayer._playType = 0;\r\n                }\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n        }\r\n        // var scripts = animatorState._scripts!;\r\n        // if (scripts) {\r\n        //     for (var i = 0, n = scripts.length; i < n; i++)\r\n        //         scripts[i].onStateEnter();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 停止播放动画\r\n     */\r\n    stop() {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    /**\r\n     * 帧循环\r\n     * @returns \r\n     */\r\n    onUpdate(): void {\r\n        if (!this._isPlaying) return;\r\n\r\n        if (this._checkEnterIndex) {\r\n            for (let i = this._checkEnterIndex.length - 1; i >= 0; i--) {\r\n                let index = this._checkEnterIndex[i];\r\n                let enterTransition = this._controllerLayers[index]._enterTransition;\r\n                if (enterTransition.check(0, this.parameters, true)) {\r\n                    var defaultClip = this.getDefaultState(index);\r\n                    this.play(null, index, defaultClip.cycleOffset);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        var delta = this.owner.timer._delta / 1000.0;\r\n        delta = this._applyUpdateMode(delta);\r\n        if (0 == this.speed || 0 == delta) return;\r\n        var needRender = true;//TODO:有渲染节点才可将needRender变为true\r\n\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n            var controllerLayer = this._controllerLayers[i];\r\n            if (!controllerLayer.enable)\r\n                continue;\r\n\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            //var crossPlayStateInfo = controllerLayer._crossPlayStateInfo!;\r\n            var addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            switch (controllerLayer._playType) {\r\n                case 0:\r\n                    var animatorState = playStateInfo._currentState!;\r\n                    var speed = this._speed * animatorState.speed;\r\n                    var finish = playStateInfo._finish;\r\n\r\n                    var loop = animatorState.loop;\r\n                    if (-1 >= loop) {\r\n                        var clip = animatorState._clip!;\r\n                        if (clip.islooping) {\r\n                            loop = 0;\r\n                        } else {\r\n                            loop = 1;\r\n                        }\r\n                    }\r\n\r\n                    let dir = 1;\r\n                    if (!playStateInfo._frontPlay) {\r\n                        dir = -1;\r\n                    }\r\n\r\n\r\n                    finish || this._updatePlayer(animatorState, playStateInfo, delta * speed * dir, loop, i);\r\n                    playStateInfo = controllerLayer._playStateInfo!;\r\n                    animatorState = playStateInfo._currentState!;\r\n                    if (needRender) {\r\n                        this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n                        if (!finish) {\r\n                            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\r\n                            this._updateEventScript(animatorState, playStateInfo);\r\n                        }\r\n                    }\r\n                    finish || this._updateStateFinish(animatorState, playStateInfo);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加控制器层。\r\n     */\r\n    addControllerLayer(controllderLayer: AnimatorControllerLayer2D): void {\r\n        this._controllerLayers.push(controllderLayer);\r\n    }\r\n\r\n    /**\r\n     * 在当前动画状态和目标动画状态之间进行融合过渡播放。\r\n     * @param\tname 目标动画状态。\r\n     * @param\ttransitionDuration 过渡时间,该值为当前动画状态的归一化时间，值在0.0~1.0之间。\r\n     * @param\tlayerIndex 层索引。\r\n     * @param\tnormalizedTime 归一化的播放起始时间。\r\n     */\r\n    crossFade(name: string, transitionDuration: number, layerIndex: number = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var destAnimatorState = controllerLayer.getStateByName(name);\r\n            if (destAnimatorState) {\r\n\r\n                this.play(name, layerIndex, normalizedTime);\r\n                return true;\r\n\r\n            }\r\n            else {\r\n                console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    onAfterDeserialize(): void {\r\n        let arr = (<any>this).controllerLayers;\r\n        if (!arr || null != this.controller)\r\n            return;\r\n        delete (<any>this).controllerLayers;\r\n        this._controllerLayers.length = 0;\r\n        for (let layer of arr) {\r\n            this.addControllerLayer(layer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onEnable() {\r\n        if (this._checkEnterIndex) this._checkEnterIndex.length = 0;\r\n        else this._checkEnterIndex = [];\r\n\r\n        if (this._isPlaying) {\r\n            for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n                if (this._controllerLayers[i].playOnWake) {\r\n                    var defaultClip = this.getDefaultState(i);\r\n                    //(defaultClip) && (this.play(null, i, defaultClip.cycleOffset));\r\n                    if (defaultClip) {\r\n                        let enterTransition = this._controllerLayers[i]._enterTransition;\r\n                        if (enterTransition) {\r\n                            this._isPlaying = true;\r\n                            if (enterTransition.check(0, this.parameters, true)) {\r\n                                this.play(null, i, defaultClip.cycleOffset);\r\n                            } else {\r\n                                this._checkEnterIndex.push(i);\r\n                            }\r\n                        } else {\r\n                            this.play(null, i, defaultClip.cycleOffset);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 默认状态机\r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    getDefaultState(layerIndex = 0) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        return controllerLayer.defaultState;\r\n    }\r\n\r\n    /**\r\n     * 设置参数Trigger值\r\n     * @param name 名字\r\n     */\r\n    setParamsTrigger(name: string) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Trigger, value: true };\r\n    }\r\n\r\n    /**\r\n     * 设置参数Number值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsNumber(name: string, value: number) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * 设置参数Bool值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsBool(name: string, value: boolean) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * 得到参数值\r\n     * @param name 名字\r\n     * @returns \r\n     */\r\n    getParamsvalue(name: number) {\r\n        let parm = this._parameters[name];\r\n        if (parm) {\r\n            return parm.value;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onDestroy() {\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++)\r\n            this._controllerLayers[i].destroy();\r\n        this._controllerLayers.length = 0;\r\n        this._isPlaying = false;\r\n        this._parameters = null;\r\n    }\r\n}","import { AnimatorStateScript } from \"../d3/animation/AnimatorStateScript\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * <code>Animator</code> 类用于创建动画组件。\r\n */\r\nexport class AnimatorState2D extends EventDispatcher implements IClone {\r\n    /**@internal */\r\n    static EVENT_OnStateEnter = \"OnStartEnter\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateUpdate = \"OnStateUpdate\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateExit = \"OnStateExit\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateLoop = 'OnStateLoop';\r\n\r\n    /** @internal */\r\n    private _referenceCount = 0;\r\n\r\n    /** @internal */\r\n    _clip: AnimationClip2D | null = null;\r\n\r\n    /**@internal */\r\n    _currentFrameIndices: Int16Array | null = null;\r\n\r\n    /**play on awake start offset*/\r\n    cycleOffset: number = 0;\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 动画播放速度\r\n     */\r\n    speed = 1.0;\r\n\r\n    /**\r\n     * 动作播放起始时间。\r\n     */\r\n    clipStart = 0.0;\r\n\r\n    /**\r\n     * 动作播放结束时间。\r\n     */\r\n    clipEnd = 1.0;\r\n\r\n    /**\r\n     *  动画循环次数，-1或者小于-1为使用clip的循环状态，1为播放一次，2为播放2次，0为无限循环\r\n     */\r\n    loop = -1;\r\n\r\n    /**\r\n     * 是否为一次正播放，一次倒播放模式 \r\n     */\r\n    yoyo = false;\r\n\r\n    /**@internal 过渡列表*/\r\n    transitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal 优先过渡列表only play this transition */\r\n    soloTransitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal */\r\n    _scripts: AnimatorStateScript[] | null = null;\r\n\r\n    /**@internal */\r\n    _realtimeDatas: Array<number | string | boolean> = [];\r\n\r\n    /**\r\n     * 动作。\r\n     */\r\n    get clip(): AnimationClip2D | null {\r\n        return this._clip;\r\n    }\r\n\r\n    set clip(value: AnimationClip2D | null) {\r\n        if (this._clip != value) {\r\n            if (this._clip)\r\n                (this._referenceCount > 0) && (this._clip._removeReference(this._referenceCount));\r\n            if (value) {\r\n                var clipNodes = value._nodes!;\r\n                var count = clipNodes.count;\r\n                this._currentFrameIndices = new Int16Array(count);\r\n                this._resetFrameIndices();\r\n                (this._referenceCount > 0) && (value._addReference(this._referenceCount));\r\n                this._realtimeDatas.length = count;\r\n            }\r\n            this._clip = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStateUpdate(value: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateUpdate, value);\r\n        if (this._scripts) {\r\n            for (var i = 0, n = this._scripts.length; i < n; i++)\r\n                this._scripts[i].onStateUpdate(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStart(animator: Animator2D, layerIndex: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateEnter);\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].setPlayScriptInfo(animator, layerIndex, this);\r\n                this._scripts[i].onStateEnter();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventExit() {\r\n        this.event(AnimatorState2D.EVENT_OnStateExit);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].onStateExit();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventLoop() {\r\n        this.event(AnimatorState2D.EVENT_OnStateLoop);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                if (this._scripts[i].onStateLoop)\r\n                    this._scripts[i].onStateLoop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 派发过渡事件\r\n     * @internal\r\n     * @param normalizeTime \r\n     * @param paramsMap \r\n     */\r\n    _eventtransition(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): AnimatorTransition2D {\r\n        let soloNums = this.soloTransitions.length;\r\n        if (soloNums > 0) {\r\n            for (var i = 0; i < soloNums; i++) {\r\n                if (this.soloTransitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                    return this.soloTransitions[i];\r\n            }\r\n            return null;\r\n        }\r\n        let transNums = this.transitions.length;\r\n        for (var i = 0; i < transNums; i++) {\r\n            if (this.transitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                return this.transitions[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetFrameIndices(): void {\r\n        for (var i = 0, n = this._currentFrameIndices!.length; i < n; i++)\r\n            this._currentFrameIndices![i] = -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        (this._clip) && (this._clip._addReference(count));\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count: number): void {\r\n        (this._clip) && (this._clip._removeReference(count));\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * 添加脚本。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本。\r\n     */\r\n    addScript(type: typeof AnimatorStateScript): AnimatorStateScript {\r\n        var script: AnimatorStateScript = new type();\r\n        this._scripts = this._scripts || [];\r\n        this._scripts.push(script);\r\n        return script;\r\n    }\r\n\r\n    /**\r\n     * 获取脚本。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本。\r\n     */\r\n    getScript(type: typeof AnimatorStateScript): AnimatorStateScript | null {\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorStateScript = this._scripts[i];\r\n                if (script instanceof type)\r\n                    return script;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取脚本集合。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本集合。\r\n     */\r\n    getScripts(type: typeof AnimatorStateScript): AnimatorStateScript[] | null {\r\n        var coms: AnimatorStateScript[] | null = null;\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorStateScript = this._scripts[i];\r\n                if (script instanceof type) {\r\n                    coms = coms || [];\r\n                    coms.push(script);\r\n                }\r\n            }\r\n        }\r\n        return coms;\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @returns \r\n     */\r\n    clone() {\r\n        var dest: AnimatorState2D = new AnimatorState2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * 拷贝到目标\r\n     * @param destObject 目标节点\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorState2D = <AnimatorState2D>destObject;\r\n        dest.name = this.name;\r\n        dest.speed = this.speed;\r\n        dest.clip = this._clip;\r\n    }\r\n\r\n    /**\r\n     * 删除\r\n     */\r\n    destroy() {\r\n        this._clip = null;\r\n        this._currentFrameIndices = null;\r\n        this._scripts = null;\r\n        //this.nexts = null;\r\n        this._realtimeDatas.length = 0;\r\n    }\r\n\r\n}","import { Keyframe2D } from \"./KeyFrame2D\";\r\n\r\nexport class KeyframeNode2D {\r\n    _ownerPath: string[] = [];\r\n    _propertys: string[] = [];\r\n    fullPath: string;\r\n    nodePath: string;\r\n    _indexInList: number;\r\n\r\n\r\n\r\n    _keyFrames: Keyframe2D[] = [];\r\n    /**\r\n    * 帧个数。\r\n    */\r\n    get keyFramesCount(): number {\r\n        return this._keyFrames.length;\r\n    }\r\n    _setOwnerPathCount(value: number) {\r\n        this._ownerPath.length = value;\r\n    }\r\n    _setOwnerPathByIndex(index: number, value: string) {\r\n        this._ownerPath[index] = value;\r\n    }\r\n    _setPropertyCount(value: number) {\r\n        this._propertys.length = value;\r\n    }\r\n    _setPropertyByIndex(index: number, value: string) {\r\n        this._propertys[index] = value;\r\n    }\r\n    _setKeyframeCount(value: number) {\r\n        this._keyFrames.length = value;\r\n    }\r\n\r\n    _joinOwnerPath(sep: string): string {\r\n        return this._ownerPath.join(sep);\r\n    }\r\n    _joinProperty(sep: string): string {\r\n        return this._propertys.join(sep);\r\n    }\r\n\r\n    /**\r\n    * 通过索引获取帧。\r\n    * @param index 索引。\r\n    */\r\n    getKeyframeByIndex(index: number): Keyframe2D {\r\n        return this._keyFrames[index];\r\n    }\r\n    /**\r\n    * 精灵路径个数。\r\n    */\r\n    get ownerPathCount(): number {\r\n        return this._ownerPath.length;\r\n    }\r\n    /**\r\n     * 属性路径个数。\r\n     */\r\n    get propertyCount(): number {\r\n        return this._propertys.length;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取精灵路径。\r\n     * @param index 索引。\r\n     */\r\n    getOwnerPathByIndex(index: number): string {\r\n        return this._ownerPath[index];\r\n    }\r\n    /**\r\n     * 通过索引获取属性路径。\r\n     * @param index 索引。\r\n     */\r\n    getPropertyByIndex(index: number): string {\r\n        return this._propertys[index];\r\n    }\r\n\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\n\r\nexport interface TypeAniKey {\r\n    /**第几帧 */\r\n    f: number,\r\n    val: number | string | boolean,\r\n    /**目前用于2D动画，用于记录动画补间的类型，比如(Linear|Quad_EaseIn)... */\r\n    tweenType?: string,\r\n    /**扩展，如果有一些其它数据需要加入到关键帧中可以写在这里 */\r\n    extend?: any,\r\n    /**tween的信息 */\r\n    tweenInfo?: TypeTweenInfo,\r\n}\r\n\r\nexport interface TypeTweenInfo {\r\n    outTangent?: number,\r\n    outWeight?: number,\r\n    inTangent?: number,\r\n    inWeight?: number,\r\n    inWeightLock?: boolean,\r\n    outWeightLock?: boolean,\r\n    broken?: boolean,\r\n}\r\n\r\nexport class Keyframe2D implements IClone {\r\n    static defaultWeight = 0.33333;\r\n    /**时间。*/\r\n    time: number;\r\n    /**帧里面的具体数据 */\r\n    data: TypeAniKey;\r\n\r\n\r\n\r\n    clone() {\r\n        var dest = new Keyframe2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    cloneTo(destObject: any): void {\r\n        var destKeyFrame: Keyframe2D = (<Keyframe2D>destObject);\r\n        destKeyFrame.time = this.time;\r\n    }\r\n\r\n}","/**\r\n * <code>Animation2DEvent</code> 类用于实现动画事件。\r\n */\r\nexport class Animation2DEvent {\r\n    /** 事件触发时间。*/\r\n    time: number;\r\n    /** 事件触发名称。*/\r\n    eventName: string;\r\n    /** 事件触发参数。*/\r\n    params: any[];\r\n\r\n    /**\r\n     * 创建一个 <code>Animation2DEvent</code> 实例。\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n}\r\n","import { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * <code>AnimationClip2DParse01</code>\r\n * AnimationClip资源解析\r\n */\r\nexport class AnimationClip2DParse01 {\r\n    \r\n    /**@internal */\r\n    private static _clip: AnimationClip2D | null;\r\n    /**@internal */\r\n    private static _reader: Byte | null;\r\n    /**@internal */\r\n    private static _version: string | null;\r\n    /**@internal */\r\n    private static _strings: string[] = [];\r\n    /**@internal */\r\n    private static _DATA = { offset: 0, size: 0 };\r\n    /**@internal */\r\n    private static _BLOCK: { count: number, blockStarts?: number[], blockLengths?: number[] } = { count: 0 };\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_DATA() {\r\n        this._DATA.offset = this._reader!.getUint32();\r\n        this._DATA.size = this._reader!.getUint32();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_BLOCK() {\r\n        var count = this._BLOCK.count = this._reader!.getUint16();\r\n        var blockStarts: number[] = this._BLOCK.blockStarts = [];\r\n        var blockLengths: number[] = this._BLOCK.blockLengths = [];\r\n        for (var i = 0; i < count; i++) {\r\n            blockStarts.push(this._reader!.getUint32());\r\n            blockLengths.push(this._reader!.getUint32());\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_STRINGS() {\r\n        var offset = this._reader!.getUint32();\r\n        var count = this._reader!.getUint16();\r\n        var prePos = this._reader!.pos;\r\n        this._reader!.pos = offset + this._DATA.offset;\r\n\r\n        for (var i = 0; i < count; i++)\r\n            this._strings[i] = this._reader!.readUTFString();\r\n        this._reader!.pos = prePos;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param clip \r\n     * @param reader \r\n     * @param version \r\n     */\r\n    static parse(clip: AnimationClip2D, reader: Byte, version: string) {\r\n        this._clip = clip;\r\n        this._reader = reader;\r\n        this._version = version;\r\n        this.READ_DATA();\r\n        this.READ_BLOCK();\r\n        this.READ_STRINGS();\r\n\r\n        for (var i = 0, n = this._BLOCK.count; i < n; i++) {\r\n            var index = reader.getUint16();\r\n            var blockName = this._strings[index];\r\n            var fn: () => void = (this as any)[\"READ_\" + blockName];\r\n            if (!fn) {\r\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n            }\r\n            else\r\n                fn.call(this);\r\n        }\r\n\r\n        this._version = null;\r\n        this._reader = null;\r\n        this._clip = null;\r\n        this._strings.length = 0;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param second \r\n     * @param fps \r\n     * @returns \r\n     */\r\n    private static timeToFrame(second: number, fps: number): number {\r\n        return Math.round(second * fps);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static READ_ANIMATIONS2D(): void {\r\n        var i: number, j: number;\r\n\r\n        var reader = this._reader!;\r\n        var clip = this._clip!;\r\n        var node: KeyframeNode2D;\r\n\r\n        var numList: number[] = [];\r\n        var numCount = reader.getUint16();\r\n        numList.length = numCount;\r\n        for (i = 0; i < numCount; i++) {\r\n            numList[i] = reader.getFloat32();\r\n        }\r\n\r\n        var clipDur = clip._duration = numList[reader.getInt16()];\r\n        clip.islooping = !!reader.getByte();\r\n        clip._frameRate = reader.getInt16();\r\n        var nodeCount = reader.getInt16();\r\n\r\n        var nodes = clip._nodes!;\r\n        nodes.count = nodeCount;\r\n        var nodesMap: Record<string, KeyframeNode2D[]> = clip._nodesMap = {};\r\n        var nodesDic: Record<string, KeyframeNode2D> = clip._nodesDic = {};\r\n\r\n        for (i = 0; i < nodeCount; i++) {\r\n            node = new KeyframeNode2D();\r\n            nodes.setNodeByIndex(i, node);\r\n            node._indexInList = i;\r\n\r\n            var pathLength = reader.getUint16();\r\n            node._setOwnerPathCount(pathLength);\r\n\r\n            for (j = 0; j < pathLength; j++) {\r\n                node._setOwnerPathByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var nodePath = node._joinOwnerPath(\"/\");\r\n            var mapArray = nodesMap[nodePath];\r\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\r\n            mapArray.push(node);\r\n\r\n\r\n            var propertyLength = reader.getUint16();\r\n            node._setPropertyCount(propertyLength);\r\n            for (j = 0; j < propertyLength; j++) {\r\n                node._setPropertyByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var fullPath = nodePath + \".\" + node._joinProperty(\".\");\r\n            nodesDic[fullPath] = node;\r\n            node.fullPath = fullPath;\r\n            node.nodePath = nodePath;\r\n\r\n            var keyframeCount = reader.getUint16();\r\n            //node._setKeyframeCount(keyframeCount);\r\n            for (j = 0; j < keyframeCount; j++) {\r\n                var k = new Keyframe2D();\r\n                k.time = numList[reader.getUint16()];\r\n                k.data = { f: this.timeToFrame(k.time, clip._frameRate), val: 0 };\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenType = this._strings[reader.getUint16()];\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenInfo = {};\r\n\r\n                    k.data.tweenInfo.inTangent = numList[reader.getUint16()];\r\n                    k.data.tweenInfo.outTangent = numList[reader.getUint16()];\r\n\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.inTangent)) {\r\n                    //     k.data.tweenInfo.inTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.inTangent) {\r\n                    //         k.data.tweenInfo.inTangent *= -1;\r\n                    //     }\r\n                    // }\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.outTangent)) {\r\n                    //     k.data.tweenInfo.outTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.outTangent) {\r\n                    //         k.data.tweenInfo.outTangent *= -1;\r\n                    //     }\r\n                    // }\r\n\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.inWeight = numList[reader.getUint16()];\r\n                    }\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.outWeight = numList[reader.getUint16()];\r\n                    }\r\n                }\r\n                var num = reader.getByte();\r\n                if (0 == num) {\r\n                    k.data.val = numList[reader.getUint16()];\r\n                } else if (1 == num) {\r\n                    k.data.val = this._strings[reader.getUint16()];\r\n                } else if (2 == num) {\r\n                    k.data.val = !!reader.getByte();\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    try {\r\n                        k.data.extend = JSON.parse(this._strings[reader.getUint16()])\r\n                    } catch (err) { }\r\n                }\r\n                node._keyFrames.push(k);\r\n            }\r\n        }\r\n        var eventCount = reader.getUint16();\r\n        for (i = 0; i < eventCount; i++) {\r\n            var event = new Animation2DEvent();\r\n            //event.time = Math.min(clipDur, numList[reader.getUint16()]);\r\n            event.time = numList[reader.getUint16()];\r\n            event.eventName = this._strings[reader.getUint16()];\r\n            var params: Array<number | string | boolean> = [];\r\n            var paramCount: number = reader.getUint16();\r\n            (paramCount > 0) && (event.params = params = []);\r\n\r\n            for (j = 0; j < paramCount; j++) {\r\n                var eventType: number = reader.getByte();\r\n                switch (eventType) {\r\n                    case 0:\r\n                        params.push(!!reader.getByte());\r\n                        break;\r\n                    case 1:\r\n                        params.push(reader.getInt32());\r\n                        break;\r\n                    case 2:\r\n                        params.push(numList[reader.getUint16()]);\r\n                        break;\r\n                    case 3:\r\n                        params.push(this._strings[reader.getUint16()]);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"unknown type.\");\r\n                }\r\n            }\r\n            clip.addEvent(event);\r\n        }\r\n\r\n    }\r\n}","import { KeyframeNode2D } from \"./KeyframeNode2D\";\r\n\r\nexport class KeyframeNodeList2D {\r\n    private _nodes: KeyframeNode2D[] = [];\r\n    /**\r\n    *\t节点个数。\r\n    */\r\n    get count(): number {\r\n        return this._nodes.length;\r\n    }\r\n    set count(value: number) {\r\n        this._nodes.length = value;\r\n    }\r\n    /**\r\n     * 通过索引获取节点。\r\n     * @param\tindex 索引。\r\n     * @return 节点。\r\n     */\r\n    getNodeByIndex(index: number): KeyframeNode2D {\r\n        return this._nodes[index];\r\n    }\r\n\r\n    /**\r\n     * 通过索引设置节点。\r\n     * @param\tindex 索引。\r\n     * @param 节点。\r\n     */\r\n    setNodeByIndex(index: number, node: KeyframeNode2D): void {\r\n        this._nodes[index] = node;\r\n    }\r\n}","import { AnimationClip2DParse01 } from \"./AnimationClip2DParser01\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { KeyframeNodeList2D } from \"./KeyframeNodeList2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\nexport class AnimationClip2D extends Resource {\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @returns \r\n     */\r\n    static _parse(data: ArrayBuffer): AnimationClip2D {\r\n        var clip = new AnimationClip2D();\r\n        var reader = new Byte(data);\r\n        var version = reader.readUTFString();\r\n        switch (version) {\r\n            case \"LAYAANIMATION2D:01\":\r\n                AnimationClip2DParse01.parse(clip, reader, version);\r\n                break;\r\n            default:\r\n                throw \"unknown animationClip version.\";\r\n        }\r\n        return clip;\r\n    }\r\n\r\n    /**\r\n     * 动画补帧函数\r\n     */\r\n    static tween = {\r\n        Linear: function (t: number, b: number, c: number, d: number): number { return c * t / d + b; },\r\n        Quad_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t + b;\r\n        },\r\n        Quad_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (t /= d) * (t - 2) + b;\r\n        },\r\n        Quad_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\r\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n        },\r\n\r\n        Cubic_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t + b;\r\n        },\r\n        Cubic_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t + 1) + b;\r\n        },\r\n        Cubic_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n        },\r\n\r\n        Quart_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t + b;\r\n        },\r\n        Quart_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n        },\r\n        Quart_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\r\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n        },\r\n\r\n        Quint_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t * t + b;\r\n        },\r\n        Quint_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n        },\r\n        Quint_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n        },\r\n\r\n        Sine_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n        },\r\n        Sine_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n        },\r\n        Sine_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n        },\r\n\r\n        Expo_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n        },\r\n        Expo_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n        },\r\n        Expo_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t == 0) return b;\r\n            if (t == d) return b + c;\r\n            if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n        },\r\n\r\n        Circ_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n        },\r\n        Circ_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n        },\r\n        Circ_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n        },\r\n\r\n        Elastic_EaseIn: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n        },\r\n        Elastic_EaseOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\r\n        },\r\n        Elastic_EaseInOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d / 2) == 2) return b + c; if (!p) p = d * (.3 * 1.5);\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\r\n        },\r\n\r\n        Back_EaseIn: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n        },\r\n        Back_EaseOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n        },\r\n        Back_EaseInOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n        },\r\n\r\n        Bounce_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c - AnimationClip2D.tween.Bounce_EaseOut(d - t, 0, c, d) + b;\r\n        },\r\n        Bounce_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d) < (1 / 2.75)) {\r\n                return c * (7.5625 * t * t) + b;\r\n            } else if (t < (2 / 2.75)) {\r\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n            } else if (t < (2.5 / 2.75)) {\r\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n            } else {\r\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n            }\r\n        },\r\n        Bounce_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t < d / 2) return AnimationClip2D.tween.Bounce_EaseIn(t * 2, 0, c, d) * .5 + b;\r\n            else return AnimationClip2D.tween.Bounce_EaseOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n        },\r\n\r\n        hermiteInterpolate: function (outTangent: number, inTangent: number, startValue: number, endValue: number, t: number, dur: number): number {\r\n            if (Math.abs(outTangent) == Infinity || Math.abs(inTangent) == Infinity) {\r\n                if (0 > outTangent || 0 < inTangent) return startValue;\r\n                return startValue;\r\n            }\r\n            var t2 = t * t;\r\n            var t3 = t2 * t;\r\n            var a = 2.0 * t3 - 3.0 * t2 + 1.0;\r\n            var b = t3 - 2.0 * t2 + t;\r\n            var c = t3 - t2;\r\n            var d = -2.0 * t3 + 3.0 * t2;\r\n            return a * startValue + b * outTangent * dur + c * inTangent * dur + d * endValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _frameRate: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _duration: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _animationEvents: Animation2DEvent[];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesDic: Record<string, KeyframeNode2D>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesMap: Record<string, KeyframeNode2D[]>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodes: KeyframeNodeList2D | null = new KeyframeNodeList2D();\r\n\r\n    /**\r\n     * 是否循环\r\n     */\r\n    islooping: boolean;\r\n\r\n    /**\r\n     * 实例化一个2D动画clip类\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._animationEvents = [];\r\n    }\r\n\r\n    /**\r\n     * 动画时长\r\n     * @returns \r\n     */\r\n    duration() {\r\n        return this._duration;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param playCurTime \r\n     * @param realTimeCurrentFrameIndexes \r\n     * @param addtive \r\n     * @param frontPlay \r\n     * @param outDatas \r\n     */\r\n    _evaluateClipDatasRealTime(playCurTime: number, realTimeCurrentFrameIndexes: Int16Array, addtive: boolean, frontPlay: boolean, outDatas: Array<number | string | boolean>) {\r\n        var nodes = this._nodes;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            var node = nodes.getNodeByIndex(i);\r\n            var nextFrameIndex;\r\n            var keyFrames = node._keyFrames;\r\n            var keyFramesCount = keyFrames.length;\r\n            if (0 == keyFramesCount) continue;\r\n            var frameIndex = realTimeCurrentFrameIndexes[i];\r\n            if (frontPlay) {\r\n                if ((-1 != frameIndex) && (playCurTime < keyFrames[frameIndex].time)) {//重置正向循环\r\n                    frameIndex = -1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (nextFrameIndex < keyFramesCount) {\r\n                    if (keyFrames[nextFrameIndex].time > playCurTime)\r\n                        break;\r\n                    frameIndex++;\r\n                    nextFrameIndex++;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n            } else {\r\n                nextFrameIndex = frameIndex + 1;\r\n                if ((nextFrameIndex != keyFramesCount) && (playCurTime > keyFrames[nextFrameIndex].time)) {//重置逆向循环\r\n                    frameIndex = keyFramesCount - 1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (frameIndex > -1) {\r\n                    if (keyFrames[frameIndex].time < playCurTime)\r\n                        break;\r\n                    frameIndex--;\r\n                    nextFrameIndex--;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n            }\r\n            var isEnd = nextFrameIndex == keyFramesCount;\r\n\r\n            if (-1 != frameIndex) {\r\n                var frame = keyFrames[frameIndex];\r\n                if (isEnd) {//如果nextFarme为空，不修改数据，保持上一帧\r\n                    outDatas[i] = frame.data.val;\r\n                } else {\r\n                    var nextFarme = keyFrames[nextFrameIndex];\r\n                    var d = nextFarme.time - frame.time;\r\n                    var t;\r\n                    if (d !== 0)\r\n                        t = (playCurTime - frame.time) / d;\r\n                    else\r\n                        t = 0;\r\n\r\n                    outDatas[i] = this._getTweenVal(frame, nextFarme, t, d);\r\n                }\r\n            } else {\r\n                outDatas[i] = keyFrames[0].data.val;\r\n            }\r\n\r\n            if (addtive && \"number\" == typeof keyFrames[0].data.val) {\r\n                outDatas[i] = <number>outDatas[i] - keyFrames[0].data.val;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param frame \r\n     * @param nextFrame \r\n     * @param t \r\n     * @param dur \r\n     * @returns \r\n     */\r\n    private _getTweenVal(frame: Keyframe2D, nextFrame: Keyframe2D, t: number, dur: number) {\r\n        var start = frame.data;\r\n        var end = nextFrame.data;\r\n\r\n        if (\"number\" != typeof start.val || \"number\" != typeof end.val) {\r\n            return start.val;\r\n        }\r\n        var tweenFun = (AnimationClip2D.tween as any)[start.tweenType];\r\n        var poval = start.val as number;\r\n        var oval = end.val as number;\r\n\r\n        //var t = (x - s.cx) / (e.cx - s.cx);\r\n        if (null != tweenFun) {\r\n            return tweenFun(t, poval, oval - poval, 1);\r\n        }\r\n\r\n        var outTangent = 0;\r\n        var inTangent = 0;\r\n\r\n        var outWeight = NaN;\r\n        var inWeight = NaN;\r\n\r\n        if (null != start.tweenInfo) {\r\n            outTangent = start.tweenInfo.outTangent;\r\n            outWeight = start.tweenInfo.outWeight;\r\n        }\r\n        if (null != end.tweenInfo) {\r\n            inTangent = end.tweenInfo.inTangent;\r\n            inWeight = end.tweenInfo.inWeight;\r\n        }\r\n        if (isNaN(outWeight) || 0 >= outWeight) outWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(inWeight) || 0 >= inWeight) inWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(outTangent)) outTangent = 0;\r\n        if (isNaN(inTangent)) inTangent = 0;\r\n\r\n        if (Math.abs(outTangent) == Number.MAX_VALUE) {\r\n            if (0 > outTangent) {\r\n                outTangent = -Infinity;\r\n            } else {\r\n                outTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(inTangent) == Number.MAX_VALUE) {\r\n            if (0 > inTangent) {\r\n                inTangent = -Infinity;\r\n            } else {\r\n                inTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        var tnum: number;\r\n        if ((!start.tweenInfo && !end.tweenInfo) || (Keyframe2D.defaultWeight == inWeight && Keyframe2D.defaultWeight == outWeight)) {\r\n            //var dur = nextFrameTime - startFrameTime;\r\n            tnum = AnimationClip2D.tween.hermiteInterpolate(outTangent, inTangent, poval, oval, t, dur);\r\n        } else {\r\n            tnum = this.hermiteCurveSplineWeight(poval, frame.time, outWeight, outTangent, oval, nextFrame.time, inWeight, inTangent, t);\r\n        }\r\n        return tnum;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param time \r\n     * @returns \r\n     */\r\n    private _binarySearchEventIndex(time: number): number {\r\n        var start = 0;\r\n        var end = this._animationEvents.length - 1;\r\n        var mid;\r\n        while (start <= end) {\r\n            mid = (start + end) >> 1;\r\n            var midValue = this._animationEvents[mid].time;\r\n            if (midValue == time)\r\n                return mid;\r\n            else if (midValue > time)\r\n                end = mid - 1;\r\n            else\r\n                start = mid + 1;\r\n        }\r\n        return start;\r\n    }\r\n\r\n    /**\r\n     * hermite插值算法\r\n     * @param frameValue 上一帧值\r\n     * @param frametime 上一帧事件\r\n     * @param frameOutWeight 上一帧权重\r\n     * @param frameOutTangent 上一帧切线\r\n     * @param nextframeValue 下一帧值\r\n     * @param nextframetime 下一帧时间\r\n     * @param nextframeInweight 下一帧权重\r\n     * @param nextframeIntangent 下一帧切线\r\n     * @param time 时间\r\n     * @returns \r\n     */\r\n    hermiteCurveSplineWeight(frameValue: number, frametime: number, frameOutWeight: number, frameOutTangent: number, nextframeValue: number, nextframetime: number, nextframeInweight: number, nextframeIntangent: number, time: number) {\r\n        let Eps = 2.22e-16;\r\n\r\n        let x = time;\r\n        let x1 = frametime;\r\n        let y1 = frameValue;\r\n        let wt1 = frameOutWeight;\r\n        let x2 = nextframetime;\r\n        let y2 = nextframeValue;\r\n        let wt2 = nextframeInweight;\r\n\r\n        let dx = x2 - x1;\r\n        let dy = y2 - y1;\r\n        dy = Math.max(Math.abs(dy), Eps) * (dy < 0 ? -1 : 1);\r\n\r\n        let yp1 = frameOutTangent;\r\n        let yp2 = nextframeIntangent;\r\n\r\n        if (!Number.isFinite(yp1) || !Number.isFinite(yp2)) {\r\n            return frameValue;\r\n        }\r\n\r\n        yp1 = yp1 * dx / dy;\r\n        yp2 = yp2 * dx / dy;\r\n\r\n        let wt2s = 1 - wt2;\r\n\r\n        let t = 0.5;\r\n        let t2 = 0;\r\n\r\n        if (Math.abs(wt1 - 0.33333334) < 0.0001 && Math.abs(wt2 - 0.33333334) < 0.0001) {\r\n            t = x;\r\n            t2 = 1 - t;\r\n        }\r\n        else {\r\n            while (true) {\r\n                t2 = (1 - t);\r\n                let fg = 3 * t2 * t2 * t * wt1 + 3 * t2 * t * t * wt2s + t * t * t - x;\r\n                if (Math.abs(fg) <= 2.5 * Eps)\r\n                    break;\r\n\r\n                // third order householder method\r\n                let fpg = 3 * t2 * t2 * wt1 + 6 * t2 * t * (wt2s - wt1) + 3 * t * t * (1 - wt2s);\r\n                let fppg = 6 * t2 * (wt2s - 2 * wt1) + 6 * t * (1 - 2 * wt2s + wt1);\r\n                let fpppg = 18 * wt1 - 18 * wt2s + 6;\r\n\r\n                t -= (6 * fg * fpg * fpg - 3 * fg * fg * fppg) / (6 * fpg * fpg * fpg - 6 * fg * fpg * fppg + fg * fg * fpppg);\r\n            }\r\n        }\r\n\r\n        let y = 3 * t2 * t2 * t * wt1 * yp1 + 3 * t2 * t * t * (1 - wt2 * yp2) + t * t * t;\r\n\r\n        return y * dy + y1;\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加动画事件。\r\n     * @param event 动画事件\r\n     */\r\n    addEvent(event: Animation2DEvent): void {\r\n        var index = this._binarySearchEventIndex(event.time);\r\n        this._animationEvents.splice(index, 0, event);\r\n    }\r\n\r\n\r\n\r\n}","import { AniParmType } from \"./AnimatorControllerParse\";\r\n\r\nexport class Animation2DParm {\r\n    name: string;\r\n    type: AniParmType;\r\n    value: boolean | number;\r\n}","import { AniStateConditionType, AniStateConditionNumberCompressType } from \"./AnimatorControllerParse\";\r\n\r\nexport class AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    static _conditionNameMap: any = {};\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _propertyNameCounter: number = 0;\r\n\r\n    /**\r\n     * 通过名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static conditionNameToID(name: string): number {\r\n        if (AnimatorStateCondition._conditionNameMap[name] != null) {\r\n            return AnimatorStateCondition._conditionNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._conditionNameMap[name] = id;\r\n            this._conditionNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过ID获得唯一名称。\r\n     * @param id \r\n     * @returns \r\n     */\r\n    static conditionIDToName(id: number): string {\r\n        return this._conditionNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal 状态条件类型\r\n     */\r\n    protected _type: AniStateConditionType;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _id: number;\r\n\r\n    /**\r\n     * @intenral\r\n     */\r\n    private _name: string;\r\n\r\n    /**\r\n     * 状态机过渡条件\r\n     */\r\n    constructor(name: string = null) {\r\n        if (!name) return;\r\n        this._id = AnimatorStateCondition.conditionNameToID(name);\r\n        this._name = name;\r\n    }\r\n\r\n    /**\r\n     * 唯一ID\r\n     */\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._id = AnimatorStateCondition.conditionNameToID(value);\r\n        this._name = value\r\n    }\r\n\r\n    /**\r\n     * 条件类型\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: number | boolean): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateNumberCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberValue: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberCompareFlag: AniStateConditionNumberCompressType;\r\n\r\n    /**\r\n     * 创建number比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._numberValue = 0;\r\n        this._numberCompareFlag = AniStateConditionNumberCompressType.Greater;\r\n        this._type = AniStateConditionType.Number;\r\n    }\r\n\r\n    /**\r\n     * number值\r\n     */\r\n    get numberValue() {\r\n        return this._numberValue;\r\n    }\r\n\r\n    set numberValue(value: number) {\r\n        this._numberValue = value;\r\n    }\r\n\r\n    /**\r\n     * 判断类型\r\n     */\r\n    get compareFlag() {\r\n        return this._numberCompareFlag;\r\n    }\r\n\r\n    set compareFlag(value: AniStateConditionNumberCompressType) {\r\n        this._numberCompareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: number): boolean {\r\n        if (AniStateConditionNumberCompressType.Greater == this._numberCompareFlag)\r\n            return value > this._numberValue;\r\n        else\r\n            return value < this._numberValue;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateBoolCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _compareFlag: boolean;\r\n\r\n    /**\r\n     * 创建bool比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._compareFlag = true;\r\n        this._type = AniStateConditionType.Bool;\r\n    }\r\n\r\n    /**\r\n     * 判断类型 \r\n     */\r\n    get compareFlag() {\r\n        return this._compareFlag;\r\n    }\r\n\r\n    set compareFlag(value: boolean) {\r\n        this._compareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return this._compareFlag == value;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateTriggerCondition extends AnimatorStateCondition {\r\n    /**\r\n     * 创建trigger比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._type = AniStateConditionType.Trigger;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发,tigger 如果是true,就算条件达成\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return value;\r\n    }\r\n}","import { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AniStateConditionType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition } from \"./AnimatorStateCondition\";\r\n\r\nexport class AnimatorTransition2D {\r\n    mute: boolean;\r\n    exitTime: number;//退出时间\r\n    exitByTime: boolean;//是否设置生效时间\r\n    transstartoffset: number;//归一化的时间的下一个state播放位置\r\n    transduration: number;//归一化过度时间 TODO 0-1\r\n    conditions: AnimatorStateCondition[];//\r\n    destState: AnimatorState2D;\r\n    /**\r\n     * 创建一个新的Animatortransition2D\r\n     */\r\n    constructor() {\r\n        this.conditions = [];\r\n        this.exitByTime = true;\r\n        this.exitTime = 1;\r\n        this.transduration = 0;\r\n        this.transstartoffset = 0;\r\n        this.mute = false;\r\n    }\r\n\r\n    /**\r\n     * 增加一个条件\r\n     * @param condition \r\n     */\r\n     addCondition(condition: AnimatorStateCondition): void {\r\n        if (this.conditions.indexOf(condition) == -1) {\r\n            this.conditions.push(condition);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除一个条件\r\n     * @param condition \r\n     */\r\n    removeCondition(condition: AnimatorStateCondition): void {\r\n        let index = this.conditions.indexOf(condition);\r\n        if (index != -1) {\r\n            this.conditions.splice(index, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 是否启用过渡\r\n    * @param normalizeTime \r\n    * @param paramsMap \r\n    */\r\n    check(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): boolean {\r\n        if (this.mute) {\r\n            return false;\r\n        }\r\n        if (this.exitByTime && (normalizeTime < this.exitTime && !isReplay)) {\r\n            return false;\r\n        }\r\n        if (null == this.conditions || 0 == this.conditions.length) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < this.conditions.length; i++) {\r\n            let con = this.conditions[i];\r\n\r\n            let out = con.checkState(paramsMap[con.name].value);\r\n            if (out) {\r\n                if (con.type == AniStateConditionType.Trigger) {\r\n                    paramsMap[con.name].value = false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { Resource } from \"../resource/Resource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorControllerParse, AniParmType, TypeAnimatorConditions, TypeAnimatorControllerData, TypeAnimatorParams, TypeAnimatorState, TypeAnimatorTransition } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition, AnimatorStateBoolCondition, AnimatorStateNumberCondition, AnimatorStateTriggerCondition } from \"./AnimatorStateCondition\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * <code>2D动画控制器<code/>\r\n */\r\nexport class AnimatorController2D extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    data: TypeAnimatorControllerData;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clipsID: string[];\r\n\r\n    /**\r\n     * 实例化2D动画控制器\r\n     * @param data \r\n     */\r\n    constructor(data: any) {\r\n        super();\r\n        let obj = AnimatorControllerParse.parse(data);\r\n        this.data = obj.ret;\r\n        this.clipsID = obj.clipsID;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    private getLayers() {\r\n        let layers = this.data.controllerLayers;\r\n        let lArr: AnimatorControllerLayer2D[] = [];\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let acl = new AnimatorControllerLayer2D(l.name);\r\n            lArr.unshift(acl);\r\n\r\n\r\n            for (let k in l) {\r\n                if (\"name\" == k || \"states\" == k || null == (l as any)[k]) {\r\n                    continue;\r\n                }\r\n                try {\r\n                    (acl as any)[k] = (l as any)[k];\r\n                } catch (err: any) { }\r\n            }\r\n            this.getState(l.states, acl, this.data);\r\n\r\n        }\r\n        return lArr;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @returns \r\n     */\r\n    private createState(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D) {\r\n        if (!states) return null;\r\n        let ret: Record<string, AnimatorState2D> = {};\r\n        let defID: string = null;\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n            let childStates = obj.states;\r\n            if (childStates) {\r\n                let groupRet = this.createState(childStates, idCatch, acl);\r\n                if (groupRet) {\r\n                    idCatch[obj.id] = groupRet.states[groupRet.id];\r\n                }\r\n                continue;\r\n            }\r\n\r\n            if (0 > Number(obj.id)) {\r\n                if (\"-1\" == obj.id) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions && 0 < transitions.length) {\r\n                        defID = transitions[0].id;\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n\r\n            let state = new AnimatorState2D();\r\n            idCatch[obj.id] = state;\r\n            ret[obj.id] = state;\r\n            for (let k in obj) {\r\n                try {\r\n                    if (\"scripts\" == k) {\r\n                        let scripts: string[] = obj[k];\r\n                        if (scripts && Array.isArray(scripts)) {\r\n                            for (let k = scripts.length - 1; k >= 0; k--) {\r\n                                let uuid = scripts[k];\r\n                                if (uuid && 0 == uuid.indexOf(\"res://\")) {\r\n                                    uuid = uuid.substring(6);\r\n                                }\r\n                                let c = ClassUtils.getClass(uuid);\r\n                                if (c) {\r\n                                    state.addScript(c);\r\n                                }\r\n                            }\r\n                        }\r\n                        continue;\r\n                    } else if (\"soloTransitions\" == k) {\r\n                        continue;\r\n                    } else if (null != (obj as any)[k]) {\r\n                        (state as any)[k] = (obj as any)[k];\r\n                    }\r\n                } catch (err: any) { }\r\n            }\r\n\r\n            acl.addState(state);\r\n        }\r\n        return { id: defID, states: ret };\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param acl \r\n     * @param data \r\n     */\r\n    private getState(states: TypeAnimatorState[], acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData) {\r\n        //let ret:\r\n        if (states) {\r\n            let idCatch: Record<string, AnimatorState2D> = {};\r\n            this.createState(states, idCatch, acl);\r\n            this.setTransitions(states, idCatch, acl, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param exitRet \r\n     * @param transitions \r\n     * @param idCatch \r\n     * @param data \r\n     * @param pExitRet \r\n     */\r\n    private setExitTransition(exitRet: Record<string, TypeAnimatorTransition[]>, transitions: TypeAnimatorTransition[], idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData, pExitRet: Record<string, TypeAnimatorTransition[]>) {\r\n        for (let id in exitRet) {\r\n            let state = idCatch[id];\r\n            if (state) {\r\n\r\n                let ats: AnimatorTransition2D[] = state.transitions;\r\n                let sts: AnimatorTransition2D[] = state.soloTransitions;\r\n\r\n                let linArr = exitRet[id];\r\n                for (let i = transitions.length - 1; i >= 0; i--) {\r\n                    let t = transitions[i];\r\n                    if (\"-3\" == t.id) {\r\n                        if (null == pExitRet[id]) {\r\n                            pExitRet[id] = [];\r\n                        }\r\n                        pExitRet[id].push(t);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                    for (let j = linArr.length - 1; j >= 0; j--) {\r\n                        let t2 = linArr[j];\r\n\r\n\r\n                        let ato = new AnimatorTransition2D();\r\n                        ato.destState = idCatch[t.id];\r\n\r\n                        if (t.conditions) {\r\n                            this.addConditions(t.conditions, ato, data);\r\n                        }\r\n\r\n                        if (t2.conditions) {\r\n                            this.addConditions(t2.conditions, ato, data);\r\n                        }\r\n\r\n\r\n                        for (let k in t) {\r\n                            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                continue;\r\n                            } else {\r\n                                (ato as any)[k] = (t as any)[k];\r\n                            }\r\n                        }\r\n\r\n                        if (t.solo) {\r\n                            sts.unshift(ato);\r\n                        } else {\r\n                            ats.unshift(ato);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getAnimatorTransition2D(o: TypeAnimatorTransition, idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData) {\r\n        let ato = new AnimatorTransition2D();\r\n\r\n        if (idCatch[o.id]) {\r\n            ato.destState = idCatch[o.id];\r\n        }\r\n        if (o.conditions) {\r\n            this.addConditions(o.conditions, ato, data);\r\n        }\r\n\r\n        for (let k in o) {\r\n            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                continue;\r\n            } else {\r\n                (ato as any)[k] = (o as any)[k];\r\n            }\r\n        }\r\n        return ato;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @param data \r\n     * @param pState \r\n     * @returns \r\n     */\r\n    private setTransitions(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData, pState?: TypeAnimatorState) {\r\n        if (!states) return null;\r\n\r\n        let exitRet: Record<string, TypeAnimatorTransition[]> = {};\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                let exitTransition = this.setTransitions(obj.states, idCatch, acl, data, obj);\r\n                if (exitTransition) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions) {\r\n                        this.setExitTransition(exitTransition, transitions, idCatch, data, exitRet);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                continue;\r\n            }\r\n            if (\"-1\" == obj.id) {\r\n                if (obj.soloTransitions && 0 < obj.soloTransitions.length) {\r\n                    if (null == pState) {\r\n                        acl.defaultState = idCatch[obj.soloTransitions[0].id];\r\n                        acl._enterTransition = this._getAnimatorTransition2D(obj.soloTransitions[0], idCatch, data);\r\n                    } else {\r\n                        idCatch[pState.id] = idCatch[obj.soloTransitions[0].id];\r\n                    }\r\n                    continue;\r\n                }\r\n            } else if (\"-2\" == obj.id) {\r\n                let transitions = obj.soloTransitions;\r\n                if (transitions) {\r\n                    for (let j = transitions.length - 1; j >= 0; j--) {\r\n                        let o = transitions[j];\r\n                        let destState = idCatch[o.id];\r\n                        if (destState) {\r\n                            for (let idk in idCatch) {\r\n                                let state = idCatch[idk];\r\n                                let ato = this._getAnimatorTransition2D(o, idCatch, data)\r\n                                // let ato = new AnimatorTransition2D();\r\n                                // ato.destState = destState;\r\n                                // if (o.conditions) {\r\n                                //     this.addConditions(o.conditions, ato, data);\r\n                                // }\r\n\r\n                                // for (let k in o) {\r\n                                //     if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                //         continue;\r\n                                //     } else {\r\n                                //         (ato as any)[k] = (o as any)[k];\r\n                                //     }\r\n                                // }\r\n\r\n                                if (o.solo) {\r\n                                    state.soloTransitions.unshift(ato);\r\n                                } else {\r\n                                    state.transitions.unshift(ato);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                continue;\r\n            } else if (\"-3\" == obj.id) {\r\n                continue;\r\n            }\r\n\r\n            let soloTransitions = obj.soloTransitions;\r\n            if (soloTransitions && idCatch[obj.id]) {\r\n\r\n                let ats: AnimatorTransition2D[] = idCatch[obj.id].transitions;\r\n                let sts: AnimatorTransition2D[] = idCatch[obj.id].soloTransitions;\r\n                for (let j = soloTransitions.length - 1; j >= 0; j--) {\r\n                    let o = soloTransitions[j];\r\n                    if (\"-3\" == o.id) {\r\n                        if (null == exitRet[obj.id]) {\r\n                            exitRet[obj.id] = [];\r\n                        }\r\n                        exitRet[obj.id].push(o);\r\n                        continue;\r\n                    }\r\n\r\n                    let ato = this._getAnimatorTransition2D(o,idCatch,data);\r\n\r\n                    if (o.solo) {\r\n                        sts.unshift(ato);\r\n                    } else {\r\n                        ats.unshift(ato);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return exitRet;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param arr \r\n     * @param ato \r\n     * @param data \r\n     * @returns \r\n     */\r\n    private addConditions(arr: TypeAnimatorConditions[], ato: AnimatorTransition2D, data: TypeAnimatorControllerData) {\r\n        let parms = data.animatorParams;\r\n        if (null == parms || 0 == parms.length) return;\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            let o = arr[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                return;\r\n            }\r\n            let c: AnimatorStateCondition;\r\n            if (parm.type == AniParmType.Bool) {\r\n                let b = new AnimatorStateBoolCondition(parm.name);\r\n                b.compareFlag = Boolean(o.checkValue);\r\n                c = b;\r\n            } else if (parm.type == AniParmType.Float) {\r\n                let n = new AnimatorStateNumberCondition(parm.name);\r\n                n.numberValue = Number(o.checkValue);\r\n                n.compareFlag = o.type;\r\n                c = n;\r\n            } else if (parm.type == AniParmType.Trigger) {\r\n                let t = new AnimatorStateTriggerCondition(parm.name);\r\n                c = t;\r\n            }\r\n            ato.addCondition(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param a \r\n     */\r\n    updateTo(a: Animator2D) {\r\n        let currLayer = (a as any)._controllerLayers;\r\n\r\n        for (let i = 0, len = currLayer.length; i < len; i++) {\r\n            currLayer[i].destroy();\r\n        }\r\n        currLayer.length = 0;\r\n\r\n        let layers = this.getLayers();\r\n        for (let i = 0, len = layers.length; i < len; i++) {\r\n            a.addControllerLayer(layers[i]);\r\n        }\r\n\r\n        let parms = this.data.animatorParams;\r\n        if (parms) {\r\n            let setParm: Record<string, Animation2DParm> = {};\r\n            for (let i = parms.length - 1; i >= 0; i--) {\r\n                let p = parms[i];\r\n                let sp = new Animation2DParm();\r\n                sp.name = p.name;\r\n                sp.type = p.type;\r\n                sp.value = p.val;\r\n                setParm[p.name] = sp;\r\n            }\r\n            a.parameters = setParm;\r\n        }\r\n    }\r\n}","import { Component } from \"./Component\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Collision } from \"../d3/physics/Collision\";\r\nimport { PhysicsColliderComponent } from \"../d3/physics/PhysicsColliderComponent\";\r\nimport { ColliderBase } from \"../physics/Collider2D/ColliderBase\";\r\nimport { Sprite3D } from \"../d3/core/Sprite3D\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>Script</code> 类用于创建脚本的父类，该类为抽象类，不允许实例。\r\n */\r\nexport class Script extends Component {\r\n    declare owner: Sprite | Sprite3D;\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _isScript(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected setupScript(): void {\r\n        let owner = this.owner;\r\n        let func: Function;\r\n\r\n        if (!(this.onTriggerEnter == Script.prototype.onTriggerEnter)) owner.on(Event.TRIGGER_ENTER, this, this.onTriggerEnter);\r\n        if (!(this.onTriggerStay == Script.prototype.onTriggerStay)) owner.on(Event.TRIGGER_STAY, this, this.onTriggerStay);\r\n        if (!(this.onTriggerExit == Script.prototype.onTriggerExit)) owner.on(Event.TRIGGER_EXIT, this, this.onTriggerExit);\r\n\r\n        if (!(this.onCollisionEnter == Script.prototype.onCollisionEnter)) owner.on(Event.COLLISION_ENTER, this, this.onCollisionEnter);\r\n        if (!(this.onCollisionStay == Script.prototype.onCollisionStay)) owner.on(Event.COLLISION_STAY, this, this.onCollisionStay);\r\n        if (!(this.onCollisionExit == Script.prototype.onCollisionExit)) owner.on(Event.COLLISION_EXIT, this, this.onCollisionExit);\r\n        if (func = this.onJointBreak) owner.on(Event.JOINT_BREAK, this, func);\r\n\r\n        if (func = this.onMouseDown) owner.on(Event.MOUSE_DOWN, this, func);\r\n        if (func = this.onMouseUp) owner.on(Event.MOUSE_UP, this, func);\r\n        if (func = this.onRightMouseDown) owner.on(Event.RIGHT_MOUSE_DOWN, this, func);\r\n        if (func = this.onRightMouseUp) owner.on(Event.RIGHT_MOUSE_UP, this, func);\r\n        if (func = this.onMouseMove) owner.on(Event.MOUSE_MOVE, this, func);\r\n        if (func = this.onMouseDrag) owner.on(Event.MOUSE_DRAG, this, func);\r\n        if (func = this.onMouseDragEnd) owner.on(Event.MOUSE_DRAG_END, this, func);\r\n        if (func = this.onMouseOver) owner.on(Event.MOUSE_OVER, this, func);\r\n        if (func = this.onMouseOut) owner.on(Event.MOUSE_OUT, this, func);\r\n        if (func = this.onMouseClick) owner.on(Event.CLICK, this, func);\r\n        if (func = this.onMouseDoubleClick) owner.on(Event.DOUBLE_CLICK, this, func);\r\n        if (func = this.onMouseRightClick) owner.on(Event.RIGHT_CLICK, this, func);\r\n\r\n        if (func = this.onKeyDown) ILaya.stage.on(Event.KEY_DOWN, this, func);\r\n        if (func = this.onKeyPress) ILaya.stage.on(Event.KEY_PRESS, this, func);\r\n        if (func = this.onKeyUp) ILaya.stage.on(Event.KEY_UP, this, func);\r\n        owner.event(Event._Add_Script);\r\n    }\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，开始碰撞时执行\r\n     */\r\n    onTriggerEnter?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，持续碰撞时执行\r\n     */\r\n    onTriggerStay?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，结束碰撞时执行\r\n     */\r\n    onTriggerExit?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理碰撞器事件（不适用2D），开始碰撞时执行\r\n     */\r\n    onCollisionEnter?(collision: Collision): void;\r\n\r\n    /**\r\n     * 3D物理碰撞器事件（不适用2D），持续碰撞时执行\r\n     */\r\n    onCollisionStay?(collision: Collision): void;\r\n\r\n    /**\r\n     *3D物理碰撞器事件（不适用2D），结束碰撞时执行\r\n     */\r\n    onCollisionExit?(collision: Collision): void;\r\n\r\n    /**\r\n     * 关节破坏时执行此方法\r\n     */\r\n    onJointBreak?(): void;\r\n\r\n    /**\r\n     * 鼠标按下时执行\r\n     */\r\n    onMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标抬起时执行\r\n     */\r\n    onMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键或中键按下时执行\r\n     */\r\n    onRightMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键或中键抬起时执行\r\n     */\r\n    onRightMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标在节点上移动时执行\r\n     */\r\n    onMouseMove?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标进入节点时执行\r\n     */\r\n    onMouseOver?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标离开节点时执行\r\n     */\r\n    onMouseOut?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标按住一个物体后，拖拽时执行\r\n     */\r\n    onMouseDrag?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标按住一个物体，拖拽一定距离，释放鼠标按键后执行\r\n     */\r\n    onMouseDragEnd?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标点击时执行\r\n     */\r\n    onMouseClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标双击时执行\r\n     */\r\n    onMouseDoubleClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键点击时执行\r\n     */\r\n    onMouseRightClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘按下时执行\r\n     */\r\n    onKeyDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘产生一个字符时执行\r\n     */\r\n    onKeyPress?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘抬起时执行\r\n     */\r\n    onKeyUp?(evt: Event): void;\r\n}\r\n\r\n","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { TextResource, TextResourceFormat } from \"../resource/TextResource\";\r\n\r\nclass TextAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Plain);\r\n        });\r\n    }\r\n}\r\n\r\nclass BytesAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Buffer);\r\n        });\r\n    }\r\n}\r\n\r\nclass JsonAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.JSON);\r\n        });\r\n    }\r\n}\r\n\r\nclass XMLAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"xml\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.XML);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"txt\", \"csv\"], TextAssetLoader, Loader.TEXT);\r\nLoader.registerLoader([\"bin\", \"bytes\", \"fui\"], BytesAssetLoader, Loader.BUFFER);\r\nLoader.registerLoader([\"json\"], JsonAssetLoader, Loader.JSON);\r\nLoader.registerLoader([\"xml\"], XMLAssetLoader, Loader.XML);","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass AtlasLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let toloadPics: Array<Promise<Texture>> = [];\r\n            if (data.meta && data.meta.image) {\r\n                let folderPath: string = \"\";\r\n                let i = task.url.lastIndexOf(\"/\");\r\n                if (i != -1)\r\n                    folderPath = task.url.substring(0, i + 1);\r\n\r\n                //如果图集带了版本号，需要将图集中包含的图片也需要追加版本号，以此解决浏览器缓存的问题\r\n                let query: string = \"\";\r\n                i = task.url.lastIndexOf(\"?\");\r\n                if (i != -1)\r\n                    query = task.url.substring(i);\r\n\r\n                //带图片信息的类型\r\n                let pics: Array<string> = data.meta.image.split(\",\");\r\n                for (let pic of pics)\r\n                    toloadPics.push(task.loader.load(folderPath + pic + query, null, task.progress.createCallback()));\r\n            } else {  //不带图片信息\r\n                toloadPics.push(task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback()));\r\n            }\r\n\r\n            return Promise.all(toloadPics).then(pics => {\r\n                let baseUrl = task.options.baseUrl || \"\";\r\n\r\n                let frames: any = data.frames;\r\n                let directory: string = (data.meta && data.meta.prefix != null) ? data.meta.prefix : task.url.substring(0, task.url.lastIndexOf(\".\")) + \"/\";\r\n                let subTextures: Array<Texture> = [];\r\n\r\n                let scaleRate: number = 1;\r\n                if (data.meta && data.meta.scale && data.meta.scale != 1)\r\n                    scaleRate = parseFloat(data.meta.scale);\r\n\r\n                for (let tPic of pics) {\r\n                    if (tPic) {\r\n                        tPic._addReference();\r\n                        tPic.scaleRate = scaleRate;\r\n                    }\r\n                }\r\n\r\n                for (let name in frames) {\r\n                    let obj = frames[name];\r\n                    let tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\r\n                    if (!tPic)\r\n                        continue;\r\n\r\n                    let url = baseUrl + directory + (obj.filename || name);\r\n                    let tt = Texture.create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h);\r\n                    tt.lock = true;\r\n                    tt._sizeGrid = obj.sizeGrid;\r\n                    tt._stateNum = obj.stateNum;\r\n                    task.loader.cacheRes(url, tt);\r\n                    tt.url = url;\r\n                    subTextures.push(tt);\r\n                }\r\n\r\n                return new AtlasResource(directory, pics, subTextures);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"atlas\"], AtlasLoader, Loader.ATLAS);","import { Component } from \"../components/Component\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { IDecodeObjOptions, SerializeUtil } from \"./SerializeUtil\";\r\n\r\nconst errorList: Array<any> = [];\r\n\r\nexport class HierarchyParser {\r\n    public static parse(data: any, options?: Record<string, any>, errors?: Array<any>): Array<Node> {\r\n        errors = errors || errorList;\r\n        let nodeMap: Record<string, Node> = {};\r\n        let dataList: Array<any> = [];\r\n        let allNodes: Array<Node> = [];\r\n        let outNodes: Array<Node> = [];\r\n        let scene: Scene;\r\n\r\n        let inPrefab: boolean;\r\n        let prefabNodeDict: Map<Node, Record<string, Node>>;\r\n        let skinBaseUrl: string;\r\n        let overrideData: Array<Array<any>>;\r\n\r\n        if (options) {\r\n            inPrefab = options.inPrefab;\r\n            if (inPrefab)\r\n                prefabNodeDict = options.prefabNodeDict;\r\n            skinBaseUrl = options.skinBaseUrl;\r\n            overrideData = options.overrideData;\r\n        }\r\n\r\n        function createChildren(data: any, prefab: Node) {\r\n            for (let child of data._$child) {\r\n                if (child._$child) {\r\n                    let node = createNode(child, prefab);\r\n                    createChildren(child, child._$prefab ? node : prefab);\r\n\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n                else {\r\n                    let node = createNode(child, prefab);\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        function createNode(nodeData: any, prefab: Node, runtime?: any): Node {\r\n            let node: Node;\r\n            let pstr: string;\r\n            if (pstr = nodeData._$override) { //prefab里的override节点\r\n                if (prefab && prefabNodeDict) {\r\n                    if (Array.isArray(pstr)) {\r\n                        node = prefab;\r\n                        for (let i = 0, n = pstr.length; i < n; i++) {\r\n                            let map = prefabNodeDict.get(node);\r\n                            node = map?.[pstr[i]];\r\n                            if (!node)\r\n                                break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let map = prefabNodeDict.get(prefab);\r\n                        if (map)\r\n                            node = map[nodeData._$override];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (pstr = nodeData._$prefab) { //prefab根节点\r\n                    let res = <Prefab>Loader.getRes(URL.getResURLByUUID(pstr), Loader.HIERARCHY);\r\n                    if (res) {\r\n                        if (!prefabNodeDict)\r\n                            prefabNodeDict = new Map();\r\n\r\n                        let overrideData2: Array<any> = [];\r\n                        let testId = nodeData._$id;\r\n                        if (overrideData) {\r\n                            for (let i = 0, n = overrideData.length; i < n; i++) {\r\n                                let arr = overrideData[i];\r\n                                if (arr && arr.length > 0) {\r\n                                    overrideData2[i] = arr.filter(d => {\r\n                                        let od = d._$override || d._$parent;\r\n                                        return Array.isArray(od) && od.length > n - i && od[n - i - 1] == testId;\r\n                                    });\r\n                                }\r\n                                else\r\n                                    overrideData2[i] = arr;\r\n                            }\r\n                        }\r\n\r\n                        overrideData2.push(nodeData._$child);\r\n\r\n                        node = res.create({ inPrefab: true, prefabNodeDict: prefabNodeDict, overrideData: overrideData2 }, errors);\r\n                    }\r\n                }\r\n                else if (pstr = nodeData._$type) {\r\n                    let cls: any = runtime ?? ClassUtils.getClass(pstr);\r\n                    if (cls) {\r\n                        try {\r\n                            node = new cls();\r\n                        }\r\n                        catch (err: any) {\r\n                            errors.push(err);\r\n                        }\r\n                    }\r\n                    else {\r\n                        errors.push(new Error(`unknown type '${pstr}'`));\r\n                    }\r\n                }\r\n\r\n                if (node)\r\n                    nodeMap[nodeData._$id] = node;\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n        function getNodeByRef(idPath: string | string[]) {\r\n            if (Array.isArray(idPath)) {\r\n                let prefab = nodeMap[idPath[0]];\r\n                if (prefab && idPath.length > 1)\r\n                    return findNodeInPrefab(prefab, idPath, 1);\r\n                else\r\n                    return prefab;\r\n            }\r\n            else\r\n                return nodeMap[idPath];\r\n        }\r\n\r\n        function findNodeInPrefab(prefab: Node, idPath: string | string[], startIndex: number = 0) {\r\n            if (!idPath)\r\n                return prefab;\r\n\r\n            let map = prefabNodeDict?.get(prefab);\r\n            if (!map)\r\n                return null;\r\n\r\n            if (Array.isArray(idPath)) {\r\n                let node: Node;\r\n                for (let i = startIndex, n = idPath.length; i < n; i++) {\r\n                    if (!map)\r\n                        return null;\r\n\r\n                    node = map[idPath[i]];\r\n                    if (!node)\r\n                        break;\r\n\r\n                    map = prefabNodeDict.get(node);\r\n                }\r\n                return node;\r\n            }\r\n            else\r\n                return map[idPath];\r\n        }\r\n\r\n        let bakedOverrideData: Record<string, Array<any>>;\r\n        function getNodeData(node: Node) {\r\n            (<Sprite>node).visible = false;\r\n\r\n            let i = allNodes.indexOf(node);\r\n            let nodeData = dataList[i];\r\n\r\n            if (!overrideData)\r\n                return nodeData;\r\n\r\n            if (bakedOverrideData === undefined)\r\n                bakedOverrideData = SerializeUtil.bakeOverrideData(overrideData);\r\n\r\n            if (bakedOverrideData)\r\n                return SerializeUtil.applyOverrideData(nodeData, bakedOverrideData);\r\n            else\r\n                return nodeData;\r\n        }\r\n\r\n        let runtime: any;\r\n        if (data._$type || data._$prefab) {\r\n            if (runtime = data._$runtime) {\r\n                if (runtime.startsWith(\"res://\"))\r\n                    runtime = runtime.substring(6);\r\n                let cls = ClassUtils.getClass(runtime);\r\n                if (cls)\r\n                    runtime = cls;\r\n                else\r\n                    errors.push(new Error(`unknown runtime '${runtime}'`));\r\n            }\r\n\r\n            let node = createNode(data, null, runtime);\r\n            if (node) {\r\n                if (data._$child)\r\n                    createChildren(data, data._$prefab ? node : null);\r\n\r\n                dataList.push(data);\r\n                allNodes.push(node);\r\n\r\n                if (node instanceof Scene)\r\n                    scene = node;\r\n            }\r\n        }\r\n        else {\r\n            if (data._$child)\r\n                createChildren(data, null);\r\n        }\r\n\r\n        let cnt = dataList.length;\r\n\r\n        //生成树\r\n        let k = 0;\r\n        let outNodeData: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n\r\n            let children: Array<any> = nodeData._$child;\r\n            if (children) {\r\n                let num = children.length;\r\n                if (node) {\r\n                    if (nodeData._$prefab) {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let m = k - num + j;\r\n                            let n = outNodes[m];\r\n                            if (n && !n.parent) { //是预制体新增\r\n                                let nodeData2 = outNodeData[m];\r\n                                let parentNode = findNodeInPrefab(node, nodeData2._$parent);\r\n                                if (parentNode) {\r\n                                    let pos = nodeData2._$index;\r\n                                    if (pos != null && pos < parentNode.numChildren)\r\n                                        parentNode.addChildAt(n, pos);\r\n                                    else\r\n                                        parentNode.addChild(n);\r\n                                }\r\n                                else {\r\n                                    //挂接的节点可能被删掉了\r\n                                    node.addChildAt(n, 0);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let n = outNodes[k - num + j];\r\n                            if (n) {\r\n                                if (node === scene && n._is3D)\r\n                                    scene._scene3D = <any>n;\r\n                                else\r\n                                    node.addChild(n);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                k -= num;\r\n            }\r\n\r\n            outNodes[k] = node;\r\n            outNodeData[k] = nodeData;\r\n            k++;\r\n        }\r\n        outNodes.length = k;\r\n        outNodes = outNodes.filter(n => n != null);\r\n        let topNode = outNodes[0];\r\n\r\n        //加载所有组件\r\n        let compInitList: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let components = dataList[i]._$comp;\r\n            if (!components)\r\n                continue;\r\n\r\n            let node = allNodes[i];\r\n            if (!node)\r\n                continue;\r\n\r\n            for (let compData of components) {\r\n                let comp: Component;\r\n                if (compData._$override) {\r\n                    let cls: any = ClassUtils.getClass(compData._$override);\r\n                    if (cls)\r\n                        comp = node.getComponent(cls);\r\n                }\r\n                else {\r\n                    let cls: any = ClassUtils.getClass(compData._$type);\r\n                    if (cls) {\r\n                        comp = node.getComponent(cls);\r\n                        if (!comp) {\r\n                            try {\r\n                                comp = node.addComponent(cls);\r\n                            }\r\n                            catch (err: any) {\r\n                                errors.push(err);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (comp)\r\n                    compInitList.push(compData, comp);\r\n            }\r\n        }\r\n\r\n        //设置节点属性\r\n        const decodeOptions: IDecodeObjOptions = { outErrors: errors, getNodeByRef, getNodeData };\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n            if (node) {\r\n                if (skinBaseUrl != null && (node instanceof Sprite))\r\n                    node._skinBaseUrl = skinBaseUrl;\r\n\r\n                SerializeUtil.decodeObj(nodeData, node, decodeOptions);\r\n\r\n                if (runtime && nodeData._$var && node.name) {\r\n                    try {\r\n                        (<any>topNode)[node.name] = node;\r\n                    }\r\n                    catch (err: any) {\r\n                        errors.push(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //设置组件属性\r\n        cnt = compInitList.length;\r\n        for (let i = 0; i < cnt; i += 2) {\r\n            SerializeUtil.decodeObj(compInitList[i], compInitList[i + 1], decodeOptions);\r\n        }\r\n\r\n        if (inPrefab && prefabNodeDict && topNode) //记录下nodeMap，上层创建prefab时使用\r\n            prefabNodeDict.set(topNode, nodeMap);\r\n\r\n        if (errors == errorList)\r\n            errorList.length = 0;\r\n\r\n        return outNodes;\r\n    }\r\n\r\n    public static collectResourceLinks(data: any, basePath: string) {\r\n        let test: Record<string, string[]> = {};\r\n        let innerUrls: (string | ILoadURL)[] = [];\r\n\r\n        function addInnerUrl(url: string, type: string) {\r\n            if (!url)\r\n                return \"\";\r\n            let entry = test[url];\r\n            if (entry === undefined) {\r\n                let url2: string;\r\n                if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\r\n                    url2 = \"res://\" + url;\r\n                else\r\n                    url2 = URL.join(basePath, url);\r\n                innerUrls.push({ url: url2, type: type });\r\n                test[url] = entry = [url2, type];\r\n            }\r\n            else if (entry.indexOf(type, 1) == -1) {\r\n                entry.push(type);\r\n                innerUrls.push({ url: entry[0], type: type });\r\n            }\r\n            return entry[0];\r\n        }\r\n\r\n        function check(data: any) {\r\n            for (let key in data) {\r\n                let child = data[key];\r\n                if (child == null)\r\n                    continue;\r\n                if (Array.isArray(child)) {\r\n                    for (let item of child) {\r\n                        if (item == null)\r\n                            continue;\r\n\r\n                        if (typeof (item) === \"object\") {\r\n                            if (item._$uuid != null)\r\n                                item._$uuid = addInnerUrl(item._$uuid, SerializeUtil.getLoadTypeByEngineType(item._$type));\r\n                            else if (item._$prefab != null) {\r\n                                item._$prefab = addInnerUrl(item._$prefab, Loader.HIERARCHY);\r\n                                check(item);\r\n                            }\r\n                            else\r\n                                check(item);\r\n                        }\r\n                    }\r\n                }\r\n                else if (typeof (child) === \"object\") {\r\n                    if (child._$uuid != null)\r\n                        child._$uuid = addInnerUrl(child._$uuid, SerializeUtil.getLoadTypeByEngineType(child._$type));\r\n                    else if (child._$prefab != null) {\r\n                        child._$prefab = addInnerUrl(child._$prefab, Loader.HIERARCHY);\r\n                        check(child);\r\n                    }\r\n                    else\r\n                        check(child);\r\n                }\r\n            }\r\n        }\r\n\r\n        check(data);\r\n\r\n        if (data._$preloads) {\r\n            for (let url of data._$preloads)\r\n                innerUrls.push(url);\r\n        }\r\n\r\n        return innerUrls;\r\n    }\r\n}","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { IHierarchyParserAPI, PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { HierarchyParser } from \"./HierarchyParser\";\r\nimport { LegacyUIParser } from \"./LegacyUIParser\";\r\n\r\nexport class HierarchyLoader implements IResourceLoader {\r\n    static v3: IHierarchyParserAPI = HierarchyParser;\r\n    static v2: IHierarchyParserAPI = null;\r\n    static legacySceneOrPrefab: IHierarchyParserAPI = LegacyUIParser;\r\n\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        let isModel = task.ext == \"gltf\" || task.ext == \"fbx\" || task.ext == \"glb\";\r\n        if (isModel)\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"lh\");\r\n        return task.loader.fetch(url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            if (data._$ver != null)\r\n                return this._load(HierarchyLoader.v3, task, data, 3);\r\n            else if (task.ext == \"ls\" || task.ext == \"lh\")\r\n                return this._load(HierarchyLoader.v2, task, data, 2);\r\n            else if (task.ext == \"scene\" || task.ext == \"prefab\")\r\n                return this._load(HierarchyLoader.legacySceneOrPrefab, task, data, 2);\r\n            else\r\n                return null;\r\n        });\r\n    }\r\n\r\n    //@internal\r\n    private _load(api: IHierarchyParserAPI, task: ILoadTask, data: any, version: number): Promise<Prefab> {\r\n        let basePath = URL.getPath(task.url);\r\n        let links = api.collectResourceLinks(data, basePath);\r\n        return task.loader.load(links, null, task.progress.createCallback()).then((resArray: any[]) => {\r\n            let res = new PrefabImpl(api, data, version);\r\n            res.addDeps(resArray);\r\n            return res;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lh\", \"ls\", \"scene\", \"prefab\"], HierarchyLoader, Loader.HIERARCHY);","/**\r\n * https://en.wikipedia.org/wiki/Radiance_(software)#HDR_image_format\r\n * \r\n * 文件第一行为 \"#?RADIANCE\"\r\n * \r\n * 以 \"#\" 开始为 注释行\r\n * \r\n * 后面有 key=value 形式声明信息\r\n * 包括 \"FORMAT=32-bit_rle_rgbe\" 格式声明\r\n * \r\n * 空行代表 header 结束， \r\n * \r\n * header 信息下一行 描述 图像分辨率和像素数据\r\n * 由 Radiance tools 生成, 一般为 \"-Y height +X width\"\r\n * \r\n * 之后为 图像 二进制像素数据\r\n *  \r\n */\r\n\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\n\r\n/**\r\n * https://floyd.lbl.gov/radiance/framer.html\r\n */\r\nexport class HDRTextureInfo {\r\n\r\n    static HDRTEXTURE: string = \"HDRTEXTURE\";\r\n\r\n    static _parseHDRTexture(data: ArrayBuffer, propertyParams: any = null, constructParams: any[] = null) {\r\n\r\n        let hdrInfo = HDRTextureInfo.getHDRInfo(data);\r\n\r\n        let texture = new Texture2D(hdrInfo.width, hdrInfo.height, hdrInfo.format, false, false, false);\r\n\r\n        texture.setHDRData(hdrInfo);\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param source \r\n     */\r\n    static getHDRInfo(source: ArrayBuffer) {\r\n\r\n        let data = new Uint8Array(source);\r\n        let readByteOffset = 0;\r\n\r\n        const readLine = () => {\r\n            let lineStr = HDRTextureInfo.getLineString(data, readByteOffset);\r\n            // string 带着 '\\n' 就不用 +1\r\n            readByteOffset += lineStr.length + 1;\r\n            return lineStr;\r\n        }\r\n\r\n        // header\r\n        let identifier = readLine();\r\n        // todo  非 Radiance tools 生成文件 identifier 是否还是 RADIANCE\r\n        if (identifier != \"#?RADIANCE\") {\r\n            throw \"HDR image: identifier wrong.\";\r\n        }\r\n\r\n        let commandsMap = new Map();\r\n\r\n        let line = \"\";\r\n        do {\r\n            line = readLine();\r\n            if (line[0] != \"#\") {\r\n                let commands = line.split(\"=\");\r\n                commandsMap.set(commands[0], commands[1]);\r\n            }\r\n\r\n        } while (line != \"\");\r\n        // header end\r\n\r\n        /**\r\n         * FORMAT\r\n         * EXPOSURE\r\n         * COLORCORR\r\n         * SOFTWARE\r\n         * PIXASPECT\r\n         * VIEW\r\n         * PRIMARIES\r\n         */\r\n        let hdrFormat = commandsMap.get(\"FORMAT\");\r\n        /**\r\n         * 32-bit_rle_rgbe\r\n         * 32-bit_rle_xyze\r\n         */\r\n        if (hdrFormat != \"32-bit_rle_rgbe\") {\r\n            throw \"HDR image: unsupported format.\";\r\n        }\r\n\r\n        let resolutionStr = readLine();\r\n        let resolutions = resolutionStr.split(\" \");\r\n\r\n        let decreaseY = resolutions[0] == \"-Y\";\r\n        let decreaseX = resolutions[2] == \"-X\";\r\n\r\n        let height = parseInt(resolutions[1]);\r\n        let width = parseInt(resolutions[3]);\r\n\r\n        // format 固定?\r\n        let hdrInfo = new HDRTextureInfo(source, readByteOffset, decreaseX, decreaseY, width, height, TextureFormat.R32G32B32A32);\r\n\r\n        /**\r\n         * Scanline Records\r\n         * 1. Uncompressed 每像素 4 字节\r\n         * 2. Old run-length encoded\r\n         * 3. New run-length encoded *✓\r\n         */\r\n\r\n\r\n        return hdrInfo;\r\n    }\r\n\r\n    private static getLineString(data: Uint8Array, readByteOffset: number) {\r\n\r\n        let dataLength = data.length;\r\n\r\n        let index = readByteOffset;\r\n\r\n        let res = \"\";\r\n        let char = \"\";\r\n        // do {\r\n        //     char = String.fromCharCode(data[index]);\r\n        //     res = `${res}${char}`;\r\n        //     index++;\r\n        // } while (index < dataLength && char != \"\\n\");\r\n\r\n        while (index < dataLength && char != \"\\n\") {\r\n            res = `${res}${char}`;\r\n            char = String.fromCharCode(data[index]);\r\n            index++;\r\n        }\r\n\r\n        return res;\r\n\r\n    }\r\n\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public byteOffset: number, public decreaseX: boolean, public decreaseY: boolean, public width: number, public height: number, public format: TextureFormat) {\r\n\r\n    }\r\n\r\n    get_32_bit_rle_rgbe(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataIndex = 0;\r\n\r\n        let rgbeBuffer = new ArrayBuffer(width * 4);\r\n        let rgbeArray = new Uint8Array(rgbeBuffer);\r\n\r\n        let pixelBuffer = new ArrayBuffer(width * height * 4 * 3);\r\n        let pixelArray = new Float32Array(pixelBuffer);\r\n\r\n        // todo decreaseX and decreaseY\r\n        for (let y = height; y > 0; y--) {\r\n\r\n            // begin unnormalized pixel\r\n            let a2 = data[dataIndex++]; // equal to 2\r\n            let b2 = data[dataIndex++]; // equal to 2\r\n            let c = data[dataIndex++]; // upper byte\r\n            let d = data[dataIndex++]; // lower byte\r\n\r\n            let scanlineLength = (c << 8) | d;\r\n\r\n            if (scanlineLength != width) {\r\n                throw \"HDR info: scanlineLength wrong.\";\r\n            }\r\n\r\n            let index = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let endIndex = (i + 1) * scanlineLength;\r\n\r\n                while (index < endIndex) {\r\n                    let a = data[dataIndex++];\r\n                    let b = data[dataIndex++];\r\n                    if (a > 128) {\r\n                        let count = a - 128;\r\n                        if (count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        while (count-- > 0) {\r\n                            rgbeArray[index++] = b;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let count = a;\r\n                        if (count == 0 || count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        rgbeArray[index++] = b;\r\n                        if (--count > 0) {\r\n                            for (let j = 0; j < count; j++) {\r\n                                rgbeArray[index++] = data[dataIndex++];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < scanlineLength; i++) {\r\n                let r = rgbeArray[i];\r\n                let g = rgbeArray[i + scanlineLength];\r\n                let b = rgbeArray[i + 2 * scanlineLength];\r\n                let e = rgbeArray[i + 3 * scanlineLength];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129).\r\n                //  */\r\n                // r = 128;\r\n                // g = 64;\r\n                // b = 32;\r\n                // e = 129;\r\n\r\n                let index = (height - y) * scanlineLength * 3 + i * 3;\r\n\r\n                const Ldexp = (mantissa: number, exponent: number) => {\r\n                    if (exponent > 1023) {\r\n                        return mantissa * Math.pow(2, 1023) * Math.pow(2, exponent - 1023);\r\n                    }\r\n\r\n                    if (exponent < -1074) {\r\n                        return mantissa * Math.pow(2, -1074) * Math.pow(2, exponent + 1074);\r\n                    }\r\n\r\n                    return mantissa * Math.pow(2, exponent);\r\n                }\r\n\r\n                if (e > 0) {\r\n                    let exponent = Ldexp(1.0, e - (128 + 8));\r\n                    pixelArray[index] = r * exponent;\r\n                    pixelArray[index + 1] = g * exponent;\r\n                    pixelArray[index + 2] = b * exponent;\r\n                }\r\n                else {\r\n                    pixelArray[index] = 0;\r\n                    pixelArray[index + 1] = 0;\r\n                    pixelArray[index + 2] = 0;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return pixelArray;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://www.radiance-online.org/archived/radsite/radiance/refer/Notes/picture_format.html\r\n     */\r\n    readScanLine(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let n = 3;\r\n        if (this.format == TextureFormat.R32G32B32A32) {\r\n            n = 4;\r\n        }\r\n\r\n        let pixelArray = new Float32Array(width * height * n);\r\n\r\n        let scanlineArray = new Uint8Array(width * 4);\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataLength = data.length;\r\n        let dataIndex = 0;\r\n\r\n        const getc = () => {\r\n            // todo  check\r\n            if (dataIndex >= dataLength) {\r\n                throw \"HDR info: data wrong.\";\r\n            }\r\n\r\n            return data[dataIndex++];\r\n        };\r\n\r\n        const wrong = () => {\r\n            throw \"HDR info: data wrong.\";\r\n        }\r\n\r\n        for (let y = (height - 1); y >= 0; y--) {\r\n\r\n            this.readcolors(scanlineArray, getc, wrong);\r\n\r\n            for (let i = 0; i < width; i++) {\r\n\r\n                // color_color func\r\n                let index = 4 * i;\r\n                let byter = scanlineArray[index];\r\n                let byteg = scanlineArray[index + 1];\r\n                let byteb = scanlineArray[index + 2];\r\n                let bytee = scanlineArray[index + 3];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129)\r\n                //  */\r\n                // byter = 128;\r\n                // byteg = 64;\r\n                // byteb = 32;\r\n                // bytee = 129;\r\n\r\n                let offsetY = y;\r\n                let offsetX = i;\r\n                if (decreaseY) {\r\n                    offsetY = height - 1 - y;\r\n                }\r\n                if (decreaseX) {\r\n                    offsetX = width - 1 - i;\r\n                }\r\n\r\n                let pixelIndex = offsetY * width * n + offsetX * n;\r\n\r\n                if (bytee == 0) {\r\n                    pixelArray[pixelIndex] = 0;\r\n                    pixelArray[pixelIndex + 1] = 0;\r\n                    pixelArray[pixelIndex + 2] = 0;\r\n                    if (n == 4) {\r\n                        pixelArray[pixelIndex + 3] = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    let f = ldexp(1.0, bytee - (128 + 8));\r\n                    pixelArray[pixelIndex] = (byter + 0.5) * f;\r\n                    pixelArray[pixelIndex + 1] = (byteg + 0.5) * f;\r\n                    pixelArray[pixelIndex + 2] = (byteb + 0.5) * f;\r\n                    if (n == 4) {\r\n                        pixelArray[pixelIndex + 3] = 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return pixelArray;\r\n    }\r\n\r\n    readcolors(scanlineArray: Uint8Array, getc: () => number, wrong: () => void) {\r\n\r\n        const setScanLineData = (w: number, channel: number, value: number) => {\r\n            scanlineArray[w * 4 + channel] = value;\r\n        }\r\n\r\n        let width = this.width;\r\n\r\n        // 第一个数据\r\n        let unnormalizedr = getc();\r\n        let unnormalizedg = getc();\r\n        let unnormalizedb = getc();\r\n        let unnormalizede = getc();\r\n\r\n        if (width < 8 || width > 32767) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if (unnormalizedr != 2 || unnormalizedg != 2 || unnormalizedb & 128) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if ((unnormalizedb << 8 | unnormalizede) != width) {\r\n            wrong()\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < width;) {\r\n                let code = getc();\r\n                if (code > 128) {\r\n                    code &= 127;\r\n                    let val = getc();\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n                else {\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        let val = getc();\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    olddreadcolors(scanlineArray: Uint8Array, getc: () => number, r: number, g: number, b: number, e: number) {\r\n\r\n        let rshift = 0;\r\n\r\n        let len = this.width;\r\n\r\n        scanlineArray[0] = r;\r\n        scanlineArray[1] = g;\r\n        scanlineArray[2] = b;\r\n        scanlineArray[3] = e;\r\n\r\n        for (let w = 1; w < len; w++) {\r\n            let unnormalizedr = getc();\r\n            let unnormalizedg = getc();\r\n            let unnormalizedb = getc();\r\n            let unnormalizede = getc();\r\n\r\n            let scanIndex = w * 4;\r\n            scanlineArray[scanIndex] = unnormalizedr;\r\n            scanlineArray[scanIndex + 1] = unnormalizedg;\r\n            scanlineArray[scanIndex + 2] = unnormalizedb;\r\n            scanlineArray[scanIndex + 3] = unnormalizede;\r\n\r\n            if (unnormalizedr == 1 && unnormalizedg == 1 && unnormalizedb == 1) {\r\n                let lastIndex = scanIndex - 4;\r\n                for (let i = unnormalizede << rshift; i > 0; i--) {\r\n                    scanlineArray[scanIndex] = scanlineArray[lastIndex];\r\n                    scanlineArray[scanIndex + 1] = scanlineArray[lastIndex + 1];\r\n                    scanlineArray[scanIndex + 2] = scanlineArray[lastIndex + 2];\r\n                    scanlineArray[scanIndex + 3] = scanlineArray[lastIndex + 3];\r\n                    // len--;\r\n                }\r\n                rshift += 8;\r\n            }\r\n            else {\r\n                // len--;\r\n                rshift = 0;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    color_color(col: Vector4, clr: Vector4) {\r\n        let f = 0;\r\n        if (clr.w == 0) {\r\n            col.x = col.y = col.z = 0;\r\n        }\r\n        else {\r\n            f = ldexp(1.0, clr.w - (128 + 8));\r\n            // todo   + 0.5 值会变\r\n            col.x = (clr.x) * f;\r\n            col.y = (clr.y) * f;\r\n            col.z = (clr.z) * f;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction ldexp(value: number, exponent: number): number {\r\n    return value * Math.pow(2, exponent);\r\n}","import { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { IResourceLoader, ILoadTask, Loader, ILoadURL } from \"../net/Loader\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { RenderTexture } from \"../resource/RenderTexture\";\r\nimport { VideoTexture } from \"../media/VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nvar internalResources: Record<string, Texture2D>;\r\n\r\nclass Texture2DLoader implements IResourceLoader {\r\n    constructor() {\r\n        if (!internalResources) {\r\n            internalResources = {\r\n                \"WhiteTexture.png\": Texture2D.whiteTexture,\r\n                \"BlackTexture.png\": Texture2D.blackTexture,\r\n                \"GrayTexture.png\": Texture2D.grayTexture,\r\n                \"NormalTexture.png\": Texture2D.normalTexture,\r\n            };\r\n        }\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        if (task.url.indexOf(\"internal/\") != -1) {\r\n            let tex = internalResources[Utils.getBaseName(task.url)];\r\n            if (tex)\r\n                return Promise.resolve(tex);\r\n        }\r\n\r\n        let meta: any;\r\n        if (!task.url.startsWith(\"data:\")) {\r\n            meta = AssetDb.inst.metaMap[task.url];\r\n            if (!meta && LayaEnv.isPreview) {\r\n                return AssetDb.inst.getMeta(task.url, task.uuid).then(meta => {\r\n                    return this.load2(task, meta);\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.load2(task, meta);\r\n    }\r\n\r\n    protected load2(task: ILoadTask, meta: any) {\r\n        let constructParams: TextureConstructParams;\r\n        let propertyParams: TexturePropertyParams;\r\n        let ext = task.ext;\r\n        let url = task.url;\r\n        if (meta) {\r\n            let platform = Browser.platform;\r\n            let fileIndex = meta.platforms?.[platform] || 0;\r\n            let fileInfo = meta.files[fileIndex];\r\n            if (fileInfo.file) {\r\n                url = AssetDb.inst.getSubAssetURL(url, task.uuid, fileInfo.file, fileInfo.ext);\r\n                ext = fileInfo.ext;\r\n            }\r\n\r\n            constructParams = [0, 0, fileInfo.format ?? 1, meta.mipmap, meta.readWrite, meta.sRGB];\r\n            propertyParams = {\r\n                wrapModeU: meta.wrapMode,\r\n                wrapModeV: meta.wrapMode,\r\n                filterMode: meta.filterMode,\r\n                anisoLevel: meta.anisoLevel,\r\n                premultiplyAlpha: !!meta.pma,\r\n                hdrEncodeFormat: meta.hdrEncodeFormat,\r\n            };\r\n        }\r\n        else {\r\n            constructParams = task.options.constructParams;\r\n            propertyParams = task.options.propertyParams;\r\n        }\r\n\r\n        let compress = compressedFormats.indexOf(ext) != -1 ? ext : null;\r\n        if (compress != null) {\r\n            return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n                if (!data)\r\n                    return null;\r\n\r\n                let tex: BaseTexture;\r\n                switch (compress) {\r\n                    case \"dds\":\r\n                        tex = Texture2D._parseDDS(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"ktx\":\r\n                        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n                        if (ktxInfo.dimension == TextureDimension.Cube) {\r\n                            //这里在core模块，不能直接引用d3里的TextureCube\r\n                            let cls = ClassUtils.getClass(\"TextureCube\");\r\n                            if (cls) {\r\n                                let tc = new cls(ktxInfo.width, ktxInfo.format, ktxInfo.mipmapCount > 1, ktxInfo.sRGB);\r\n                                tc.setKTXData(ktxInfo);\r\n                                tex = tc;\r\n                            }\r\n                            else\r\n                                return null;\r\n                        }\r\n                        else if (ktxInfo.dimension == TextureDimension.Tex2D) {\r\n                            tex = Texture2D._parseKTX(data, propertyParams, constructParams);\r\n                        }\r\n                        break;\r\n                    case \"pvr\":\r\n                        tex = Texture2D._parsePVR(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"hdr\":\r\n                        tex = HDRTextureInfo._parseHDRTexture(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"lanit.ls\":\r\n                        tex = Texture2D._SimpleAnimatorTextureParse(data, propertyParams, constructParams);\r\n                        break;\r\n                }\r\n\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n\r\n                if (propertyParams && propertyParams.hdrEncodeFormat)\r\n                    tex.hdrEncodeFormat = propertyParams.hdrEncodeFormat;\r\n\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n\r\n                return tex;\r\n            });\r\n        }\r\n        else {\r\n            let options = task.options;\r\n            let premultiplyAlpha = (propertyParams && propertyParams.premultiplyAlpha) ? \"premultiply\" : \"none\";\r\n            if (options.useWorkerLoader && premultiplyAlpha === \"none\")\r\n                options = Object.assign({ workerLoaderOptions: { premultiplyAlpha } }, options);\r\n\r\n            return task.loader.fetch(url, \"image\", task.progress.createCallback(), options).then(img => {\r\n                if (LayaGL.textureContext.needBitmap) {\r\n                    if (img instanceof ImageBitmap)\r\n                        return img;\r\n                    else\r\n                        return createImageBitmap(img, options.workerLoaderOptions || { premultiplyAlpha });\r\n                } else {\r\n                    return img;\r\n                }\r\n            }).then(bitmapimage => {\r\n                if (!bitmapimage)\r\n                    return null;\r\n                let tex: BaseTexture = Texture2D._parseImage(bitmapimage, propertyParams, constructParams);\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n                return tex;\r\n            });\r\n        }\r\n    }\r\n\r\n    private move(obsoluteInst: BaseTexture, tex: BaseTexture) {\r\n        obsoluteInst._texture = tex._texture;\r\n        obsoluteInst.width = tex.width;\r\n        obsoluteInst.height = tex.height;\r\n        obsoluteInst.obsolute = false;\r\n        delete Resource._idResourcesMap[tex.id];\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nclass RenderTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let rt = <RenderTexture>task.obsoluteInst;\r\n            if (rt)\r\n                rt.recreate(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n            else\r\n                rt = new RenderTexture(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n\r\n            if (null != data.anisoLevel)\r\n                rt.anisoLevel = data.anisoLevel;\r\n            if (null != data.filterMode)\r\n                rt.filterMode = data.filterMode;\r\n            if (null != data.wrapModeU)\r\n                rt.wrapModeU = data.wrapModeU;\r\n            if (null != data.wrapModeV)\r\n                rt.wrapModeV = data.wrapModeV;\r\n\r\n            return rt;\r\n        });\r\n    }\r\n}\r\n\r\n\r\nclass VideoTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let inst = <VideoTexture>task.obsoluteInst || new VideoTexture();\r\n        inst.source = task.url;\r\n        return Promise.resolve(inst);\r\n    }\r\n}\r\n\r\nconst propertyParams2d: TexturePropertyParams = { premultiplyAlpha: true };\r\nconst constructParams2d: TextureConstructParams = [null, null, TextureFormat.R8G8B8A8, false, false, true];\r\n\r\nclass TextureLoader implements IResourceLoader {\r\n    wrapTex2D(task: ILoadTask, tex2D: Texture2D) {\r\n        if (!tex2D)\r\n            return null;\r\n\r\n        let tex = <Texture>task.obsoluteInst;\r\n        if (tex) { //recover\r\n            tex.setTo(tex2D);\r\n            tex.obsolute = false;\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n            tex.event(\"reload\");\r\n            if (tex._clipCache) {\r\n                tex._clipCache.forEach(t => {\r\n                    t.event(\"reload\");\r\n                    t._sizeGrid = tex._sizeGrid;\r\n                    t._stateNum = tex._stateNum;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            tex = new Texture(tex2D);\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n        }\r\n\r\n        return tex;\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        let tex2D = <Texture2D>task.loader.getRes(task.url, Loader.TEXTURE2D);\r\n        if (!tex2D || tex2D.obsolute) {\r\n            let url: ILoadURL = { url: task.url, type: Loader.TEXTURE2D };\r\n\r\n            if (!task.options.propertyParams)\r\n                url.propertyParams = propertyParams2d;\r\n            else if (task.options.propertyParams.premultiplyAlpha == null)\r\n                url.propertyParams = Object.assign({}, propertyParams2d, task.options.propertyParams);\r\n\r\n            if (!task.options.constructParams)\r\n                url.constructParams = constructParams2d;\r\n            else if (task.options.constructParams[5] == null)\r\n                url.constructParams = Object.assign([], constructParams2d, task.options.constructParams);\r\n            return task.loader.load(url, task.options, task.progress.createCallback()).then(tex2D => {\r\n                return this.wrapTex2D(task, tex2D);\r\n            });\r\n        }\r\n        else\r\n            return Promise.resolve(this.wrapTex2D(task, tex2D));\r\n    }\r\n}\r\n\r\nconst compressedFormats = [\"ktx\", \"pvr\", \"dds\", \"hdr\", \"lanit.ls\"];\r\nconst videoFormats = [\"mp4\", \"webm\"];\r\n\r\nLoader.registerLoader([\"tga\", \"tif\", \"tiff\", \"png\", \"jpg\", \"jpeg\", \"rendertexture\", ...videoFormats, ...compressedFormats], TextureLoader, Loader.IMAGE);\r\nLoader.registerLoader([], Texture2DLoader, Loader.TEXTURE2D);\r\nLoader.registerLoader([\"rendertexture\"], RenderTextureLoader, Loader.TEXTURE2D);\r\nLoader.registerLoader(videoFormats, VideoTextureLoader, Loader.TEXTURE2D);","import { AnimationClip2D } from \"../components/AnimationClip2D\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\n\r\nclass AnimationClip2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return AnimationClip2D._parse(data);\r\n        });\r\n    }\r\n}\r\nLoader.registerLoader([\"mc\"], AnimationClip2DLoader);","import { AnimatorController2D } from \"../components/AnimatorController2D\";\r\nimport { TypeAnimatorState } from \"../components/AnimatorControllerParse\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\n\r\nclass AnimationController2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            let ret = new AnimatorController2D(data);\r\n            if (ret.data && ret.data.controllerLayers) {\r\n                let layers = ret.data.controllerLayers;\r\n                let promises: Array<any> = [];\r\n                for (let i = layers.length - 1; i >= 0; i--) {\r\n                    let states = layers[i].states;\r\n                    this.loadStates(states, promises, task);\r\n\r\n                }\r\n                return Promise.all(promises).then(() => ret);\r\n            }\r\n            else\r\n                return ret;\r\n        });\r\n    }\r\n\r\n\r\n    loadStates(states: TypeAnimatorState[], promises: Array<any>, task: ILoadTask) {\r\n        let basePath = URL.getPath(task.url);\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            if (states[j].clip && states[j].clip._$uuid) {\r\n                let url = URL.getResURLByUUID(states[j].clip._$uuid);\r\n                if (!url.startsWith(\"res://\"))\r\n                    url = URL.join(basePath, url);\r\n                promises.push(task.loader.load(url).then(res => {\r\n                    states[j].clip = res;\r\n                }));\r\n\r\n                // promises.push(task.loader.load(\"res://\" + states[j].clip._$uuid).then(res => {\r\n                //     states[j].clip = res;\r\n                // }));\r\n            }\r\n\r\n            if (states[j].states) {\r\n                this.loadStates(states[j].states, promises, task);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mcc\"], AnimationController2DLoader);","import { ILoadTask, IResourceLoader, Loader } from \"../net/Loader\";\r\n\r\nexport class NullLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return Promise.resolve(null);\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lighting\"], NullLoader);","import { BitmapFont } from \"../display/BitmapFont\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass BitmapFontLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let picUrl = Utils.replaceFileExtension(task.url, \"png\");\r\n        return Promise.all([\r\n            task.loader.fetch(task.url, \"xml\", task.progress.createCallback(0.2), task.options),\r\n            task.loader.load(picUrl, task.options, task.progress.createCallback(0.8))\r\n        ]).then(([xml, tex]) => {\r\n            if (!xml || !tex)\r\n                return null;\r\n\r\n            let font = new BitmapFont();\r\n            font.parseFont(xml, tex);\r\n\r\n            return font;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"fnt\"], BitmapFontLoader, Loader.FONT);","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nconst testString = \"LayaTTFFont\";\r\n\r\nclass TTFFontLoader implements IResourceLoader {\r\n\r\n    load(task: ILoadTask) {\r\n        let fontName = Utils.replaceFileExtension(Utils.getBaseName(task.url), \"\");\r\n        if (LayaEnv.isConch) {\r\n            return task.loader.fetch(task.url, \"arraybuffer\").then(data => {\r\n                if (data)\r\n                    (window as any)[\"conch\"].registerFont(fontName, data);\r\n                return { family: fontName };\r\n            });\r\n        }\r\n        else if ((window as any).FontFace) {\r\n            let fontFace: any = new (window as any).FontFace(fontName, \"url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"')\");\r\n            (document as any).fonts.add(fontFace);\r\n            return fontFace.load().then(() => {\r\n                return fontFace;\r\n            });\r\n        }\r\n        else {\r\n            let fontTxt = \"40px \" + fontName;\r\n            let txtWidth = Browser.measureText(testString, fontTxt).width;\r\n\r\n            let fontStyle: any = Browser.createElement(\"style\");\r\n            fontStyle.type = \"text/css\";\r\n            document.body.appendChild(fontStyle);\r\n            fontStyle.textContent = \"@font-face { font-family:'\" + fontName + \"'; src:url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"');}\";\r\n\r\n            return new Promise((resolve) => {\r\n                let checkComplete = () => {\r\n                    if (Browser.measureText(testString, fontTxt).width != txtWidth)\r\n                        complete();\r\n                };\r\n                let complete = () => {\r\n                    ILaya.systemTimer.clear(this, checkComplete);\r\n                    ILaya.systemTimer.clear(this, complete);\r\n\r\n                    resolve({ family: fontName });\r\n                };\r\n\r\n                ILaya.systemTimer.once(10000, this, complete);\r\n                ILaya.systemTimer.loop(20, this, checkComplete);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"ttf\", \"woff\", \"woff2\", \"otf\"], TTFFontLoader, Loader.TTF);","export enum CompareFunction {\r\n    /** never pass. */\r\n    Never,\r\n    /** pass if the incoming value is less than the depth/stencil buffer value. */\r\n    Less,\r\n    /** pass if the incoming value equals the depth/stencil buffer value. */\r\n    Equal,\r\n    /** pass if the incoming value is less than or equal to the depth/stencil buffer value. */\r\n    LessEqual,\r\n    /** pass if the incoming value is greater than the depth/stencil buffer value. */\r\n    Greater,\r\n    /** pass if the incoming value is not equal to the depth/stencil buffer value. */\r\n    NotEqual,\r\n    /** pass if the incoming value is greater than or equal to the depth/stencil buffer value. */\r\n    GreaterEqual,\r\n    /** always pass. */\r\n    Always,\r\n    /** off */\r\n    Off,\r\n}\r\n","export enum BlendType{\r\n    /**混合枚举_禁用。*/\r\n\tBLEND_DISABLE = 0,\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tBLEND_ENABLE_ALL = 1,\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tBLEND_ENABLE_SEPERATE = 2\r\n}","export enum StencilOperation {\r\n    /** Keeps the current value. */\r\n    Keep,\r\n    /** Sets the stencil buffer value to 0. */\r\n    Zero,\r\n    /** Sets the stencil buffer value to the reference value. */\r\n    Replace,\r\n    /** Increments the current stencil buffer value. Clamps to the maximum representable unsigned value. */\r\n    IncrementSaturate,\r\n    /** Decrements the current stencil buffer value. Clamps to 0. */\r\n    DecrementSaturate,\r\n    /** Inverts the current stencil buffer value bitwise. */\r\n    Invert,\r\n    /** Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value. */\r\n    IncrementWrap,\r\n    /** Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of 0. */\r\n    DecrementWrap\r\n  }\r\n  ","import { Config } from \"../../Config\";\r\nimport { Config3D } from \"../../Config3D\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { DefineDatas } from \"../RenderEngine/RenderShader/DefineDatas\";\r\nimport { RenderState } from \"../RenderEngine/RenderShader/RenderState\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderData, ShaderDataType, ShaderDataItem, ShaderDataDefaultValue } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { UniformBufferObject } from \"../RenderEngine/UniformBufferObject\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n\r\nexport enum MaterialRenderMode {\r\n    /**渲染状态_不透明。*/\r\n    RENDERMODE_OPAQUE,\r\n    /**渲染状态_阿尔法测试。*/\r\n    RENDERMODE_CUTOUT,\r\n    /**渲染状态__透明。*/\r\n    RENDERMODE_TRANSPARENT,\r\n    /**渲染状态__加色法混合。*/\r\n    RENDERMODE_ADDTIVE,\r\n    /**渲染状态_透明混合。*/\r\n    RENDERMODE_ALPHABLENDED,\r\n    /**渲染状态_自定义 */\r\n    RENDERMODE_CUSTOME\r\n}\r\n\r\n/**\r\n * <code>Material</code> 类用于创建材质。\r\n */\r\nexport class Material extends Resource implements IClone {\r\n    /** 渲染队列_不透明。*/\r\n    static RENDERQUEUE_OPAQUE: number = 2000;\r\n    /** 渲染队列_阿尔法裁剪。*/\r\n    static RENDERQUEUE_ALPHATEST: number = 2450;\r\n    /** 渲染队列_透明。*/\r\n    static RENDERQUEUE_TRANSPARENT: number = 3000;\r\n\r\n    /**着色器变量,透明测试值。*/\r\n    static ALPHATESTVALUE: number;\r\n\r\n    /**材质级着色器宏定义,透明测试。*/\r\n    static SHADERDEFINE_ALPHATEST: ShaderDefine;\r\n    static SHADERDEFINE_MAINTEXTURE: ShaderDefine;\r\n    static SHADERDEFINE_ADDTIVEFOG: ShaderDefine;\r\n    /**\r\n     * 加载材质。\r\n     * @param url 材质地址。\r\n     * @param complete 完成回掉。\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, Loader.MATERIAL);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __initDefine__(): void {\r\n        Material.SHADERDEFINE_ALPHATEST = Shader3D.getDefineByName(\"ALPHATEST\");\r\n        Material.SHADERDEFINE_MAINTEXTURE = Shader3D.getDefineByName(\"MAINTEXTURE\");\r\n        Material.SHADERDEFINE_ADDTIVEFOG = Shader3D.getDefineByName(\"ADDTIVEFOG\");\r\n        Material.ALPHATESTVALUE = Shader3D.propertyNameToID(\"u_AlphaTestValue\");\r\n        Shader3D.CULL = Shader3D.propertyNameToID(\"s_Cull\");\r\n        Shader3D.BLEND = Shader3D.propertyNameToID(\"s_Blend\");\r\n        Shader3D.BLEND_SRC = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n        Shader3D.BLEND_DST = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n        Shader3D.BLEND_SRC_RGB = Shader3D.propertyNameToID(\"s_BlendSrcRGB\");\r\n        Shader3D.BLEND_DST_RGB = Shader3D.propertyNameToID(\"s_BlendDstRGB\");\r\n        Shader3D.BLEND_SRC_ALPHA = Shader3D.propertyNameToID(\"s_BlendSrcAlpha\");\r\n        Shader3D.BLEND_DST_ALPHA = Shader3D.propertyNameToID(\"s_BlendDstAlpha\");\r\n        Shader3D.BLEND_EQUATION = Shader3D.propertyNameToID(\"s_BlendEquation\");\r\n        Shader3D.BLEND_EQUATION_RGB = Shader3D.propertyNameToID(\"s_BlendEquationRGB\");\r\n        Shader3D.BLEND_EQUATION_ALPHA = Shader3D.propertyNameToID(\"s_BlendEquationAlpha\");\r\n        Shader3D.DEPTH_TEST = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n        Shader3D.DEPTH_WRITE = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n        Shader3D.STENCIL_Ref = Shader3D.propertyNameToID(\"s_StencilRef\");\r\n        Shader3D.STENCIL_TEST = Shader3D.propertyNameToID(\"s_StencilTest\");\r\n        Shader3D.STENCIL_WRITE = Shader3D.propertyNameToID(\"s_StencilWrite\");\r\n        Shader3D.STENCIL_Op = Shader3D.propertyNameToID(\"s_StencilOp\");\r\n    }\r\n\r\n    /**@internal */\r\n    private _matRenderNode: MaterialRenderMode;\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @private */\r\n    _shaderValues: ShaderData | null;//TODO:剥离贴图ShaderValue\r\n    /** 所属渲染队列. */\r\n    renderQueue: number;\r\n\r\n    /**\r\n     * 着色器数据。\r\n     */\r\n    get shaderData(): ShaderData {\r\n        return this._shaderValues;\r\n    }\r\n\r\n    /**\r\n     * 透明测试模式裁剪值。\r\n     */\r\n    get alphaTestValue(): number {\r\n        return this._shaderValues.getNumber(Material.ALPHATESTVALUE);\r\n    }\r\n\r\n    set alphaTestValue(value: number) {\r\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, value);\r\n    }\r\n\r\n    /**\r\n     * 是否透明裁剪。\r\n     */\r\n    get alphaTest(): boolean {\r\n        return this.shaderData.hasDefine(Material.SHADERDEFINE_ALPHATEST);\r\n    }\r\n\r\n    set alphaTest(value: boolean) {\r\n        if (value)\r\n            this._shaderValues.addDefine(Material.SHADERDEFINE_ALPHATEST);\r\n        else\r\n            this._shaderValues.removeDefine(Material.SHADERDEFINE_ALPHATEST);\r\n    }\r\n\r\n    /**\r\n     * 增加Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    addDefine(define: ShaderDefine): void {\r\n        this._shaderValues.addDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 移除Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    removeDefine(define: ShaderDefine): void {\r\n        this._shaderValues.removeDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 开启 或 关闭 shader 宏定义\r\n     * @param define \r\n     * @param value true: addDefine, false: removeDefine\r\n     */\r\n    setDefine(define: ShaderDefine, value: boolean) {\r\n        if (value) {\r\n            this._shaderValues.addDefine(define);\r\n        }\r\n        else {\r\n            this._shaderValues.removeDefine(define);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否包含Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    hasDefine(define: ShaderDefine): boolean {\r\n        return this._shaderValues.hasDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 是否写入深度。\r\n     */\r\n    get depthWrite(): boolean {\r\n        return this._shaderValues.getBool(Shader3D.DEPTH_WRITE);\r\n    }\r\n\r\n    set depthWrite(value: boolean) {\r\n        this._shaderValues.setBool(Shader3D.DEPTH_WRITE, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * 剔除方式。\r\n     */\r\n    get cull(): number {\r\n        return this._shaderValues.getInt(Shader3D.CULL);\r\n    }\r\n\r\n    set cull(value: number) {\r\n        this._shaderValues.setInt(Shader3D.CULL, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式。\r\n     */\r\n    get blend(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND);\r\n    }\r\n\r\n    set blend(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * 混合源。\r\n     */\r\n    get blendSrc(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC);\r\n    }\r\n\r\n    set blendSrc(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC, value);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 混合目标。\r\n     */\r\n    get blendDst(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST);\r\n    }\r\n\r\n    set blendDst(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST, value);\r\n    }\r\n\r\n    /**\r\n     * 混合目标 alpha\r\n     */\r\n    public get blendSrcAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_ALPHA);\r\n    }\r\n    public set blendSrcAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 混合原 RGB\r\n     */\r\n    public get blendSrcRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_RGB);\r\n    }\r\n    /**\r\n     * 混合原 RGB\r\n     */\r\n    public set blendSrcRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_RGB, value);\r\n    }\r\n\r\n    public get blendDstRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_RGB);\r\n    }\r\n    public set blendDstRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * 混合目标 alpha\r\n     */\r\n    public get blendDstAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_ALPHA);\r\n    }\r\n    public set blendDstAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方程\r\n     */\r\n    public get blendEquation(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION);\r\n    }\r\n    public set blendEquation(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式 RGB\r\n     */\r\n    public get blendEquationRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_RGB);\r\n    }\r\n    public set blendEquationRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式 Alpha\r\n     */\r\n    public get blendEquationAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_ALPHA);\r\n    }\r\n    public set blendEquationAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 深度测试方式。\r\n     */\r\n    get depthTest(): number {\r\n        return this._shaderValues.getInt(Shader3D.DEPTH_TEST);\r\n    }\r\n\r\n    set depthTest(value: number) {\r\n        this._shaderValues.setInt(Shader3D.DEPTH_TEST, value);\r\n    }\r\n\r\n    /**\r\n     * 模板测试方式\r\n     */\r\n    get stencilTest(): number {\r\n        return this._shaderValues.getInt(Shader3D.STENCIL_TEST);\r\n    }\r\n\r\n    set stencilTest(value: number) {\r\n        this._shaderValues.setInt(Shader3D.STENCIL_TEST, value);\r\n    }\r\n\r\n    /**\r\n     * 是否写入模板。\r\n     */\r\n    get stencilWrite(): boolean {\r\n        return this._shaderValues.getBool(Shader3D.STENCIL_WRITE);\r\n    }\r\n\r\n    set stencilWrite(value: boolean) {\r\n        this._shaderValues.setBool(Shader3D.STENCIL_WRITE, value);\r\n    }\r\n\r\n    /**\r\n     * 写入模板值\r\n     */\r\n    set stencilRef(value: number) {\r\n        this._shaderValues.setInt(Shader3D.STENCIL_Ref, value);\r\n    }\r\n\r\n    get stencilRef(): number {\r\n        return this._shaderValues.getInt(Shader3D.STENCIL_Ref);\r\n    }\r\n\r\n    /** */\r\n    /**\r\n     * 写入模板测试设置\r\n     * vector(fail, zfail, zpass)\r\n     */\r\n    set stencilOp(value: Vector3) {\r\n        this._shaderValues.setVector3(Shader3D.STENCIL_Op, value);\r\n    }\r\n\r\n    get stencilOp(): Vector3 {\r\n        return this._shaderValues.getVector3(Shader3D.STENCIL_Op);\r\n    }\r\n\r\n    /**\r\n     * 获得材质属性\r\n     */\r\n    get MaterialProperty(): any {\r\n        let propertyMap: any = {};\r\n        var shaderValues = this._shaderValues.getData();\r\n        for (let key in shaderValues) {\r\n            propertyMap[LayaGL.renderEngine.propertyIDToName(parseInt(key))] = shaderValues[key];\r\n        }\r\n        return propertyMap;\r\n    }\r\n\r\n    /**\r\n     * 获得材质宏\r\n     */\r\n    get MaterialDefine(): Array<string> {\r\n        let shaderDefineArray = new Array<string>();\r\n        let defineData = this._shaderValues._defineDatas;\r\n        Shader3D._getNamesByDefineData(defineData, shaderDefineArray);\r\n        return shaderDefineArray;\r\n    }\r\n\r\n    /**\r\n     * 渲染模式。\r\n     */\r\n    set materialRenderMode(value: MaterialRenderMode) {\r\n        this._matRenderNode = value;\r\n        switch (value) {\r\n            case MaterialRenderMode.RENDERMODE_OPAQUE:\r\n                this.alphaTest = false;\r\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n                this.depthWrite = true;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_DISABLE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_CUTOUT:\r\n                this.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n                this.alphaTest = true;\r\n                this.depthWrite = true;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_DISABLE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_TRANSPARENT:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_ADDTIVE:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_NONE;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                this._shaderValues.addDefine(Material.SHADERDEFINE_ADDTIVEFOG);\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_ALPHABLENDED:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_NONE;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                this._shaderValues.removeDefine(Material.SHADERDEFINE_ADDTIVEFOG);\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_CUSTOME:\r\n                //TODO IDE\r\n                break;\r\n            default:\r\n                console.warn(`Material : renderMode value error - (${value}).`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得材质渲染状态\r\n     */\r\n    get materialRenderMode() {\r\n        return this._matRenderNode;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Material</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._shaderValues = LayaGL.renderOBJCreate.createShaderData(this);\r\n        this.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n        this.alphaTest = false;\r\n        this.cull = RenderState.CULL_BACK;\r\n        this.blend = RenderState.BLEND_DISABLE;\r\n        this.blendSrc = RenderState.BLENDPARAM_ONE;\r\n        this.blendDst = RenderState.BLENDPARAM_ZERO;\r\n        this.blendSrcRGB = RenderState.BLENDPARAM_ONE;\r\n        this.blendDstRGB = RenderState.BLENDPARAM_ZERO;\r\n        this.blendSrcAlpha = RenderState.BLENDPARAM_ONE;\r\n        this.blendDstAlpha = RenderState.BLENDPARAM_ZERO;\r\n        this.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n        this.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n        this.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n        this.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n        this.depthWrite = true;\r\n        this.stencilRef = 1;\r\n        this.stencilTest = RenderState.STENCILTEST_OFF;\r\n        this.stencilWrite = false;\r\n        this.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param shader \r\n     * @returns \r\n     */\r\n    private _bindShaderInfo(shader: Shader3D) {\r\n        //update UBOData by Shader\r\n        let subShader = shader.getSubShaderAt(0);//TODO\t\r\n        // ubo\r\n        let shaderUBODatas = subShader._uniformBufferDataMap;\r\n        if (!shaderUBODatas)\r\n            return;\r\n        for (let key of shaderUBODatas.keys()) {\r\n            //create data\r\n            let uboData = shaderUBODatas.get(key).clone();\r\n            //create UBO\r\n            let ubo = UniformBufferObject.create(key, BufferUsage.Dynamic, uboData.getbyteLength(), false);\r\n            this._shaderValues.setUniformBuffer(Shader3D.propertyNameToID(key), ubo);\r\n            this._shaderValues._addCheckUBO(key, ubo, uboData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 清除UBO\r\n     * @returns \r\n     */\r\n    private _releaseUBOData() {\r\n        if (!this._shaderValues.uniformBufferDatas) {\r\n            return;\r\n        }\r\n        for (let value of this._shaderValues.uniformBufferDatas.values()) {\r\n            value.ubo._updateDataInfo.destroy();\r\n            value.ubo.destroy();\r\n            value.ubo._updateDataInfo = null;\r\n        }\r\n        this._shaderValues.uniformBufferDatas.clear();\r\n        this._shaderValues.uniformBuffersMap.clear();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        this._releaseUBOData();\r\n        this._shaderValues.destroy();\r\n        this._shaderValues = null;\r\n    }\r\n\r\n    get shader() {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * get all material uniform property \r\n     * @returns \r\n     */\r\n    effectiveProperty() {\r\n        return this._shader.getSubShaderAt(0)._uniformTypeMap;\r\n    }\r\n\r\n    /**\r\n     * 设置使用Shader名字。\r\n     * @param name 名称。\r\n     */\r\n    setShaderName(name: string): void {\r\n        this._shader = Shader3D.find(name);\r\n        if (!this._shader) {\r\n            //throw new Error(\"Material: unknown shader name.\");\r\n            console.warn(`Material: unknown shader name '${name}'`);\r\n            this._shader = Shader3D.find(\"BLINNPHONG\");\r\n        }\r\n\r\n        if (Config3D._uniformBlock) {\r\n            this._releaseUBOData();\r\n            //bind shader info\r\n            // todo 清理残留 shader data\r\n            this._bindShaderInfo(this._shader);\r\n        }\r\n\r\n        // set default value\r\n        // todo subShader 选择\r\n        let subShader = this._shader.getSubShaderAt(0);\r\n        let defaultValue = subShader._uniformDefaultValue;\r\n        let typeMap = subShader._uniformTypeMap;\r\n        this.applyUniformDefaultValue(typeMap, defaultValue);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    applyUniformDefaultValue(typeMap: Map<string, ShaderDataType>, defaultValue: Record<string, ShaderDataItem>) {\r\n        typeMap.forEach((type, key) => {\r\n            if (defaultValue && defaultValue[key] != undefined) {\r\n                let value = defaultValue[key];\r\n                this.setShaderData(key, type, value);\r\n            }\r\n            else {\r\n                this.setShaderData(key, type, ShaderDataDefaultValue(type));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获得bool属性值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getBoolByIndex(uniformIndex: number): boolean {\r\n        return this.shaderData.getBool(uniformIndex);\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置bool值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setBoolByIndex(uniformIndex: number, value: boolean) {\r\n        this.shaderData.setBool(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 活得bool值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getBool(name: string): boolean {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getBoolByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置bool值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setBool(name: string, value: boolean) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setBoolByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Float值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getFloatByIndex(uniformIndex: number): number {\r\n        return this.shaderData.getNumber(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Float值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setFloatByIndex(uniformIndex: number, value: number) {\r\n        this.shaderData.setNumber(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Float值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getFloat(name: string): number {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getFloatByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Float值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setFloat(name: string, value: number) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setFloatByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Int值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getIntByIndex(uniformIndex: number): number {\r\n        return this.shaderData.getInt(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Int值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setIntByIndex(uniformIndex: number, value: number) {\r\n        this.shaderData.setInt(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Int值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getInt(name: string): number {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getIntByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Int值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setInt(name: string, value: number) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setIntByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector2\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector2ByIndex(uniformIndex: number): Vector2 {\r\n        return this.shaderData.getVector2(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector2ByIndex(uniformIndex: number, value: Vector2) {\r\n        this.shaderData.setVector2(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector2\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector2(name: string): Vector2 {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector2ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector2ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector3\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector3ByIndex(uniformIndex: number): Vector3 {\r\n        return this.shaderData.getVector3(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector3ByIndex(uniformIndex: number, value: Vector3) {\r\n        this.shaderData.setVector3(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector3\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector3(name: string) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector3ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector3ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector4\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector4ByIndex(uniformIndex: number, value: Vector4) {\r\n        this.shaderData.setVector(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector4\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector4ByIndex(uniformIndex: number): Vector4 {\r\n        return this.shaderData.getVector(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector4\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector4ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector4\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector4(name: string) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector4ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 获得Color\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getColorByIndex(uniformIndex: number): Color {\r\n        return this.shaderData.getColor(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Color\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setColorByIndex(uniformIndex: number, value: Color) {\r\n        this.shaderData.setColor(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Color\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getColor(name: string): Color {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.shaderData.getColor(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Color\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setColorByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Matrix4x4\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getMatrix4x4ByIndex(uniformIndex: number): Matrix4x4 {\r\n        return this.shaderData.getMatrix4x4(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Matrix4x4\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setMatrix4x4ByIndex(uniformIndex: number, value: Matrix4x4) {\r\n        this.shaderData.setMatrix4x4(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Matrix4x4\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getMatrix4x4(name: string): Matrix4x4 {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getMatrix4x4ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Matrix4x4\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setMatrix4x4(name: string, value: Matrix4x4) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setMatrix4x4ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获取 matrix3x3\r\n     * @param index \r\n     * @returns \r\n     */\r\n    getMatrix3x3ByIndex(index: number) {\r\n        return this.shaderData.getMatrix3x3(index);\r\n    }\r\n\r\n    /**\r\n     * 设置 matrix3x3\r\n     * @param index \r\n     * @param value \r\n     */\r\n    setMatrix3x3ByIndex(index: number, value: Matrix3x3) {\r\n        this.shaderData.setMatrix3x3(index, value);\r\n    }\r\n\r\n    /**\r\n     * 获取 matrix3x3\r\n     * @param name \r\n     * @returns \r\n     */\r\n    getMatrix3x3(name: string): Matrix3x3 {\r\n        let index = Shader3D.propertyNameToID(name);\r\n        return this.getMatrix3x3ByIndex(index);\r\n    }\r\n\r\n    /**\r\n     * 设置 matrix3x3\r\n     * @param name \r\n     * @param value \r\n     */\r\n    setMatrix3x3(name: string, value: Matrix3x3) {\r\n        let index = Shader3D.propertyNameToID(name);\r\n        this.setMatrix3x3ByIndex(index, value);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理\r\n     * @param uniformIndex 属性索引\r\n     * @param texture \r\n     */\r\n    setTextureByIndex(uniformIndex: number, texture: BaseTexture) {\r\n        this.shaderData.setTexture(uniformIndex, texture);\r\n        if (texture && !texture._texture)//贴图为加载完，需要重设\r\n            texture.once(Event.READY, this, this.reSetTexture);\r\n    }\r\n\r\n    private reSetTexture(texture: BaseTexture) {\r\n        let index = this.shaderData.getSourceIndex(texture);\r\n        if (index != -1) {\r\n            this.setTextureByIndex(index, texture);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得纹理\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getTextureByIndex(uniformIndex: number) {\r\n        return this.shaderData.getTexture(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理\r\n     * @param name 属性名称\r\n     * @param texture \r\n     */\r\n    setTexture(name: string, texture: BaseTexture) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setTextureByIndex(uniformIndex, texture);\r\n    }\r\n\r\n    /**\r\n     * 获得纹理\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getTexture(name: string): BaseTexture {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getTextureByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 获得Buffer\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getBufferByIndex(uniformIndex: number): Float32Array {\r\n        return this.shaderData.getBuffer(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Buffer\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setBufferByIndex(uniformIndex: number, value: Float32Array) {\r\n        this.shaderData.setBuffer(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Buffer\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getBuffer(name: string): Float32Array {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getBufferByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Buffer\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setBuffer(name: string, value: Float32Array) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setBufferByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 设置ShaderData的属性值\r\n     * @param uniformIndex 属性索引\r\n     * @param type 值类型\r\n     * @param value 值\r\n     */\r\n    setShaderDataByIndex(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem) {\r\n        this.shaderData.setShaderData(uniformIndex, type, value);\r\n    }\r\n\r\n    /**\r\n     * 设置ShaderData的属性值\r\n     * @param name 属性名称\r\n     * @param type 值类型\r\n     * @param value 值\r\n     */\r\n    setShaderData(name: string, type: ShaderDataType, value: ShaderDataItem) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setShaderDataByIndex(uniformIndex, type, value);\r\n    }\r\n\r\n    /**\r\n     * 获得ShaderData的属性值\r\n     * @param name 属性名称\r\n     * @param type 值类型\r\n     * @returns \r\n     */\r\n    getShaderData(name: string, type: ShaderDataType): ShaderDataItem {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getShaderDataByIndex(uniformIndex, type);\r\n    }\r\n\r\n    /**\r\n     * 获得ShaderData的属性值\r\n     * @param uniformIndex 属性索引\r\n     * @param type 值类型\r\n     * @returns \r\n     */\r\n    getShaderDataByIndex(uniformIndex: number, type: ShaderDataType): ShaderDataItem {\r\n        return this._shaderValues.getShaderData(uniformIndex, type);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destBaseMaterial: Material = (<Material>destObject);\r\n        destBaseMaterial.name = this.name;\r\n        destBaseMaterial.renderQueue = this.renderQueue;\r\n        destBaseMaterial.setShaderName(this._shader._name);\r\n        this._shaderValues.cloneTo(destBaseMaterial._shaderValues);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Material = new Material();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    //--------------------------------------------兼容-------------------------------------------------\r\n    /**\r\n     * 设置属性值\r\n     * @deprecated\r\n     * @param name \r\n     * @param value \r\n     */\r\n    setShaderPropertyValue(name: string, value: any) {\r\n        let propertyID = Shader3D.propertyNameToID(name);\r\n        this.shaderData.setValueData(propertyID, value);\r\n    }\r\n\r\n    /**\r\n     * 获取属性值\r\n     * @deprecated\r\n     * @param name \r\n     */\r\n    getShaderPropertyValue(name: string): any {\r\n        return this.shaderData.getValueData(Shader3D.propertyNameToID(name));\r\n    }\r\n\r\n    get _defineDatas(): DefineDatas {\r\n        return this._shaderValues._defineDatas;\r\n    }\r\n\r\n    /**\r\n     * override it\r\n     */\r\n    oldparseEndEvent() {\r\n        //TODO\r\n    }\r\n}\r\n\r\n\r\n","import { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\nexport enum TextureCubeFace {\r\n    /**+x */\r\n    PositiveX,\r\n    /**-x */\r\n    NegativeX,\r\n    /**+y */\r\n    PositiveY,\r\n    /**-y */\r\n    NegativeY,\r\n    /**+z */\r\n    PositiveZ,\r\n    /**-z */\r\n    NegativeZ\r\n}\r\n\r\nconst DEFAULT_PIXELS: Uint8Array = new Uint8Array(4);\r\n\r\n/**\r\n * <code>TextureCube</code> 类用于生成立方体纹理。\r\n */\r\nexport class TextureCube extends BaseTexture {\r\n\r\n    /**@private*/\r\n    private static _blackTexture: TextureCube;\r\n    /**@private*/\r\n    private static _grayTexture: TextureCube;\r\n    /**@private*/\r\n    private static _whiteTexture: TextureCube;\r\n\r\n    private static _errorTexture: TextureCube;\r\n\r\n    /**\r\n     * 黑色纯色纹理。\r\n     */\r\n    static get blackTexture() {\r\n        return TextureCube._blackTexture;\r\n    }\r\n\r\n    /**\r\n     * 灰色纯色纹理。\r\n     */\r\n    static get grayTexture() {\r\n        return TextureCube._grayTexture;\r\n    }\r\n\r\n    /**\r\n     * 白色纯色纹理。\r\n     */\r\n    static get whiteTexture() {\r\n        return TextureCube._whiteTexture;\r\n    }\r\n\r\n    static get errorTexture() {\r\n        return TextureCube._errorTexture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        var blackTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var grayTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var writeTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var pixels = DEFAULT_PIXELS;\r\n        pixels[0] = 0, pixels[1] = 0, pixels[2] = 0; pixels[3] = 255;\r\n        blackTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 128, pixels[1] = 128, pixels[2] = 128; pixels[3] = 255;\r\n        grayTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 255, pixels[1] = 255, pixels[2] = 255; pixels[3] = 255;\r\n        writeTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        writeTexture.lock = true;\r\n        TextureCube._grayTexture = grayTexture;\r\n        TextureCube._blackTexture = blackTexture;\r\n        TextureCube._whiteTexture = writeTexture;\r\n        TextureCube._errorTexture = writeTexture;\r\n    }\r\n\r\n    constructor(size: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(size, size, format);\r\n\r\n        this._dimension = TextureDimension.Cube;\r\n\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, size, size, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    // todo source数组 改为 CubeInfo 结构体?\r\n    setImageData(source: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let error = false;\r\n        let k = source.findIndex(s => s != null);\r\n        if (k != -1) {\r\n            let img = source[k];\r\n            if (!source.every(s => s != null && s.width == img.width && s.height == img.height)) //必须满足所有元素不为null且大小相等\r\n                error = true;\r\n        }\r\n        else\r\n            error = true;\r\n\r\n        let texture = this._texture;\r\n        if (!error)\r\n            LayaGL.textureContext.setCubeImageData(texture, source, premultiplyAlpha, invertY);\r\n        else {\r\n            let pixels = DEFAULT_PIXELS;\r\n            LayaGL.textureContext.setCubePixelsData(texture, [pixels, pixels, pixels, pixels, pixels, pixels], premultiplyAlpha, invertY);\r\n        }\r\n    }\r\n\r\n    setPixelsData(source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    updateSubPixelsData(source: ArrayBufferView[], xOffset: number, yOffset: number, width: number, height: number, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    get defaultTexture(): BaseTexture {\r\n        return TextureCube.grayTexture;\r\n    }\r\n}","import { Vector3 } from \"../../maths/Vector3\";\r\nimport { BlendEquationSeparate } from \"../RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../RenderEnum/StencilOperation\";\r\n\r\n\r\n\r\n/**\r\n * <code>RenderState</code> 类用于控制渲染状态。\r\n */\r\nexport class RenderState {\r\n\t/**剔除枚举_不剔除。*/\r\n\tstatic CULL_NONE: number = CullMode.Off;\r\n\t/**剔除枚举_剔除正面。*/\r\n\tstatic CULL_FRONT: number = CullMode.Front;\r\n\t/**剔除枚举_剔除背面。*/\r\n\tstatic CULL_BACK: number = CullMode.Back;\r\n\r\n\t/**混合枚举_禁用。*/\r\n\tstatic BLEND_DISABLE: number = BlendType.BLEND_DISABLE;\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tstatic BLEND_ENABLE_ALL: number = BlendType.BLEND_ENABLE_ALL;\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tstatic BLEND_ENABLE_SEPERATE: number = BlendType.BLEND_ENABLE_SEPERATE;\r\n\r\n\t/**混合参数枚举_零,例：RGB(0,0,0),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ZERO: number = BlendFactor.Zero;\r\n\t/**混合参数枚举_一,例：RGB(1,1,1),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ONE: number = BlendFactor.One;\r\n\t/**混合参数枚举_源颜色,例：RGB(Rs, Gs, Bs)，Alpha(As)。*/\r\n\tstatic BLENDPARAM_SRC_COLOR: number = BlendFactor.SourceColor;\r\n\t/**混合参数枚举_一减源颜色,例：RGB(1-Rs, 1-Gs, 1-Bs)，Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_COLOR: number = BlendFactor.OneMinusSourceColor;\r\n\t/**混合参数枚举_目标颜色,例：RGB(Rd, Gd, Bd),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_COLOR: number = BlendFactor.DestinationColor;\r\n\t/**混合参数枚举_一减目标颜色,例：RGB(1-Rd, 1-Gd, 1-Bd)，Alpha(1-Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_COLOR: number = BlendFactor.OneMinusDestinationColor;\r\n\t/**混合参数枚举_源透明,例:RGB(As, As, As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA: number = BlendFactor.SourceAlpha;\r\n\t/**混合参数枚举_一减源阿尔法,例:RGB(1-As, 1-As, 1-As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_ALPHA: number = BlendFactor.OneMinusSourceAlpha;\r\n\t/**混合参数枚举_目标阿尔法，例：RGB(Ad, Ad, Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_ALPHA: number = BlendFactor.DestinationAlpha;\r\n\t/**混合参数枚举_一减目标阿尔法,例：RGB(1-Ad, 1-Ad, 1-Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_ALPHA: number = BlendFactor.OneMinusDestinationAlpha;\r\n\t/**混合参数枚举_阿尔法饱和，例：RGB(min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad)),Alpha(1)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA_SATURATE: number = BlendFactor.SourceAlphaSaturate;\r\n\t/**混合参数枚举_混合设置颜色 */\r\n\tstatic BLENDPARAM_BLENDCOLOR: number = BlendFactor.BlendColor;\r\n\t/**很合参数枚举_混合颜色取反 */\r\n\tstatic BLENDPARAM_BLEND_ONEMINUS_COLOR: number = BlendFactor.OneMinusBlendColor;\r\n\r\n\t/**混合方程枚举_加法,例：source + destination*/\r\n\tstatic BLENDEQUATION_ADD: number = BlendEquationSeparate.ADD;\r\n\t/**混合方程枚举_减法，例：source - destination*/\r\n\tstatic BLENDEQUATION_SUBTRACT: number = BlendEquationSeparate.SUBTRACT;\r\n\t/**混合方程枚举_反序减法，例：destination - source*/\r\n\tstatic BLENDEQUATION_REVERSE_SUBTRACT: number = BlendEquationSeparate.REVERSE_SUBTRACT;\r\n\t/**混合方程枚举_取最小 TODO */\r\n\tstatic BLENDEQUATION_MIN: number = BlendEquationSeparate.MIN;\r\n\t/**混合方程枚举_取最大 TODO*/\r\n\tstatic BLENDEQUATION_MAX: number = BlendEquationSeparate.MAX;\r\n\r\n\t/**深度测试函数枚举_关闭深度测试。*/\r\n\tstatic DEPTHTEST_OFF: number = CompareFunction.Off;/*WebGLContext.NEVER*/;//TODO:什么鬼\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic DEPTHTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic DEPTHTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic DEPTHTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic DEPTHTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic DEPTHTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic DEPTHTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic DEPTHTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic DEPTHTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\r\n\r\n\tstatic STENCILTEST_OFF: number = CompareFunction.Off;\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic STENCILTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic STENCILTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic STENCILTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic STENCILTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic STENCILTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic STENCILTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic STENCILTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic STENCILTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\t/**保持当前值*/\r\n\tstatic STENCILOP_KEEP: number = StencilOperation.Keep;\r\n\t/**将模板缓冲区值设置为0*/\r\n\tstatic STENCILOP_ZERO: number = StencilOperation.Zero;\r\n\t/**将模具缓冲区值设置为指定的参考值*/\r\n\tstatic STENCILOP_REPLACE: number = StencilOperation.Replace;\r\n\t/**增加当前模具缓冲区值+1 */\r\n\tstatic STENCILOP_INCR: number = StencilOperation.IncrementSaturate;\r\n\t/**增加当前模具缓冲区值,超过最大值的时候循环*/\r\n\tstatic STENCILOP_INCR_WRAP: number = StencilOperation.IncrementWrap;\r\n\t/**递减当前模板缓冲区的值*/\r\n\tstatic STENCILOP_DECR: number = StencilOperation.DecrementSaturate;\r\n\t/**递减当前模板缓冲去的值，小于0时会循环*/\r\n\tstatic STENCILOP_DECR_WRAP: number = StencilOperation.DecrementWrap;\r\n\t/**按位反转当前的模板缓冲区的值*/\r\n\tstatic STENCILOP_INVERT: number = StencilOperation.Invert;\r\n\r\n\t/** @internal */\r\n\tstatic readonly Default: Readonly<RenderState> = new RenderState();\r\n\r\n\t/**渲染剔除状态。*/\r\n\tcull: number;\r\n\t/**透明混合。*/\r\n\tblend: number;\r\n\t/**源混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tsrcBlend: number;\r\n\t/**目标混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tdstBlend: number;\r\n\t/**RGB源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tsrcBlendRGB: number;\r\n\t/**RGB目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tdstBlendRGB: number;\r\n\t/**Alpha源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tsrcBlendAlpha: number;\r\n\t/**Alpha目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tdstBlendAlpha: number;\r\n\t/**混合方程。*/\r\n\tblendEquation: number;\r\n\t/**RGB混合方程。*/\r\n\tblendEquationRGB: number;\r\n\t/**Alpha混合方程。*/\r\n\tblendEquationAlpha: number;\r\n\t/**深度测试函数。*/\r\n\tdepthTest: number;\r\n\t/**是否深度测试。*/\r\n\tdepthWrite: boolean;\r\n\t/**是否模板写入 */\r\n\tstencilWrite: boolean;\r\n\t/**是否开启模板测试 */\r\n\tstencilTest: number;\r\n\t/**模板值 一般会在0-255*/\r\n\tstencilRef: number;\r\n\t/**模板设置值 */\r\n\tstencilOp: Vector3;\r\n\r\n\t/**\r\n\t * 创建一个 <code>RenderState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\tthis.srcBlend = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlend = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendRGB = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendRGB = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendAlpha = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendAlpha = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n\t\tthis.depthWrite = true;\r\n\t\tthis.stencilRef = 1;\r\n\t\tthis.stencilTest = RenderState.STENCILTEST_OFF;\r\n\t\tthis.stencilWrite = false;\r\n\t\tthis.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tsetNull() {\r\n\t\tthis.cull = null;\r\n\t\tthis.blend = null;\r\n\t\tthis.srcBlend = null;\r\n\t\tthis.dstBlend = null;\r\n\t\tthis.srcBlendRGB = null;\r\n\t\tthis.dstBlendRGB = null;\r\n\t\tthis.srcBlendAlpha = null;\r\n\t\tthis.dstBlendAlpha = null;\r\n\t\tthis.blendEquation = null;\r\n\t\tthis.blendEquationRGB = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\tthis.depthTest = null;\r\n\t\tthis.depthWrite = null;\r\n\t\tthis.stencilRef = null;\r\n\t\tthis.stencilTest = null;\r\n\t\tthis.stencilWrite = null;\r\n\t\tthis.stencilOp.set(null, null, null);\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆\r\n\t * @param dest \r\n\t */\r\n\tcloneTo(dest: RenderState) {\r\n\t\tdest.cull = this.cull;\r\n\t\tdest.blend = this.blend;\r\n\t\tdest.srcBlend = this.srcBlend;\r\n\t\tdest.dstBlend = this.dstBlend;\r\n\t\tdest.srcBlendRGB = this.srcBlendRGB;\r\n\t\tdest.dstBlendRGB = this.dstBlendRGB;\r\n\t\tdest.srcBlendAlpha = this.srcBlendAlpha;\r\n\t\tdest.dstBlendAlpha = this.dstBlendAlpha;\r\n\t\tdest.blendEquation = this.blendEquation;\r\n\t\tdest.blendEquationRGB = this.blendEquationRGB;\r\n\t\tdest.blendEquationAlpha = this.blendEquationAlpha;\r\n\t\tdest.depthTest = this.depthTest;\r\n\t\tdest.depthWrite = this.depthWrite;\r\n\t\tdest.stencilRef = this.stencilRef;\r\n\t\tdest.stencilTest = this.stencilTest;\r\n\t\tdest.stencilWrite = this.stencilWrite;\r\n\t\tthis.stencilOp.cloneTo(dest.stencilOp);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): RenderState {\r\n\t\tvar dest: RenderState = new RenderState();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { UniformBufferObject } from \"./UniformBufferObject\";\r\n\r\n/**\r\n * 管理\r\n */\r\nexport class UniformBufferBase {\r\n    /**@internal */\r\n    _singgle: boolean;\r\n    /**@internal */\r\n    _mapArray: UniformBufferObject[];\r\n    /**@internal bind pointer*/\r\n    _glPointerID: number;\r\n    /**@internal ubo name*/\r\n    _blockName: string;\r\n    /**@internal */\r\n    _curUniformBuffer:UniformBufferObject;\r\n    /**\r\n     * 实例化一个UBOBase\r\n     * @internal\r\n     * @param name \r\n     * @param pointer \r\n     * @param single \r\n     */\r\n    constructor(name: string, pointer: number, single: boolean) {\r\n        this._mapArray = [];\r\n        this._blockName = name;\r\n        this._singgle = single;\r\n        this._glPointerID = pointer;\r\n    }\r\n\r\n    /**\r\n     * 增加Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    add(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index == -1)\r\n            this._mapArray.push(buffer);\r\n    }\r\n\r\n    /**\r\n     * 移除Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    splitBuffer(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index != -1)\r\n            this._mapArray.splice(index, 1);\r\n    }\r\n}","import { BufferUsage, BufferTargetType } from \"./RenderEnum/BufferTargetType\";\r\nimport { SubUniformBufferData } from \"./SubUniformBufferData\";\r\nimport { UniformBufferBase } from \"./UniformBufferBase\";\r\nimport { UnifromBufferData } from \"./UniformBufferData\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n/**\r\n * 类封装WebGL2UniformBufferObect\r\n */\r\nexport class UniformBufferObject extends Buffer {\r\n    static UBONAME_SCENE = \"SceneUniformBlock\";\r\n    static UBONAME_CAMERA = \"CameraUniformBlock\";\r\n    static UBONAME_SPRITE3D = \"SpriteUniformBlock\";\r\n    static UBONAME_SHADOW = \"ShadowUniformBlock\";\r\n    private static commonMap: string[] = [\"CameraUniformBlock\", \"SceneUniformBlock\", \"SpriteUniformBlock\", \"ShadowUniformBlock\"]\r\n\r\n    /**@internal */\r\n    private static _Map: Map<string, UniformBufferBase> = new Map<string, UniformBufferBase>();\r\n\r\n    /**\r\n     * create Uniform Buffer Base\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @param bufferUsage config usage\r\n     * @param bytelength byte length\r\n     * @returns \r\n     */\r\n    static create(name: string, bufferUsage: number, bytelength: number, isSingle: boolean = false) {\r\n        if (!UniformBufferObject._Map.get(name)) {\r\n            UniformBufferObject._Map.set(name, new UniformBufferBase(name, LayaGL.renderEngine.getUBOPointer(name), isSingle));\r\n        }\r\n        let bufferBase = UniformBufferObject._Map.get(name);\r\n        if (bufferBase._singgle && bufferBase._mapArray.length > 0) {\r\n            return null;\r\n        } else {\r\n            let ubo = LayaGL.renderOBJCreate.createUniformBufferObject(bufferBase._glPointerID, name, bufferUsage, bytelength, isSingle);\r\n            if(bufferBase._singgle) bufferBase.add(ubo);\r\n            return ubo;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Uniform Buffer by name\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @returns \r\n     */\r\n    static getBuffer(name: string, index: number) {\r\n        let base = UniformBufferObject._Map.get(name);\r\n        if (!base)\r\n            return null;\r\n        return base._mapArray[index];\r\n    }\r\n\r\n    /**@interanl */\r\n    _glPointer: number;\r\n\r\n    /**@internal */\r\n    _updateDataInfo: UnifromBufferData;\r\n\r\n    /**@internal */\r\n    _isSingle: boolean = false;\r\n\r\n    /**buffer name */\r\n    _name: string;\r\n\r\n    /**all byte length */\r\n    byteLength: number;\r\n\r\n    /**\r\n     * @interanl\r\n     */\r\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\r\n        super(BufferTargetType.UNIFORM_BUFFER,bufferUsage);\r\n        this._glPointer = glPointer;\r\n        this.byteLength = byteLength;\r\n        this._name = name;\r\n        this._isSingle = isSingle;\r\n        this.bind();\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * differcnt UBO bind Point\r\n     * @internal\r\n     */\r\n    _bindUniformBufferBase() {\r\n        // const base = UniformBufferObject._Map.get(this._name);\r\n        // if (base._curUniformBuffer != this) {\r\n            this._glBuffer.bindBufferBase(this._glPointer);\r\n            //base._curUniformBuffer = this;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 绑定一段\r\n     * @internal\r\n     */\r\n    _bindBufferRange(offset: number, byteCount: number) {\r\n        this.bind();\r\n        this._glBuffer.bindBufferRange(this._glPointer,offset,byteCount);\r\n        //gl.bindBufferRange(gl.UNIFORM_BUFFER, this._glPointer, this._glBuffer, offset, byteCount);\r\n    }\r\n\r\n    /**\r\n     * 重置buffer长度\r\n     * @param bytelength \r\n     */\r\n    _reset(bytelength: number) {\r\n        \r\n        //destroy\r\n        if (this._glBuffer) {\r\n            this._glBuffer.destroy();\r\n            this._glBuffer = null;\r\n        }\r\n        //create new\r\n        this._byteLength = this.byteLength = bytelength;\r\n        this._glBuffer = LayaGL.renderEngine.createBuffer(this._bufferType,this._bufferUsage);\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    bind(): boolean {\r\n       return this._glBuffer.bindBuffer();\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param buffer Float32Array data\r\n     * @param bufferOffset byteOffset\r\n     * @param byteCount  byteCount\r\n     * @returns \r\n     */\r\n    setData(buffer: Float32Array, bufferOffset: number = 0, byteCount: number = Number.MAX_SAFE_INTEGER): void {\r\n        if (byteCount < 0) return;\r\n        this.bind();\r\n        var needSubData: boolean = !(bufferOffset == 0 && byteCount == this.byteLength);\r\n        if (needSubData) {\r\n            var subData: Uint8Array = new Uint8Array(buffer.buffer, bufferOffset, byteCount);\r\n            //bufferSubData(this._bufferType, bufferOffset, subData);\r\n            this._glBuffer.setData(subData,bufferOffset);\r\n        }\r\n        else {\r\n            // let gl = (LayaGL.instance as WebGL2RenderingContext);                                                 \r\n            // gl.bufferSubData(this._bufferType, bufferOffset, buffer, 0, buffer.length);\r\n            this._glBuffer.setDataEx(buffer,bufferOffset,buffer.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param bufferData \r\n     */\r\n    setDataByUniformBufferData(bufferData: UnifromBufferData) {\r\n        if (this._updateDataInfo == bufferData) {\r\n            this.setData(bufferData._buffer, bufferData._updateFlag.x * 4, (bufferData._updateFlag.y - bufferData._updateFlag.x) * 4);\r\n            bufferData._resetUpdateFlag();\r\n        } else {\r\n            this.setData(bufferData._buffer, 0, this.byteLength);\r\n            bufferData._resetUpdateFlag();\r\n            this._updateDataInfo = bufferData;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set Data by subUniformBufferData\r\n     * @param bufferData sub UniformBufferData\r\n     * @param offset \r\n     */\r\n    setDataByByUniformBufferDataOffset(bufferData: SubUniformBufferData, offset: number) {\r\n        let datalength = bufferData.getbyteLength();//offset\r\n        let reallength = bufferData._realByte;//update Count\r\n        bufferData._resetUpdateFlag();\r\n        //let gl = (LayaGL.instance as WebGL2RenderingContext);\r\n        this.bind();\r\n        //gl.bufferSubData(this._bufferType, offset * datalength, bufferData._buffer, 0, reallength / 4);\r\n        this._glBuffer.setDataEx(bufferData._buffer,offset * datalength,reallength / 4);\r\n    }\r\n\r\n    /**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tsuper.destroy();\r\n\t}\r\n}","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { URL } from \"../net/URL\";\r\n\r\nexport class MaterialParser {\r\n\r\n    static parse(data: any): Material {\r\n        let props: any = data.props;\r\n\r\n        switch (data.version) {\r\n            case \"LAYAMATERIAL:01\":\r\n            case \"LAYAMATERIAL:02\":\r\n            case \"LAYAMATERIAL:03\":\r\n                let mat = MaterialParser.parseLegacy(data);\r\n                mat.oldparseEndEvent();\r\n                return mat;\r\n            case \"LAYAMATERIAL:04\":\r\n                break;\r\n            default:\r\n                throw new Error(`unkonwn material version: ${data.version}`);\r\n        }\r\n\r\n        let mat = new Material();\r\n        mat.setShaderName(props.type);\r\n        let renderQueue: number;\r\n        for (let key in props) {\r\n            switch (key) {\r\n                case \"type\":\r\n                case \"name\":\r\n                    break;\r\n                case \"defines\":\r\n                    let defineNames: any[] = props[key];\r\n                    for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                        let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                        mat._shaderValues.addDefine(define);\r\n                    }\r\n                    break;\r\n                case \"textures\":\r\n                    let textures: any[] = props[key];\r\n                    for (let i = 0, n = textures.length; i < n; i++) {\r\n                        let texture: any = textures[i];\r\n                        let path: string = texture.path;\r\n                        (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\r\n                    }\r\n                    break;\r\n                case \"renderQueue\":\r\n                    renderQueue = props[key];\r\n                    break;\r\n                case \"alphaTest\":\r\n                    mat.alphaTest = props[key];\r\n                    break;\r\n                case \"materialRenderMode\":\r\n                    mat.materialRenderMode = props[key];\r\n                    break;\r\n                default:\r\n                    let property = props[key];\r\n                    let uniName = Shader3D.propertyNameToID(key);\r\n\r\n                    switch (uniName) {\r\n                        case Shader3D.CULL:\r\n                            mat.cull = property;\r\n                            break;\r\n                        case Shader3D.BLEND:\r\n                            mat.blend = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC:\r\n                            mat.blendSrc = property;\r\n                            break;\r\n                        case Shader3D.BLEND_DST:\r\n                            mat.blendDst = property;\r\n                            break;\r\n                        case Shader3D.BLEND_DST_ALPHA:\r\n                            mat.blendDstAlpha = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_ALPHA:\r\n                            mat.blendSrcAlpha = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_RGB:\r\n                            mat.blendSrcRGB = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_RGB:\r\n                            mat.blendDstRGB = property;\r\n                            break;\r\n                        case Shader3D.DEPTH_TEST:\r\n                            mat.depthTest = property;\r\n                            break;\r\n                        case Shader3D.DEPTH_WRITE:\r\n                            mat.depthWrite = !!props[key];\r\n                            break;\r\n                        case Shader3D.STENCIL_TEST:\r\n                            mat.stencilTest = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_Op:\r\n                            mat.stencilOp = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_Ref:\r\n                            mat.stencilRef = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_WRITE:\r\n                            mat.stencilWrite = property;\r\n                            break;\r\n                        default:\r\n                            if (!property.length) {\r\n                                mat._shaderValues.setNumber(uniName, props[key]);\r\n                            } else {\r\n                                var vectorValue = property;\r\n                                switch (vectorValue.length) {\r\n                                    case 2:\r\n                                        mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\r\n                                        break;\r\n                                    case 3:\r\n                                        mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\r\n                                        break;\r\n                                    case 4:\r\n                                        if (mat._shaderValues.getColor(uniName)) {\r\n                                            mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                        } else\r\n                                            mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                        break;\r\n                                    case 9:\r\n                                        let matrix3 = new Matrix3x3();\r\n                                        matrix3.elements = new Float32Array(vectorValue);\r\n                                        mat._shaderValues.setMatrix3x3(uniName, matrix3);\r\n                                        break;\r\n                                    case 16:\r\n                                        let matrix4 = new Matrix4x4();\r\n                                        matrix4.elements = new Float32Array(vectorValue);\r\n                                        mat._shaderValues.setMatrix4x4(uniName, matrix4);\r\n                                        break;\r\n                                    default:\r\n                                        mat._shaderValues.setBuffer(uniName, vectorValue);\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n            }\r\n        }\r\n        if (null != renderQueue) {\r\n            mat.renderQueue = renderQueue;\r\n        }\r\n\r\n        return mat;\r\n    }\r\n\r\n    static collectLinks(data: any, basePath: string) {\r\n        let urls: ILoadURL[] = [];\r\n        let textures: any[] = data.props?.textures;\r\n        if (textures) {\r\n            for (let i = 0, n = textures.length; i < n; i++) {\r\n                let tex2D: any = textures[i];\r\n                let tex2DPath: string = tex2D.path;\r\n                if (tex2DPath) {\r\n                    tex2D.path = URL.join(basePath, tex2DPath);\r\n                    urls.push({ url: tex2D.path, type: Loader.TEXTURE2D, constructParams: tex2D.constructParams, propertyParams: tex2D.propertyParams });\r\n                }\r\n            }\r\n        }\r\n        return urls;\r\n    }\r\n\r\n\r\n    /**\r\n     * @deprecated\r\n     * @inheritDoc\r\n     */\r\n    static parseLegacy(data: any): Material {\r\n        let jsonData: any = data;\r\n        let props: any = jsonData.props;\r\n\r\n        let mat: Material;\r\n        let classType: string = props.type;\r\n        let clas: any = ClassUtils.getClass(classType);\r\n        if (!clas && classType && classType.startsWith(\"Laya.\"))\r\n            clas = ClassUtils.getClass(classType.substring(5));\r\n        if (clas)\r\n            mat = new clas();\r\n        else {\r\n            mat = new Material();\r\n            mat.setShaderName(classType);\r\n        }\r\n\r\n        switch (jsonData.version) {\r\n            case \"LAYAMATERIAL:01\":\r\n            case \"LAYAMATERIAL:02\":\r\n                for (let key in props) {\r\n                    switch (key) {\r\n                        case \"type\":\r\n                            break;\r\n                        case \"vectors\":\r\n                            let vectors = props[key];\r\n                            for (let i = 0, n = vectors.length; i < n; i++) {\r\n                                let vector = vectors[i];\r\n                                let vectorValue = vector.value;\r\n                                switch (vectorValue.length) {\r\n                                    case 2:\r\n                                        (<any>mat)[vector.name] = new Vector2(vectorValue[0], vectorValue[1]);\r\n                                        break;\r\n                                    case 3:\r\n                                        if ((<any>mat)[vector.name] instanceof Color) {\r\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], 1.0);\r\n                                        } else\r\n                                            (<any>mat)[vector.name] = new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]);\r\n                                        break;\r\n                                    case 4:\r\n                                        if ((<any>mat)[vector.name] instanceof Color) {\r\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\r\n                                        } else\r\n                                            (<any>mat)[vector.name] = new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\r\n                                        break;\r\n                                    default:\r\n                                        throw new Error(\"unkonwn material color length: \" + vectorValue.length);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"colors\":\r\n                            let colors = props[key];\r\n                            for (let i = 0, n = colors.length; i < n; i++) {\r\n                                let color = colors[i];\r\n                                let vectorValue = color.value;\r\n                                (<any>mat)[color.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3])\r\n                            }\r\n                            break;\r\n                        case \"textures\":\r\n                            let textures: any[] = props[key];\r\n                            for (let i = 0, n = textures.length; i < n; i++) {\r\n                                let texture: any = textures[i];\r\n                                let path: string = texture.path;\r\n                                (path) && ((<any>mat)[texture.name] = Loader.getBaseTexture(path));\r\n                            }\r\n                            break;\r\n                        case \"defines\":\r\n                            let defineNames: any[] = props[key];\r\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                                mat._shaderValues.addDefine(define);\r\n                            }\r\n                            break;\r\n                        case \"renderStates\"://\"LAYAMATERIAL:02\" \r\n                            let renderStatesData: any[] = props[key];\r\n                            let renderStateData: any = renderStatesData[0];\r\n                            mat.blend = renderStateData.blend;\r\n                            mat.cull = this._getRenderStateParams(renderStateData.cull);\r\n                            mat.depthTest = this._getRenderStateParams(renderStateData.depthTest);\r\n                            mat.depthWrite = renderStateData.depthWrite;\r\n                            mat.blendSrc = this._getRenderStateParams(renderStateData.srcBlend);\r\n                            mat.blendDst = this._getRenderStateParams(renderStateData.dstBlend);\r\n                            break;\r\n                        case \"cull\"://\"LAYAMATERIAL:01\"\r\n                            mat.cull = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blend\"://\"LAYAMATERIAL:01\"\r\n                            mat.blend = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"depthWrite\"://\"LAYAMATERIAL:01\" \r\n                            mat.depthWrite = !!props[key];\r\n                            break;\r\n                        case \"srcBlend\"://\"LAYAMATERIAL:01\" \r\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"dstBlend\"://\"LAYAMATERIAL:01\" \r\n                            mat.blendDst = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"depthTest\":\r\n                            mat.depthTest = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blendDst\":\r\n                            mat.blendDst = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blendSrc\":\r\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        default:\r\n                            (<any>mat)[key] = props[key];\r\n                    }\r\n                }\r\n                break;\r\n            case \"LAYAMATERIAL:03\":\r\n                for (let key in props) {\r\n                    switch (key) {\r\n                        case \"type\":\r\n                        case \"name\":\r\n                            break;\r\n                        case \"defines\":\r\n                            let defineNames: any[] = props[key];\r\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                                mat._shaderValues.addDefine(define);\r\n                            }\r\n                            break;\r\n                        case \"textures\":\r\n                            let textures: any[] = props[key];\r\n                            for (let i = 0, n = textures.length; i < n; i++) {\r\n                                let texture: any = textures[i];\r\n                                let path: string = texture.path;\r\n                                (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\r\n                            }\r\n                            break;\r\n                        case \"renderQueue\":\r\n                            mat.renderQueue = props[key];\r\n                            break;\r\n                        default:\r\n                            let property = props[key];\r\n                            let uniName = Shader3D.propertyNameToID(key);\r\n\r\n                            switch (uniName) {\r\n                                case Shader3D.CULL:\r\n                                    mat.cull = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND:\r\n                                    mat.blend = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND_SRC:\r\n                                    mat.blendSrc = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND_DST:\r\n                                    mat.blendDst = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.DEPTH_TEST:\r\n                                    mat.depthTest = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.DEPTH_WRITE:\r\n                                    mat.depthWrite = !!props[key];\r\n                                    break;\r\n                                default:\r\n                                    if (!property.length) {\r\n                                        mat._shaderValues.setNumber(uniName, props[key]);\r\n                                    } else {\r\n                                        var vectorValue = property;\r\n                                        switch (vectorValue.length) {\r\n                                            case 2:\r\n                                                mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\r\n                                                break;\r\n                                            case 3:\r\n                                                mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\r\n                                                break;\r\n                                            case 4:\r\n                                                if (mat._shaderValues.getColor(uniName)) {\r\n                                                    mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                                } else\r\n                                                    mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                                break;\r\n                                            default:\r\n                                                throw new Error(\"unkonwn material color length: \" + vectorValue.length);\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"unkonwn material version: \" + jsonData.version);\r\n        }\r\n        return mat;\r\n    }\r\n\r\n\r\n    /**\r\n        * @deprecated\r\n        * 兼容Blend数据\r\n        */\r\n    private static _getRenderStateParams(type: number) {\r\n        switch (type) {\r\n            case 0x0300:\r\n                return BlendFactor.SourceColor;\r\n            case 0x0301:\r\n                return BlendFactor.OneMinusSourceColor;\r\n            case 0x0306:\r\n                return BlendFactor.DestinationColor;\r\n            case 0x0307:\r\n                return BlendFactor.OneMinusDestinationColor;\r\n            case 0x0302:\r\n                return BlendFactor.SourceAlpha;\r\n            case 0x0303:\r\n                return BlendFactor.OneMinusSourceAlpha;\r\n            case 0x0304:\r\n                return BlendFactor.DestinationAlpha;\r\n            case 0x0305:\r\n                return BlendFactor.OneMinusDestinationAlpha;\r\n            case 0x0308:\r\n                return BlendFactor.SourceAlphaSaturate;\r\n            case 0x8006:\r\n                return BlendEquationSeparate.ADD;\r\n            case 0x800A:\r\n                return BlendEquationSeparate.SUBTRACT;\r\n            case 0x800B:\r\n                return BlendEquationSeparate.REVERSE_SUBTRACT;\r\n            case 0x0200:\r\n                return CompareFunction.Never;\r\n            case 0x0201:\r\n                return CompareFunction.Less;\r\n            case 0x0202:\r\n                return CompareFunction.Equal;\r\n            case 0x0203:\r\n                return CompareFunction.LessEqual;\r\n            case 0x0204:\r\n                return CompareFunction.Greater;\r\n            case 0x0205:\r\n                return CompareFunction.NotEqual;\r\n            case 0x0206:\r\n                return CompareFunction.GreaterEqual;\r\n            case 0x0207:\r\n                return CompareFunction.Always;\r\n            default:\r\n                return type;\r\n        }\r\n    }\r\n}","import { IResourceLoader, ILoadTask, ILoadURL, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { MaterialParser } from \"./MaterialParser\";\r\n\r\nclass MaterialLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.3), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let basePath = URL.getPath(task.url);\r\n            let urls: Array<ILoadURL | string> = MaterialParser.collectLinks(data, basePath);\r\n\r\n            if (data.version === \"LAYAMATERIAL:04\") {\r\n                let shaderName = data.props.type;\r\n                if (!Shader3D.find(shaderName)) {\r\n                    let url = AssetDb.inst.shaderName_to_URL(shaderName);\r\n                    if (url)\r\n                        urls.push(url);\r\n                    else {\r\n                        return AssetDb.inst.shaderName_to_URL_async(shaderName).then(url => {\r\n                            if (url)\r\n                                urls.push(url);\r\n                            else if (data.props.shaderPath)\r\n                                urls.push(URL.join(basePath, data.props.shaderPath));\r\n                            else\r\n                                Loader.warn(`unknown shaderName: ${shaderName}`);\r\n                            return this.load2(task, data, urls);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.load2(task, data, urls);\r\n        });\r\n    }\r\n\r\n    private load2(task: ILoadTask, data: any, urls: Array<any>): Promise<any> {\r\n        if (urls.length == 0) {\r\n            let mat = MaterialParser.parse(data);\r\n            let obsoluteInst = <Material>task.obsoluteInst;\r\n            if (obsoluteInst)\r\n                mat = this.move(obsoluteInst, mat);\r\n            return Promise.resolve(mat);\r\n        }\r\n\r\n        return task.loader.load(urls, task.options, task.progress.createCallback()).then(() => {\r\n            let mat = MaterialParser.parse(data);\r\n\r\n            let obsoluteInst = <Material>task.obsoluteInst;\r\n            if (task.obsoluteInst)\r\n                mat = this.move(obsoluteInst, mat);\r\n            return mat;\r\n        });\r\n    }\r\n\r\n    private move(obsoluteInst: Material, mat: Material) {\r\n        obsoluteInst._shaderValues.reset();\r\n        obsoluteInst.setShaderName(mat._shader.name);\r\n        mat._shaderValues.cloneTo(obsoluteInst._shaderValues);\r\n        obsoluteInst.renderQueue = mat.renderQueue;\r\n        obsoluteInst.obsolute = false;\r\n        mat.destroy();\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lmat\"], MaterialLoader, Loader.MATERIAL);","export class ParseJSON {\r\n    static parse(str: string) {\r\n        return this.parseStart(str);\r\n    }\r\n\r\n    private static findIndex(str: string, i: number, fstr: string, len: number) {\r\n        var fi = str.indexOf(fstr, i + 1);\r\n        if (0 > fi) {\r\n            fi = len;\r\n        }\r\n        return { str: str.substring(i + 1, fi), i: fi };\r\n\r\n    }\r\n    private static finCurrObj(): any {\r\n        this.type = 1;\r\n        if (null == this.cobj) {\r\n            return null;\r\n        }\r\n        if (0 == this.currArr.length) {\r\n            if (this.cobj.k) {\r\n                this.ret[this.cobj.k] = this.cobj.val;\r\n            }\r\n            return null;\r\n        } else {\r\n            var pobj = this.currArr.pop()!;\r\n            if (this.cobj.k) {\r\n                if (Array.isArray(pobj.val)) {\r\n                    if (null != this.cobj.k) {\r\n                        var obj: any = {};\r\n                        obj[this.cobj.k] = this.cobj.val;\r\n                        pobj.val.push(obj);\r\n                    } else {\r\n                        //没有key，应该创建的时候已经push进去了\r\n                        //pobj.val.push(cobj.val);\r\n                    }\r\n                } else {\r\n                    pobj.val[this.cobj.k] = this.cobj.val;\r\n                }\r\n            } else if (Array.isArray(this.cobj.val)) {\r\n                if (Array.isArray(pobj.val)) {\r\n                    pobj.val.push(this.cobj.val);\r\n                } else {\r\n                    pobj.val = this.cobj.val;\r\n                }\r\n            } else {\r\n                //console.log(\"应该是已经被push过的obj对象，无需处理\");\r\n            }\r\n            return pobj;\r\n        }\r\n    }\r\n\r\n    private static formatVal(str: string | null) {\r\n        if (null == str) {\r\n            return null;\r\n        }\r\n        var numVal = Number(str);\r\n        if (!isNaN(numVal)) {\r\n            return numVal;\r\n        }\r\n\r\n        if (\"false\" == str.toLowerCase()) {\r\n            return false;\r\n        } else if (\"true\" == str.toLowerCase()) {\r\n            return true;\r\n        } else if (\"null\" == str) {\r\n            return null;\r\n        }\r\n\r\n\r\n        return str;\r\n    }\r\n\r\n    private static len: number;\r\n    private static ret: any;\r\n    private static currStr: string | null;\r\n    private static currArr: { k?: string, val: any }[];\r\n    private static cobj: any;\r\n    /**type为0代表没有找到任何状态，1为当前在寻找key，2为当前在寻找val */\r\n    private static type: number;\r\n\r\n    private static finCurrStr() {\r\n        if (null != this.currStr) {\r\n            this.currStr = this.currStr.trim();\r\n            if (\"\" != this.currStr) {\r\n                if (null != this.cobj) {\r\n                    if (Array.isArray(this.cobj.val)) {\r\n                        this.cobj.val.push(this.formatVal(this.currStr));\r\n                    } else {\r\n                        this.cobj.val = this.formatVal(this.currStr);\r\n                        this.cobj = this.finCurrObj();\r\n                    }\r\n                }\r\n                this.currStr = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static parseStart(str: string) {\r\n        this.len = str.length;\r\n        var i = 0;\r\n        this.ret = {};\r\n        this.currStr = null;\r\n        this.currArr = [];\r\n        this.cobj = null;\r\n        this.type = 0;\r\n\r\n\r\n        while (i < this.len) {\r\n            var c = str.charAt(i);\r\n            if (\"/\" == c) {\r\n                if (i + 1 < this.len) {\r\n                    i += 1;\r\n                    var cNext = str.charAt(i);\r\n                    var cstr = null;\r\n                    if (\"/\" == cNext) {\r\n                        //单行注释\r\n                        cstr = \"\\n\";\r\n                    } else if (\"*\" == cNext) {\r\n                        //多行注释\r\n                        cstr = \"*/\"\r\n                    }\r\n                    if (null != cstr) {\r\n\r\n\r\n\r\n                        this.finCurrStr();\r\n\r\n\r\n                        var fi = str.indexOf(cstr, i);\r\n                        if (0 > fi) {\r\n                            console.log(\"没有找到注释结尾，应该是一直注释到最后了\");\r\n                            i = this.len;\r\n                        } else {\r\n                            i = fi + cstr.length - 1;\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"}\" == c) {\r\n                if (null != this.cobj) {\r\n                    this.finCurrStr();\r\n                    if (null != this.cobj) {\r\n                        this.cobj = this.finCurrObj();\r\n                    }\r\n                }\r\n                this.currStr = \"\";\r\n                this.type = 1;\r\n                //obj结束\r\n            } else if (\"{\" == c) {\r\n                this.currStr = \"\";\r\n                this.type = 1;\r\n\r\n\r\n\r\n\r\n            } else if (\"'\" == c || \"\\\"\" == c || \"‘\" == c || \"“\" == c) {\r\n                //检测发现这里是字符串\r\n                if (\"‘\" == c) {\r\n                    c = \"’\";\r\n                } else if (\"“\" == c) {\r\n                    c = \"”\";\r\n                }\r\n                var obj = this.findIndex(str, i, c, this.len);\r\n\r\n                if (2 == this.type && null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                    if (null != this.currStr) {\r\n                        this.currStr = this.currStr.trim();\r\n                        if (\"\" != this.currStr) {\r\n                            this.cobj.val.push(this.formatVal(this.currStr));\r\n                        }\r\n                    }\r\n                    this.cobj.val.push(obj.str);\r\n                    this.currStr = \"\";\r\n                } else if (null != this.currStr) {\r\n                    this.currStr += obj.str;\r\n                }\r\n                i = obj.i;\r\n            } else if (\";\" == c || \",\" == c || \"\\n\" == c) {\r\n                this.finCurrStr();\r\n            } else if (\"]\" == c) {\r\n                //数组结束\r\n                if (null != this.currStr && null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                    this.currStr = this.currStr.trim();\r\n                    if (\"\" != this.currStr) {\r\n                        this.cobj.val.push(this.formatVal(this.currStr));\r\n                    }\r\n                }\r\n                if (null != this.cobj) {\r\n                    //数组需要完成两次才算结束出去\r\n                    this.cobj = this.finCurrObj();\r\n                    this.cobj = this.finCurrObj();\r\n                }\r\n                this.currStr = \"\";\r\n            } else if (\"[\" == c) {\r\n                if (2 != this.type) {\r\n                    console.warn(\"没有key值，忽略掉一个数组\");\r\n                } else {\r\n                    if (null != this.cobj) {\r\n                        this.currArr.push(this.cobj);\r\n                    }\r\n                    this.cobj = { val: [] };\r\n                }\r\n            } else if (\":\" == c) {\r\n                if (null != this.currStr && 1 == this.type) {\r\n                    this.type = 2;\r\n                    if (null != this.cobj) {\r\n                        this.currArr.push(this.cobj);\r\n                    }\r\n                    if (null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                        //数组中的obj对象 eg: {b:[{aa:3,bb:4}],}\r\n                        var pcobj = this.cobj;\r\n                        this.cobj = { val: {} };\r\n                        pcobj.val.push(this.cobj.val);\r\n                        this.currArr.push(this.cobj);\r\n\r\n                    }\r\n                    this.cobj = { k: this.currStr.trim(), val: {} };\r\n\r\n\r\n\r\n                    this.currStr = \"\";\r\n                }\r\n            } else if (null != this.currStr) {\r\n                this.currStr += c;\r\n            }\r\n            i++;\r\n        }\r\n        return this.ret;\r\n    }\r\n\r\n\r\n}","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../RenderEngine/RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { RenderState } from \"../RenderEngine/RenderShader/RenderState\";\r\nimport { Shader3D, IShaderObjStructor, IShaderpassStructor } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { ParseJSON } from \"../utils/ParseJSON\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { TextureCube } from \"../resource/TextureCube\";\r\n\r\n\r\nconst CGBlock: string[] = [\"GLSL Start\", \"GLSL End\"];\r\nconst split: string[] = [\"#defineGLSL\", \"#endGLSL\"];\r\nconst shaderBlock: string[] = [\"Shader3D Start\", \"Shader3D End\"];\r\nconst shaderDataOBJ: Record<string, ShaderDataType> = {\r\n    \"Color\": ShaderDataType.Color,\r\n    \"Int\": ShaderDataType.Int,\r\n    \"Bool\": ShaderDataType.Bool,\r\n    \"Float\": ShaderDataType.Float,\r\n    \"Vector2\": ShaderDataType.Vector2,\r\n    \"Vector3\": ShaderDataType.Vector3,\r\n    \"Vector4\": ShaderDataType.Vector4,\r\n    \"Matrix4x4\": ShaderDataType.Matrix4x4,\r\n    \"Matrix3x3\": ShaderDataType.Matrix3x3,\r\n    \"Texture2D\": ShaderDataType.Texture2D,\r\n    \"TextureCube\": ShaderDataType.TextureCube,\r\n};\r\nconst CullStateMap: Record<string, CullMode> = {\r\n    \"Back\": CullMode.Back,\r\n    \"Front\": CullMode.Front,\r\n    \"Off\": CullMode.Off\r\n}\r\nconst BlendStateMap: Record<string, BlendType> = {\r\n    \"Disable\": BlendType.BLEND_DISABLE,\r\n    \"All\": BlendType.BLEND_ENABLE_ALL,\r\n    \"Seperate\": BlendType.BLEND_ENABLE_SEPERATE\r\n}\r\nconst BlendFactorMap: Record<string, BlendFactor> = {\r\n    \"Zero\": BlendFactor.Zero,\r\n    \"One\": BlendFactor.One,\r\n    \"SourceColor\": BlendFactor.SourceColor,\r\n    \"OneMinusSourceColor\": BlendFactor.OneMinusSourceColor,\r\n    \"DestinationColor\": BlendFactor.DestinationColor,\r\n    \"OneMinusDestinationColor\": BlendFactor.OneMinusDestinationColor,\r\n    \"SourceAlpha\": BlendFactor.SourceAlpha,\r\n    \"OneMinusSourceAlpha\": BlendFactor.OneMinusSourceAlpha,\r\n    \"DestinationAlpha\": BlendFactor.DestinationAlpha,\r\n    \"OneMinusDestinationAlpha\": BlendFactor.OneMinusDestinationAlpha,\r\n    \"SourceAlphaSaturate\": BlendFactor.SourceAlphaSaturate,\r\n    \"BlendColor\": BlendFactor.BlendColor,\r\n    \"OneMinusBlendColor\": BlendFactor.OneMinusBlendColor,\r\n}\r\nconst BlendEquationMap: Record<string, BlendEquationSeparate> = {\r\n    \"Add\": BlendEquationSeparate.ADD,\r\n    \"Subtract\": BlendEquationSeparate.SUBTRACT,\r\n    \"Reverse_substract\": BlendEquationSeparate.REVERSE_SUBTRACT,\r\n    \"Min\": BlendEquationSeparate.MIN,\r\n    \"Max\": BlendEquationSeparate.MAX\r\n}\r\n\r\nconst CompareFunctionMap: Record<string, CompareFunction> = {\r\n    \"Never\": CompareFunction.Never,\r\n    \"Less\": CompareFunction.Less,\r\n    \"Equal\": CompareFunction.Equal,\r\n    \"LessEqual\": CompareFunction.LessEqual,\r\n    \"Greater\": CompareFunction.Greater,\r\n    \"NotEqual\": CompareFunction.NotEqual,\r\n    \"GreaterEqual\": CompareFunction.GreaterEqual,\r\n    \"Always\": CompareFunction.Always,\r\n    \"Off\": CompareFunction.Off,\r\n}\r\n\r\nconst StencilOperationMap: Record<string, StencilOperation> = {\r\n    \"Keep\": StencilOperation.Keep,\r\n    \"Zero\": StencilOperation.Zero,\r\n    \"Replace\": StencilOperation.Replace,\r\n    \"IncrementSaturate\": StencilOperation.IncrementSaturate,\r\n    \"DecrementSaturate\": StencilOperation.DecrementSaturate,\r\n    \"Invert\": StencilOperation.Invert,\r\n    \"IncrementWrap\": StencilOperation.IncrementWrap,\r\n    \"DecrementWrap\": StencilOperation.DecrementWrap,\r\n}\r\n\r\n//TODO 格式改变\r\nexport class ShaderParser {\r\n\r\n    static parse(data: string, basePath?: string): Shader3D {\r\n        let obj = ShaderParser.getShaderBlock(data);\r\n        let cgmap = ShaderParser.getCGBlock(data);\r\n        ShaderParser.bindCG(obj, cgmap);\r\n        let shader = Shader3D.parse(obj, basePath);\r\n        return shader;\r\n    }\r\n\r\n    static compileToTree(sliceFlag: string[], data: string, sliceIndex: number): string[] {\r\n        if (sliceIndex == sliceFlag.length)\r\n            return [data];\r\n        let slicedata = sliceFlag[sliceIndex];\r\n        let splitmap = data.split(slicedata);\r\n        if (splitmap.length == 1)\r\n            return splitmap;\r\n        let map: string[] = [];\r\n        for (let i = 0, n = splitmap.length; i < n; i++) {\r\n            map = map.concat(ShaderParser.compileToTree(sliceFlag, splitmap[i], sliceIndex + 1));\r\n            (i != n - 1) && map.push(slicedata);\r\n        }\r\n        return map;\r\n    }\r\n\r\n    static getMapKey(value: string) {\r\n        let index = value.indexOf(\"\\n\");\r\n        value = value.slice(0, index).replace(\"\\r\", \"\");\r\n        value = value.slice(0, index).replace(\" \", \"\");\r\n        value = value.trim();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * get Shader Data\r\n     */\r\n    static getShaderBlock(source: string) {\r\n        let shaderObj: IShaderObjStructor = null;\r\n        try {\r\n            let i1 = source.indexOf(shaderBlock[0]);\r\n            if (i1 == -1)\r\n                throw new Error(`no '${shaderBlock[0]}' tag`);\r\n            let i2 = source.indexOf(shaderBlock[1]);\r\n            if (i2 == -1)\r\n                throw new Error(`no '${shaderBlock[1]}' tag`);\r\n            let shaderData = source.substring(i1 + shaderBlock[0].length, i2);\r\n            shaderObj = ParseJSON.parse(shaderData);//TODO new FIle parse(1、去掉繁琐的json格式报错，2、可以有注释)\r\n        } catch (err: any) {\r\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\r\n        }\r\n        return shaderObj;\r\n    }\r\n\r\n    /**\r\n     * get CG data for map\r\n     * @param source \r\n     * @returns \r\n     */\r\n    static getCGBlock(source: string): { [key: string]: string } {\r\n        let cgmap: { [key: string]: string } = {};\r\n        try {\r\n            let i1 = source.indexOf(CGBlock[0]);\r\n            if (i1 == -1)\r\n                throw new Error(`no '${shaderBlock[0]}' tag`);\r\n            let i2 = source.indexOf(CGBlock[1]);\r\n            if (i2 == -1)\r\n                throw new Error(`no '${shaderBlock[1]}' tag`);\r\n            let cgdata = source.substring(i1, i2);\r\n            let map = ShaderParser.compileToTree(split, cgdata, 0);\r\n            for (let i = 0, n = map.length; i < n; i++) {\r\n                let value = map[i];\r\n                if (value == split[0]) {\r\n                    i += 1\r\n                    let datavalue = map[i];\r\n                    let key = ShaderParser.getMapKey(datavalue);\r\n                    cgmap[key] = datavalue.slice(datavalue.indexOf(\"\\n\"), datavalue.length - 1);\r\n                }\r\n            }\r\n        } catch (err: any) {\r\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\r\n        }\r\n        return cgmap;\r\n    }\r\n\r\n    static bindCG(shaderObj: IShaderObjStructor, cgmap: { [key: string]: string }) {\r\n        //pass trans\r\n        let passArray = shaderObj.shaderPass as Array<IShaderpassStructor>;\r\n        if (passArray) {\r\n            passArray.forEach(element => {\r\n                if (element.VS) {\r\n                    element.VS = cgmap[element.VS];\r\n                }\r\n                if (element.FS) {\r\n                    element.FS = cgmap[element.FS];\r\n                }\r\n            });\r\n        }\r\n        //attribute map trans\r\n        let attributemap = shaderObj.attributeMap;\r\n        if (attributemap) {\r\n            let indexofAttribute = 0;\r\n            for (let i in attributemap) {\r\n                //TODO  这里的格式要重新理 \"name\":type or \"name\":[type,custom Attribute Location]\r\n                if (attributemap[i] instanceof Array) {\r\n                    let dataArray = attributemap[i];\r\n                    let type = ShaderParser.getShaderDataType(dataArray[0]);\r\n                    if (type == null) {\r\n                        console.warn(`${shaderObj.name}: unkown attribute type '${dataArray[0]}'`);\r\n                        continue;\r\n                    }\r\n                    attributemap[i] = [dataArray[1], type];\r\n                } else {\r\n                    let type = ShaderParser.getShaderDataType(attributemap[i]);\r\n                    if (type == null) {\r\n                        console.warn(`${shaderObj.name}: unkown attribute type '${attributemap[i]}'`);\r\n                        continue;\r\n                    }\r\n                    attributemap[i] = [indexofAttribute, type];\r\n                    indexofAttribute++;\r\n                }\r\n\r\n            }\r\n        }\r\n        //uniform map trans\r\n        let uniformMap = shaderObj.uniformMap;\r\n        if (uniformMap) {\r\n            let defaultmap: any = {};\r\n            shaderObj.defaultValue = defaultmap;\r\n\r\n            let newUniformMap: any = {};\r\n            shaderObj.uniformMap = newUniformMap;\r\n\r\n            for (let k in uniformMap) {\r\n                let entry = uniformMap[k];\r\n                if (entry.serializable === false)\r\n                    continue;\r\n\r\n                let dataType = ShaderParser.getShaderDataType(entry.type);\r\n                if (dataType == null) {\r\n                    console.warn(`${shaderObj.name}: unkown uniform type '${entry.type}'`);\r\n                    continue;\r\n                }\r\n\r\n                if (entry.default != null)\r\n                    defaultmap[k] = ShaderParser.getDefaultData(dataType, entry.default);\r\n\r\n                if (entry.block) {\r\n                    let block: Record<string, ShaderDataType> = newUniformMap[entry.block];\r\n                    if (!block)\r\n                        newUniformMap[entry.block] = block = {};\r\n                    block[k] = dataType;\r\n                }\r\n                else\r\n                    newUniformMap[k] = dataType;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRenderState(obj: Record<string, string | boolean | number | string[]>, renderState: RenderState) {\r\n        if (!obj) {\r\n            return;\r\n        }\r\n\r\n        renderState.cull = CullStateMap[<string>obj.cull];\r\n        renderState.blend = BlendStateMap[<string>obj.blend];\r\n        renderState.srcBlend = BlendFactorMap[<string>obj.srcBlend];\r\n        renderState.dstBlend = BlendFactorMap[<string>obj.dstBlend];\r\n        renderState.srcBlendRGB = BlendFactorMap[<string>obj.srcBlendRGB];\r\n        renderState.dstBlendRGB = BlendFactorMap[<string>obj.dstBlendRGB];\r\n        renderState.srcBlendAlpha = BlendFactorMap[<string>obj.srcBlendAlpha];\r\n        renderState.dstBlendAlpha = BlendFactorMap[<string>obj.dstBlendAlpha];\r\n        renderState.blendEquation = BlendEquationMap[<string>obj.blendEquation];\r\n        renderState.blendEquationRGB = BlendEquationMap[<string>obj.blendEquationRGB];\r\n        renderState.blendEquationAlpha = BlendEquationMap[<string>obj.blendEquationAlpha];\r\n        renderState.depthTest = CompareFunctionMap[<string>obj.depthTest];\r\n        renderState.depthWrite = <boolean>obj.depthWrite;\r\n        renderState.stencilRef = <number>obj.stencilRef;\r\n        renderState.stencilTest = CompareFunctionMap[<string>obj.stencilTest];\r\n        renderState.stencilWrite = <boolean>obj.stencilWrite;\r\n        let stencilOp = <string[]>obj.stencilOp;\r\n        let stencilFail = stencilOp ? stencilOp[0] : null;\r\n        let stencilZFail = stencilOp ? stencilOp[1] : null;\r\n        let stencilZPass = stencilOp ? stencilOp[2] : null;\r\n        renderState.stencilOp.x = StencilOperationMap[stencilFail];\r\n        renderState.stencilOp.y = StencilOperationMap[stencilZFail];\r\n        renderState.stencilOp.z = StencilOperationMap[stencilZPass];\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * trans string to ShaderDataType\r\n     * @param value \r\n     * @returns \r\n     */\r\n    static getShaderDataType(value: string): ShaderDataType {\r\n        return shaderDataOBJ[value];\r\n    }\r\n\r\n    /**\r\n     * set ShaderData Value\r\n     * @param type \r\n     * @param data \r\n     * @returns \r\n     */\r\n    static getDefaultData(type: ShaderDataType, data: any) {\r\n        switch (type) {\r\n            case ShaderDataType.Int:\r\n            case ShaderDataType.Float:\r\n            case ShaderDataType.Bool:\r\n                return data;\r\n            case ShaderDataType.Vector2:\r\n                return new Vector2(data[0], data[1]);\r\n            case ShaderDataType.Vector3:\r\n                return new Vector3(data[0], data[1], data[2]);\r\n            case ShaderDataType.Vector4:\r\n                return new Vector4(data[0], data[1], data[2], data[3]);\r\n            case ShaderDataType.Color:\r\n                return new Color(data[0], data[1], data[2], data[3]);\r\n            case ShaderDataType.Matrix4x4:\r\n                let mat = new Matrix4x4();\r\n                mat.cloneByArray(data);\r\n                return mat;\r\n            case ShaderDataType.Matrix3x3:\r\n                let mat3 = new Matrix3x3();\r\n                mat3.cloneByArray(data);\r\n                return mat3;\r\n            case ShaderDataType.Texture2D:\r\n                let tex = null;\r\n                if (data == \"white\")\r\n                    tex = Texture2D.whiteTexture;\r\n                else if (data == \"black\")\r\n                    tex = Texture2D.blackTexture;\r\n                else if (data == \"gray\")\r\n                    tex = Texture2D.grayTexture;\r\n                else if (data == \"normal\")\r\n                    tex = Texture2D.normalTexture;\r\n                return tex;\r\n            case ShaderDataType.TextureCube:\r\n                let texcube = TextureCube.grayTexture;\r\n                if (data == \"white\")\r\n                    texcube = TextureCube.whiteTexture;\r\n                else if (data == \"black\")\r\n                    texcube = TextureCube.blackTexture;\r\n                else if (data == \"gray\")\r\n                    texcube = TextureCube.grayTexture;\r\n                return texcube;\r\n        }\r\n    }\r\n}","\r\nimport { IShaderpassStructor, Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { SubShader } from \"../RenderEngine/RenderShader/SubShader\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { ShaderCompile } from \"../webgl/utils/ShaderCompile\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ShaderParser } from \"./ShaderParser\";\r\n\r\nclass ShaderLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        if (task.ext === \"bps\")\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"shader\");\r\n\r\n        return task.loader.fetch(url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let obj = ShaderParser.getShaderBlock(data);\r\n            let cgmap = ShaderParser.getCGBlock(data);\r\n            ShaderParser.bindCG(obj, cgmap);\r\n\r\n            if (!obj.name || !obj.uniformMap)\r\n                return null;\r\n\r\n            let basePath = URL.getPath(task.url);\r\n            let passArray: IShaderpassStructor[] = obj.shaderPass;\r\n            return Promise.all(passArray.map(pass => ShaderCompile.compileAsync(pass.VS, pass.FS, basePath))).then(compiledObjs => {\r\n                if (compiledObjs.findIndex(obj => obj == null) != -1) {\r\n                    Loader.warn(\"some pass null \" + task.url);\r\n                    return null;\r\n                }\r\n\r\n                let shader = Shader3D.add(obj.name, obj.enableInstancing, obj.supportReflectionProbe);\r\n                let subshader = new SubShader(obj.attributeMap ? obj.attributeMap : SubShader.DefaultAttributeMap, obj.uniformMap, obj.defaultValue);\r\n                shader.addSubShader(subshader);\r\n\r\n                for (let i in passArray) {\r\n                    let pass = subshader._addShaderPass(compiledObjs[i], passArray[i].pipeline);\r\n                    pass.statefirst = passArray[i].statefirst ?? false;\r\n                    if (pass.statefirst) {\r\n                        ShaderParser.getRenderState(passArray[i].renderState, pass.renderState);\r\n                    }\r\n                }\r\n                return shader;\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"shader\", \"bps\"], ShaderLoader);","import { IResourceLoader, ILoadTask, Loader } from \"../../net/Loader\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\nclass WebAudioLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return WebAudioSound.ctx.decodeAudioData(data);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mp3\", \"wav\", \"ogg\"], WebAudioLoader, Loader.SOUND);","import { ClassUtils } from \"./utils/ClassUtils\";\r\nimport { Component } from \"./components/Component\";\r\nimport { Animation } from \"./display/Animation\";\r\nimport { AnimationBase } from \"./display/AnimationBase\";\r\nimport { BitmapFont } from \"./display/BitmapFont\";\r\nimport { EffectAnimation } from \"./display/EffectAnimation\";\r\nimport { FrameAnimation } from \"./display/FrameAnimation\";\r\nimport { Input } from \"./display/Input\";\r\nimport { Node } from \"./display/Node\";\r\nimport { Scene } from \"./display/Scene\";\r\nimport { Sprite } from \"./display/Sprite\";\r\nimport { Stage } from \"./display/Stage\";\r\nimport { Text } from \"./display/Text\";\r\nimport { BlurFilter } from \"./filters/BlurFilter\";\r\nimport { ColorFilter } from \"./filters/ColorFilter\";\r\nimport { GlowFilter } from \"./filters/GlowFilter\";\r\nimport { Point } from \"./maths/Point\";\r\nimport { Rectangle } from \"./maths/Rectangle\";\r\nimport { SoundNode } from \"./media/SoundNode\";\r\nimport { VideoNode } from \"./media/VideoNode\";\r\nimport { Texture } from \"./resource/Texture\";\r\nimport { Texture2D } from \"./resource/Texture2D\";\r\nimport { Animator2D } from \"./components/Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./components/AnimatorControllerLayer2D\";\r\nimport { AnimatorState2D } from \"./components/AnimatorState2D\";\r\nimport { AnimationClip2D } from \"./components/AnimationClip2D\";\r\nimport { Animation2DParm } from \"./components/Animation2DParm\";\r\nimport { Animation2DCondition } from \"./components/Animation2DCondition\";\r\nimport { Prefab } from \"./resource/HierarchyResource\";\r\nimport { Widget } from \"./components/Widget\";\r\nimport { AnimatorController2D } from \"./components/AnimatorController2D\";\r\nimport { Vector2 } from \"./maths/Vector2\";\r\nimport { Vector3 } from \"./maths/Vector3\";\r\nimport { Vector4 } from \"./maths/Vector4\";\r\nimport { Quaternion } from \"./maths/Quaternion\";\r\nimport { Color } from \"./maths/Color\";\r\nimport { Script } from \"./components/Script\";\r\nimport { Matrix } from \"./maths/Matrix\";\r\nimport { Matrix3x3 } from \"./maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"./maths/Matrix4x4\";\r\n\r\nimport \"./loaders/TextResourceLoader\";\r\nimport \"./loaders/AtlasLoader\";\r\nimport \"./loaders/HierarchyLoader\";\r\nimport \"./loaders/TextureLoader\";\r\nimport \"./loaders/AnimationClip2DLoader\";\r\nimport \"./loaders/AnimationController2DLoader\";\r\nimport \"./loaders/NullLoader\";\r\nimport \"./loaders/BitmapFontLoader\";\r\nimport \"./loaders/TTFFontLoader\";\r\nimport \"./loaders/MaterialLoader\";\r\nimport \"./loaders/ShaderLoader\";\r\nimport \"./media/webaudio/WebAudioLoader\";\r\n\r\nlet c = ClassUtils.regClass;\r\n\r\nc(\"Record\", Object);\r\nc(\"Node\", Node);\r\nc(\"Sprite\", Sprite);\r\nc(\"Widget\", Widget);\r\nc(\"Text\", Text);\r\nc(\"Input\", Input);\r\nc(\"AnimationBase\", AnimationBase);\r\nc(\"Animation\", Animation);\r\nc(\"FrameAnimation\", FrameAnimation);\r\nc(\"EffectAnimation\", EffectAnimation);\r\nc(\"SoundNode\", SoundNode);\r\nc(\"VideoNode\", VideoNode);\r\n\r\nc(\"Scene\", Scene);\r\nc(\"Stage\", Stage);\r\nc(\"Component\", Component);\r\nc(\"Script\", Script);\r\nc(\"BitmapFont\", BitmapFont);\r\nc(\"BlurFilter\", BlurFilter);\r\nc(\"ColorFilter\", ColorFilter);\r\nc(\"GlowFilter\", GlowFilter);\r\nc(\"Point\", Point);\r\nc(\"Rectangle\", Rectangle);\r\nc(\"Texture\", Texture);\r\nc(\"Texture2D\", Texture2D);\r\n\r\nc(\"Prefab\", Prefab);\r\n\r\nc(\"Animator2D\", Animator2D);\r\nc(\"AnimatorControllerLayer2D\", AnimatorControllerLayer2D);\r\nc(\"AnimatorState2D\", AnimatorState2D);\r\nc(\"AnimationClip2D\", AnimationClip2D);\r\nc(\"AnimatorController2D\", AnimatorController2D);\r\nc(\"Animation2DParm\", Animation2DParm);\r\nc(\"Animation2DCondition\", Animation2DCondition);\r\n\r\nc(\"Vector2\", Vector2);\r\nc(\"Vector3\", Vector3);\r\nc(\"Vector4\", Vector4);\r\nc(\"Quaternion\", Quaternion);\r\nc(\"Color\", Color);\r\nc(\"Matrix\", Matrix);\r\nc(\"Matrix3x3\", Matrix3x3);\r\nc(\"Matrix4x4\", Matrix4x4);","/**\r\n * <p> <code>LocalStorage</code> 类用于没有时间限制的数据存储。</p>\r\n */\r\nexport class LocalStorage {\r\n\r\n    /**@ 基础类*/\r\n    static _baseClass: any;\r\n    /**\r\n     *  数据列表。\r\n     */\r\n    static items: any;\r\n    /**\r\n     * 表示是否支持  <code>LocalStorage</code>。\r\n     */\r\n    static support: boolean = false;\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        if (!LocalStorage._baseClass) {\r\n            LocalStorage._baseClass = Storage;\r\n            Storage.init();\r\n        }\r\n        LocalStorage.items = LocalStorage._baseClass.items;\r\n        LocalStorage.support = LocalStorage._baseClass.support;\r\n        return LocalStorage.support;\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名和键值，字符串类型。\r\n     * @param key 键名。\r\n     * @param value 键值。\r\n     */\r\n    static setItem(key: string, value: string): void {\r\n        LocalStorage._baseClass.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名的值。\r\n     * @param key 键名。\r\n     * @return 字符串型值。\r\n     */\r\n    static getItem(key: string): string {\r\n        return LocalStorage._baseClass.getItem(key);\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名及其对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n     */\r\n    static setJSON(key: string, value: any): void {\r\n        LocalStorage._baseClass.setJSON(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @return <code>Object</code> 类型值\r\n     */\r\n    static getJSON(key: string): any {\r\n        return LocalStorage._baseClass.getJSON(key);\r\n    }\r\n\r\n    /**\r\n     * 删除指定键名的信息。\r\n     * @param key 键名。\r\n     */\r\n    static removeItem(key: string): void {\r\n        LocalStorage._baseClass.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * 清除本地存储信息。\r\n     */\r\n    static clear(): void {\r\n        LocalStorage._baseClass.clear();\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass Storage {\r\n\r\n\t/**\r\n\t *  数据列表。\r\n\t */\r\n    static items: any;\r\n\t/**\r\n\t * 表示是否支持  <code>LocalStorage</code>。\r\n\t */\r\n    static support: boolean = false;\r\n\r\n    static init(): void {\r\n        try { Storage.support = true; Storage.items = window.localStorage; Storage.setItem('laya', '1'); Storage.removeItem('laya'); } catch (e) { Storage.support = false; } if (!Storage.support) console.log('LocalStorage is not supprot or browser is private mode.');\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和键值，字符串类型。\r\n\t * @param key 键名。\r\n\t * @param value 键值。\r\n\t */\r\n    static setItem(key: string, value: string): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, value);\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的值。\r\n\t * @param key 键名。\r\n\t * @return 字符串型值。\r\n\t */\r\n    static getItem(key: string): string {\r\n        return Storage.support ? Storage.items.getItem(key) : null;\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和它的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n\t */\r\n    static setJSON(key: string, value: any): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, JSON.stringify(value));\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @return <code>Object</code> 类型值\r\n\t */\r\n    static getJSON(key: string): any {\r\n        try{\r\n            let obj = JSON.parse(Storage.support ? Storage.items.getItem(key) : null);\r\n            return obj;\r\n        }catch(err){\r\n            return Storage.items.getItem(key);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除指定键名的信息。\r\n\t * @param key 键名。\r\n\t */\r\n    static removeItem(key: string): void {\r\n        Storage.support && Storage.items.removeItem(key);\r\n    }\r\n\r\n\t/**\r\n\t * 清除本地存储信息。\r\n\t */\r\n    static clear(): void {\r\n        Storage.support && Storage.items.clear();\r\n    }\r\n\r\n}\r\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\r\n\r\nexport class PrimitiveSV extends Value2D {\r\n    constructor() {\r\n        super(RenderSpriteData.Primitive);\r\n        this._defaultShader = Shader3D.find(\"Sprite2DPrimitive\");\r\n    }\r\n}\r\n\r\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { Vector2 } from \"../../../../maths/Vector2\";\r\nimport { Vector4 } from \"../../../../maths/Vector4\";\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\";\r\n\r\nexport class TextureSV extends Value2D {\r\n    strength: number = 0;//TODO  delete？？\r\n\r\n    private _blurInfo: Vector2 = new Vector2();//TODO  shader中没有用\r\n    public get blurInfo(): Vector2 {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_BLURINFO);\r\n    }\r\n    public set blurInfo(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_BLURINFO, value);\r\n    }\r\n\r\n    private _u_blurInfo1: Vector4 = new Vector4();\r\n    public get u_blurInfo1(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_BLURINFO1);\r\n    }\r\n    public set u_blurInfo1(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_BLURINFO1, value);\r\n    }\r\n\r\n    private _u_blurInfo2: Vector4 = new Vector4();\r\n    public get u_blurInfo2(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_BLURINFO2);\r\n    }\r\n    public set u_blurInfo2(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_BLURINFO2, value);\r\n    }\r\n\r\n    private _u_TexRange: Vector4 = new Vector4();\r\n    public get u_TexRange(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_TEXRANGE)\r\n    }\r\n    public set u_TexRange(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_TEXRANGE, value);\r\n    }\r\n    private _colorMat: Matrix4x4 = new Matrix4x4();\r\n    public get colorMat(): Matrix4x4 {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT);\r\n    }\r\n    public set colorMat(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT, value);\r\n    }\r\n\r\n    private _colorAlpha: Vector4 = new Vector4();\r\n    public get colorAlpha(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLORALPHA);\r\n    }\r\n    public set colorAlpha(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_COLORALPHA, value);\r\n    }\r\n\r\n    private _strength_sig2_2sig2_gauss1: Vector4 = new Vector4();\r\n    public get strength_sig2_2sig2_gauss1(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1);\r\n    }\r\n    public set strength_sig2_2sig2_gauss1(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, value);\r\n    }\r\n\r\n    constructor() {\r\n        super(RenderSpriteData.Texture2D);\r\n        this._defaultShader = Shader3D.find(\"Sprite2DTexture\");\r\n        this.blurInfo = this._blurInfo;\r\n        this.u_blurInfo1 = this._u_blurInfo1;\r\n        this.u_blurInfo2 = this._u_blurInfo2;\r\n        this.u_TexRange = this._u_TexRange;\r\n        this.colorMat = this._colorMat;\r\n        this.colorAlpha = this._colorAlpha;\r\n        this.strength_sig2_2sig2_gauss1 = this._strength_sig2_2sig2_gauss1;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    clear(): void {\r\n        this.texture = null;\r\n        //this.shader = null;\r\n        this.defines._defineDatas.clear();\r\n\r\n    }\r\n}\r\n","import { Browser } from \"./Browser\";\r\n/**\r\n * <code>Mouse</code> 类用于控制鼠标光标样式。\r\n */\r\nexport class Mouse {\r\n    /**@private */\r\n    private static _style: any;\r\n    /**@private */\r\n    private static _preCursor: string;\r\n\r\n    /**\r\n     * 设置鼠标样式\r\n     * @param cursorStr\r\n     * 例如auto move no-drop col-resize\r\n     * all-scroll pointer not-allowed row-resize\r\n     * crosshair progress e-resize ne-resize\r\n     * default text n-resize nw-resize\r\n     * help vertical-text s-resize se-resize\r\n     * inherit wait w-resize sw-resize\r\n     */\r\n    static set cursor(cursorStr: string) {\r\n        Mouse._style.cursor = cursorStr;\r\n    }\r\n\r\n    static get cursor(): string {\r\n        return Mouse._style.cursor;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        Mouse._style = Browser.document.body.style;\r\n    }\r\n\r\n    /**\r\n     * 隐藏鼠标\r\n     */\r\n    static hide(): void {\r\n        if (Mouse.cursor != \"none\") {\r\n            Mouse._preCursor = Mouse.cursor;\r\n            Mouse.cursor = \"none\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示鼠标\r\n     */\r\n    static show(): void {\r\n        if (Mouse.cursor == \"none\") {\r\n            if (Mouse._preCursor) {\r\n                Mouse.cursor = Mouse._preCursor;\r\n            } else {\r\n                Mouse.cursor = \"auto\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Mesh2D } from \"./Mesh2D\";\r\nimport { RenderParams } from \"../../RenderEngine/RenderEnum/RenderParams\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshParticle2D extends Mesh2D {\r\n    static const_stride: number = 116;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n    static __init__(): void {\r\n        const glfloat = LayaGL.renderEngine.getParams(RenderParams.FLOAT);\r\n        MeshParticle2D._fixattriInfo = [\r\n            glfloat, 4, 0,\t//CornerTextureCoordinate\r\n            glfloat, 3, 16,//pos\r\n            glfloat, 3, 28,//vel\r\n            glfloat, 4, 40,//start color\r\n            glfloat, 4, 56,//end color\r\n            glfloat, 3, 72,//size,rot\r\n            glfloat, 2, 84,//radius\r\n            glfloat, 4, 92,//radian\r\n            glfloat, 1, 108,//AgeAddScale\r\n            glfloat, 1, 112];\r\n\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    constructor(maxNum: number) {\r\n        super(MeshParticle2D.const_stride, maxNum * 4 * MeshParticle2D.const_stride, 4);\t\t//ib 先4\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshParticle2D._fixattriInfo);\r\n        this.createQuadIB(maxNum);\r\n        this._quadNum = maxNum;\r\n\r\n        if (!MeshParticle2D.vertexDeclaration) {\r\n            MeshParticle2D.vertexDeclaration = new VertexDeclaration(116, [\r\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\r\n                new VertexElement(16, VertexElementFormat.Vector3, 1),\r\n                new VertexElement(28, VertexElementFormat.Vector3, 2),\r\n                new VertexElement(40, VertexElementFormat.Vector4, 3),\r\n                new VertexElement(56, VertexElementFormat.Vector4, 4),\r\n                new VertexElement(72, VertexElementFormat.Vector3, 5),\r\n                new VertexElement(84, VertexElementFormat.Vector2, 6),\r\n                new VertexElement(92, VertexElementFormat.Vector4, 7),\r\n                new VertexElement(108, VertexElementFormat.Single, 8),\r\n                new VertexElement(112, VertexElementFormat.Single, 9)\r\n            ]);\r\n        }\r\n\r\n        this._vb.vertexDeclaration = MeshParticle2D.vertexDeclaration;\r\n    }\r\n\r\n    setMaxParticleNum(maxNum: number): void {\r\n        this._vb.buffer2D._resizeBuffer(maxNum * 4 * MeshParticle2D.const_stride, false);\r\n        this.createQuadIB(maxNum);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    //TODO:coverage\r\n    static getAMesh(maxNum: number): MeshParticle2D {\r\n        //console.log('getmesh');\r\n        if (MeshParticle2D._POOL.length) {\r\n            var ret: MeshParticle2D = MeshParticle2D._POOL.pop();\r\n            ret.setMaxParticleNum(maxNum);\r\n            return ret;\r\n        }\r\n        return new MeshParticle2D(maxNum);\r\n    }\r\n\r\n    /**\r\n     * 把本对象放到回收池中，以便getMesh能用。\r\n     * @override\r\n     */\r\n    //TODO:coverage\r\n    releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshParticle2D._POOL.push(this);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._vb.deleteBuffer();\r\n        //ib用deletebuffer么\r\n    }\r\n}\r\n\r\n","﻿import { ILaya } from \"./ILaya\";\r\nimport { Input } from \"./laya/display/Input\";\r\nimport { Sprite } from \"./laya/display/Sprite\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\nimport { InputManager } from \"./laya/events/InputManager\";\r\nimport { SoundManager } from \"./laya/media/SoundManager\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { LocalStorage } from \"./laya/net/LocalStorage\";\r\nimport { Render } from \"./laya/renders/Render\";\r\nimport { RenderSprite } from \"./laya/renders/RenderSprite\";\r\nimport { Context } from \"./laya/resource/Context\";\r\nimport { HTMLCanvas } from \"./laya/resource/HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./laya/resource/RenderTexture2D\";\r\nimport { Texture } from \"./laya/resource/Texture\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { CacheManger } from \"./laya/utils/CacheManger\";\r\nimport { ColorUtils } from \"./laya/utils/ColorUtils\";\r\nimport { Timer } from \"./laya/utils/Timer\";\r\nimport { PrimitiveSV } from \"./laya/webgl/shader/d2/value/PrimitiveSV\";\r\nimport { TextureSV } from \"./laya/webgl/shader/d2/value/TextureSV\";\r\nimport { RenderSpriteData, Value2D } from \"./laya/webgl/shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"./laya/webgl/utils/RenderState2D\";\r\nimport { WebGL } from \"./laya/webgl/WebGL\";\r\nimport { Mouse } from \"./laya/utils/Mouse\";\r\nimport { MeshVG } from \"./laya/webgl/utils/MeshVG\";\r\nimport { MeshParticle2D } from \"./laya/webgl/utils/MeshParticle2D\";\r\nimport { MeshQuadTexture } from \"./laya/webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"./laya/webgl/utils/MeshTexture\";\r\nimport { WeakObject } from \"./laya/utils/WeakObject\";\r\nimport { RenderStateContext } from \"./laya/RenderEngine/RenderStateContext\";\r\nimport { RenderClearFlag } from \"./laya/RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { IStageConfig, LayaEnv } from \"./LayaEnv\";\r\nimport { Color } from \"./laya/maths/Color\";\r\nimport { URL } from \"./laya/net/URL\";\r\nimport { RunDriver } from \"./laya/utils/RunDriver\";\r\nimport { Config } from \"./Config\";\r\nimport { Shader3D } from \"./laya/RenderEngine/RenderShader/Shader3D\";\r\nimport { LayaGL } from \"./laya/layagl/LayaGL\";\r\nimport { Material } from \"./laya/resource/Material\";\r\n\r\n/**\r\n * <code>Laya</code> 是全局对象的引用入口集。\r\n * Laya类引用了一些常用的全局对象，比如Laya.stage：舞台，Laya.timer：时间管理器，Laya.loader：加载管理器，使用时注意大小写。\r\n */\r\nexport class Laya {\r\n    /*[COMPILER OPTIONS:normal]*/\r\n    /** 舞台对象的引用。*/\r\n    static stage: Stage = null;\r\n\r\n    /**@private 系统时钟管理器，引擎内部使用*/\r\n    static systemTimer: Timer = null;\r\n    /**@private 组件的物理时钟管理器*/\r\n    static physicsTimer: Timer = null;\r\n    /**游戏主时针，同时也是管理场景，动画，缓动等效果时钟，通过控制本时针缩放，达到快进慢播效果*/\r\n    static timer: Timer = null;\r\n    /** 加载管理器的引用。*/\r\n    static loader: Loader = null;\r\n\r\n    /** 2d物理引擎 @internal*/\r\n    static _physiscs2D: { enable: () => Promise<void> };\r\n\r\n    /**@private Render 类的引用。*/\r\n    static render: Render;\r\n    /**是否是微信小游戏子域，默认为false**/\r\n    static isWXOpenDataContext: boolean = false;\r\n    /**微信小游戏是否需要在主域中自动将加载的文本数据自动传递到子域，默认 false**/\r\n    static isWXPosMsg: boolean = false;\r\n    /**@internal */\r\n    static WasmModules: { [key: string]: { exports: WebAssembly.Exports, memory: WebAssembly.Memory } } = {};\r\n\r\n    /**\r\n     * 初始化引擎。使用引擎需要先初始化引擎，否则可能会报错。\r\n     */\r\n    static init(stageConfig?: IStageConfig): Promise<void>;\r\n    /**\r\n     * 初始化引擎。使用引擎需要先初始化引擎，否则可能会报错。\r\n     * @param\twidth 初始化的游戏窗口宽度，又称设计宽度。\r\n     * @param\theight\t初始化的游戏窗口高度，又称设计高度。\r\n     * @param\tplugins 参数已失效。\r\n     */\r\n    static init(width: number, height: number, ...plugins: any[]): Promise<void>;\r\n    static init(...args: any[]): Promise<void> {\r\n        if (_isinit)\r\n            return Promise.resolve();\r\n        _isinit = true;\r\n\r\n        let stageConfig: IStageConfig;\r\n        if (typeof (args[0]) === \"number\") {\r\n            stageConfig = {\r\n                designWidth: args[0],\r\n                designHeight: args[1]\r\n            };\r\n        }\r\n        else\r\n            stageConfig = args[0];\r\n\r\n        ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = arrayBufferSlice);\r\n        Float32Array.prototype.slice || (Float32Array.prototype.slice = float32ArraySlice);\r\n        Uint16Array.prototype.slice || (Uint16Array.prototype.slice = uint16ArraySlice);\r\n        Uint8Array.prototype.slice || (Uint8Array.prototype.slice = uint8ArraySlice);\r\n\r\n        Browser.__init__();\r\n        URL.__init__();\r\n\r\n        let laya3D = (<any>window)[\"Laya3D\"];\r\n        if (laya3D) {\r\n            if (!WebGL.enable())\r\n                return Promise.reject(\"Must support webGL!\");\r\n\r\n            RunDriver.changeWebGLSize = laya3D._changeWebGLSize;\r\n            Render.is3DMode = true;\r\n        }\r\n\r\n        // 创建主画布\r\n        //这个其实在Render中感觉更合理，但是runtime要求第一个canvas是主画布，所以必须在下面的那个离线画布之前\r\n        var mainCanv = Browser.mainCanvas = new HTMLCanvas(true);\r\n        //Render._mainCanvas = mainCanv;\r\n        var style: any = mainCanv.source.style;\r\n        style.position = 'absolute';\r\n        style.top = style.left = \"0px\";\r\n        style.background = \"#000000\";\r\n\r\n        if (!Browser.onKGMiniGame && !Browser.onAlipayMiniGame) {\r\n            Browser.container.appendChild(mainCanv.source);//xiaosong add\r\n        }\r\n\r\n        // 创建离屏画布\r\n        //创建离线画布\r\n        Browser.canvas = new HTMLCanvas(true);\r\n        Browser.context = <CanvasRenderingContext2D>(Browser.canvas.getContext('2d') as any);\r\n        Browser.supportWebAudio = SoundManager.__init__();\r\n        Browser.supportLocalStorage = LocalStorage.__init__();\r\n\r\n        //temp TODO 以后分包\r\n        Laya.systemTimer = new Timer(false);\r\n        systemTimer = Timer.gSysTimer = Laya.systemTimer;\r\n        Laya.physicsTimer = new Timer(false);\r\n        Laya.timer = new Timer(false);\r\n\r\n        ILaya.systemTimer = Laya.systemTimer;\r\n        timer = ILaya.timer = Laya.timer;\r\n        physicsTimer = ILaya.physicsTimer = Laya.physicsTimer;\r\n\r\n        Laya.loader = new Loader();\r\n        ILaya.Laya = Laya;\r\n        loader = ILaya.loader = Laya.loader;\r\n\r\n        WeakObject.__init__();\r\n        Mouse.__init__();\r\n\r\n        if (LayaEnv.beforeInit) {\r\n            if (LayaEnv.isPlaying)\r\n                LayaEnv.beforeInit(stageConfig);\r\n            else\r\n                LayaEnv.beforeInit = null;\r\n        }\r\n\r\n        if (LayaEnv.isConch) {\r\n            Laya.enableNative();\r\n        }\r\n        CacheManger.beginCheck();\r\n\r\n        stage = Laya.stage = new Stage();\r\n        ILaya.stage = Laya.stage;\r\n\r\n        if (LayaEnv.isConch && (window as any).conch.setGlobalRepaint) {\r\n            (window as any).conch.setGlobalRepaint(stage.setGlobalRepaint.bind(stage));\r\n        }\r\n        Shader3D.init();\r\n        MeshQuadTexture.__int__();\r\n        MeshVG.__init__();\r\n        MeshTexture.__init__();\r\n\r\n\r\n        return LayaGL.renderOBJCreate.createEngine(null, Browser.mainCanvas).then(() => {\r\n            return Laya.initRender2D(stageConfig);\r\n        })\r\n    }\r\n\r\n    //createEngine\r\n    //initRender2D\r\n\r\n    static initRender2D(stageConfig: IStageConfig): Promise<void> {\r\n        Laya.render = new Render(0, 0, Browser.mainCanvas);\r\n        render = Laya.render;\r\n        stage.size(stageConfig.designWidth, stageConfig.designHeight);\r\n        if (stageConfig.scaleMode)\r\n            stage.scaleMode = stageConfig.scaleMode;\r\n        if (stageConfig.screenMode)\r\n            stage.screenMode = stageConfig.screenMode;\r\n        if (stageConfig.alignV)\r\n            stage.alignV = stageConfig.alignV;\r\n        if (stageConfig.alignH)\r\n            stage.alignH = stageConfig.alignH;\r\n        if (Config.isAlpha)\r\n            stage.bgColor = null;\r\n        else if (stageConfig.backgroundColor)\r\n            stage.bgColor = stageConfig.backgroundColor;\r\n\r\n        ((<any>window)).stage = stage;\r\n\r\n        RenderStateContext.__init__();\r\n        MeshParticle2D.__init__();\r\n        RenderSprite.__init__();\r\n        Material.__initDefine__();\r\n        InputManager.__init__(stage, Render.canvas);\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            Input.isAppUseNewInput = true;\r\n        }\r\n        Input.__init__();\r\n        SoundManager.autoStopMusic = true;\r\n        //Init internal 2D Value2D\r\n        Value2D._initone(RenderSpriteData.Texture2D, TextureSV);\r\n        Value2D._initone(RenderSpriteData.Primitive, PrimitiveSV);\r\n\r\n        let initPhysics2D = () => {\r\n            if (Laya._physiscs2D)\r\n                return Laya._physiscs2D.enable().then(() => init3D());\r\n            else\r\n                return init3D();\r\n        };\r\n\r\n        let init3D = () => {\r\n            let laya3D = (<any>window)[\"Laya3D\"];\r\n            if (laya3D)\r\n                return laya3D.__init__().then(() => complete());\r\n            else\r\n                return complete();\r\n        };\r\n\r\n        let complete = () => {\r\n            _onInitModuleCallbacks.forEach(c => c());\r\n            _onInitModuleCallbacks.length = 0;\r\n\r\n            if (LayaEnv.afterInit) {\r\n                if (LayaEnv.isPlaying)\r\n                    LayaEnv.afterInit();\r\n                else\r\n                    LayaEnv.afterInit = null;\r\n            }\r\n\r\n            return Promise.resolve();\r\n        };\r\n\r\n        return initPhysics2D();\r\n    }\r\n\r\n    static createRender(): Render {\r\n        return new Render(0, 0, Browser.mainCanvas);\r\n    }\r\n\r\n    static addWasmModule(id: string, exports: WebAssembly.Exports, memory: WebAssembly.Memory) {\r\n        Laya.WasmModules[id] = { exports, memory };\r\n    }\r\n\r\n    /**\r\n     * 表示是否捕获全局错误并弹出提示。默认为false。\r\n     * 适用于移动设备等不方便调试的时候，设置为true后，如有未知错误，可以弹窗抛出详细错误堆栈。\r\n     */\r\n    static alertGlobalError(value: boolean) {\r\n        var erralert: number = 0;\r\n        if (value) {\r\n            Browser.window.onerror = function (msg: string, url: string, line: string, column: string, detail: any): void {\r\n                if (erralert++ < 5 && detail)\r\n                    this.alert(\"出错啦，请把此信息截图给研发商\\n\" + msg + \"\\n\" + detail.stack);\r\n            }\r\n        } else {\r\n            Browser.window.onerror = null;\r\n        }\r\n    }\r\n    /**@internal */\r\n    private static _evcode: string = \"eva\" + \"l\";\r\n\r\n    /**@internal */\r\n    static _runScript(script: string): any {\r\n        return Browser.window[Laya._evcode](script);\r\n    }\r\n\r\n    /**\r\n     * 开启DebugPanel\r\n     * @param\tdebugJsPath laya.debugtool.js文件路径\r\n     */\r\n    static enableDebugPanel(debugJsPath: string = \"libs/laya.debugtool.js\"): void {\r\n        if (!(window as any)['Laya'][\"DebugPanel\"]) {\r\n            var script: any = Browser.createElement(\"script\");\r\n            script.onload = function (): void {\r\n                (window as any)['Laya'][\"DebugPanel\"].enable();\r\n            }\r\n            script.src = debugJsPath;\r\n            Browser.document.body.appendChild(script);\r\n        } else {\r\n            (window as any)['Laya'][\"DebugPanel\"].enable();\r\n        }\r\n    }\r\n\r\n    private static isNativeRender_enable: boolean = false;\r\n\r\n    /**@private */\r\n    private static enableNative(): void {\r\n        if (Laya.isNativeRender_enable)\r\n            return;\r\n        Laya.isNativeRender_enable = true;\r\n        RenderState2D.width = Browser.window.innerWidth;\r\n        RenderState2D.height = Browser.window.innerHeight;\r\n\r\n        Stage.clear = function (color: string): void {\r\n            Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\r\n            var c: any[] = ColorUtils.create(color).arrColor;\r\n\r\n            LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, new Color(c[0], c[1], c[2], c[3]), 1);\r\n            // if (c) gl.clearColor(c[0], c[1], c[2], c[3]);\r\n            // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\r\n            RenderState2D.clear();\r\n        }\r\n\r\n        Sprite.drawToCanvas = function (sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): any {\r\n            offsetX -= sprite.x;\r\n            offsetY -= sprite.y;\r\n            offsetX |= 0;\r\n            offsetY |= 0;\r\n            canvasWidth |= 0;\r\n            canvasHeight |= 0;\r\n\r\n            var canv: HTMLCanvas = new HTMLCanvas(false);\r\n            var ctx: Context = canv.getContext('2d') as Context;\r\n            canv.size(canvasWidth, canvasHeight);\r\n\r\n            ctx.asBitmap = true;\r\n            ctx._targets.start();\r\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n            ctx.flush();\r\n            ctx._targets.end();\r\n            ctx._targets.restore();\r\n            return canv;\r\n        }\r\n        //RenderTexture2D.prototype._uv = RenderTexture2D.flipyuv;\r\n        Object[\"defineProperty\"](RenderTexture2D.prototype, \"uv\", {\r\n            \"get\": function (): any {\r\n                return this._uv;\r\n            },\r\n            \"set\": function (v: any): void {\r\n                this._uv = v;\r\n            }\r\n        }\r\n        );\r\n        HTMLCanvas.prototype.getTexture = function (): Texture | RenderTexture2D {\r\n            if (!this._texture) {\r\n                // @ts-ignore\r\n                this._texture = this.context._targets;\r\n                //遗留的奇怪代码，先注释掉\r\n                // @ts-ignore\r\n                this._texture.uv = RenderTexture2D.flipyuv;\r\n                // @ts-ignore\r\n                this._texture.bitmap = this._texture;\r\n            }\r\n            return this._texture;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 引擎各个模块如果需要初始化逻辑可以在这里注册回调函数。\r\n     * @param callback\r\n     */\r\n    static onInitModule(callback: () => void) {\r\n        if (_isinit)\r\n            callback();\r\n        else\r\n            _onInitModuleCallbacks.push(callback);\r\n    }\r\n}\r\n\r\nfunction arrayBufferSlice(this: ArrayBuffer, start: number, end: number): ArrayBuffer {\r\n    var arrU8List: Uint8Array = new Uint8Array(this, start, end - start);\r\n    var newU8List: Uint8Array = new Uint8Array(arrU8List.length);\r\n    newU8List.set(arrU8List);\r\n    return newU8List.buffer;\r\n}\r\n\r\nfunction uint8ArraySlice(this: Uint8Array): Uint8Array {\r\n    var sz: number = this.length;\r\n    var dec: Uint8Array = new Uint8Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction float32ArraySlice(this: Float32Array): Float32Array {\r\n    var sz: number = this.length;\r\n    var dec: Float32Array = new Float32Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction uint16ArraySlice(this: Uint16Array, ...arg: any[]): Uint16Array {\r\n    var sz: number;\r\n    var dec: Uint16Array;\r\n    var i: number;\r\n    if (arg.length === 0) {\r\n        sz = this.length;\r\n        dec = new Uint16Array(sz);\r\n        for (i = 0; i < sz; i++)\r\n            dec[i] = this[i];\r\n\r\n    } else if (arg.length === 2) {\r\n        var start: number = arg[0];\r\n        var end: number = arg[1];\r\n\r\n        if (end > start) {\r\n            sz = end - start;\r\n            dec = new Uint16Array(sz);\r\n            for (i = start; i < end; i++)\r\n                dec[i - start] = this[i];\r\n        } else {\r\n            dec = new Uint16Array(0);\r\n        }\r\n    }\r\n    return dec;\r\n}\r\n\r\n\r\nILaya.Loader = Loader;\r\nILaya.Context = Context;\r\nILaya.Browser = Browser;\r\n\r\nvar _isinit = false;\r\nvar _onInitModuleCallbacks: Array<() => void> = [];\r\n\r\n/**@internal */\r\nexport var init = Laya.init;\r\n/**@internal */\r\nexport var stage: Stage;\r\n/**@internal */\r\nexport var systemTimer: Timer;\r\n/**@internal */\r\nexport var physicsTimer: Timer;\r\n/**@internal */\r\nexport var timer: Timer;\r\n/**@internal */\r\nexport var loader: Loader;\r\n/**@internal */\r\nexport var render: Render;\r\n/**@internal */\r\nexport var isWXOpenDataContext: boolean;\r\n/**@internal */\r\nexport var isWXPosMsg: boolean;\r\n/**@internal */\r\nexport var alertGlobalError = Laya.alertGlobalError;\r\n/**@internal */\r\nexport var enableDebugPanel = Laya.enableDebugPanel;","export enum DrawType {\r\n    DrawArray,\r\n    DrawArrayInstance,\r\n    DrawElement,\r\n    DrawElementInstance\r\n}","export enum RenderDrawMode{\r\n    TRIANGLES,\r\n    POINTS,\r\n    LINES\r\n}","export enum RenderIndexMode{\r\n    UNSIGNED_BYTE,\r\n    UNSIGNED_SHORT,\r\n    UNSIGNED_INT\r\n}","export enum TextureCompareMode {\r\n    None,\r\n    LEQUAL,\r\n    GEQUAL,\r\n    LESS,\r\n    GREATER,\r\n    EQUAL,\r\n    NOTEQUAL,\r\n    ALWAYS,\r\n    NEVER\r\n}","/**\r\n * 纹理解码格式。\r\n */\r\nexport enum TextureDecodeFormat {\r\n    /** 常规解码方式,直接采样纹理颜色。*/\r\n    Normal,\r\n    /** 按照RGBM方式解码并计算最终RGB颜色。 */\r\n    RGBM\r\n}","import { BlendEquationSeparate } from \"./RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"./RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"./RenderEnum/BlendType\";\r\n\r\nexport class BlendState {\r\n    static _blend_All_pool: any = {};\r\n    static _blend_seperate_pool: any = {};\r\n    static create(blendType: number, colorBlendhash: BlendComponent, alphaBlendComponent: BlendComponent) {\r\n\r\n    }\r\n    /** Whether to enable blend. */\r\n    blendType: BlendType = 0;\r\n    colorBlendComponent: BlendComponent;\r\n    alphaBlendComponent: BlendComponent;\r\n    constructor(blendType: number) {\r\n\r\n    }\r\n}\r\n\r\nexport class BlendComponent {\r\n    static _pool: any = {};\r\n    static getHash(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number): number {\r\n        return (blendOperationGLData) + (sourceBlendFactor << 3) + (destinationFactor << 7);\r\n    }\r\n    static getBlendComponent(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number) {\r\n        let index = BlendComponent.getHash(blendOperationGLData, sourceBlendFactor, destinationFactor);\r\n        if (!BlendComponent._pool[index])\r\n            BlendComponent._pool[index] = new BlendComponent(blendOperationGLData, sourceBlendFactor, destinationFactor, index);\r\n        return BlendComponent._pool[index];\r\n    }\r\n    _blendOperation: BlendEquationSeparate;\r\n    _blendOperationGLData: number;\r\n    _sourceBlendFactor: BlendFactor;\r\n    _sourceBlendFactorGLData: number;\r\n    _destinationFactor: BlendFactor;\r\n    _destinationFactorGLData: number;\r\n    _hashIndex = 0;\r\n    constructor(blendOperationGLData: BlendEquationSeparate, sourceBlendFactor: BlendFactor, destinationFactor: BlendFactor, hashindex: number) {\r\n        this._hashIndex = hashindex;\r\n        this._blendOperationGLData = blendOperationGLData;\r\n        this._sourceBlendFactor = sourceBlendFactor;\r\n        this._destinationFactor = destinationFactor;\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { ShaderDataType } from \"./RenderShader/ShaderData\";\r\n\r\ntype UniformProperty = { id: number, propertyName: string, uniformtype?: ShaderDataType }\r\nexport class CommandUniformMap {\r\n\r\n\t/**@internal */\r\n\t_idata: { [key: number]: { block?: Object, propertyName: string, uniformtype?: ShaderDataType, blockProperty?: UniformProperty[] } } = {};\r\n\t_stateName: string;\r\n\r\n\tconstructor(stateName: string) {\r\n\t\tthis._stateName = stateName;\r\n\t}\r\n\r\n\thasPtrID(propertyID: number): boolean {\r\n\t\treturn !!(this._idata[propertyID] != null);\r\n\t}\r\n\r\n\tgetMap() {\r\n\t\treturn this._idata;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个Uniform参数\r\n\t * @internal\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderUniform(propertyID: number, propertyKey: string, uniformtype: ShaderDataType, block: string = null): void {\r\n\t\tthis._idata[propertyID] = { uniformtype: uniformtype, propertyName: propertyKey, block: block };\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个Uniform\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderBlockUniform(propertyID: number, blockname: string, blockProperty: UniformProperty[]): void {\r\n\t\tthis._idata[propertyID] = { propertyName: blockname, blockProperty: blockProperty }\r\n\t\tblockProperty.forEach(element => {\r\n\t\t\tthis.addShaderUniform(element.id, element.propertyName, element.uniformtype, blockname);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n}","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderStateType } from \"./RenderEnum/RenderStateType\";\r\n\r\n/**\r\n * 渲染状态设置命令流\r\n */\r\nexport class RenderStateCommand{\r\n    cmdArray:Map<RenderStateType,any> = new Map();\r\n    constructor(){\r\n\r\n    }\r\n    addCMD(renderstate:RenderStateType,value:number|boolean|Array<number>){\r\n        this.cmdArray.set(renderstate,value);\r\n    }\r\n\r\n    applyCMD(){\r\n        LayaGL.renderEngine.applyRenderStateCMD(this);\r\n    }\r\n\r\n    clear(){\r\n        this.cmdArray.clear();\r\n    }\r\n}","import { Handler } from \"../utils/Handler\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Component } from \"../components/Component\";\r\n\r\n/**\r\n * 效果插件基类，基于对象池管理\r\n */\r\nexport class EffectBase extends Component {\r\n    /**动画持续时间，单位为毫秒*/\r\n    duration: number = 1000;\r\n    /**动画延迟时间，单位为毫秒*/\r\n    delay: number = 0;\r\n    /**重复次数，默认为播放一次*/\r\n    repeat: number = 0;\r\n    /**缓动类型，如果为空，则默认为匀速播放*/\r\n    ease: string;\r\n    /**触发事件，如果为空，则创建时触发*/\r\n    eventName: string;\r\n    /**效用作用的目标对象，如果为空，则是脚本所在的节点本身*/\r\n    target: Sprite;\r\n    /**效果结束后，是否自动移除节点*/\r\n    autoDestroyAtComplete: boolean = true;\r\n\r\n    protected _comlete: Handler;\r\n    protected _tween: Tween;\r\n\r\n    protected _onAwake(): void {\r\n        this.target = this.target || (<Sprite>this.owner);\r\n        if (this.autoDestroyAtComplete) \r\n            this._comlete = Handler.create(this.target, this.target.destroy, null, false);\r\n        if (this.eventName) \r\n            this.owner.on(this.eventName, this, this._exeTween);\r\n        else \r\n            this._exeTween();\r\n    }\r\n\r\n    protected _exeTween(): void {\r\n        this._tween = this._doTween();\r\n        this._tween.repeat = this.repeat;\r\n    }\r\n\r\n    protected _doTween(): Tween {\r\n        return null;\r\n    }\r\n\r\n    onReset(): void {\r\n        this.duration = 1000;\r\n        this.delay = 0;\r\n        this.repeat = 0;\r\n        this.ease = null;\r\n        this.target = null;\r\n        if (this.eventName) {\r\n            this.owner.off(this.eventName, this, this._exeTween);\r\n            this.eventName = null;\r\n        }\r\n        if (this._comlete) {\r\n            this._comlete.recover();\r\n            this._comlete = null;\r\n        }\r\n        if (this._tween) {\r\n            this._tween.clear();\r\n            this._tween = null;\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n * <code>Keyboard</code> 类的属性是一些常数，这些常数表示控制游戏时最常用的键。\r\n */\r\nexport class Keyboard {\r\n    /** 与 0 的键控代码值 (48) 关联的常数。*/\r\n    static NUMBER_0: number = 48;\r\n    /** 与 1 的键控代码值 (49) 关联的常数。*/\r\n    static NUMBER_1: number = 49;\r\n    /** 与 2 的键控代码值 (50) 关联的常数。*/\r\n    static NUMBER_2: number = 50;\r\n    /** 与 3 的键控代码值 (51) 关联的常数。*/\r\n    static NUMBER_3: number = 51;\r\n    /** 与 4 的键控代码值 (52) 关联的常数。*/\r\n    static NUMBER_4: number = 52;\r\n    /** 与 5 的键控代码值 (53) 关联的常数。*/\r\n    static NUMBER_5: number = 53;\r\n    /** 与 6 的键控代码值 (54) 关联的常数。*/\r\n    static NUMBER_6: number = 54;\r\n    /** 与 7 的键控代码值 (55) 关联的常数。*/\r\n    static NUMBER_7: number = 55;\r\n    /** 与 8 的键控代码值 (56) 关联的常数。*/\r\n    static NUMBER_8: number = 56;\r\n    /** 与 9 的键控代码值 (57) 关联的常数。*/\r\n    static NUMBER_9: number = 57;\r\n\r\n    /** 与 A 键的键控代码值 (65) 关联的常数。*/\r\n    static A: number = 65;\r\n    /** 与 B 键的键控代码值 (66) 关联的常数。*/\r\n    static B: number = 66;\r\n    /** 与 C 键的键控代码值 (67) 关联的常数。*/\r\n    static C: number = 67;\r\n    /** 与 D 键的键控代码值 (68) 关联的常数。*/\r\n    static D: number = 68;\r\n    /** 与 E 键的键控代码值 (69) 关联的常数。*/\r\n    static E: number = 69;\r\n    /** 与 F 键的键控代码值 (70) 关联的常数。*/\r\n    static F: number = 70;\r\n    /** 与 G 键的键控代码值 (71) 关联的常数。*/\r\n    static G: number = 71;\r\n    /** 与 H 键的键控代码值 (72) 关联的常数。*/\r\n    static H: number = 72;\r\n    /** 与 I 键的键控代码值 (73) 关联的常数。*/\r\n    static I: number = 73;\r\n    /** 与 J 键的键控代码值 (74) 关联的常数。*/\r\n    static J: number = 74;\r\n    /** 与 K 键的键控代码值 (75) 关联的常数。*/\r\n    static K: number = 75;\r\n    /** 与 L 键的键控代码值 (76) 关联的常数。*/\r\n    static L: number = 76;\r\n    /** 与 M 键的键控代码值 (77) 关联的常数。*/\r\n    static M: number = 77;\r\n    /** 与 N 键的键控代码值 (78) 关联的常数。*/\r\n    static N: number = 78;\r\n    /** 与 O 键的键控代码值 (79) 关联的常数。*/\r\n    static O: number = 79;\r\n    /** 与 P 键的键控代码值 (80) 关联的常数。*/\r\n    static P: number = 80;\r\n    /** 与 Q 键的键控代码值 (81) 关联的常数。*/\r\n    static Q: number = 81;\r\n    /** 与 R 键的键控代码值 (82) 关联的常数。*/\r\n    static R: number = 82;\r\n    /** 与 S 键的键控代码值 (83) 关联的常数。*/\r\n    static S: number = 83;\r\n    /** 与 T 键的键控代码值 (84) 关联的常数。*/\r\n    static T: number = 84;\r\n    /** 与 U 键的键控代码值 (85) 关联的常数。*/\r\n    static U: number = 85;\r\n    /** 与 V 键的键控代码值 (86) 关联的常数。*/\r\n    static V: number = 86;\r\n    /** 与 W 键的键控代码值 (87) 关联的常数。*/\r\n    static W: number = 87;\r\n    /** 与 X 键的键控代码值 (88) 关联的常数。*/\r\n    static X: number = 88;\r\n    /** 与 Y 键的键控代码值 (89) 关联的常数。*/\r\n    static Y: number = 89;\r\n    /** 与 Z 键的键控代码值 (90) 关联的常数。*/\r\n    static Z: number = 90;\r\n\r\n    /** 与 F1 的键控代码值 (112) 关联的常数。*/\r\n    static F1: number = 112;\r\n    /** 与 F2 的键控代码值 (113) 关联的常数。*/\r\n    static F2: number = 113;\r\n    /** 与 F3 的键控代码值 (114) 关联的常数。*/\r\n    static F3: number = 114;\r\n    /** 与 F4 的键控代码值 (115) 关联的常数。*/\r\n    static F4: number = 115;\r\n    /** 与 F5 的键控代码值 (116) 关联的常数。*/\r\n    static F5: number = 116;\r\n    /** 与 F6 的键控代码值 (117) 关联的常数。*/\r\n    static F6: number = 117;\r\n    /** 与 F7 的键控代码值 (118) 关联的常数。*/\r\n    static F7: number = 118;\r\n    /** 与 F8 的键控代码值 (119) 关联的常数。*/\r\n    static F8: number = 119;\r\n    /** 与 F9 的键控代码值 (120) 关联的常数。*/\r\n    static F9: number = 120;\r\n    /** 与 F10 的键控代码值 (121) 关联的常数。*/\r\n    static F10: number = 121;\r\n    /** 与 F11 的键控代码值 (122) 关联的常数。*/\r\n    static F11: number = 122;\r\n    /** 与 F12 的键控代码值 (123) 关联的常数。*/\r\n    static F12: number = 123;\r\n    /** 与 F13 的键控代码值 (124) 关联的常数。*/\r\n    static F13: number = 124;\r\n    /** 与 F14 的键控代码值 (125) 关联的常数。*/\r\n    static F14: number = 125;\r\n    /** 与 F15 的键控代码值 (126) 关联的常数。*/\r\n    static F15: number = 126;\r\n\r\n    /** 与数字键盘的伪键控代码 (21) 关联的常数。*/\r\n    static NUMPAD: number = 21;\r\n    /** 与数字键盘上的数字 0 的键控代码值 (96) 关联的常数。*/\r\n    static NUMPAD_0: number = 96;\r\n    /** 与数字键盘上的数字 1 的键控代码值 (97) 关联的常数。*/\r\n    static NUMPAD_1: number = 97;\r\n    /** 与数字键盘上的数字 2 的键控代码值 (98) 关联的常数。*/\r\n    static NUMPAD_2: number = 98;\r\n    /** 与数字键盘上的数字 3 的键控代码值 (99) 关联的常数。*/\r\n    static NUMPAD_3: number = 99;\r\n    /** 与数字键盘上的数字 4 的键控代码值 (100) 关联的常数。*/\r\n    static NUMPAD_4: number = 100;\r\n    /** 与数字键盘上的数字 5 的键控代码值 (101) 关联的常数。*/\r\n    static NUMPAD_5: number = 101;\r\n    /** 与数字键盘上的数字 6 的键控代码值 (102) 关联的常数。*/\r\n    static NUMPAD_6: number = 102;\r\n    /** 与数字键盘上的数字 7 的键控代码值 (103) 关联的常数。*/\r\n    static NUMPAD_7: number = 103;\r\n    /** 与数字键盘上的数字 8 的键控代码值 (104) 关联的常数。*/\r\n    static NUMPAD_8: number = 104;\r\n    /** 与数字键盘上的数字 9 的键控代码值 (105) 关联的常数。*/\r\n    static NUMPAD_9: number = 105;\r\n\r\n    /** 与数字键盘上的加号 (+) 的键控代码值 (107) 关联的常数。*/\r\n    static NUMPAD_ADD: number = 107;\r\n    /** 与数字键盘上的小数点 (.) 的键控代码值 (110) 关联的常数。*/\r\n    static NUMPAD_DECIMAL: number = 110;\r\n    /** 与数字键盘上的除号 (/) 的键控代码值 (111) 关联的常数。*/\r\n    static NUMPAD_DIVIDE: number = 111;\r\n    /** 与数字键盘上的 Enter 的键控代码值 (108) 关联的常数。*/\r\n    static NUMPAD_ENTER: number = 108;\r\n    /** 与数字键盘上的乘号 (*) 的键控代码值 (106) 关联的常数。*/\r\n    static NUMPAD_MULTIPLY: number = 106;\r\n    /** 与数字键盘上的减号 (-) 的键控代码值 (109) 关联的常数。*/\r\n    static NUMPAD_SUBTRACT: number = 109;\r\n    /** 与 ; 键的键控代码值 (186) 关联的常数。*/\r\n    static SEMICOLON: number = 186;\r\n    /** 与 = 键的键控代码值 (187) 关联的常数。*/\r\n    static EQUAL: number = 187;\r\n    /** 与 F15 的键控代码值 (188) 关联的常数。*/\r\n    static COMMA: number = 188;\r\n    /** 与 - 键的键控代码值 (189) 关联的常数。*/\r\n    static MINUS: number = 189;\r\n    /** 与 . 键的键控代码值 (190) 关联的常数。*/\r\n    static PERIOD: number = 190;\r\n    /** 与 / 键的键控代码值 (191) 关联的常数。*/\r\n    static SLASH: number = 191;\r\n    /** 与 ` 键的键控代码值 (192) 关联的常数。*/\r\n    static BACKQUOTE: number = 192;\r\n    /** 与 [ 键的键控代码值 (219) 关联的常数。*/\r\n    static LEFTBRACKET: number = 219;\r\n    /** 与 \\ 键的键控代码值 (220) 关联的常数。*/\r\n    static BACKSLASH: number = 220;\r\n    /** 与 ] 键的键控代码值 (221) 关联的常数。*/\r\n    static RIGHTBRACKET: number = 221;\r\n    /** 与 ' 键的键控代码值 (222) 关联的常数。*/\r\n    static QUOTE: number = 222;\r\n    /** 与 Alternate (Option) 键的键控代码值 (18) 关联的常数。*/\r\n    static ALTERNATE: number = 18;\r\n    /** 与 Backspace 的键控代码值 (8) 关联的常数。*/\r\n    static BACKSPACE: number = 8;\r\n    /** 与 Caps Lock 的键控代码值 (20) 关联的常数。*/\r\n    static CAPS_LOCK: number = 20;\r\n    /** 与 Mac 命令键 (15) 关联的常数。*/\r\n    static COMMAND: number = 15;\r\n    /** 与 Ctrl 的键控代码值 (17) 关联的常数。*/\r\n    static CONTROL: number = 17;\r\n    /** 与 Delete 的键控代码值 (46) 关联的常数。*/\r\n    static DELETE: number = 46;\r\n    /** 与 Enter 的键控代码值 (13) 关联的常数。*/\r\n    static ENTER: number = 13;\r\n    /** 与 Esc 的键控代码值 (27) 关联的常数。*/\r\n    static ESCAPE: number = 27;\r\n    /** 与 Page Up 的键控代码值 (33) 关联的常数。*/\r\n    static PAGE_UP: number = 33;\r\n    /** 与 Page Down 的键控代码值 (34) 关联的常数。*/\r\n    static PAGE_DOWN: number = 34;\r\n    /** 与 End 的键控代码值 (35) 关联的常数。*/\r\n    static END: number = 35;\r\n    /** 与 Home 的键控代码值 (36) 关联的常数。*/\r\n    static HOME: number = 36;\r\n    /** 与向左箭头键的键控代码值 (37) 关联的常数。*/\r\n    static LEFT: number = 37;\r\n    /** 与向上箭头键的键控代码值 (38) 关联的常数。*/\r\n    static UP: number = 38;\r\n    /** 与向右箭头键的键控代码值 (39) 关联的常数。*/\r\n    static RIGHT: number = 39;\r\n    /** 与向下箭头键的键控代码值 (40) 关联的常数。*/\r\n    static DOWN: number = 40;\r\n    /** 与 Shift 的键控代码值 (16) 关联的常数。*/\r\n    static SHIFT: number = 16;\r\n    /** 与空格键的键控代码值 (32) 关联的常数。*/\r\n    static SPACE: number = 32;\r\n    /** 与 Tab 的键控代码值 (9) 关联的常数。*/\r\n    static TAB: number = 9;\r\n    /** 与 Insert 的键控代码值 (45) 关联的常数。*/\r\n    static INSERT: number = 45;\r\n}\r\n\r\n\r\n","/**\r\n * <p><code>KeyLocation</code> 类包含表示在键盘或类似键盘的输入设备上按键位置的常量。</p>\r\n * <p><code>KeyLocation</code> 常数用在键盘事件对象的 <code>keyLocation </code>属性中。</p>\r\n */\r\nexport class KeyLocation {\r\n    /**\r\n     * 表示激活的键不区分位于左侧还是右侧，也不区分是否位于数字键盘（或者是使用对应于数字键盘的虚拟键激活的）。\r\n     */\r\n    static STANDARD: number = 0;\r\n    /**\r\n     * 表示激活的键在左侧键位置（此键有多个可能的位置）。\r\n     */\r\n    static LEFT: number = 1;\r\n    /**\r\n     * 表示激活的键在右侧键位置（此键有多个可能的位置）。\r\n     */\r\n    static RIGHT: number = 2;\r\n    /**\r\n     * <p>表示激活的键位于数字键盘或者是使用对应于数字键盘的虚拟键激活的。</p>\r\n     * <p>注意：此属性只在flash模式下有效。</p>\r\n     * */\r\n    static NUM_PAD: number = 3;\r\n\r\n}\r\n\r\n\r\n","import { ShaderVariable } from \"../RenderEngine/RenderShader/ShaderVariable\";\r\n\r\n/**\r\n * @private\r\n * CommandEncoder Shader变量集合\r\n */\r\nexport class CommandEncoder {\r\n    \r\n    /**@internal shader variable list*/\r\n    _idata: ShaderVariable[] = [];\r\n\r\n    /**\r\n     * 实例化一个ShaderVariable集合\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns Array of ShaderVariable\r\n     */\r\n    getArrayData(): ShaderVariable[] {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns count of ShaderVariableArray\r\n     */\r\n    getCount(): number {\r\n        return this._idata.length;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * add one ShaderVariable\r\n     * @param variable \r\n     */\r\n    addShaderUniform(variable: ShaderVariable): void {\r\n        this._idata.push(variable);\r\n    }\r\n\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Stage } from \"../display/Stage\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { ILaya } from \"../../ILaya\";\r\n/**\r\n * ...\r\n * @author ww\r\n */\r\nexport class QuickTestTool {\r\n\r\n    private static showedDic: any = {};\r\n    private static _rendertypeToStrDic: any = {};\r\n    private static _typeToNameDic: any = {};\r\n\r\n    //TODO:coverage\r\n    static getMCDName(type: number): string {\r\n        return QuickTestTool._typeToNameDic[type];\r\n    }\r\n\r\n    //TODO:coverage\r\n    static showRenderTypeInfo(type: any, force: boolean = false): void {\r\n        if (!force && QuickTestTool.showedDic[type])\r\n            return;\r\n        QuickTestTool.showedDic[type] = true;\r\n        if (!QuickTestTool._rendertypeToStrDic[type]) {\r\n            var arr: any[] = [];\r\n            var tType: number;\r\n            tType = 1;\r\n            while (tType <= type) {\r\n                if (tType & type) {\r\n                    arr.push(QuickTestTool.getMCDName(tType & type));\r\n                }\r\n                tType = tType << 1;\r\n            }\r\n            QuickTestTool._rendertypeToStrDic[type] = arr.join(\",\");\r\n        }\r\n        console.log(\"cmd:\", QuickTestTool._rendertypeToStrDic[type]);\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    static __init__(): void {\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.ALPHA] = \"ALPHA\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM] = \"TRANSFORM\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TEXTURE] = \"TEXTURE\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.GRAPHICS] = \"GRAPHICS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.ONECHILD] = \"ONECHILD\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CHILDS] = \"CHILDS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM | SpriteConst.ALPHA] = \"TRANSFORM|ALPHA\";\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.CANVAS] = \"CANVAS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.BLEND] = \"BLEND\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.FILTERS] = \"FILTERS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.MASK] = \"MASK\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CLIP] = \"CLIP\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.LAYAGL3D] = \"LAYAGL3D\";\r\n    }\r\n    _renderType: number;\r\n    _repaint: number;\r\n    _x: number;\r\n    _y: number;\r\n    //TODO:coverage\r\n    constructor() {\r\n\r\n    }\r\n    /**\r\n     * 更新、呈现显示对象。由系统调用。\r\n     * @param\tcontext 渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    //TODO:coverage\r\n    render(context: Context, x: number, y: number): void {\r\n        QuickTestTool._addType(this._renderType);\r\n        QuickTestTool.showRenderTypeInfo(this._renderType);\r\n        //if (_renderType == (SpriteConst.IMAGE | SpriteConst.GRAPHICS | SpriteConst.CHILDS))\r\n        //{\r\n        //debugger;\r\n        //}\r\n        RenderSprite.renders[this._renderType]._fun(this, context, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    private static _PreStageRender: Function;\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _stageRender(context: Context, x: number, y: number): void {\r\n        QuickTestTool._countStart();\r\n        QuickTestTool._PreStageRender.call(ILaya.stage, context, x, y);//TODO TS\r\n        QuickTestTool._countEnd();\r\n    }\r\n    private static _countDic: any = {};\r\n\r\n    //TODO:coverage\r\n    private static _countStart(): void {\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            QuickTestTool._countDic[key] = 0;\r\n        }\r\n    }\r\n    private static _i: number = 0;\r\n\r\n    //TODO:coverage\r\n    private static _countEnd(): void {\r\n        QuickTestTool._i++;\r\n        if (QuickTestTool._i > 60) {\r\n            QuickTestTool.showCountInfo();\r\n            QuickTestTool._i = 0;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    private static _addType(type: number): void {\r\n        if (!QuickTestTool._countDic[type]) {\r\n            QuickTestTool._countDic[type] = 1;\r\n        } else {\r\n            QuickTestTool._countDic[type] += 1;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static showCountInfo(): void {\r\n        console.log(\"===================\");\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            console.log(\"count:\" + QuickTestTool._countDic[key]);\r\n            QuickTestTool.showRenderTypeInfo(key, true);\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static enableQuickTest(): void {\r\n        QuickTestTool.__init__();\r\n        Sprite[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"render\"];\r\n        QuickTestTool._PreStageRender = Stage[\"prototype\"][\"render\"];\r\n        Stage[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"_stageRender\"];\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { Byte } from \"../utils/Byte\"\r\n\r\n/**\r\n * 连接建立成功后调度。\r\n * @eventType Event.OPEN\r\n * */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 接收到数据后调度。\r\n * @eventType Event.MESSAGE\r\n * */\r\n/*[Event(name = \"message\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 连接被关闭后调度。\r\n * @eventType Event.CLOSE\r\n * */\r\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 出现异常后调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Socket</code> 封装了 HTML5 WebSocket ，允许服务器端与客户端进行全双工（full-duplex）的实时通信，并且允许跨域通信。在建立连接后，服务器和 Browser/Client Agent 都能主动的向对方发送或接收文本和二进制数据。</p>\r\n * <p>要使用 <code>Socket</code> 类的方法，请先使用构造函数 <code>new Socket</code> 创建一个 <code>Socket</code> 对象。 <code>Socket</code> 以异步方式传输和接收数据。</p>\r\n */\r\nexport class Socket extends EventDispatcher {\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**@internal */\r\n    _endian: string;\r\n    /**@private */\r\n    protected _socket: any;\r\n    /**@private */\r\n    private _connected: boolean;\r\n    /**@private */\r\n    private _addInputPosition: number;\r\n    /**@private */\r\n    private _input: any;\r\n    /**@private */\r\n    private _output: any;\r\n\r\n    /**\r\n     * 不再缓存服务端发来的数据，如果传输的数据为字符串格式，建议设置为true，减少二进制转换消耗。\r\n     */\r\n    disableInput: boolean = false;\r\n    /**\r\n     * 用来发送和接收数据的 <code>Byte</code> 类。\r\n     */\r\n    private _byteClass: new () => any;\r\n    /**\r\n     * <p>子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组。必须在调用 connect 或者 connectByUrl 之前进行赋值，否则无效。</p>\r\n     * <p>指定后，只有当服务器选择了其中的某个子协议，连接才能建立成功，否则建立失败，派发 Event.ERROR 事件。</p>\r\n     * @see https://html.spec.whatwg.org/multipage/comms.html#dom-websocket\r\n     */\r\n    protocols: any = [];\r\n\r\n    /**\r\n     * 缓存的服务端发来的数据。\r\n     */\r\n    get input(): any {\r\n        return this._input;\r\n    }\r\n\r\n    /**\r\n     * 表示需要发送至服务端的缓冲区中的数据。\r\n     */\r\n    get output(): any {\r\n        return this._output;\r\n    }\r\n\r\n    /**\r\n     * 表示此 Socket 对象目前是否已连接。\r\n     */\r\n    get connected(): boolean {\r\n        return this._connected;\r\n    }\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._endian;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._endian = value;\r\n        if (this._input != null) this._input.endian = value;\r\n        if (this._output != null) this._output.endian = value;\r\n    }\r\n\r\n    /**\r\n     * <p>创建新的 Socket 对象。默认字节序为 Socket.BIG_ENDIAN 。若未指定参数，将创建一个最初处于断开状态的套接字。若指定了有效参数，则尝试连接到指定的主机和端口。</p>\r\n     * @param host\t\t服务器地址。\r\n     * @param port\t\t服务器端口。\r\n     * @param byteClass\t用于接收和发送数据的 Byte 类。如果为 null ，则使用 Byte 类，也可传入 Byte 类的子类。\r\n     * @param protocols\t子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     * @see laya.utils.Byte\r\n     */\r\n    constructor(host: string | null = null, port: number = 0, byteClass: new () => any = null, protocols: any[] | null = null, isSecure: boolean = false) {\r\n        super();\r\n        this._byteClass = byteClass ? byteClass : Byte;\r\n        this.protocols = protocols;\r\n        this.endian = Socket.BIG_ENDIAN;\r\n        if (host && port > 0 && port < 65535) this.connect(host, port, isSecure);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的主机和端口。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param host\t服务器地址。\r\n     * @param port\t服务器端口。\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     */\r\n    connect(host: string, port: number, isSecure: boolean = false): void {\r\n        this.connectByUrl(`${isSecure ? \"wss\" : \"ws\"}://${host}:${port}`);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param url\t要连接的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。\r\n     */\r\n    connectByUrl(url: string): void {\r\n        if (this._socket != null) this.close();\r\n\r\n        this._socket && this.cleanSocket();\r\n\r\n        if (!this.protocols || this.protocols.length == 0) {\r\n            this._socket = new Browser.window.WebSocket(url);\r\n        } else {\r\n            this._socket = new Browser.window.WebSocket(url, this.protocols);\r\n        }\r\n\r\n        this._socket.binaryType = \"arraybuffer\";\r\n\r\n        this._output = new this._byteClass();\r\n        this._output.endian = this.endian;\r\n        this._input = new this._byteClass();\r\n        this._input.endian = this.endian;\r\n        this._addInputPosition = 0;\r\n\r\n        this._socket.onopen = (e: any) => {\r\n            this._onOpen(e);\r\n        };\r\n        this._socket.onmessage = (msg: any): void => {\r\n            this._onMessage(msg);\r\n        };\r\n        this._socket.onclose = (e: any): void => {\r\n            this._onClose(e);\r\n        };\r\n        this._socket.onerror = (e: any): void => {\r\n            this._onError(e);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 清理Socket：关闭Socket链接，关闭事件监听，重置Socket\r\n     */\r\n    cleanSocket(): void {\r\n        this.close();\r\n        this._connected = false;\r\n        this._socket.onopen = null;\r\n        this._socket.onmessage = null;\r\n        this._socket.onclose = null;\r\n        this._socket.onerror = null;\r\n        this._socket = null;\r\n    }\r\n\r\n    /**\r\n     * 关闭连接。\r\n     */\r\n    close(): void {\r\n        if (this._socket != null) {\r\n            try {\r\n                this._socket.close();\r\n            } catch (e) {\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接建立成功 。\r\n     */\r\n    protected _onOpen(e: any): void {\r\n        this._connected = true;\r\n        this.event(Event.OPEN, e);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 接收到数据处理方法。\r\n     * @param msg 数据。\r\n     */\r\n    protected _onMessage(msg: any): void {\r\n        if (!msg || !msg.data) return;\r\n        var data: any = msg.data;\r\n        if (this.disableInput && data) {\r\n            this.event(Event.MESSAGE, data);\r\n            return;\r\n        }\r\n        if (this._input.length > 0 && this._input.bytesAvailable < 1) {\r\n            this._input.clear();\r\n            this._addInputPosition = 0;\r\n        }\r\n        var pre: number = this._input.pos;\r\n        !this._addInputPosition && (this._addInputPosition = 0);\r\n        this._input.pos = this._addInputPosition;\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                this._input.writeUTFBytes(data);\r\n            } else {\r\n                this._input.writeArrayBuffer(data);\r\n            }\r\n            this._addInputPosition = this._input.pos;\r\n            this._input.pos = pre;\r\n        }\r\n        this.event(Event.MESSAGE, data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接被关闭处理方法。\r\n     */\r\n    protected _onClose(e: any): void {\r\n        this._connected = false;\r\n        this.event(Event.CLOSE, e)\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 出现异常处理方法。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.event(Event.ERROR, e)\r\n    }\r\n\r\n    /**\r\n     * 发送数据到服务器。\r\n     * @param\tdata 需要发送的数据，可以是String或者ArrayBuffer。\r\n     */\r\n    send(data: any): void {\r\n        this._socket.send(data);\r\n    }\r\n\r\n    /**\r\n     * 发送缓冲区中的数据到服务器。\r\n     */\r\n    flush(): void {\r\n        if (this._output && this._output.length > 0) {\r\n            var evt: any;\r\n            try {\r\n                this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));\r\n            } catch (e) {\r\n                evt = e;\r\n            }\r\n            this._output.endian = this.endian;\r\n            this._output.clear();\r\n            if (evt) this.event(Event.ERROR, evt);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { UniformMapType } from \"./SubShader\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class GLSLCodeGenerator {\r\n\r\n    static glslAttributeString(attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n\r\n        let res = \"\";\r\n        for (const key in attributeMap) {\r\n            let type = getAttributeType(attributeMap[key][1]);\r\n            res = `${res}attribute ${type} ${key};\\n`;\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    static glslUniformString(uniformsMap: UniformMapType, useUniformBlock: boolean) {\r\n\r\n        if (useUniformBlock) {\r\n            let blocksStr = \"\";\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    blocksStr += `uniform ${key} {\\n`;\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        blocksStr += `${getAttributeType(dataType)} ${uniformName};\\n`;\r\n                    }\r\n                    blocksStr += \"};\\n\";\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    uniformsStr += `uniform ${getAttributeType(dataType)} ${key};\\n`;\r\n                }\r\n            }\r\n            return blocksStr + uniformsStr;\r\n\r\n        }\r\n        else {\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        uniformsStr += `uniform ${getAttributeType(dataType)} ${uniformName};\\n`;\r\n                    }\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    uniformsStr += `uniform ${getAttributeType(dataType)} ${key};\\n`;\r\n                }\r\n            }\r\n            return uniformsStr;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getAttributeType(type: ShaderDataType) {\r\n    switch (type) {\r\n        case ShaderDataType.Int:\r\n            return \"int\";\r\n        case ShaderDataType.Bool:\r\n            return \"bool\";\r\n        case ShaderDataType.Float:\r\n            return \"float\";\r\n        case ShaderDataType.Vector2:\r\n            return \"vec2\";\r\n        case ShaderDataType.Vector3:\r\n            return \"vec3\";\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return \"vec4\";\r\n        case ShaderDataType.Matrix4x4:\r\n            return \"mat4\";\r\n        case ShaderDataType.Matrix3x3:\r\n            return \"mat3\";\r\n        case ShaderDataType.Texture2D:\r\n            return \"sampler2D\";\r\n        case ShaderDataType.TextureCube:\r\n            return \"samplerCube\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}","import { Config3D } from \"../../../Config3D\";\r\nimport { CommandEncoder } from \"../../layagl/CommandEncoder\";\r\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\r\nimport { IRenderShaderInstance } from \"../../RenderEngine/RenderInterface/IRenderShaderInstance\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderData, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderPass } from \"../../RenderEngine/RenderShader/ShaderPass\";\r\nimport { ShaderVariable } from \"../../RenderEngine/RenderShader/ShaderVariable\";\r\nimport { UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { ShaderNode } from \"../../webgl/utils/ShaderNode\";\r\nimport { WebGLEngine } from \"../RenderEngine/WebGLEngine/WebGLEngine\";\r\nimport { RenderParams } from \"../RenderEnum/RenderParams\";\r\nimport { GLSLCodeGenerator } from \"./GLSLCodeGenerator\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { Stat } from \"../../utils/Stat\";\r\nimport { RenderState } from \"./RenderState\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>ShaderInstance</code> 类用于实现ShaderInstance。\r\n */\r\nexport class ShaderInstance {\r\n\t/**@internal */\r\n\tprivate _shaderPass: ShaderCompileDefineBase | ShaderPass;\r\n\r\n\tprivate _renderShaderInstance: IRenderShaderInstance;\r\n\r\n\t/**@internal */\r\n\t_sceneUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_cameraUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_spriteUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_materialUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_sprite2DUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\tprivate _customUniformParamsMap: any[] = [];\r\n\r\n\t/**@internal */\r\n\t_uploadMark: number = -1;\r\n\t/**@internal */\r\n\t_uploadMaterial: ShaderData;\r\n\t/**@internal RenderIDTODO*/\r\n\t_uploadRender: any;\r\n\t/** @internal */\r\n\t_uploadRenderType: number = -1;\r\n\t/**@internal CamneraTOD*/\r\n\t_uploadCameraShaderValue: ShaderData;\r\n\t/**@internal SceneIDTODO*/\r\n\t_uploadScene: any;\r\n\r\n\t/**\r\n\t * 创建一个 <code>ShaderInstance</code> 实例。\r\n\t */\r\n\tconstructor(shaderProcessInfo: ShaderProcessInfo, shaderPass: ShaderCompileDefineBase) {\r\n\t\t// shaderProcessInfo.is2D ? this._webGLShaderLanguageProcess2D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps)\r\n\t\tthis._webGLShaderLanguageProcess3D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps);\r\n\t\tif (this._renderShaderInstance._complete) {\r\n\t\t\tthis._shaderPass = shaderPass;\r\n\t\t\tshaderProcessInfo.is2D ? this._create2D() : this._create();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get complete\r\n\t */\r\n\tget complete(): boolean {\r\n\t\treturn this._renderShaderInstance._complete;\r\n\t}\r\n\r\n\tprotected _webGLShaderLanguageProcess3D(defineString: string[],\r\n\t\tattributeMap: { [name: string]: [number, ShaderDataType] },\r\n\t\tuniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\r\n\r\n\t\tvar clusterSlices = Config3D.lightClusterCount;\r\n\t\tvar defMap: any = {};\r\n\r\n\t\tvar vertexHead: string;\r\n\t\tvar fragmentHead: string;\r\n\t\tvar defineStr: string = \"\";\r\n\r\n\t\t// 拼接 shader attribute\r\n\t\tlet useUniformBlock = Config3D._uniformBlock;\r\n\t\tlet attributeglsl = GLSLCodeGenerator.glslAttributeString(attributeMap);\r\n\t\tlet uniformglsl = GLSLCodeGenerator.glslUniformString(uniformMap, useUniformBlock);\r\n\r\n\t\tif ((LayaGL.renderEngine as WebGLEngine).isWebGL2) {\r\n\t\t\tdefineString.push(\"GRAPHICS_API_GLES3\");\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n    precision highp sampler3D;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n    precision mediump sampler3D;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define attribute in\r\n#define varying out\r\n#define textureCube texture\r\n#define texture2D texture\r\n${attributeglsl}\r\n${uniformglsl}\r\n`;\r\n\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n\tprecision highp sampler3D;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n\tprecision mediump sampler3D;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define varying in\r\nout highp vec4 pc_fragColor;\r\n#define gl_FragColor pc_fragColor\r\n#define gl_FragDepthEXT gl_FragDepth\r\n#define texture2D texture\r\n#define textureCube texture\r\n#define texture2DProj textureProj\r\n#define texture2DLodEXT textureLod\r\n#define texture2DProjLodEXT textureProjLod\r\n#define textureCubeLodEXT textureLod\r\n#define texture2DGradEXT textureGrad\r\n#define texture2DProjGradEXT textureProjGrad\r\n#define textureCubeGradEXT textureGrad\r\n${uniformglsl}`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n${attributeglsl}\r\n${uniformglsl}`;\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#ifdef GL_EXT_shader_texture_lod\r\n    #extension GL_EXT_shader_texture_lod : enable\r\n#endif\r\n\r\n#ifdef GL_OES_standard_derivatives\r\n\t#extension GL_OES_standard_derivatives : enable \r\n#endif\r\n\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n\r\n#if !defined(GL_EXT_shader_texture_lod)\r\n    #define texture1DLodEXT texture1D\r\n    #define texture2DLodEXT texture2D\r\n    #define texture2DProjLodEXT texture2DProj\r\n    #define texture3DLodEXT texture3D\r\n    #define textureCubeLodEXT textureCube\r\n#endif\r\n${uniformglsl}`;\r\n\t\t}\r\n\r\n\t\t// todo \r\n\t\tdefineStr += \"#define MAX_LIGHT_COUNT \" + Config3D.maxLightCount + \"\\n\";\r\n\t\tdefineStr += \"#define MAX_LIGHT_COUNT_PER_CLUSTER \" + Config3D._maxAreaLightCountPerClusterAverage + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_X_COUNT \" + clusterSlices.x + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_Y_COUNT \" + clusterSlices.y + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_Z_COUNT \" + clusterSlices.z + \"\\n\";\r\n\t\tdefineStr += \"#define MORPH_MAX_COUNT \" + Config3D.maxMorphTargetCount + \"\\n\";\r\n\t\tdefineStr += \"#define SHADER_CAPAILITY_LEVEL \" + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + \"\\n\";\r\n\r\n\r\n\r\n\t\tfor (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n\t\t\tvar def: string = defineString[i];\r\n\t\t\tdefineStr += \"#define \" + def + \"\\n\";\r\n\t\t\tdefMap[def] = true;\r\n\t\t}\r\n\r\n\t\tvar vs: any[] = VS.toscript(defMap, []);\r\n\t\tvar vsVersion: string = '';\r\n\t\tif (vs[0].indexOf('#version') == 0) {\r\n\t\t\tvsVersion = vs[0] + '\\n';\r\n\t\t\tvs.shift();\r\n\t\t}\r\n\r\n\t\tvar ps: any[] = FS.toscript(defMap, []);\r\n\t\tvar psVersion: string = '';\r\n\t\tif (ps[0].indexOf('#version') == 0) {\r\n\t\t\tpsVersion = ps[0] + '\\n';\r\n\t\t\tps.shift();\r\n\t\t};\r\n\t\tlet dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\r\n\t\tlet detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\r\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(dstVS, detFS, attributeMap);\r\n\t}\r\n\r\n\tprotected _webGLShaderLanguageProcess2D(defineString: string[],\r\n\t\tattributeMap: { [name: string]: [number, ShaderDataType] },\r\n\t\tuniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\r\n\t\tvar defMap: any = {};\r\n\r\n\t\tvar vertexHead: string;\r\n\t\tvar fragmentHead: string;\r\n\t\tvar defineStr: string = \"\";\r\n\r\n\t\tif ((LayaGL.renderEngine as WebGLEngine).isWebGL2) {\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#version 300 es\\n\r\n                #define attribute in\r\n                #define varying out\r\n                #define textureCube texture\r\n                #define texture2D texture\\n`;\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#version 300 es\\n\r\n                #define varying in\r\n                out highp vec4 pc_fragColor;\r\n                #define gl_FragColor pc_fragColor\r\n                #define gl_FragDepthEXT gl_FragDepth\r\n                #define texture2D texture\r\n                #define textureCube texture\r\n                #define texture2DProj textureProj\r\n                #define texture2DLodEXT textureLod\r\n                #define texture2DProjLodEXT textureProjLod\r\n                #define textureCubeLodEXT textureLod\r\n                #define texture2DGradEXT textureGrad\r\n                #define texture2DProjGradEXT textureProjGrad\r\n                #define textureCubeGradEXT textureGrad\\n`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvertexHead = \"\"\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#ifdef GL_EXT_shader_texture_lod\r\n                    #extension GL_EXT_shader_texture_lod : enable\r\n                #endif\r\n                #if !defined(GL_EXT_shader_texture_lod)\r\n                    #define texture1DLodEXT texture1D\r\n                    #define texture2DLodEXT texture2D\r\n                    #define texture2DProjLodEXT texture2DProj\r\n                    #define texture3DLodEXT texture3D\r\n                    #define textureCubeLodEXT textureCube\r\n                #endif\\n`;\r\n\t\t}\r\n\r\n\r\n\t\tfor (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n\t\t\tvar def: string = defineString[i];\r\n\t\t\tdefineStr += \"#define \" + def + \"\\n\";\r\n\t\t\tdefMap[def] = true;\r\n\t\t}\r\n\r\n\t\tvar vs: any[] = VS.toscript(defMap, []);\r\n\t\tvar vsVersion: string = '';\r\n\t\tif (vs[0].indexOf('#version') == 0) {\r\n\t\t\tvsVersion = vs[0] + '\\n';\r\n\t\t\tvs.shift();\r\n\t\t}\r\n\r\n\t\tvar ps: any[] = FS.toscript(defMap, []);\r\n\t\tvar psVersion: string = '';\r\n\t\tif (ps[0].indexOf('#version') == 0) {\r\n\t\t\tpsVersion = ps[0] + '\\n';\r\n\t\t\tps.shift();\r\n\t\t}\r\n\r\n\t\tlet dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\r\n\t\tlet detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\r\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(dstVS, detFS, attributeMap);\r\n\t}\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _create(): void {\r\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\r\n\t\tthis._cameraUniformParamsMap = new CommandEncoder();\r\n\t\tthis._spriteUniformParamsMap = new CommandEncoder();\r\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\r\n\t\tconst sceneParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Scene3D\");\r\n\t\t//const spriteParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite3D\");//分开，根据不同的Render\r\n\t\tconst cameraParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"BaseCamera\");\r\n\t\tconst customParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Custom\");\r\n\t\tlet i, n;\r\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\r\n\t\tfor (i = 0, n = data.length; i < n; i++) {\r\n\t\t\tlet one: ShaderVariable = data[i];\r\n\t\t\tif (sceneParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (cameraParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._cameraUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (this.hasSpritePtrID(one.dataOffset)) {\r\n\t\t\t\tthis._spriteUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (customParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._customUniformParamsMap || (this._customUniformParamsMap = []);\r\n\t\t\t\tthis._customUniformParamsMap[one.dataOffset] = one;\r\n\t\t\t} else {\r\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _create2D(): void {\r\n\t\tthis._sprite2DUniformParamsMap = new CommandEncoder();\r\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\r\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\r\n\t\tconst sprite2DParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2D\");//分开，根据不同的Render\r\n\t\tconst sceneParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2DGlobal\");//分开，根据不同的Render\r\n\t\tlet i, n;\r\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\r\n\t\tfor (i = 0, n = data.length; i < n; i++) {\r\n\t\t\tlet one: ShaderVariable = data[i];\r\n\t\t\tif (sprite2DParms.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sprite2DUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (sceneParms.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate hasSpritePtrID(dataOffset: number): boolean {\r\n\t\tlet commap = this._shaderPass.nodeCommonMap;\r\n\t\tif (!commap) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tfor (let i = 0, n = commap.length; i < n; i++) {\r\n\t\t\t\tif (LayaGL.renderOBJCreate.createGlobalUniformMap(commap[i]).hasPtrID(dataOffset))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tprotected _disposeResource(): void {\r\n\t\tthis._renderShaderInstance.destroy();\r\n\t\tthis._sceneUniformParamsMap = null;\r\n\t\tthis._cameraUniformParamsMap = null;\r\n\t\tthis._spriteUniformParamsMap = null;\r\n\t\tthis._materialUniformParamsMap = null\r\n\t\tthis._customUniformParamsMap = null;\r\n\r\n\t\tthis._uploadMaterial = null;\r\n\t\tthis._uploadRender = null;\r\n\t\tthis._uploadCameraShaderValue = null;\r\n\t\tthis._uploadScene = null;\r\n\t}\r\n\r\n\t/**\r\n\t * apply shader programe\r\n\t * @returns \r\n\t */\r\n\tbind() {\r\n\t\treturn this._renderShaderInstance.bind();\r\n\t}\r\n\r\n\t/**\r\n\t * upload uniform data\r\n\t * @param shaderUniform \r\n\t * @param shaderDatas \r\n\t * @param uploadUnTexture \r\n\t */\r\n\tuploadUniforms(shaderUniform: CommandEncoder, shaderDatas: ShaderData, uploadUnTexture: boolean) {\r\n\t\tStat.uploadUniform += LayaGL.renderEngine.uploadUniforms(this._renderShaderInstance, shaderUniform, shaderDatas, uploadUnTexture);\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepth(shaderDatas: ShaderData): void {\r\n\t\tif ((<ShaderPass>this._shaderPass).statefirst)\r\n\t\t\tthis.uploadRenderStateBlendDepthByShader(shaderDatas);\r\n\t\telse\r\n\t\t\tthis.uploadRenderStateBlendDepthByMaterial(shaderDatas);\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState frome Shader\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepthByShader(shaderDatas: ShaderData) {\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\r\n\t\tvar depthWrite: any = (renderState.depthWrite ?? datas[Shader3D.DEPTH_WRITE]) ?? RenderState.Default.depthWrite;\r\n\t\tRenderStateContext.setDepthMask(depthWrite);\r\n\t\tvar depthTest: any = (renderState.depthTest ?? datas[Shader3D.DEPTH_TEST]) ?? RenderState.Default.depthTest;\r\n\t\tif (depthTest == RenderState.DEPTHTEST_OFF)\r\n\t\t\tRenderStateContext.setDepthTest(false);\r\n\t\telse {\r\n\t\t\tRenderStateContext.setDepthTest(true);\r\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\r\n\t\t}\r\n\t\t//Stencil\r\n\t\tvar stencilWrite: any = (renderState.stencilWrite ?? datas[Shader3D.STENCIL_WRITE]) ?? RenderState.Default.stencilWrite;\r\n\t\tvar stencilTest: any = (renderState.stencilTest ?? datas[Shader3D.STENCIL_TEST]) ?? RenderState.Default.stencilTest;\r\n\t\tRenderStateContext.setStencilMask(stencilWrite);\r\n\t\tif (stencilWrite) {\r\n\t\t\tvar stencilOp: any = (renderState.stencilOp ?? datas[Shader3D.STENCIL_Op]) ?? RenderState.Default.stencilOp;\r\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\r\n\t\t}\r\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\r\n\t\t\tRenderStateContext.setStencilTest(false);\r\n\t\t} else {\r\n\t\t\tvar stencilRef: any = (renderState.stencilRef ?? datas[Shader3D.STENCIL_Ref]) ?? RenderState.Default.stencilRef;\r\n\t\t\tRenderStateContext.setStencilTest(true);\r\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\r\n\t\t}\r\n\t\t//blend\r\n\t\tvar blend: any = (renderState.blend ?? datas[Shader3D.BLEND]) ?? RenderState.Default.blend;\r\n\t\tswitch (blend) {\r\n\t\t\tcase RenderState.BLEND_DISABLE:\r\n\t\t\t\tRenderStateContext.setBlend(false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\r\n\t\t\t\tvar blendEquation: any = (renderState.blendEquation ?? datas[Shader3D.BLEND_EQUATION]) ?? RenderState.Default.blendEquation;\r\n\t\t\t\tvar srcBlend: any = (renderState.srcBlend ?? datas[Shader3D.BLEND_SRC]) ?? RenderState.Default.srcBlend;\r\n\t\t\t\tvar dstBlend: any = (renderState.dstBlend ?? datas[Shader3D.BLEND_DST]) ?? RenderState.Default.dstBlend;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\r\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\r\n\t\t\t\tvar blendEquationRGB: any = (renderState.blendEquationRGB ?? datas[Shader3D.BLEND_EQUATION_RGB]) ?? RenderState.Default.blendEquationRGB;\r\n\t\t\t\tvar blendEquationAlpha: any = (renderState.blendEquationAlpha ?? datas[Shader3D.BLEND_EQUATION_ALPHA]) ?? RenderState.Default.blendEquationAlpha;\r\n\t\t\t\tvar srcRGB: any = (renderState.srcBlendRGB ?? datas[Shader3D.BLEND_SRC_RGB]) ?? RenderState.Default.srcBlendRGB;\r\n\t\t\t\tvar dstRGB: any = (renderState.dstBlendRGB ?? datas[Shader3D.BLEND_DST_RGB]) ?? RenderState.Default.dstBlendRGB;\r\n\t\t\t\tvar srcAlpha: any = (renderState.srcBlendAlpha ?? datas[Shader3D.BLEND_SRC_ALPHA]) ?? RenderState.Default.srcBlendAlpha;\r\n\t\t\t\tvar dstAlpha: any = (renderState.dstBlendAlpha ?? datas[Shader3D.BLEND_DST_ALPHA]) ?? RenderState.Default.dstBlendAlpha;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState frome Material\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepthByMaterial(shaderDatas: ShaderData) {\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\r\n\t\t// depth\r\n\t\tvar depthWrite: any = datas[Shader3D.DEPTH_WRITE];\r\n\t\tdepthWrite = depthWrite ?? RenderState.Default.depthWrite;\r\n\t\tRenderStateContext.setDepthMask(depthWrite);\r\n\r\n\t\tvar depthTest: any = datas[Shader3D.DEPTH_TEST];\r\n\t\tdepthTest = depthTest ?? RenderState.Default.depthTest;\r\n\t\tif (depthTest === RenderState.DEPTHTEST_OFF) {\r\n\t\t\tRenderStateContext.setDepthTest(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tRenderStateContext.setDepthTest(true);\r\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\r\n\t\t}\r\n\r\n\t\t//Stencil\r\n\t\tvar stencilWrite: any = datas[Shader3D.STENCIL_WRITE];\r\n\t\tstencilWrite = stencilWrite ?? RenderState.Default.stencilWrite;\r\n\t\tRenderStateContext.setStencilMask(stencilWrite);\r\n\t\tif (stencilWrite) {\r\n\t\t\tvar stencilOp: any = datas[Shader3D.STENCIL_Op];\r\n\t\t\tstencilOp = stencilOp ?? RenderState.Default.stencilOp;\r\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\r\n\t\t}\r\n\r\n\t\tvar stencilTest: any = datas[Shader3D.STENCIL_TEST];\r\n\t\tstencilTest = stencilTest ?? RenderState.Default.stencilTest;\r\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\r\n\t\t\tRenderStateContext.setStencilTest(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar stencilRef: any = datas[Shader3D.STENCIL_Ref];\r\n\t\t\tstencilRef = stencilRef ?? RenderState.Default.stencilRef;\r\n\t\t\tRenderStateContext.setStencilTest(true);\r\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\r\n\t\t}\r\n\r\n\t\t//blend\r\n\t\tvar blend: any = datas[Shader3D.BLEND];\r\n\t\tblend = blend ?? RenderState.Default.blend;\r\n\t\tswitch (blend) {\r\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\r\n\t\t\t\tvar blendEquation: any = datas[Shader3D.BLEND_EQUATION];\r\n\t\t\t\tblendEquation = blendEquation ?? RenderState.Default.blendEquation;\r\n\t\t\t\tvar srcBlend: any = datas[Shader3D.BLEND_SRC];\r\n\t\t\t\tsrcBlend = srcBlend ?? RenderState.Default.srcBlend;\r\n\t\t\t\tvar dstBlend: any = datas[Shader3D.BLEND_DST];\r\n\t\t\t\tdstBlend = dstBlend ?? RenderState.Default.dstBlend;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\r\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\r\n\t\t\t\tvar blendEquationRGB: any = datas[Shader3D.BLEND_EQUATION_RGB];\r\n\t\t\t\tblendEquationRGB = blendEquationRGB ?? RenderState.Default.blendEquationRGB;\r\n\r\n\t\t\t\tvar blendEquationAlpha: any = datas[Shader3D.BLEND_EQUATION_ALPHA];\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha ?? RenderState.Default.blendEquationAlpha;\r\n\r\n\t\t\t\tvar srcRGB: any = datas[Shader3D.BLEND_SRC_RGB];\r\n\t\t\t\tsrcRGB = srcRGB ?? RenderState.Default.srcBlendRGB;\r\n\r\n\t\t\t\tvar dstRGB: any = datas[Shader3D.BLEND_DST_RGB];\r\n\t\t\t\tdstRGB = dstRGB ?? RenderState.Default.dstBlendRGB;\r\n\r\n\t\t\t\tvar srcAlpha: any = datas[Shader3D.BLEND_SRC_ALPHA];\r\n\t\t\t\tsrcAlpha = srcAlpha ?? RenderState.Default.srcBlendAlpha;\r\n\r\n\t\t\t\tvar dstAlpha: any = datas[Shader3D.BLEND_DST_ALPHA];\r\n\t\t\t\tdstAlpha = dstAlpha ?? RenderState.Default.dstBlendAlpha;\r\n\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_DISABLE:\r\n\t\t\tdefault:\r\n\t\t\t\tRenderStateContext.setBlend(false);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tuploadRenderStateFrontFace(shaderDatas: ShaderData, isTarget: boolean, invertFront: boolean): void {\r\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\t\tvar cull: any = datas[Shader3D.CULL];\r\n\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\r\n\t\t\tcull = renderState.cull ?? cull;\r\n\t\t}\r\n\t\tcull = cull ?? RenderState.Default.cull;\r\n\t\tvar forntFace: number;\r\n\t\tswitch (cull) {\r\n\t\t\tcase RenderState.CULL_NONE:\r\n\t\t\t\tRenderStateContext.setCullFace(false);\r\n\t\t\t\tif (isTarget != invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.CULL_FRONT:\r\n\t\t\t\tRenderStateContext.setCullFace(true);\r\n\t\t\t\tif (isTarget == invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.CULL_BACK:\r\n\t\t\tdefault:\r\n\t\t\t\tRenderStateContext.setCullFace(true);\r\n\t\t\t\tif (isTarget != invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tuploadCustomUniform(index: number, data: any): void {\r\n\t\tLayaGL.renderEngine.uploadCustomUniforms(this._renderShaderInstance, this._customUniformParamsMap, index, data);\r\n\t}\r\n}\r\n\r\n","/**\r\n *  <code>shaderVariable</code> 类用于保存shader变量上传相关信息。\r\n */\r\nexport class ShaderVariable {\r\n\tstatic pointID: number = 0;\r\n\t/**@internal */\r\n\tname: string;\r\n\t/**@internal */\r\n\ttype: number;\r\n\t/**@internal */\r\n\tlocation: number;\r\n\t/**@internal */\r\n\tisArray: boolean;\r\n\t/**@internal */\r\n\ttextureID: number;\r\n\t/**@internal */\r\n\tdataOffset: number;\r\n\r\n\t/**@internal */\r\n\tcaller: any;\r\n\t/**@internal */\r\n\tfun: any;\r\n\t/**@internal */\r\n\tuploadedValue: any[];\r\n\t/**@internal */\r\n\tonID: number;\r\n\r\n\t/**\r\n\t * 创建一个 <code>shaderVariable</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.onID = ShaderVariable.pointID++;\r\n\t\tthis.textureID = -1;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","export class Base64Tool {\r\n\r\n    static chars: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    static reg = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\r\n    static reghead = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,/i;\r\n\r\n    // Use a lookup table to find the index.\r\n    static lookup: Uint8Array = null;\r\n\r\n    static init(): void {\r\n        if (Base64Tool.lookup)\r\n            return;\r\n        Base64Tool.lookup = new Uint8Array(256)\r\n        for (var i: number = 0; i < Base64Tool.chars.length; i++) {\r\n            Base64Tool.lookup[Base64Tool.chars.charCodeAt(i)] = i;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断字符串是否是 base64\r\n     * @param str \r\n     */\r\n    static isBase64String(str: string): boolean {\r\n        return Base64Tool.reg.test(str);\r\n    }\r\n\r\n    /**\r\n     * 编码ArrayBuffer \r\n     * @param arraybuffer\r\n     * @return \r\n     * \r\n     */\r\n    static encode(arraybuffer: ArrayBuffer): string {\r\n        var bytes: Uint8Array = new Uint8Array(arraybuffer), i: number, len: number = bytes[\"length\"], base64: string = \"\";\r\n\r\n        for (i = 0; i < len; i += 3) {\r\n            base64 += Base64Tool.chars[bytes[i] >> 2];\r\n            base64 += Base64Tool.chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n            base64 += Base64Tool.chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n            base64 += Base64Tool.chars[bytes[i + 2] & 63];\r\n        }\r\n\r\n        if ((len % 3) === 2) {\r\n            base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n        }\r\n        else if (len % 3 === 1) {\r\n            base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n        }\r\n\r\n        return base64;\r\n    }\r\n\r\n    /**\r\n     * 解码成ArrayBuffer \r\n     * @param base64\r\n     * @return \r\n     * \r\n     */\r\n    static decode(base64: string): ArrayBuffer {\r\n        Base64Tool.init();\r\n        var bufferLength: number = base64.length * 0.75, len: number = base64.length, i: number, p: number = 0, encoded1: number, encoded2: number, encoded3: number, encoded4: number;\r\n\r\n        if (base64[base64.length - 1] === \"=\") {\r\n            bufferLength--;\r\n            if (base64[base64.length - 2] === \"=\") {\r\n                bufferLength--;\r\n            }\r\n        }\r\n\r\n        var arraybuffer: ArrayBuffer = new ArrayBuffer(bufferLength), bytes: Uint8Array = new Uint8Array(arraybuffer);\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n            encoded1 = Base64Tool.lookup[base64.charCodeAt(i)];\r\n            encoded2 = Base64Tool.lookup[base64.charCodeAt(i + 1)];\r\n            encoded3 = Base64Tool.lookup[base64.charCodeAt(i + 2)];\r\n            encoded4 = Base64Tool.lookup[base64.charCodeAt(i + 3)];\r\n\r\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n        }\r\n\r\n        return arraybuffer;\r\n    }\r\n\r\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n * <code>Log</code> 类用于在界面内显示日志记录信息。\r\n * 注意：在加速器内不可使用\r\n */\r\nexport class Log {\r\n\r\n    /**@private */\r\n    private static _logdiv: any;\r\n    /**@private */\r\n    private static _btn: any;\r\n    /**@private */\r\n    private static _count: number = 0;\r\n    /**最大打印数量，超过这个数量，则自动清理一次，默认为50次*/\r\n    static maxCount: number = 50;\r\n    /**是否自动滚动到底部，默认为true*/\r\n    static autoScrollToBottom: boolean = true;\r\n\r\n    /**\r\n     * 激活Log系统，使用方法Laya.init(800,600,Laya.Log);\r\n     */\r\n    static enable(): void {\r\n        if (!Log._logdiv) {\r\n            Log._logdiv = Browser.createElement('div');\r\n            Log._logdiv.style.cssText = \"border:white;padding:4px;overflow-y:auto;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;\";\r\n            Browser.document.body.appendChild(Log._logdiv);\r\n\r\n            Log._btn = Browser.createElement(\"button\");\r\n            Log._btn.innerText = \"Hide\";\r\n            Log._btn.style.cssText = \"z-index:1000001;position: absolute;left:10px;top:10px;\";\r\n            Log._btn.onclick = Log.toggle;\r\n            Browser.document.body.appendChild(Log._btn);\r\n        }\r\n    }\r\n\r\n    /**隐藏/显示日志面板*/\r\n    static toggle(): void {\r\n        var style: any = Log._logdiv.style;\r\n        if (style.display === \"\") {\r\n            Log._btn.innerText = \"Show\";\r\n            style.display = \"none\";\r\n        } else {\r\n            Log._btn.innerText = \"Hide\";\r\n            style.display = \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 增加日志内容。\r\n     * @param\tvalue 需要增加的日志内容。\r\n     */\r\n    static print(value: string): void {\r\n        if (Log._logdiv) {\r\n            //内容太多清理掉\r\n            if (Log._count >= Log.maxCount) Log.clear();\r\n            Log._count++;\r\n\r\n            Log._logdiv.innerText += value + \"\\n\";\r\n            //自动滚动\r\n            if (Log.autoScrollToBottom) {\r\n                if (Log._logdiv.scrollHeight - Log._logdiv.scrollTop - Log._logdiv.clientHeight < 50) {\r\n                    Log._logdiv.scrollTop = Log._logdiv.scrollHeight;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理日志\r\n     */\r\n    static clear(): void {\r\n        Log._logdiv.innerText = \"\";\r\n        Log._count = 0;\r\n    }\r\n}\r\n\r\n","//import { PerfHUD } from \"./PerfHUD\";\r\nlet DATANUM = 300;\r\n/**\r\n * @internal\r\n */\r\nexport class PerfData {\r\n    id: number;\r\n    name: string;\r\n    color: number;\r\n    scale: number = 1.0;\r\n    datas: any[] = new Array(DATANUM);\r\n    datapos: number = 0;\r\n    constructor(id: number, color: number, name: string, scale: number) {\r\n        this.id = id;\r\n        this.color = color;\r\n        this.name = name;\r\n        this.scale = scale;\r\n    }\r\n    addData(v: number): void {\r\n        this.datas[this.datapos] = v;\r\n        this.datapos++;\r\n        this.datapos %= DATANUM;\r\n    }\r\n}\r\n\r\n","import { PerfData } from \"./PerfData\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Context } from \"../resource/Context\"\r\n/**\r\n * @internal\r\n */\r\nexport class PerfHUD extends Sprite {\r\n    private static _lastTm: number = 0;\t//perf Data\r\n    private static _now: () => number = null;\r\n    private datas: any[] = [];\r\n    static DATANUM: number = 300;\r\n\r\n    xdata: any[] = new Array(PerfHUD.DATANUM);\r\n    ydata: any[] = new Array(PerfHUD.DATANUM);\r\n\r\n    hud_width: number = 800;\r\n    hud_height: number = 200;\r\n\r\n    gMinV: number = 0;\r\n    gMaxV: number = 100;\r\n\r\n    private textSpace: number = 40;\t//留给刻度文字的\r\n    static inst: PerfHUD;\r\n\r\n    private _now: Function;\r\n    private sttm: number = 0;\r\n\r\n    static drawTexTm: number = 0;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        super();\r\n        PerfHUD.inst = this;\r\n        this._renderType |= SpriteConst.CUSTOM;\r\n        this._setCustomRender();\r\n\r\n        this.addDataDef(0, 0xffffff, 'frame', 1.0);\r\n        this.addDataDef(1, 0x00ff00, 'update', 1.0);\r\n        this.addDataDef(2, 0xff0000, 'flush', 1.0);\r\n        PerfHUD._now = performance ? performance.now.bind(performance) : Date.now;\r\n    }\r\n\r\n    //TODO:coverage\r\n    now(): number {\r\n        return PerfHUD._now();\r\n    }\r\n\r\n    //TODO:coverage\r\n    start(): void {\r\n        this.sttm = PerfHUD._now();\r\n    }\r\n\r\n    //TODO:coverage\r\n    end(i: number): void {\r\n        var dt: number = PerfHUD._now() - this.sttm;\r\n        this.updateValue(i, dt);\r\n    }\r\n\r\n    //TODO:coverage\r\n    config(w: number, h: number): void {\r\n        this.hud_width = w;\r\n        this.hud_height = h;\r\n    }\r\n\r\n    //TODO:coverage\r\n    addDataDef(id: number, color: number, name: string, scale: number): void {\r\n        this.datas[id] = new PerfData(id, color, name, scale);\r\n    }\r\n\r\n    //TODO:coverage\r\n    updateValue(id: number, v: number): void {\r\n        this.datas[id].addData(v);\r\n    }\r\n\r\n    //TODO:coverage\r\n    v2y(v: number): number {\r\n        var bb: number = this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n        return this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n    }\r\n\r\n    //TODO:coverage\r\n    drawHLine(ctx: Context, v: number, color: string, text: string): void {\r\n        var sx: number = this._x;\r\n        var ex: number = this._x + this.hud_width;\r\n        var sy: number = this.v2y(v);\r\n        ctx.fillText(text, sx, sy - 6, null, 'green', null);\r\n        sx += this.textSpace;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(sx, sy, this._x + this.hud_width, 1, null);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * \r\n     * @param ctx \r\n     * @param x \r\n     * @param y \r\n     * @override\r\n     */\r\n    customRender(ctx: Context, x: number, y: number): void {\r\n        var now: number = performance.now();;\r\n        if (PerfHUD._lastTm <= 0) PerfHUD._lastTm = now;\r\n        this.updateValue(0, now - PerfHUD._lastTm);\r\n        PerfHUD._lastTm = now;\r\n\r\n        ctx.save();\r\n        ctx.fillRect(this._x, this._y, this.hud_width, this.hud_height + 4, '#000000cc');\r\n        ctx.globalAlpha = 0.9;\r\n        /*\r\n        for ( var i = 0; i < gMaxV; i+=30) {\r\n            drawHLine(ctx, i, 'green', '' + i);// '' + Math.round(1000 / (i + 1)));\r\n        }\r\n        */\r\n        this.drawHLine(ctx, 0, 'green', '    0');\r\n        this.drawHLine(ctx, 10, 'green', '  10');\r\n        this.drawHLine(ctx, 16.667, 'red', ' ');\r\n        this.drawHLine(ctx, 20, 'green', '50|20');\r\n        this.drawHLine(ctx, 16.667 * 2, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 3, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 4, 'yellow', '');\r\n        this.drawHLine(ctx, 50, 'green', '20|50');\r\n        this.drawHLine(ctx, 100, 'green', '10|100');\r\n\r\n        //数据\r\n        for (var di: number = 0, sz: number = this.datas.length; di < sz; di++) {\r\n            var cd: PerfData = this.datas[di];\r\n            if (!cd) continue;\r\n            var dtlen: number = cd.datas.length;\r\n            var dx: number = (this.hud_width - this.textSpace) / dtlen;\r\n            var cx: number = cd.datapos;\r\n            var _cx: number = this._x + this.textSpace;\r\n            ctx.fillStyle = cd.color;\r\n            //开始部分\r\n            /*\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = cd.color;\r\n            ctx.moveTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n            cx++;\r\n            _cx += dx;\r\n            for ( var dtsz:int = dtlen; cx < dtsz; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx] * cd.scale));\r\n                _cx += dx;\r\n            }\r\n            ctx.stroke();\r\n            */\r\n            for (var dtsz: number = dtlen; cx < dtsz; cx++) {\r\n                var sty: number = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                sty = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n\r\n        }\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\n","import { CacheManger } from \"./CacheManger\";\r\nimport { Pool } from \"./Pool\";\r\n\r\n/**\r\n * @private\r\n * 基于个数的对象缓存管理器\r\n */\r\nexport class PoolCache {\r\n\r\n    //TODO:\r\n    /**\r\n     * 对象在Pool中的标识\r\n     */\r\n    sign: string;\r\n    /**\r\n     * 允许缓存的最大数量\r\n     */\r\n    maxCount: number = 1000;\r\n\r\n    /**\r\n     * 获取缓存的对象列表\r\n     * @return\r\n     *\r\n     */\r\n    getCacheList(): any[] {\r\n        return Pool.getPoolBySign(this.sign);\r\n    }\r\n\r\n    /**\r\n     * 尝试清理缓存\r\n     * @param force 是否强制清理\r\n     *\r\n     */\r\n    tryDispose(force: boolean): void {\r\n        var list: any[];\r\n        list = Pool.getPoolBySign(this.sign);\r\n        if (list.length > this.maxCount) {\r\n            list.splice(this.maxCount, list.length - this.maxCount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加对象缓存管理\r\n     * @param sign 对象在Pool中的标识\r\n     * @param maxCount 允许缓存的最大数量\r\n     *\r\n     */\r\n    static addPoolCacheManager(sign: string, maxCount: number = 100): void {\r\n        var cache: PoolCache;\r\n        cache = new PoolCache();\r\n        cache.sign = sign;\r\n        cache.maxCount = maxCount;\r\n        CacheManger.regCacheByFunction(cache.tryDispose.bind(cache), cache.getCacheList.bind(cache));\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * <code>SingletonList</code> 类用于实现单例队列。\r\n */\r\nexport class SingletonList<T> {\r\n    /**@internal [只读]*/\r\n    elements: Array<T> = [];\r\n    /** @internal [只读]*/\r\n    length: number = 0;\r\n\r\n    /**\r\n     * 创建一个新的 <code>SingletonList</code> 实例。\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _add(element: T): void {\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    add(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if ((typeof (element) != \"number\") && index != -1 && index < this.length)\r\n            return;\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n        this.length++;\r\n    }\r\n\r\n    indexof(element:T){\r\n        let index = this.elements.indexOf(element);\r\n        if(index!=-1&&index<this.length)\r\n            return index;\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param element \r\n     */\r\n    remove(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if (index != -1 && index < this.length) {\r\n            this.elements[index] = this.elements[this.length - 1];\r\n            this.length--;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clear(){\r\n        this.elements = [];\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clean(){\r\n        this.elements.length = this.length;\r\n    }\r\n\r\n    destroy() {\r\n        this.elements = null;\r\n    }\r\n}\r\n\r\n\r\n","import { Pool } from \"./Pool\";\r\nimport { Tween } from \"./Tween\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Utils } from \"./Utils\";\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 整个缓动结束的时候会调度\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当缓动到达标签时会调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>TimeLine</code> 是一个用来创建时间轴动画的类。\r\n */\r\nexport class TimeLine extends EventDispatcher {\r\n\r\n    private _labelDic: any;\r\n    private _tweenDic: any = {};\r\n    private _tweenDataList: any[] = [];\r\n    private _endTweenDataList: any[];//以结束时间进行排序\r\n    private _currTime: number = 0;\r\n    private _lastTime: number = 0;\r\n    private _startTime: number = 0;\r\n    /**当前动画数据播放到第几个了*/\r\n    private _index: number = 0;\r\n    /**为TWEEN创建属于自己的唯一标识，方便管理*/\r\n    private _gidIndex: number = 0;\r\n    /**保留所有对象第一次注册动画时的状态（根据时间跳转时，需要把对象的恢复，再计算接下来的状态）*/\r\n    private _firstTweenDic: any = {};\r\n    /**是否需要排序*/\r\n    private _startTimeSort: boolean = false;\r\n    private _endTimeSort: boolean = false;\r\n    /**是否循环*/\r\n    private _loopKey: boolean = false;\r\n    /** 缩放动画播放的速度。*/\r\n    scale: number = 1;\r\n\r\n    private _frameRate: number = 60;\r\n    private _frameIndex: number = 0;\r\n    private _total: number = 0;\r\n\r\n    /**\r\n     * 控制一个对象，从当前点移动到目标点。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).to(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).from(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * 控制一个对象，从当前点移动到目标点。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, true);\r\n    }\r\n\r\n    /**\r\n     * 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, false);\r\n    }\r\n\r\n    /** @private */\r\n    private _create(target: any, props: any, duration: number, ease: Function, offset: number, isTo: boolean): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.isTo = isTo;\r\n        tTweenData.type = 0;\r\n        tTweenData.target = target;\r\n        tTweenData.duration = duration;\r\n        tTweenData.data = props;\r\n        tTweenData.startTime = this._startTime + offset;\r\n        tTweenData.endTime = tTweenData.startTime + tTweenData.duration;\r\n        tTweenData.ease = ease;\r\n        this._startTime = Math.max(tTweenData.endTime, this._startTime);\r\n        this._tweenDataList.push(tTweenData);\r\n        this._startTimeSort = true;\r\n        this._endTimeSort = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 在时间队列中加入一个标签。\r\n     * @param\tlabel\t标签名称。\r\n     * @param\toffset\t标签相对于上个动画的偏移时间(单位：毫秒)。\r\n     */\r\n    addLabel(label: string, offset: number): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.type = 1;\r\n        tTweenData.data = label;\r\n        tTweenData.endTime = tTweenData.startTime = this._startTime + offset;\r\n        this._labelDic || (this._labelDic = {});\r\n        this._labelDic[label] = tTweenData;\r\n        this._tweenDataList.push(tTweenData);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除指定的标签\r\n     * @param\tlabel\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (this._labelDic && this._labelDic[label]) {\r\n            var tTweenData: tweenData = this._labelDic[label];\r\n            if (tTweenData) {\r\n                var tIndex: number = this._tweenDataList.indexOf(tTweenData);\r\n                if (tIndex > -1) {\r\n                    this._tweenDataList.splice(tIndex, 1);\r\n                }\r\n            }\r\n            delete this._labelDic[label];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 动画从整个动画的某一时间开始。\r\n     * @param\ttime(单位：毫秒)。\r\n     */\r\n    gotoTime(time: number): void {\r\n        if (this._tweenDataList == null || this._tweenDataList.length == 0) return;\r\n        var tTween: Tween;\r\n        var tObject: any;\r\n        for (var p in this._firstTweenDic) {\r\n            tObject = this._firstTweenDic[p];\r\n            if (tObject) {\r\n                for (var tDataP in tObject) {\r\n                    if (tDataP in tObject.diyTarget) {\r\n                        tObject.diyTarget[tDataP] = tObject[tDataP];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this._currTime = time;\r\n        this._lastTime = Browser.now();\r\n        var tTweenDataCopyList: any[];\r\n        if (this._endTweenDataList == null || this._endTimeSort) {\r\n            this._endTimeSort = false;\r\n            this._endTweenDataList = tTweenDataCopyList = this._tweenDataList.concat();\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.endTime > paraB.endTime) {\r\n                    return 1;\r\n                } else if (paraA.endTime < paraB.endTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            tTweenDataCopyList.sort(Compare);\r\n        } else {\r\n            tTweenDataCopyList = this._endTweenDataList\r\n        }\r\n\r\n        var tTweenData: tweenData;\r\n        //叠加已经经过的关键帧数据\r\n        for (var i: number = 0, n: number = tTweenDataCopyList.length; i < n; i++) {\r\n            tTweenData = tTweenDataCopyList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    //把经历过的属性加入到对象中\r\n                    var props: any = tTweenData.data;\r\n                    if (tTweenData.isTo) {\r\n                        for (var tP in props) {\r\n                            tTweenData.target[tP] = props[tP];\r\n                        }\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //创建当前正在行动的TWEEN;\r\n        for (i = 0, n = this._tweenDataList.length; i < n; i++) {\r\n            tTweenData = this._tweenDataList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.startTime && time < tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(this._currTime - (time - tTweenData.startTime));\r\n                    tTween._updateEase(this._currTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从指定的标签开始播。\r\n     * @param\tLabel 标签名。\r\n     */\r\n    gotoLabel(Label: string): void {\r\n        if (this._labelDic == null) return;\r\n        var tLabelData: tweenData = this._labelDic[Label];\r\n        if (tLabelData) this.gotoTime(tLabelData.startTime);\r\n    }\r\n\r\n    /**\r\n     * 暂停整个动画。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停动画的播放。\r\n     */\r\n    resume(): void {\r\n        this.play(this._currTime, this._loopKey);\r\n    }\r\n\r\n    /**\r\n     * 播放动画。\r\n     * @param\ttimeOrLabel 开启播放的时间点或标签名。\r\n     * @param\tloop 是否循环播放。\r\n     */\r\n    play(timeOrLabel: any = 0, loop: boolean = false): void {\r\n        if (!this._tweenDataList) return;\r\n        if (this._startTimeSort) {\r\n            this._startTimeSort = false;\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.startTime > paraB.startTime) {\r\n                    return 1;\r\n                } else if (paraA.startTime < paraB.startTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            this._tweenDataList.sort(Compare);\r\n\r\n            for (var i: number = 0, n: number = this._tweenDataList.length; i < n; i++) {\r\n                var tTweenData: tweenData = this._tweenDataList[i];\r\n                if (tTweenData != null && tTweenData.type == 0) {\r\n                    var tTarget: any = tTweenData.target;\r\n                    var gid: number = (tTarget.$_GID || (tTarget.$_GID = Utils.getGID()));\r\n                    var tSrcData: any = null;\r\n                    //把对象的初始属性保留下来，方便跳转时，回复到初始状态\r\n                    if (this._firstTweenDic[gid] == null) {\r\n                        tSrcData = {};\r\n                        tSrcData.diyTarget = tTarget;\r\n                        this._firstTweenDic[gid] = tSrcData;\r\n                    } else {\r\n                        tSrcData = this._firstTweenDic[gid];\r\n                    }\r\n                    for (var p in tTweenData.data) {\r\n                        if (tSrcData[p] == null) {\r\n                            tSrcData[p] = tTarget[p];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (typeof (timeOrLabel) == 'string') {\r\n            this.gotoLabel(timeOrLabel);\r\n        } else {\r\n            this.gotoTime(timeOrLabel);\r\n        }\r\n        this._loopKey = loop;\r\n        this._lastTime = Browser.now();\r\n        ILaya.timer.frameLoop(1, this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 更新当前动画。\r\n     */\r\n    private _update(): void {\r\n        if (this._currTime >= this._startTime) {\r\n            if (this._loopKey) {\r\n                this._complete();\r\n                if (!this._tweenDataList) return;\r\n                this.gotoTime(0);\r\n            } else {\r\n                for (var p in this._tweenDic) {\r\n                    tTween = this._tweenDic[p];\r\n                    tTween.complete();\r\n                }\r\n                this.pause();\r\n                this._complete();\r\n                return;\r\n            }\r\n        }\r\n\r\n        var tNow: number = Browser.now();\r\n        var tFrameTime: number = tNow - this._lastTime;\r\n        var tCurrTime: number = this._currTime += tFrameTime * this.scale;\r\n        this._lastTime = tNow;\r\n\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween._updateEase(tCurrTime);\r\n        }\r\n\r\n        var tTween: Tween;\r\n        if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) {\r\n            var tTweenData: tweenData = this._tweenDataList[this._index];\r\n            if (tCurrTime >= tTweenData.startTime) {\r\n                this._index++;\r\n                //创建TWEEN\r\n                if (tTweenData.type == 0) {\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(tCurrTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                    tTween._updateEase(tCurrTime);\r\n                } else {\r\n                    this.event(Event.LABEL, tTweenData.data);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 指定的动画索引处的动画播放完成后，把此动画从列表中删除。\r\n     * @param\tindex\r\n     */\r\n    private _animComplete(index: number): void {\r\n        var tTween: Tween = this._tweenDic[index];\r\n        if (tTween) delete this._tweenDic[index];\r\n    }\r\n\r\n    /** @private */\r\n    private _complete(): void {\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 得到帧索引\r\n     */\r\n    get index(): number {\r\n        return this._frameIndex;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置帧索引\r\n     */\r\n    set index(value: number) {\r\n        this._frameIndex = value;\r\n        this.gotoTime(this._frameIndex / this._frameRate * 1000);\r\n    }\r\n\r\n    /**\r\n     * 得到总帧数。\r\n     */\r\n    get total(): number {\r\n        this._total = Math.floor(this._startTime / 1000 * this._frameRate);\r\n        return this._total;\r\n    }\r\n\r\n    /**\r\n     * 重置所有对象，复用对象的时候使用。\r\n     */\r\n    reset(): void {\r\n        var p: any;\r\n        if (this._labelDic) {\r\n            for (p in this._labelDic) {\r\n                delete this._labelDic[p];\r\n            }\r\n        }\r\n        var tTween: Tween;\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        for (p in this._firstTweenDic) {\r\n            delete this._firstTweenDic[p];\r\n        }\r\n        this._endTweenDataList = null;\r\n        if (this._tweenDataList && this._tweenDataList.length) {\r\n            var i: number, len: number;\r\n            len = this._tweenDataList.length;\r\n            for (i = 0; i < len; i++) {\r\n                if (this._tweenDataList[i])\r\n                    this._tweenDataList[i].destroy();\r\n            }\r\n        }\r\n        this._tweenDataList.length = 0;\r\n        this._currTime = 0;\r\n        this._lastTime = 0;\r\n        this._startTime = 0;\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this.scale = 1;\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 彻底销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.reset();\r\n        this._labelDic = null;\r\n        this._tweenDic = null;\r\n        this._tweenDataList = null;\r\n        this._firstTweenDic = null;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nclass tweenData {\r\n    type: number = 0;//0代表TWEEN,1代表标签\r\n    isTo: boolean = true;\r\n    startTime: number;\r\n    endTime: number;\r\n    target: any;\r\n    duration: number;\r\n    ease: Function;\r\n    data: any;\r\n    destroy(): void {\r\n        this.target = null;\r\n        this.ease = null;\r\n        this.data = null;\r\n        this.isTo = true;\r\n        this.type = 0;\r\n        Pool.recover(\"tweenData\", this);\r\n    }\r\n}\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制粒子\r\n * @private\r\n */\r\nexport class DrawParticleCmd {\r\n    static ID: string = \"DrawParticleCmd\";\r\n\r\n    private _templ: any;\r\n\r\n    /**@private */\r\n    static create(_temp: any): DrawParticleCmd {\r\n        var cmd: DrawParticleCmd = Pool.getItemByClass(\"DrawParticleCmd\", DrawParticleCmd);\r\n        cmd._templ = _temp;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this._templ = null;\r\n        Pool.recover(\"DrawParticleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        //这个只有webgl在用\r\n        context.drawParticle(gx, gy, this._templ);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawParticleCmd.ID;\r\n    }\r\n}\r\n\r\n","import { CommandUniformMap } from \"../../../RenderEngine/CommandUniformMap\";\r\n\r\nexport class NativeCommandUniformMap extends CommandUniformMap {\r\n\r\n\tprivate _nativeObj: any;\r\n\r\n    constructor(_nativeObj: any, stateName: string){\r\n        super(stateName);\r\n\t\tthis._nativeObj = _nativeObj;\r\n    }\r\n    hasPtrID(propertyID: number): boolean {\r\n\t\treturn this._nativeObj.hasPtrID(propertyID);\r\n\t}\r\n\r\n\tgetMap() {\r\n\t\treturn this._idata;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个UniformMap\r\n\t * @internal\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderUniform(propertyID: number, propertyKey: string): void {\r\n\t\t//this._idata[propertyID] = propertyKey;\r\n        this._nativeObj.addShaderUniform(propertyID, propertyKey);\r\n\t}\r\n}","import { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n/**\r\n * WebglObject 基类\r\n */\r\nexport class NativeGLObject{\r\n    protected _engine:NativeWebGLEngine;\r\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    protected _id:number;\r\n    protected _destroyed: boolean = false;\r\n\r\n    constructor(engine: NativeWebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._id = this._engine._IDCounter++;\r\n    }\r\n\r\n    get destroyed():boolean{\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    setResourceManager():void{\r\n    };\r\n\r\n    destroy():void{\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n    }\r\n\r\n}","\r\nimport { WebGLExtension } from \"../WebGLEngine/GLEnum/WebGLExtension\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\n\r\nexport class NativeGLTextureContext extends NativeGLObject implements ITextureContext {\r\n    needBitmap: boolean;\r\n    protected _native: any;\r\n\r\n    constructor(engine: NativeWebGLEngine, native: any) {\r\n        super(engine);\r\n        this._native = native;\r\n        this.needBitmap = false;\r\n    }\r\n\r\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        return this._native.createTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\r\n    }\r\n\r\n    setTextureImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        this._native.setTextureImageData(texture, (source as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexturePixelsData(texture: InternalTexture, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        this._native.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    initVideoTextureData(texture: InternalTexture): void {\r\n        this._native.initVideoTextureData(texture);\r\n    }\r\n\r\n    setTextureSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTextureSubImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        throw new Error(\"setTextureSubImageData Method not implemented.\");\r\n    }\r\n\r\n    setTexture3DImageData(texture: InternalTexture, source: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DImageData(texture, (source as any[]).map(function (s) { return s._nativeObj }), depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexture3DPixlesData(texture: InternalTexture, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DPixlesData(texture, source, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexture3DSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTextureHDRData(texture: InternalTexture, hdrInfo: HDRTextureInfo): void {\r\n        let sourceData = hdrInfo.readScanLine();\r\n        throw new Error(\"setTextureHDRData Method not implemented.\");\r\n        this.setTexturePixelsData(texture, sourceData, false, false);\r\n    }\r\n    setTextureDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\r\n        this._native.setTextureKTXData(texture, ddsInfo);\r\n    }\r\n\r\n    setTextureKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\r\n        this._native.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n    setCubeImageData(texture: InternalTexture, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        var images: any[] = [];\r\n        var length = sources.length;\r\n        for (let index = 0; index < length; index++) {\r\n            images.push((sources[index] as any)._nativeObj);\r\n        }\r\n        this._native.setCubeImageData(texture, images, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setCubePixelsData(texture: InternalTexture, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n    setCubeSubPixelData(texture: InternalTexture, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n\r\n    setCubeDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\r\n        this._native.setCubeDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    setCubeKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\r\n        this._native.setCubeKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    setTextureCompareMode(texture: InternalTexture, compareMode: TextureCompareMode): TextureCompareMode {\r\n        return this._native.setTextureCompareMode(texture, compareMode);\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: InternalRenderTarget, faceIndex: number = 0): void {\r\n        this._native.bindRenderTarget(renderTarget, faceIndex);\r\n    }\r\n\r\n    bindoutScreenTarget(): void {\r\n        this._native.bindoutScreenTarget();\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: InternalRenderTarget): void {\r\n        this._native.unbindRenderTarget(renderTarget);\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        return this._native.createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\r\n        return this._native.createRenderTargetInternal(width, height, colorFormat, depthStencilFormat ? depthStencilFormat : RenderTargetFormat.None, generateMipmap, sRGB, multiSamples);\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\r\n        return this._native.createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples);\r\n    }\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        throw new Error(\"createRenderTextureCubeInternal Method not implemented.\");\r\n    }\r\n    // todo  color 0, 1, 2, 3 ?\r\n    setupRendertargetTextureAttachment(renderTarget: InternalRenderTarget, texture: InternalTexture) {\r\n        this._native.setupRendertargetTextureAttachment(renderTarget, texture);\r\n    }\r\n\r\n    // todo 不同 格式\r\n    readRenderTargetPixelData(renderTarget: InternalRenderTarget, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\r\n        return this._native.readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out);\r\n    }\r\n\r\n    updateVideoTexture(texture: InternalTexture, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.updateVideoTexture(texture, (video as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    getRenderTextureData(internalTex: InternalRenderTarget, x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return this._native.getRenderTextureData(internalTex, x, y, width, height);\r\n    }\r\n}","import { NativeGLTextureContext } from \"./NativeGLTextureContext\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\n\r\n/**\r\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\r\n */\r\nexport class NativeGL2TextureContext extends NativeGLTextureContext {\r\n\r\n    constructor(engine: NativeWebGLEngine, native: any) {\r\n        super(engine, native);\r\n    }\r\n}","import { IndexFormat } from \"../../RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderGeometryElement } from \"../../RenderInterface/RenderPipelineInterface/IRenderGeometryElement\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n//TODO\r\nexport class NativeGLRenderDrawContext extends NativeGLObject implements IRenderDrawContext {\r\n    _nativeObj: any;\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n        this._nativeObj = new (window as any).conchGLRenderDrawContext((engine as any)._nativeObj);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElementsInstanced(mode: MeshTopology, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\r\n        this._nativeObj.drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawArraysInstanced(mode: MeshTopology, first: number, count: number, instanceCount: number): void {\r\n        this._nativeObj.drawArraysInstanced(mode, first, count, instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    drawArrays(mode: MeshTopology, first: number, count: number): void {\r\n        this._nativeObj.drawArrays(mode, first, count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElements(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        this._nativeObj.drawElements(mode, count, type, offset);\r\n    }\r\n\r\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        //todo\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawGeometryElement(geometryElement: IRenderGeometryElement): void {\r\n        this._nativeObj.drawGeometryElement((geometryElement as any)._nativeObj);\r\n    }\r\n\r\n\r\n}","import { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\r\nimport { RenderStateType } from \"../../../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * 渲染状态设置命令流\r\n */\r\nexport class NativeRenderStateCommand extends RenderStateCommand {\r\n    private _nativeObj: any;\r\n    constructor() {\r\n        super();\r\n        this._nativeObj = new (window as any).conchRenderStateCommand();\r\n    }\r\n\r\n    addCMD(renderstate: RenderStateType, value: any) {\r\n        switch (renderstate) {\r\n            case RenderStateType.DepthTest:\r\n            case RenderStateType.DepthMask:\r\n            case RenderStateType.DepthFunc:\r\n            case RenderStateType.StencilTest:\r\n            case RenderStateType.StencilMask:\r\n            case RenderStateType.BlendEquation:\r\n            case RenderStateType.CullFace:\r\n            case RenderStateType.FrontFace:\r\n                this._nativeObj.addCMDInt1(renderstate, value);\r\n                break;\r\n            case RenderStateType.StencilFunc:\r\n            case RenderStateType.BlendFunc:\r\n            case RenderStateType.BlendEquationSeparate:\r\n                this._nativeObj.addCMDInt2(renderstate, value[0], value[1]);\r\n                break;\r\n            case RenderStateType.StencilOp:\r\n                this._nativeObj.addCMDInt3(renderstate, value[0], value[1], value[2]);//TODO\r\n                break;\r\n            case RenderStateType.BlendType:\r\n                this._nativeObj.addCMDInt1(renderstate, value != BlendType.BLEND_DISABLE ? 1 : 0);\r\n                break;\r\n            case RenderStateType.BlendFuncSeperate:\r\n                this._nativeObj.addCMDInt4(renderstate, value[0], value[1], value[2], value[3]);\r\n                break;\r\n            default:\r\n                throw \"unknow type of renderStateType\";\r\n                break;\r\n        }\r\n    }\r\n\r\n    applyCMD() {\r\n        LayaGL.renderEngine.applyRenderStateCMD(this);\r\n    }\r\n\r\n    clear() {\r\n        this._nativeObj.clear();\r\n    }\r\n}","import { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\n\r\n\r\nexport class NativeRenderState {\r\n\t_nativeObj: any;\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._nativeObj.cull = value;\r\n\t}\r\n\tget cull(): number {\r\n\t\treturn this._nativeObj.cull;\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._nativeObj.blend = value;\r\n\t}\r\n\tget blend(): number {\r\n\t\treturn this._nativeObj.blend;\r\n\t}\r\n\r\n\tset srcBlend(value: number) {\r\n\t\tthis._nativeObj.srcBlend = value;\r\n\t}\r\n\tget srcBlend(): number {\r\n\t\treturn this._nativeObj.srcBlend;\r\n\t}\r\n\r\n\tset dstBlend(value: number) {\r\n\t\tthis._nativeObj.dstBlend = value;\r\n\t}\r\n\tget dstBlend(): number {\r\n\t\treturn this._nativeObj.dstBlend;\r\n\t}\r\n\t\r\n\tset srcBlendRGB(value: number) {\r\n\t\tthis._nativeObj.srcBlendRGB = value;\r\n\t}\r\n\tget srcBlendRGB(): number {\r\n\t\treturn this._nativeObj.srcBlendRGB;\r\n\t}\r\n\t\r\n\tset dstBlendRGB(value: number) {\r\n\t\tthis._nativeObj.dstBlendRGB = value;\r\n\t}\r\n\tget dstBlendRGB(): number {\r\n\t\treturn this._nativeObj.dstBlendRGB;\r\n\t}\r\n\t\r\n\tset srcBlendAlpha(value: number) {\r\n\t\tthis._nativeObj.srcBlendAlpha = value;\r\n\t}\r\n\tget srcBlendAlpha(): number {\r\n\t\treturn this._nativeObj.srcBlendAlpha;\r\n\t}\r\n\t\r\n\tset dstBlendAlpha(value: number) {\r\n\t\tthis._nativeObj.dstBlendAlpha = value;\r\n\t}\r\n\tget dstBlendAlpha(): number {\r\n\t\treturn this._nativeObj.dstBlendAlpha;\r\n\t}\r\n\t\r\n\tset blendEquation(value: number) {\r\n\t\tthis._nativeObj.blendEquation = value;\r\n\t}\r\n\tget blendEquation(): number {\r\n\t\treturn this._nativeObj.blendEquation;\r\n\t}\r\n\t\r\n\tset blendEquationRGB(value: number) {\r\n\t\tthis._nativeObj.blendEquationRGB = value;\r\n\t}\r\n\tget blendEquationRGB(): number {\r\n\t\treturn this._nativeObj.blendEquationRGB;\r\n\t}\r\n\t\r\n\tset blendEquationAlpha(value: number) {\r\n\t\tthis._nativeObj.blendEquationAlpha = value;\r\n\t}\r\n\tget blendEquationAlpha(): number {\r\n\t\treturn this._nativeObj.blendEquationAlpha;\r\n\t}\r\n\t\r\n\tset depthTest(value: number) {\r\n\t\tthis._nativeObj.depthTest = value;\r\n\t}\r\n\tget depthTest(): number {\r\n\t\treturn this._nativeObj.depthTest;\r\n\t}\r\n\t\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._nativeObj.depthWrite = value;\r\n\t}\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._nativeObj.depthWrite;\r\n\t}\r\n\t\r\n\tset stencilWrite(value: boolean) {\r\n\t\tthis._nativeObj.stencilWrite = value;\r\n\t}\r\n\tget stencilWrite(): boolean {\r\n\t\treturn this._nativeObj.stencilWrite;\r\n\t}\r\n\t\r\n\tset stencilTest(value: number) {\r\n\t\tthis._nativeObj.stencilTest = value;\r\n\t}\r\n\tget stencilTest(): number {\r\n\t\treturn this._nativeObj.stencilTest;\r\n\t}\r\n\t\r\n\tset stencilRef(value: number) {\r\n\t\tthis._nativeObj.stencilRef = value;\r\n\t}\r\n\tget stencilRef(): number {\r\n\t\treturn this._nativeObj.stencilRef;\r\n\t}\r\n\r\n\tset stencilOp(value: Vector3) {\r\n\t\tthis._nativeObj.setStencilOp(value.x, value.y, value.z);\r\n\t}\r\n\tsetNull():void {\r\n\t\tthis._nativeObj.setNull();\r\n\t}\r\n\tconstructor() {\r\n\t\tthis._nativeObj = new (window as any).conchRenderState();\r\n\t}\r\n\r\n}\r\n\r\n\r\n","export enum MemoryDataType{\r\n   ShaderData,\r\n   TextureData,\r\n   VertexData,\r\n   IndexData,\r\n   BaseRenderData,\r\n}","import { Color } from \"../../../maths/Color\";\r\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\r\nimport { Quaternion } from \"../../../maths/Quaternion\";\r\nimport { Vector2 } from \"../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { INativeUploadNode } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/INativeUploadNode\";\r\nimport { MemoryDataType } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType\";\r\nimport { UploadMemory } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory\";\r\nimport { UploadMemoryManager } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { Resource } from \"../../../resource/Resource\";\r\nimport { Texture } from \"../../../resource/Texture\";\r\nimport { Texture2D } from \"../../../resource/Texture2D\";\r\nimport { NativeUniformBufferObject } from \"./NativeUniformBufferObject\";\r\n\r\n\r\nexport enum NativeShaderDataType {\r\n    Number32,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Matrix4x4,\r\n    Number32Array,\r\n    Texture,\r\n    ShaderDefine,\r\n    UBO,\r\n}\r\n\r\nexport class NativeShaderData extends ShaderData implements INativeUploadNode {\r\n    private inUploadList: boolean = false;\r\n    _dataType: MemoryDataType;\r\n    nativeObjID: number;\r\n    _nativeObj: any;\r\n    updateMap: Map<number, Function>;\r\n    updataSizeMap: Map<number, number>;\r\n    payload32bitNum: number = 0;\r\n    /**\r\n     * @internal\t\r\n     */\r\n    constructor(ownerResource: Resource = null) {\r\n        super(ownerResource)\r\n        this._initData();\r\n        this._nativeObj = new (window as any).conchShaderData();\r\n        this._nativeObj.setApplyUBOData(this.applyUBOData.bind(this));\r\n        this.nativeObjID = this._nativeObj.nativeID;\r\n        this._dataType = MemoryDataType.ShaderData;\r\n        this.updateMap = new Map();\r\n        this.updataSizeMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * @override interface INativeUploadNode\r\n     * @internal\r\n     */\r\n    getUploadMemoryLength(): number {\r\n        let head = 4;//header\r\n        this.updataSizeMap.forEach((value) => {\r\n            this.payload32bitNum += value;\r\n        });\r\n        return (this.payload32bitNum + head) * 4;\r\n    }\r\n\r\n    /**\r\n     * @override interface INativeUploadNode\r\n     * @internal\r\n     * @param memoryBlock \r\n     * @param stride \r\n     */\r\n    uploadDataTOShareMemory(memoryBlock: UploadMemory, strideInByte: number): boolean {\r\n        if (!this._data) {\r\n            return false;\r\n        }\r\n        let array = memoryBlock.int32Array;\r\n        let strideFloat = strideInByte / 4;\r\n        //type\r\n        array[strideFloat++] = MemoryDataType.ShaderData;\r\n        //instanceID\r\n        array[strideFloat++] = this.nativeObjID;\r\n        //dataLength\r\n        array[strideFloat++] = this.payload32bitNum;\r\n        //Shaderdata property change nums\r\n        array[strideFloat++] = this.updateMap.size;\r\n        this.updateMap.forEach((value, key) => {\r\n            strideFloat += value.call(this, key, memoryBlock, strideFloat);\r\n        });\r\n        this.clearUpload();\r\n        this.inUploadList = false;\r\n        return true;\r\n    }\r\n\r\n    clearUpload() {\r\n        this.payload32bitNum = 0;\r\n        this.updataSizeMap.clear();\r\n        this.updateMap.clear();\r\n    }\r\n\r\n    applyUBOData() {\r\n        if (this._uniformBufferDatas) {\r\n            super.applyUBOData();\r\n        }\r\n\t}\r\n    compressNumber(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Number32 \" + NativeShaderDataType.Number32 + \"stride \" + stride);\r\n        var length = 3;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Number32;\r\n        memoryBlock.float32Array[stride + 2] = this._data[index];\r\n        return length;\r\n    }\r\n\r\n    compressVector2(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector2 \" + NativeShaderDataType.Vector2 + \"stride \" + stride);\r\n        var length = 4;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector2;\r\n        var value: Vector2 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        return length;\r\n    }\r\n\r\n    compressVector3(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector3 \" + NativeShaderDataType.Vector2 + \"stride \" + stride);\r\n        var length = 5;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector3;\r\n        var value: Vector3 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        memoryBlock.float32Array[stride + 4] = value.z;\r\n        return length;\r\n    }\r\n\r\n    compressVector4(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector4 \" + NativeShaderDataType.Vector4 + \"stride \" + stride);\r\n        var length = 6;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector4;\r\n        var value: Vector4 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        memoryBlock.float32Array[stride + 4] = value.z;\r\n        memoryBlock.float32Array[stride + 5] = value.w;\r\n        return length;\r\n    }\r\n    \r\n\r\n    compressMatrix4x4(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Matrix4x4 \" + NativeShaderDataType.Matrix4x4 + \"stride \" + stride);\r\n        var length = 18;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Matrix4x4;\r\n        var value: Matrix4x4 = this._data[index];\r\n        memoryBlock.float32Array.set(value.elements, stride + 2);\r\n        return length;\r\n    }\r\n\r\n    compressNumberArray(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Number32Array \" + NativeShaderDataType.Number32Array + \"stride \" + stride);\r\n        memoryBlock.int32Array[stride] = index\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Number32Array;\r\n        var value: Float32Array = this._data[index];\r\n        memoryBlock.int32Array[stride + 2] = value.length;\r\n        memoryBlock.float32Array.set(value, stride + 3);\r\n        return value.length + 3;\r\n    }\r\n\r\n    compressTexture(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Texture \" + NativeShaderDataType.Texture + \"stride \" + stride);\r\n        var value: any = this._data[index];\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Texture;\r\n        if (value && value instanceof Texture) {\r\n            memoryBlock.int32Array[stride + 2] = (value.bitmap._texture as any).id;\r\n        }\r\n        else if (value && value._texture) {\r\n            memoryBlock.int32Array[stride + 2] = (value._texture as any).id;\r\n        }\r\n        else {\r\n            memoryBlock.int32Array[stride + 2] = (Texture2D.errorTexture._texture as any).id;\r\n        }\r\n        return 3;\r\n    }\r\n\r\n    compressUBO(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        var value:NativeUniformBufferObject = this._data[index];\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.UBO;\r\n        memoryBlock.int32Array[stride + 2] = (value._conchUniformBufferObject as any).nativeID;\r\n        return 3;\r\n    }\r\n\r\n    private configMotionProperty(key: number, length: number, callBack: Function) {\r\n        this.updateMap.set(key, callBack);\r\n        this.updataSizeMap.set(key, length);\r\n        if (!this.inUploadList) {\r\n            this.inUploadList = true;\r\n            UploadMemoryManager.getInstance()._dataNodeList.add(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置布尔。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 布尔。\r\n     */\r\n    setBool(index: number, value: boolean): void {\r\n        super.setBool(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置整型。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 整形。\r\n     */\r\n    setInt(index: number, value: number): void {\r\n        //this._data[index] = value;\r\n        super.setInt(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置浮点。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 浮点。\r\n     */\r\n    setNumber(index: number, value: number): void {\r\n        super.setNumber(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue Vector2向量。\r\n     */\r\n    setVector2(index: number, value: Vector2): void {\r\n        super.setVector2(index, value);\r\n        this.configMotionProperty(index, 4, this.compressVector2);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue Vector3向量。\r\n     */\r\n    setVector3(index: number, value: Vector3): void {\r\n        super.setVector3(index, value);\r\n        this.configMotionProperty(index, 5, this.compressVector3);\r\n    }\r\n\r\n    /**\r\n     * 设置向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 向量。\r\n     */\r\n    setVector(index: number, value: Vector4): void {\r\n        super.setVector(index, value);\r\n        this.configMotionProperty(index, 6, this.compressVector4);\r\n    }\r\n\r\n    /**\r\n     * 设置颜色\r\n     * @param index 索引\r\n     * @param value 颜色值\r\n     */\r\n    setColor(index: number, value: Color): void {\r\n        super.setColor(index, value);\r\n        this.configMotionProperty(index, 6, this.compressVector4);\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue  矩阵。\r\n     */\r\n    setMatrix4x4(index: number, value: Matrix4x4): void {\r\n        super.setMatrix4x4(index, value);\r\n        this.configMotionProperty(index, 18, this.compressMatrix4x4);\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置Buffer。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue  buffer数据。\r\n     */\r\n    setBuffer(index: number, value: Float32Array): void {\r\n        super.setBuffer(index, value);\r\n        this.configMotionProperty(index, 3 + value.length, this.compressNumberArray);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 纹理。\r\n     */\r\n    setTexture(index: number, value: BaseTexture): void {\r\n        super.setTexture(index, value);\r\n        this.configMotionProperty(index, 3, this.compressTexture);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param index \r\n     * @param value \r\n     */\r\n    setUniformBuffer(index: number, value: NativeUniformBufferObject) {\r\n        this._data[index] = value;\r\n        this.configMotionProperty(index, 3, this.compressUBO);\r\n    }\r\n\r\n    /**\r\n     * set shader data\r\n     * @deprecated\r\n     * @param index uniformID\r\n     * @param value data\r\n     */\r\n    setValueData(index: number, value: any) {\r\n        // if (!!value.clone)\r\n        //     this._data[index] = value.clone();\r\n        // else\r\n        //     this._data[index] = value;\r\n        //有点恶心\r\n        if (typeof value == \"boolean\") {\r\n            this.setBool(index, <boolean>value);\r\n        } else if (typeof value == \"number\") {\r\n            this.setNumber(index, <number>value);\r\n        } else if (value instanceof Color) {\r\n            this.setColor(index, <Color>value);\r\n        } else if (value instanceof Vector2) {\r\n            this.setVector2(index, <Vector2>value);\r\n        } else if (value instanceof Vector3) {\r\n            this.setVector3(index, <Vector3>value);\r\n        } else if (value instanceof Vector4 || value instanceof Quaternion) {\r\n            this.setVector(index, <Vector4>value);\r\n        } else if (value instanceof Matrix4x4) {\r\n            this.setMatrix4x4(index, <Matrix4x4>value);\r\n        } else if (value.ArrayBuffer != null) {\r\n            this.setBuffer(index, value);\r\n        } else if (value._texture != null) {\r\n            this.setTexture(index, value);\r\n        }\r\n    }\r\n\r\n    cloneTo(destObject: NativeShaderData) {\r\n        var dest: NativeShaderData = <NativeShaderData>destObject;\r\n        for (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\r\n            var value: any = this._data[k];\r\n            if (value != null) {\r\n                if (typeof (value) == 'boolean') {\r\n                    destObject.setBool((k as any), value);\r\n                } else if (typeof (value) == 'number') {\r\n                    destObject.setNumber(k as any, <number>value);\r\n                } else if (value instanceof Vector2) {\r\n                    destObject.setVector2(k as any, <Vector2>value);\r\n                } else if (value instanceof Vector3) {\r\n                    destObject.setVector3(k as any, <Vector3>value);\r\n                } else if (value instanceof Vector4) {\r\n                    destObject.setVector(k as any, <Vector4>value);\r\n                } else if (value instanceof Matrix4x4) {\r\n                    destObject.setMatrix4x4(k as any, <Matrix4x4>value);\r\n                } else if (value instanceof BaseTexture) {\r\n                    destObject.setTexture(k as any, value);\r\n                }\r\n            }\r\n        }\r\n        this._defineDatas.cloneTo(dest._defineDatas);\r\n        this._gammaColorMap.forEach((color, index) => {\r\n\t\t    destObject._gammaColorMap.set(index, color.clone());\r\n\t    })\r\n    }\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: NativeShaderData = new NativeShaderData();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    destroy(): void {\r\n\t\tsuper.destroy();\r\n        this._nativeObj.destroy();\r\n        this._nativeObj = null;\r\n\t}\r\n}","/**\r\n * WebGL mode.\r\n */\r\n export enum WebGLMode {\r\n    /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\r\n    Auto = 0,\r\n    /** WebGL2.0. */\r\n    WebGL2 = 1,\r\n    /** WebGL1.0, */\r\n    WebGL1 = 2\r\n}","export enum WebGLExtension{\r\n    OES_vertex_array_object,\r\n    ANGLE_instanced_arrays,\r\n    OES_texture_half_float,\r\n    OES_texture_half_float_linear,\r\n    OES_texture_float,\r\n    OES_element_index_uint,\r\n    OES_texture_float_linear,//allows linear filtering with floating-point pixel types for textures.\r\n    EXT_color_buffer_half_float,//Render BufferHalf float color\r\n    EXT_shader_texture_lod,\r\n    WEBGL_depth_texture,\r\n    EXT_sRGB,\r\n    EXT_color_buffer_float,\r\n    EXT_texture_filter_anisotropic,\r\n    WEBGL_compressed_texture_s3tc,\r\n    WEBGL_compressed_texture_s3tc_srgb,\r\n    WEBGL_compressed_texture_pvrtc,\r\n    WEBGL_compressed_texture_etc1,\r\n    WEBGL_compressed_texture_etc,\r\n    WEBGL_compressed_texture_astc,\r\n    OES_standard_derivatives,\r\n}","/**\r\n * 共享内存分配,并且绑定Native共享Buffer\r\n */\r\nexport class CommonMemoryAllocater{\r\n    \r\n    /**\r\n     * 创建内存，并绑定为共享内存\r\n     * @param size \r\n     * @returns \r\n     */\r\n    static creatBlock(size:number):ArrayBuffer{\r\n        const buffer = new ArrayBuffer(size);\r\n        \r\n        //native bind todo:\r\n        //buffer.nativeid = ??\r\n        return buffer;\r\n    }\r\n\r\n    /**\r\n     * 释放共享内存\r\n     * @param buffer \r\n     */\r\n    static freeMemoryBlock(buffer:ArrayBuffer){\r\n        //TODO native free buffer\r\n        buffer = null;\r\n    }\r\n    \r\n    \r\n    \r\n}","import { CommonMemoryAllocater } from \"./CommonMemoryAllocater\";\r\n\r\nexport class NativeMemory {\r\n    static NativeSourceID:number = 0;\r\n    /**@internal 共享内存数据 */\r\n    public _buffer: ArrayBuffer;\r\n    /**@internal 显示数据 */\r\n    static  _sharedBuffer: ArrayBuffer = new ArrayBuffer(256);\r\n    /**@internal 显示数据 */\r\n    protected _idata:Int32Array;\r\n    protected _fdata:Float32Array;\r\n    protected _f64data:Float64Array;\r\n    protected _byteArray:Uint8Array;\r\n    /**数据长度 */\r\n    protected _byteLength: number;\r\n    /**销毁标记 */\r\n    protected _destroyed: boolean;\r\n    /**数据资源 */\r\n    protected _id:number;\r\n    /**\r\n     * 实例化一个共享内存\r\n     * @param size byteLength\r\n     */\r\n    constructor(size: number, shared: boolean) {\r\n        if (shared) {\r\n            if (size > NativeMemory._sharedBuffer.byteLength) {\r\n                throw new Error(\"NativeMemory:shared buffer not enough\");\r\n            }\r\n            this._buffer = NativeMemory._sharedBuffer;\r\n        }\r\n        else {\r\n            this._buffer = CommonMemoryAllocater.creatBlock(size);\r\n        }\r\n        this._idata = new Int32Array(this._buffer);\r\n        this._fdata = new Float32Array(this._buffer);\r\n        this._f64data = new Float64Array(this._buffer);\r\n        this._byteArray = new Uint8Array(this._buffer);\r\n        this._byteLength = size;\r\n    }\r\n\r\n    /**\r\n     * Float32Array Data\r\n     */\r\n    get float32Array(): Float32Array {\r\n        return  this._fdata;\r\n    }\r\n\r\n    get float64Array(): Float64Array {\r\n        return  this._f64data;\r\n    }\r\n    /**\r\n     * Uint16Array Data\r\n     */\r\n    /*get uint16Array(): Uint16Array {\r\n        if (!(this._bufferData instanceof Uint16Array))\r\n            this._bufferData = new Uint16Array(this._buffer);\r\n        return <Uint16Array>this._bufferData;\r\n    }*/\r\n\r\n    /**\r\n     * Uint8Array Data\r\n     */\r\n    get uint8Array(): Uint8Array {\r\n        return this._byteArray;\r\n    }\r\n\r\n    /**\r\n     * Int32Array Data\r\n     */\r\n    get int32Array(): Int32Array {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * 设置数据\r\n     * @param data 数据\r\n     * @param stride 字节偏移\r\n     * //TODO 字节对齐\r\n     */\r\n    /*setData(data:Uint8Array|Uint16Array|Uint32Array|Int32Array|Float32Array,stride:number):void{\r\n        if(data instanceof Uint8Array){\r\n           this.uint8Array.set(data,stride/2);\r\n            return;\r\n        }\r\n        else if(data instanceof Uint16Array){\r\n           this.uint16Array.set(data,stride/2);\r\n            return;\r\n        }else{\r\n           this.float32Array.set(data,stride/4);\r\n            return;\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * 设置多个参数\r\n     * @param offset \r\n     * @param args \r\n     * 考虑字节对齐\r\n     */\r\n    /*setDataByParams(offset:number,...args: number[]):void{\r\n        if(args)\r\n        {\r\n            for(let i=0,n:number=args.length;i<n;i++)\r\n            this._bufferData[i+offset]=args[i];\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * 扩充buffer\r\n     * @param size \r\n     * @returns \r\n     */\r\n    /*expand(size: number) {\r\n        if(size<=this._byteLength)\r\n            return;\r\n        this._byteLength = size;\r\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\r\n        this.clear();\r\n        this._buffer = CommonMemoryAllocater.creatBlock(size);\r\n    }*/\r\n\r\n    /**\r\n     * 删除\r\n     * @returns \r\n     */\r\n    destroy() {\r\n        if(this._destroyed)\r\n            return;\r\n        this.clear();\r\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\r\n        this._destroyed = true;\r\n    }\r\n\r\n    /**\r\n     * 清楚\r\n     */\r\n    clear(): void {\r\n        this._idata = null;\r\n        this._fdata = null;\r\n        this._byteArray = null;\r\n    }\r\n}","import { INativeUploadNode } from \"./INativeUploadNode\";\r\nimport { NativeMemory } from \"./NativeMemory\";\r\n\r\nexport class UploadMemory extends NativeMemory{\r\n    \r\n    /**\r\n     * @internal\r\n     * 数据填充的位置\r\n     */\r\n    _currentOffsetInByte:number = 0;\r\n\r\n    constructor(size:number){\r\n        super(size,false);\r\n    }\r\n\r\n    addBlockCell(node: INativeUploadNode, dataSizeInByte: number){\r\n        if (node.uploadDataTOShareMemory(this, this._currentOffsetInByte)) {\r\n            this._currentOffsetInByte += dataSizeInByte;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check ability of size data\r\n     * @param size \r\n     * @returns \r\n     */\r\n    check(size:number){\r\n        return this._currentOffsetInByte + size < this._byteLength;\r\n    }\r\n\r\n    /**\r\n     * 清空更新数据\r\n     */\r\n    clear(): void {\r\n      this._currentOffsetInByte = 0;\r\n    }\r\n\r\n\r\n}","import { SingletonList } from \"../../../../utils/SingletonList\";\r\nimport { INativeUploadNode } from \"./INativeUploadNode\";\r\nimport { UploadMemory } from \"./UploadMemory\";\r\n\r\n/**\r\n * 用来组织所有的数据更新\r\n * 基本思路如下：每个需要更新native数据的类都继承接口INativeUploadNode，当需要上传数据时，会添加到UploadMemoryMenager.dataNodeList队列中，统一更新数据到共享Buffer中\r\n * 会有一个共享Buffer NativeMemory来记录总共用了几个UploadMemory，每个Upload中有几个UploadMemoryCell，在native中统一的将数据变化全部同步到Native的渲染底层\r\n */\r\nexport class UploadMemoryManager {\r\n    /**\r\n     * each upload block memory size\r\n     * defined 1MB\r\n     */\r\n    static UploadMemorySize: number = 1024 * 1024;\r\n    /*@internal SingleOBJ*/\r\n    private static _instance: UploadMemoryManager = null;\r\n    /**@internal 需要上传数据的Node列表*/\r\n    _dataNodeList: SingletonList<INativeUploadNode> = new SingletonList();\r\n    /**@internal */\r\n    _currentBlock: UploadMemory;\r\n    /**@internal */\r\n    _commandNums: number = 0;\r\n\r\n    /**@native C++ */\r\n    _conchUploadMemoryManager:any;\r\n\r\n    constructor() {\r\n        this._currentBlock = new UploadMemory(UploadMemoryManager.UploadMemorySize);\r\n        this._conchUploadMemoryManager = new (window as any).conchUploadMemoryManager();\r\n    }\r\n    static getInstance(): UploadMemoryManager {\r\n        if (!UploadMemoryManager._instance) {\r\n            UploadMemoryManager._instance = new UploadMemoryManager();\r\n        }\r\n        return UploadMemoryManager._instance;\r\n    }\r\n    private _addNodeCommand(node: INativeUploadNode, sizeInByte: number) {\r\n        this._currentBlock.addBlockCell(node, sizeInByte);\r\n        this._commandNums++;\r\n    }\r\n\r\n    static syncRenderMemory()\r\n    {\r\n        UploadMemoryManager.getInstance()._serialiseData();\r\n        UploadMemoryManager.getInstance().clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _serialiseData() {\r\n        const elements = this._dataNodeList.elements;\r\n        for (let i = 0; i < this._dataNodeList.length; i++) {\r\n            let node = elements[i];\r\n            let dataSizeInByte = node.getUploadMemoryLength();//get upload Memory Length\r\n            if (dataSizeInByte > UploadMemoryManager.UploadMemorySize)\r\n                throw \"dataSize is too large, greater than UploadMemorySize,\";\r\n            if (this._currentBlock.check(dataSizeInByte)) { \r\n                 //Deserialization all cmd to native data\r\n                this.uploadData();\r\n                this._addNodeCommand(node, dataSizeInByte);\r\n            } else { \r\n              \r\n                this._addNodeCommand(node, dataSizeInByte);\r\n            }\r\n        }\r\n        this.uploadData();\r\n    }\r\n\r\n    /**强制更新数据 */\r\n    uploadData() {\r\n        if (this._commandNums > 0)\r\n        {\r\n            //Native upload data\r\n            this._conchUploadMemoryManager.uploadData(this._currentBlock._buffer, this._commandNums);\r\n            //clear uploadMemory\r\n            this._commandNums = 0;\r\n            this._currentBlock.clear();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * clear UpdateLoad list\r\n     */\r\n    clear() {\r\n        this._dataNodeList.length = 0;\r\n    }\r\n}","import { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\n\r\nexport class NativeUniformBufferObject extends UniformBufferObject{\r\n    _conchUniformBufferObject:any = null;\r\n\r\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\r\n        super(glPointer, name, bufferUsage, byteLength, isSingle);\r\n        this._conchUniformBufferObject = new (window as any).conchUniformBufferObject((LayaGL.renderEngine as any)._nativeObj, glPointer);\r\n        this._conchUniformBufferObject.setGLBuffer(this._glBuffer);\r\n    }\r\n}","import { IndexBuffer } from \"../../IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../VertexBuffer\";\r\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n\r\nexport class NativeGLVertexState extends NativeGLObject implements IRenderVertexState {\r\n\r\n    _vertexDeclaration: VertexDeclaration[] = [];\r\n    _bindedIndexBuffer: IndexBuffer;\r\n    _vertexBuffers: VertexBuffer[];\r\n    _nativeVertexBuffers:any[];\r\n    _nativeObj: any;\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n        this._nativeObj = new (window as any).conchGLVertexState(engine._nativeObj);\r\n        this._nativeVertexBuffers=[];\r\n    }\r\n\r\n    bindVertexArray(): void {\r\n        this._nativeObj.bindVertexArray();\r\n    }\r\n\r\n    unbindVertexArray(): void {\r\n        this._nativeObj.unbindVertexArray();\r\n    }\r\n\r\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\r\n        this._vertexBuffers = vertexBuffer;\r\n        this._nativeVertexBuffers.length = 0;\r\n        vertexBuffer.forEach((element) => {\r\n            this._nativeVertexBuffers.push((element as any)._conchVertexBuffer3D);\r\n        });\r\n        this._nativeObj.applyVertexBuffer(this._nativeVertexBuffers);\r\n    }\r\n\r\n    applyIndexBuffer(indexBuffer: IndexBuffer|null): void {\r\n        //需要强制更新IndexBuffer\r\n        \r\n        if(indexBuffer==null){\r\n            return;\r\n        }\r\n        this._bindedIndexBuffer = indexBuffer;\r\n        this._nativeObj.applyIndexBuffer((indexBuffer as any)._conchIndexBuffer3D);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        this._vertexBuffers = null;\r\n        this._nativeVertexBuffers=[];\r\n        this._bindedIndexBuffer = null;\r\n        super.destroy();\r\n        this._nativeObj.destroy()\r\n    }\r\n} ","import { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/**\r\n * WebglObject 基类\r\n */\r\nexport class GLObject{\r\n    protected _engine:WebGLEngine;\r\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    protected _id:number;\r\n    protected _destroyed: boolean = false;\r\n\r\n    constructor(engine: WebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._id = this._engine._IDCounter++;\r\n    }\r\n\r\n    get destroyed():boolean{\r\n        return this._destroyed;\r\n    }\r\n\r\n    /**\r\n     * destroy\r\n     * @override\r\n     * @returns \r\n     */\r\n    destroy():void{\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n    }\r\n\r\n}","import { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { WrapMode } from \"../../RenderEnum/WrapMode\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/** @internal */\r\nexport class WebGLInternalTex extends GLObject implements InternalTexture {\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    readonly resource: WebGLTexture;\r\n    _resourceTarget: number;\r\n\r\n    readonly width: number;\r\n    readonly height: number;\r\n    readonly depth: number;\r\n    readonly isPotSize: boolean;\r\n\r\n    private _mipmap: boolean;\r\n    /**\r\n     * 是否存在 mipmap 数据\r\n     */\r\n    get mipmap(): boolean {\r\n        return this._mipmap;\r\n    }\r\n\r\n    private _mipmapCount: number;\r\n    public get mipmapCount(): number {\r\n        return this._mipmapCount;\r\n    }\r\n\r\n    readonly useSRGBLoad: boolean;\r\n    readonly gammaCorrection: number;\r\n\r\n    // webgl param\r\n    readonly target: number;\r\n    internalFormat: number;\r\n    format: number;\r\n    type: number;\r\n    /**bytelength */\r\n    _gpuMemory: number = 0;\r\n\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n    set gpuMemory(value: number) {\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\r\n        this._gpuMemory = value;\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, this._gpuMemory);\r\n    }\r\n\r\n    constructor(engine: WebGLEngine, target: number, width: number, height: number, depth: number, dimension: TextureDimension, mipmap: boolean, useSRGBLoader: boolean, gammaCorrection: number) {\r\n        super(engine);\r\n\r\n        this.resource = this._gl.createTexture();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.depth = depth;\r\n\r\n        const isPot = (value: number): boolean => {\r\n            return (value & (value - 1)) === 0;\r\n        }\r\n\r\n        this.isPotSize = isPot(width) && isPot(height);\r\n        if (dimension == TextureDimension.Tex3D) {\r\n            this.isPotSize = this.isPotSize && isPot(this.depth);\r\n        }\r\n\r\n        this._mipmap = mipmap && this.isPotSize;\r\n        this._mipmapCount = this._mipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\r\n        this._maxMipmapLevel = this._mipmapCount - 1;\r\n        this._baseMipmapLevel = 0;\r\n\r\n        this.useSRGBLoad = useSRGBLoader;\r\n        this.gammaCorrection = gammaCorrection;\r\n\r\n        this.target = target;\r\n\r\n        // default value\r\n        // this._filterMode = FilterMode.Bilinear;\r\n        // this._warpU = WrapMode.Repeat;\r\n        // this._warpV = WrapMode.Repeat;\r\n        // this._warpW = WrapMode.Repeat;\r\n        // this._anisoLevel = 4;\r\n\r\n        this.filterMode = FilterMode.Bilinear;\r\n        this.wrapU = WrapMode.Repeat;\r\n        this.wrapV = WrapMode.Repeat;\r\n        this.wrapW = WrapMode.Repeat;\r\n        this.anisoLevel = 4;\r\n\r\n        this.compareMode = TextureCompareMode.None;\r\n    }\r\n\r\n    private _filterMode: FilterMode;\r\n    public get filterMode(): FilterMode {\r\n        return this._filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        if (this._filterMode != value && this.resource) {\r\n            let gl = this._gl;\r\n            let mipmap = this.mipmap;\r\n            let min = this.getFilteMinrParam(value, mipmap);\r\n            this._setTexParameteri(gl.TEXTURE_MIN_FILTER, min);\r\n            let mag = this.getFilterMagParam(value);\r\n            this._setTexParameteri(gl.TEXTURE_MAG_FILTER, mag);\r\n\r\n            this._filterMode = value;\r\n        }\r\n    }\r\n\r\n    private _warpU: WrapMode;\r\n    public get wrapU(): WrapMode {\r\n        return this._warpU;\r\n    }\r\n    public set wrapU(value: WrapMode) {\r\n        if (this._warpU != value && this.resource) {\r\n            let gl = this._gl;\r\n            let warpParam = this.getWrapParam(value);\r\n            this._setWrapMode(gl.TEXTURE_WRAP_S, warpParam);\r\n            this._warpU = value;\r\n        }\r\n    }\r\n\r\n    private _warpV: WrapMode;\r\n\r\n    public get wrapV(): WrapMode {\r\n        return this._warpV;\r\n    }\r\n\r\n    public set wrapV(value: WrapMode) {\r\n        if (this._warpV != value && this.resource) {\r\n            let gl = this._gl;\r\n            let warpParam = this.getWrapParam(value);\r\n            this._setWrapMode(gl.TEXTURE_WRAP_T, warpParam);\r\n            this._warpV = value;\r\n        }\r\n    }\r\n\r\n    private _warpW: WrapMode;\r\n    public get wrapW(): WrapMode {\r\n        return this._warpW;\r\n    }\r\n    public set wrapW(value: WrapMode) {\r\n        if (this._warpW != value && this.resource) {\r\n            if (this._engine.getCapable(RenderCapable.Texture3D)) {\r\n                let gl = <WebGL2RenderingContext>this._gl;\r\n                let warpParam = this.getWrapParam(value);\r\n                this._setWrapMode(gl.TEXTURE_WRAP_R, warpParam);\r\n            }\r\n            this._warpW = value;\r\n        }\r\n    }\r\n\r\n    private _anisoLevel: number;\r\n    public get anisoLevel(): number {\r\n        return this._anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        let anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\r\n        if (anisoExt) {\r\n            let gl = this._gl;\r\n            //let maxAnisoLevel = gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n            let maxAnisoLevel = this._engine.getParams(RenderParams.Max_AnisoLevel_Count);\r\n\r\n            let level = Math.max(1, Math.min(maxAnisoLevel, value));\r\n            this._setTexParametexf(anisoExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\r\n            this._anisoLevel = level;\r\n        }\r\n        else {\r\n            this._anisoLevel = 1;\r\n        }\r\n    }\r\n\r\n    private _baseMipmapLevel: number = 0;\r\n\r\n    public set baseMipmapLevel(value: number) {\r\n        if (this._engine.isWebGL2) {\r\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_BASE_LEVEL, value);\r\n        }\r\n        this._baseMipmapLevel = value;\r\n    }\r\n\r\n    public get baseMipmapLevel() {\r\n        return this._baseMipmapLevel;\r\n    }\r\n\r\n    private _maxMipmapLevel: number = 0;\r\n\r\n    public set maxMipmapLevel(value: number) {\r\n        if (this._engine.isWebGL2) {\r\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_MAX_LEVEL, value);\r\n        }\r\n        this._maxMipmapLevel = value;\r\n    }\r\n\r\n    public get maxMipmapLevel() {\r\n        return this._maxMipmapLevel;\r\n    }\r\n\r\n\r\n    private _compareMode: TextureCompareMode;\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._compareMode;\r\n    }\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._compareMode = value;\r\n    }\r\n\r\n    // todo 设置参数函数 放在 context 里面? \r\n    public _setTexParameteri(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        let target = this.target\r\n        this._engine._bindTexture(target, this.resource);\r\n        gl.texParameteri(target, pname, param);\r\n        this._engine._bindTexture(target, null);\r\n    }\r\n\r\n    public _setTexParametexf(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        let target = this.target\r\n        this._engine._bindTexture(target, this.resource);\r\n        gl.texParameterf(target, pname, param);\r\n        this._engine._bindTexture(target, null);\r\n    }\r\n\r\n    protected getFilteMinrParam(filterMode: FilterMode, mipmap: boolean) {\r\n        let gl = this._gl;\r\n        switch (filterMode) {\r\n            case FilterMode.Point:\r\n                return mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST;\r\n            case FilterMode.Bilinear:\r\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\r\n            case FilterMode.Trilinear:\r\n                return mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR;\r\n            default:\r\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\r\n        }\r\n    }\r\n\r\n    protected getFilterMagParam(filterMode: FilterMode) {\r\n        let gl = this._gl;\r\n        switch (filterMode) {\r\n            case FilterMode.Point:\r\n                return gl.NEAREST;\r\n            case FilterMode.Bilinear:\r\n                return gl.LINEAR;\r\n            case FilterMode.Trilinear:\r\n                return gl.LINEAR;\r\n            default:\r\n                return gl.LINEAR;\r\n        }\r\n    }\r\n\r\n    protected getWrapParam(wrapMode: WrapMode) {\r\n        let gl = this._gl;\r\n        switch (wrapMode) {\r\n            case WrapMode.Repeat:\r\n                return gl.REPEAT;\r\n            case WrapMode.Clamp:\r\n                return gl.CLAMP_TO_EDGE;\r\n            case WrapMode.Mirrored:\r\n                return gl.MIRRORED_REPEAT;\r\n            default:\r\n                return gl.REPEAT;\r\n        }\r\n    }\r\n\r\n    protected _setWrapMode(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        if (!this.isPotSize) {\r\n            param = gl.CLAMP_TO_EDGE;\r\n        }\r\n        this._setTexParameteri(pname, param);\r\n    }\r\n\r\n    dispose(): void {\r\n        let gl = this._gl;\r\n        gl.deleteTexture(this.resource);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\r\n        this._gpuMemory = 0;\r\n    }\r\n}","import { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class WebGLInternalRT extends GLObject implements InternalRenderTarget {\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    _framebuffer: WebGLFramebuffer;\r\n\r\n    _depthbuffer: WebGLRenderbuffer;\r\n\r\n    _msaaFramebuffer: WebGLFramebuffer;\r\n    _msaaRenderbuffer: WebGLRenderbuffer;\r\n\r\n    _isCube: boolean;\r\n    _samples: number;\r\n\r\n    _generateMipmap: boolean;\r\n\r\n    _textures: InternalTexture[];\r\n    _depthTexture: InternalTexture;\r\n\r\n    colorFormat: RenderTargetFormat;\r\n    depthStencilFormat: RenderTargetFormat;\r\n\r\n    isSRGB: boolean;\r\n\r\n    /**bytelength */\r\n    _gpuMemory: number = 0;\r\n\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n    set gpuMemory(value: number) {\r\n\r\n        this._gpuMemory = value;\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory, this._gpuMemory);\r\n    }\r\n\r\n\r\n    constructor(engine: WebGLEngine, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, isCube: boolean, generateMipmap: boolean, samples: number) {\r\n        super(engine);\r\n\r\n        this.colorFormat = colorFormat;\r\n        this.depthStencilFormat = depthStencilFormat;\r\n        this._isCube = isCube;\r\n        this._generateMipmap = generateMipmap;\r\n        this._samples = samples;\r\n\r\n        this._textures = [];\r\n        this._depthTexture = null;\r\n\r\n        this._framebuffer = this._gl.createFramebuffer();\r\n        if (samples > 1) {\r\n            this._msaaFramebuffer = this._gl.createFramebuffer();\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    dispose(): void {\r\n        this._textures.forEach(tex => {\r\n            tex && tex.dispose();\r\n        });\r\n        this._textures = null;\r\n        this._depthTexture && this._depthTexture.dispose();\r\n        this._depthTexture = null;\r\n        this._framebuffer && this._gl.deleteFramebuffer(this._framebuffer);\r\n        this._framebuffer = null;\r\n        this._depthbuffer && this._gl.deleteRenderbuffer(this._depthbuffer);\r\n        this._depthbuffer = null;\r\n\r\n        this._msaaFramebuffer && this._gl.deleteFramebuffer(this._msaaFramebuffer);\r\n        this._msaaFramebuffer = null;\r\n        this._msaaRenderbuffer && this._gl.deleteRenderbuffer(this._msaaRenderbuffer);\r\n        this._msaaRenderbuffer = null;\r\n\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory,-this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory,-this._gpuMemory);\r\n        this._gpuMemory = 0;\r\n    }\r\n}","\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\r\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\n\r\nexport class GLTextureContext extends GLObject implements ITextureContext {\r\n\r\n    protected _sRGB: any;\r\n    protected _oesTextureHalfFloat: any;\r\n    protected _compressdTextureS3tc_srgb: any;\r\n    protected _compressedTextureEtc1: any;\r\n    protected _compressedTextureS3tc: any;\r\n    protected _compressedTextureETC: any;\r\n    protected _compressedTextureASTC: any;\r\n    protected _webgl_depth_texture: any;\r\n    needBitmap: boolean;\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        this.needBitmap = false;\r\n        this._sRGB = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_sRGB)\r\n        this._oesTextureHalfFloat = this._engine._supportCapatable.getExtension(WebGLExtension.OES_texture_half_float)\r\n        this._compressdTextureS3tc_srgb = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb)\r\n        this._compressedTextureEtc1 = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1)\r\n        this._compressedTextureS3tc = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc)\r\n        this._compressedTextureETC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc)\r\n        this._compressedTextureASTC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_astc)\r\n        this._webgl_depth_texture = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_depth_texture);\r\n    }\r\n\r\n    _glParam: {\r\n        internalFormat: number,\r\n        format: number,\r\n        type: number,\r\n    } = {\r\n            internalFormat: 0,\r\n            format: 0,\r\n            type: 0,\r\n        };\r\n\r\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R5G6B5:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\r\n                break;\r\n            case TextureFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case TextureFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case TextureFormat.DXT1:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT3:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT5:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC1RGB:\r\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGBA:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC4x4:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC8x8:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC10x10:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC12x12:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC4x4SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC8x8SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC10x10SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            default:\r\n                throw \"Unknown Texture Format.\";\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    // todo srgb ?\r\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n\r\n        switch (format) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_16:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_SHORT;\r\n                break;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                this._glParam.internalFormat = gl.DEPTH_STENCIL;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._webgl_depth_texture.UNSIGNED_INT_24_8_WEBGL;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.STENCIL_8:\r\n            default:\r\n                throw \"render texture format wrong.\"\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number } {\r\n        // todo\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    glRenderTargetAttachment(format: RenderTargetFormat) {\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return gl.DEPTH_ATTACHMENT;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return gl.DEPTH_STENCIL_ATTACHMENT;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return gl.DEPTH_ATTACHMENT;\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return gl.STENCIL_ATTACHMENT;\r\n            case RenderTargetFormat.R8G8B8:\r\n            case RenderTargetFormat.R8G8B8A8:\r\n            case RenderTargetFormat.R16G16B16:\r\n            case RenderTargetFormat.R16G16B16A16:\r\n            case RenderTargetFormat.R32G32B32:\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                return gl.COLOR_ATTACHMENT0;\r\n            default:\r\n                throw \"render format.\"\r\n        }\r\n    }\r\n\r\n    protected getTarget(dimension: TextureDimension): number {\r\n        let gl = this._gl;\r\n        switch (dimension) {\r\n            case TextureDimension.Tex2D:\r\n                return gl.TEXTURE_2D;\r\n            case TextureDimension.Cube:\r\n                return gl.TEXTURE_CUBE_MAP;\r\n            default:\r\n                throw \"texture dimension wrong in WebGL1.\"\r\n        }\r\n    }\r\n\r\n    public getFormatPixelsParams(format: TextureFormat) {\r\n\r\n        let formatParams: { channels: number, bytesPerPixel: number, dataTypedCons: any, typedSize: number } = {\r\n            channels: 0,\r\n            bytesPerPixel: 0,\r\n            dataTypedCons: Uint8Array,\r\n            typedSize: 1\r\n        }\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8A8:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 4;\r\n                formatParams.dataTypedCons = Uint8Array\r\n                formatParams.typedSize = 1;\r\n                return formatParams;\r\n            case TextureFormat.R8G8B8:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 3;\r\n                formatParams.dataTypedCons = Uint8Array\r\n                formatParams.typedSize = 1;\r\n                return formatParams;\r\n            case TextureFormat.R5G6B5:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 2;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R16G16B16:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 6;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R16G16B16A16:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 8;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R32G32B32:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 12;\r\n                formatParams.dataTypedCons = Float32Array\r\n                formatParams.typedSize = 4;\r\n                return formatParams;\r\n            case TextureFormat.R32G32B32A32:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 16;\r\n                formatParams.dataTypedCons = Float32Array\r\n                formatParams.typedSize = 4;\r\n                return formatParams;\r\n            default:\r\n                return formatParams;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * caculate texture memory\r\n     * @param tex \r\n     * @returns \r\n     */\r\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\r\n        let gl = this._gl;\r\n        let channels = 0;\r\n        let singlebyte = 0;\r\n        let bytelength = 0;\r\n\r\n        let srgb = this._sRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n        let srgb_alpha = this._sRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\r\n\r\n        switch (tex.internalFormat) {\r\n            case srgb:\r\n            case gl.RGB:\r\n                channels = 3;\r\n                break;\r\n            case srgb_alpha:\r\n            case gl.RGBA:\r\n                channels = 4;\r\n                break;\r\n            default:\r\n                channels = 0;\r\n                break;\r\n        }\r\n        switch (tex.type) {\r\n            case gl.UNSIGNED_BYTE:\r\n                singlebyte = 1;\r\n                break;\r\n            case gl.UNSIGNED_SHORT_5_6_5:\r\n                singlebyte = 2 / 3;\r\n                break;\r\n            case gl.FLOAT:\r\n                singlebyte = 4;\r\n                break;\r\n            case this._oesTextureHalfFloat.HALF_FLOAT_OES:\r\n                singlebyte = 2;\r\n                break;\r\n            default:\r\n                singlebyte = 0;\r\n                break;\r\n        }\r\n        bytelength = channels * singlebyte * tex.width * tex.height;\r\n        if (tex.mipmap) {\r\n            bytelength *= 1.333;\r\n        }\r\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\r\n            bytelength *= 6;\r\n        else if (tex.target == gl.TEXTURE_2D)\r\n            bytelength *= 1;\r\n\r\n        return bytelength;\r\n    }\r\n\r\n    getGLRTTexMemory(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number, cube: boolean) {\r\n        let getpixelbyte = (rtFormat: RenderTargetFormat) => {\r\n            let pixelByte = 0;\r\n            switch (rtFormat) {\r\n                case RenderTargetFormat.R8G8B8:\r\n                    pixelByte = 3;\r\n                    break;\r\n                case RenderTargetFormat.R8G8B8A8:\r\n                    pixelByte = 4;\r\n                    break;\r\n                case RenderTargetFormat.R16G16B16A16:\r\n                    pixelByte = 8;\r\n                    break;\r\n                case RenderTargetFormat.R32G32B32:\r\n                    pixelByte = 12;\r\n                    break;\r\n                case RenderTargetFormat.R32G32B32A32:\r\n                    pixelByte = 16;\r\n                    break;\r\n                case RenderTargetFormat.R16G16B16:\r\n                    pixelByte = 6;\r\n                    break;\r\n                case RenderTargetFormat.DEPTH_16:\r\n                    pixelByte = 2;\r\n                    break;\r\n                case RenderTargetFormat.STENCIL_8:\r\n                    pixelByte = 1;\r\n                    break;\r\n                case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                    pixelByte = 4;\r\n                    break;\r\n                case RenderTargetFormat.DEPTH_32:\r\n                    pixelByte = 4;\r\n                    break;\r\n            }\r\n            return pixelByte;\r\n        }\r\n        let colorPixelbyte = getpixelbyte(colorFormat);\r\n        let depthPixelbyte = getpixelbyte(depthStencilFormat);\r\n        if (multiSamples > 1)//多重采样\r\n            colorPixelbyte *= 2;\r\n        if (cube)//box\r\n            colorPixelbyte *= 6;\r\n        if (generateMipmap)//mipmap\r\n            colorPixelbyte *= 1.333;\r\n        let colorMemory = colorPixelbyte * width * height;\r\n        let depthMemory = depthPixelbyte * width * height;\r\n        return colorMemory + depthMemory;\r\n    }\r\n\r\n    // protected getRenderTargetDepthFormat(format: RenderTargetDepthFormat): { internalFormat: number, attachment: number } {\r\n    //     let gl = this.gl;\r\n    //     switch (format) {\r\n    //         case RenderTargetDepthFormat.DEPTH_16:\r\n    //             return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_24_8:\r\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTH_32:\r\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.STENCIL_8:\r\n    //             return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_NONE:\r\n    //             return null;\r\n    //         default:\r\n    //             throw \"RenderTargetDepthFormat wrong.\"\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * 根据 format 判断是否支持 SRGBload\r\n     * @param format \r\n     * @returns \r\n     */\r\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\r\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    supportGenerateMipmap(format: TextureFormat | RenderTargetFormat) {\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n            case RenderTargetFormat.DEPTH_32:\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return false;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断 纹理格式 本身是否是 SRGB格式\r\n     * @param format \r\n     * @returns \r\n     */\r\n    isSRGBFormat(format: TextureFormat | RenderTargetFormat) {\r\n        switch (format) {\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\r\n\r\n        // todo  一些format 不支持自动生成mipmap\r\n\r\n        // todo  这个判断, 若纹理本身格式不支持？\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n        if (premultipliedAlpha) {//预乘法和SRGB同时开启，会有颜色白边问题\r\n            useSRGBExt = false;\r\n        }\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        //Resource:\r\n        //internalTex.gpuMemory = this.getGLtexMemory(format, width, height, dimension, generateMipmap);\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        if (texture.width != source.width || texture.height != source.height) {\r\n            // todo ?\r\n            console.warn(\"setTextureImageData: size not match\");\r\n        }\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        //texture.\r\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        //resource TODO\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = source.width;\r\n        let height = source.height;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texSubImage2D(target, 0, x, y, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        //texture.\r\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        //resource TODO\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n\r\n    initVideoTextureData(texture: WebGLInternalTex) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let gl = texture._gl;\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texImage2D(target, 0, texture.internalFormat, width, height, 0, format, type, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n    }\r\n\r\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        // todo check pixels size\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        // gl.texImage2D(target, 0, internalFormat, format, type, source);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, source);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        // todo check pixels size\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source);\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let source = ddsInfo.source;\r\n        let dataOffset = ddsInfo.dataOffset;\r\n        let bpp = ddsInfo.bpp;\r\n        let blockBytes = ddsInfo.blockBytes;\r\n        let mipmapCount = ddsInfo.mipmapCount;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let memory = 0;\r\n        for (let index = 0; index < mipmapCount; index++) {\r\n\r\n            // todo  size 计算 方式\r\n            let dataLength = (((Math.max(4, mipmapWidth) / 4) * Math.max(4, mipmapHeight)) / 4) * blockBytes;\r\n            let sourceData = new Uint8Array(source, dataOffset, dataLength);\r\n\r\n            gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n            memory += sourceData.length;\r\n            dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\r\n\r\n            mipmapWidth *= 0.5;\r\n            mipmapHeight *= 0.5;\r\n            mipmapWidth = Math.max(1.0, mipmapWidth);\r\n            mipmapHeight = Math.max(1.0, mipmapHeight);\r\n        }\r\n        texture.gpuMemory = memory;//TODO 不太准\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n            if (compressed) {\r\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n            else {\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData: ArrayBufferView = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                memory += sourceData.byteLength;\r\n            }\r\n\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\r\n            if (compressed) {\r\n                // todo\r\n            }\r\n            else {\r\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        texture.gpuMemory = memory;//TODO 不太准\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\r\n        let hdrPixelData = hdrInfo.readScanLine();\r\n        this.setTexturePixelsData(texture, hdrPixelData, false, false);\r\n    }\r\n\r\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texImage2D(target, 0, internalFormat, format, type, sources[index]);\r\n        }\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        if (source) {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\r\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, source[index]);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        else {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\r\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, null);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeSubPixelData(texture: WebGLInternalTex, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ];\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source[index]);\r\n        }\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n\r\n    setCubeDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        // let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let source = ddsInfo.source;\r\n        let dataOffset = ddsInfo.dataOffset;\r\n        let bpp = ddsInfo.bpp;\r\n        let blockBytes = ddsInfo.blockBytes;\r\n        let mipmapCount = ddsInfo.mipmapCount;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        fourSize = true;\r\n        let gl = texture._gl;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n        let formatParams = this.getFormatPixelsParams(ddsInfo.format);\r\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\r\n\r\n        let dataTypeConstur = ddsInfo.format == TextureFormat.R32G32B32A32 ? Float32Array : Uint16Array;\r\n        let memory = 0;\r\n        if (!ddsInfo.compressed) {\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                let mipmapWidth = width;\r\n                let mipmapHeight = height;\r\n                for (let index = 0; index < mipmapCount; index++) {\r\n                    let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\r\n                    let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                    dataOffset += dataLength * channelsByte;\r\n                    mipmapWidth *= 0.5;\r\n                    mipmapHeight *= 0.5;\r\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\r\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                let mipmapWidth = width;\r\n                let mipmapHeight = height;\r\n                for (let index = 0; index < mipmapCount; index++) {\r\n                    let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\r\n\r\n                    let sourceData = new Uint8Array(source, dataOffset, dataLength);\r\n\r\n                    (texture.mipmap || index == 0) && gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                    dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\r\n\r\n                    mipmapWidth *= 0.5;\r\n                    mipmapHeight *= 0.5;\r\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\r\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\r\n                }\r\n            }\r\n        }\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        // let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = ktxInfo.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n            // todo  cube 在一起？\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n\r\n                if (compressed) {\r\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                    gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                else {\r\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                    let typedSize = imageSize / pixelParams.typedSize;\r\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                dataOffset += imageSize;\r\n                dataOffset += 3 - ((imageSize + 3) % 4);\r\n            }\r\n\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                if (compressed) {\r\n                    // todo\r\n                }\r\n                else {\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\r\n                }\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = memory;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\r\n        return TextureCompareMode.None;\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\r\n        let gl = this._gl;\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        if (renderTarget._isCube) {\r\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\r\n        }\r\n\r\n    }\r\n\r\n    bindoutScreenTarget(): void {\r\n        let gl = this._gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\r\n        let gl = renderTarget._gl;\r\n\r\n        if (renderTarget._generateMipmap) {\r\n            renderTarget._textures.forEach(tex => {\r\n                let target = (<WebGLInternalTex>tex).target;\r\n                this._engine._bindTexture(target, tex.resource);\r\n                gl.generateMipmap(target);\r\n                this._engine._bindTexture(target, null);\r\n            });\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        let useSRGBExt = false;\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let gammaCorrection = 1.0;\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     // todo \r\n        //     // gammaCorrection = 2.2;\r\n        // }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = internalTex._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, glFormat, type, null);\r\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        let useSRGBExt = false;\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = internalTex._gl;\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texImage2D(target, 0, internalFormat, size, size, 0, glFormat, type, null);\r\n        }\r\n        this._engine._bindTexture(internalTex.target, null);\r\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        multiSamples = 1;\r\n\r\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\r\n        renderTarget.colorFormat = colorFormat;\r\n        renderTarget.depthStencilFormat = depthStencilFormat;\r\n        renderTarget._textures.push(texture);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        // color\r\n        let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n        // depth\r\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n        if (depthBufferParam) {\r\n            let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n            renderTarget._depthbuffer = depthbuffer;\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        multiSamples = 1;\r\n\r\n        // let texture = this.createRenderTextureInternal(dimension, size, size, colorFormat, generateMipmap, sRGB);\r\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\r\n        renderTarget._textures.push(texture);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n        if (depthBufferParam) {\r\n            let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n            renderTarget._depthbuffer = depthbuffer;\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number) {\r\n\r\n        // todo  多个 gl\r\n        let gl = this._gl;\r\n\r\n        let renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return renderbuffer;\r\n    }\r\n\r\n    // todo  color 0, 1, 2, 3 ?\r\n    setupRendertargetTextureAttachment(renderTarget: WebGLInternalRT, texture: WebGLInternalTex) {\r\n        let gl = renderTarget._gl;\r\n\r\n        renderTarget._depthTexture = texture;\r\n\r\n        let depthbuffer = renderTarget._depthbuffer;\r\n        depthbuffer && gl.deleteRenderbuffer(depthbuffer);\r\n        renderTarget._depthbuffer = null;\r\n        let attachment = this.glRenderTargetAttachment(renderTarget.depthStencilFormat);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.resource, 0);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n\r\n    readRenderTargetPixelData(renderTarget: WebGLInternalRT, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\r\n\r\n        let gl = renderTarget._gl;\r\n\r\n        this.bindRenderTarget(renderTarget);\r\n\r\n        let frameState = gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\r\n\r\n        if (!frameState) {\r\n            this.unbindRenderTarget(renderTarget);\r\n            return null;\r\n        }\r\n        switch (renderTarget.colorFormat) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.UNSIGNED_BYTE, out);\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.UNSIGNED_BYTE, out);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\r\n                break;\r\n        }\r\n        this.unbindRenderTarget(renderTarget);\r\n        return out;\r\n    }\r\n\r\n    updateVideoTexture(texture: WebGLInternalTex, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        let gl = texture._gl;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        // todo 用 sub 会慢\r\n        //gl.texSubImage2D(target, 0, 0, 0, format, type, video);\r\n        gl.texImage2D(target, 0, internalFormat, format, type, video);\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    getRenderTextureData(internalTex: WebGLInternalRT, x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        if (internalTex.colorFormat == RenderTargetFormat.None)\r\n            return null;\r\n        let gl = internalTex._gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, internalTex._framebuffer);\r\n        var canRead: boolean = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\r\n        if (!canRead) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            return null;\r\n        }\r\n        let size = width * height;\r\n        let format, type;\r\n        var pixels;\r\n        switch (internalTex.colorFormat) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                format = gl.RGB;\r\n                type = gl.UNSIGNED_BYTE;\r\n                pixels = new Uint8Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                format = gl.RGBA;\r\n                type = gl.UNSIGNED_BYTE;\r\n                pixels = new Uint8Array(size * 4);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                format = gl.RGB;\r\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\r\n                pixels = new Uint16Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                format = gl.RGBA;\r\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\r\n                pixels = new Uint16Array(size * 4);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                format = gl.RGB;\r\n                type = gl.FLOAT;\r\n                pixels = new Float32Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                format = gl.RGBA;\r\n                type = gl.FLOAT;\r\n                pixels = new Float32Array(size * 4);\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n        gl.readPixels(x, y, width, height, format, type, pixels);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        return pixels;\r\n    }\r\n\r\n}","import { GLTextureContext } from \"./GLTextureContext\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\r\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { ITexture3DContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\n\r\n/**\r\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\r\n */\r\nexport class GL2TextureContext extends GLTextureContext implements ITexture3DContext {\r\n\r\n    declare protected _gl: WebGL2RenderingContext;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n    }\r\n\r\n    protected getTarget(dimension: TextureDimension): number {\r\n        let target: number = -1;\r\n        switch (dimension) {\r\n            case TextureDimension.Cube:\r\n                target = this._gl.TEXTURE_CUBE_MAP;\r\n                break;\r\n            case TextureDimension.Tex2D:\r\n                target = this._gl.TEXTURE_2D;\r\n                break;\r\n            case TextureDimension.Texture2DArray:\r\n                target = this._gl.TEXTURE_2D_ARRAY;\r\n                break;\r\n            case TextureDimension.Tex3D:\r\n                target = this._gl.TEXTURE_3D;\r\n                break;\r\n            default:\r\n                throw \"Unknow Texture Target\";\r\n        }\r\n        return target;\r\n    }\r\n\r\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R5G6B5:\r\n                this._glParam.internalFormat = gl.RGB565;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\r\n                break;\r\n            case TextureFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA32F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB32F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB16F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA16F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case TextureFormat.DXT1:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n                // this._glParam.format = gl.RGBA;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT3:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT5:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC1RGB:\r\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGBA:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC4x4:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC8x8:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC10x10:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC12x12:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC4x4SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC8x8SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC10x10SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            default:\r\n                throw \"Unknown Texture Format.\";\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number; } {\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return { internalFormat: gl.DEPTH24_STENCIL8, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return { internalFormat: gl.DEPTH_COMPONENT32F, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.R8G8B8:\r\n                return { internalFormat: useSRGB ? gl.SRGB8 : gl.RGB8, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                return { internalFormat: useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R16G16B16:\r\n                return { internalFormat: gl.RGB16F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                return { internalFormat: gl.RGBA16F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R32G32B32:\r\n                return { internalFormat: gl.RGB32F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                return { internalFormat: gl.RGBA32F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n\r\n        switch (format) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB16F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA16F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB32F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA32F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_16:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT16;\r\n                this._glParam.format = gl.DEPTH_COMPONENT;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                this._glParam.internalFormat = gl.DEPTH24_STENCIL8;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT_24_8;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT32F;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.STENCIL_8:\r\n                break;\r\n            default:\r\n                throw \"depth texture format wrong.\"\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\r\n        let gl = this._gl;\r\n        let channels = 0;\r\n        let singlebyte = 0;\r\n        let bytelength = 0;\r\n        switch (tex.internalFormat) {\r\n            case gl.SRGB8:\r\n            case gl.RGB8:\r\n            case gl.RGB565:\r\n            case gl.RGB32F:\r\n            case gl.RGB16F:\r\n                channels = 3;\r\n                break;\r\n            case gl.SRGB8_ALPHA8:\r\n            case gl.RGBA8:\r\n            case gl.RGBA32F:\r\n            case gl.RGBA16F:\r\n                channels = 4;\r\n                break;\r\n            default:\r\n                channels = 0;\r\n                break;\r\n        }\r\n        switch (tex.type) {\r\n            case gl.UNSIGNED_BYTE:\r\n                singlebyte = 1;\r\n                break;\r\n            case gl.UNSIGNED_SHORT_5_6_5:\r\n                singlebyte = 2 / 3;\r\n                break;\r\n            case gl.FLOAT:\r\n                singlebyte = 4;\r\n                break;\r\n            case gl.HALF_FLOAT:\r\n                singlebyte = 2;\r\n                break;\r\n            default:\r\n                singlebyte = 0;\r\n                break;\r\n        }\r\n        bytelength = channels * singlebyte * tex.width * tex.height;\r\n        if (tex.mipmap) {\r\n            bytelength *= 1.333;\r\n        }\r\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\r\n            bytelength *= 6;\r\n        else if (tex.target == gl.TEXTURE_2D)\r\n            bytelength *= 1;\r\n        else if (tex.target == gl.TEXTURE_2D_ARRAY)\r\n            bytelength *= depth;\r\n        return bytelength;\r\n    }\r\n\r\n    // todo webgl2 srgb 判断\r\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\r\n            case TextureFormat.R8G8B8A8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\r\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        if (texture.width != source.width || texture.height != source.height) {\r\n            // todo ?\r\n            console.warn(\"setTextureImageData: size not match\");\r\n        }\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        //gl.texStorage2D(target, mipmapCount, internalFormat, source.width, source.height);\r\n        gl.texSubImage2D(target, 0, x, y, source.width, source.height, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (source) {\r\n            gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    createTexture3DInternal(dimension: TextureDimension, width: number, height: number, depth: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\r\n        // todo  一些format 不支持自动生成mipmap\r\n\r\n        // todo  这个判断, 若纹理本身格式不支持？\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n        if (premultipliedAlpha) {//预乘法和SRGB同时开启，会有颜色白边问题\r\n            useSRGBExt = false;\r\n        }\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, depth, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    setTexture3DImageData(texture: WebGLInternalTex, sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\r\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\r\n        for (let index = 0; index < depth; index++) {\r\n            gl.texSubImage3D(target, 0, 0, 0, index, width, height, 1, format, type, sources[index]);\r\n        }\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTexture3DPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\r\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\r\n        if (source) {\r\n            gl.texSubImage3D(target, 0, 0, 0, 0, width, height, depth, format, type, source);\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTexture3DSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texSubImage3D(target, mipmapLevel, xOffset, yOffset, zOffset, width, height, depth, format, type, source);\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\r\n        let sourceData = hdrInfo.readScanLine();\r\n\r\n        this.setTexturePixelsData(texture, sourceData, false, false);\r\n    }\r\n\r\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size \r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            if (compressed) {\r\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n            else {\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texSubImage2D(target, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = memory;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        let gl = this._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let t = cubeFace[index];\r\n            // gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\r\n            gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\r\n        }\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        let gl = this._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ];\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        if (source) {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                gl.texSubImage2D(t, 0, 0, 0, width, height, format, type, source[index]);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo): void {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let gl = this._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = ktxInfo.mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let t = cubeFace[face];\r\n\r\n                if (compressed) {\r\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                    gl.compressedTexImage2D(t, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                else {\r\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                    let typedSize = imageSize / pixelParams.typedSize;\r\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                    gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                dataOffset += imageSize;\r\n                dataOffset += 3 - ((imageSize + 3) % 4);\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n\r\n    }\r\n\r\n\r\n    //TODO miner\r\n    getCubeKTXRGBMData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n        let rightFaceData = [];\r\n        let leftFaceData = [];\r\n        let upFaceData = [];\r\n        let downFaceData = [];\r\n        let backFaceData = [];\r\n        let frontFaceData = [];\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let gl = this._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let t = cubeFace[face];\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                memory += sourceData.byteLength;\r\n            }\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n        }\r\n\r\n        mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n        mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\r\n        let gl = this._gl;\r\n        switch (compareMode) {\r\n            case TextureCompareMode.LEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.GEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.LESS:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LESS);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.GREATER:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GREATER);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.EQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.EQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.NOTEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NOTEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.ALWAYS:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.ALWAYS);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.NEVER:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NEVER);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.None:\r\n            default:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.NONE);\r\n                break;\r\n        }\r\n        return compareMode;\r\n\r\n    }\r\n\r\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number): WebGLRenderbuffer {\r\n        // todo  多个 gl\r\n        let gl = this._gl;\r\n\r\n        let renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n\r\n        if (samples > 1) {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, internalFormat, width, height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return renderbuffer;\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = this._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, width, height);\r\n\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\r\n        renderTarget._textures.push(texture);\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        if (renderTarget._samples > 1) {\r\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\r\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, sRGB);\r\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(width, height, renderbufferParam.internalFormat, renderTarget._samples);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n            let framebuffer = renderTarget._framebuffer;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // color\r\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // color\r\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n        return renderTarget;\r\n\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\r\n        renderTarget.colorFormat = colorFormat;\r\n        renderTarget.depthStencilFormat = depthStencilFormat;\r\n        renderTarget._textures.push(texture);\r\n        renderTarget.isSRGB = sRGB;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        if (renderTarget._samples > 1) {\r\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\r\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, false);\r\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(size, size, renderbufferParam.internalFormat, renderTarget._samples);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = this._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, size, size);\r\n\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        return internalTex;\r\n\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\r\n        let gl = this._gl;\r\n\r\n        if (renderTarget._isCube) {\r\n            let framebuffer = renderTarget._framebuffer;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\r\n        }\r\n\r\n        if (renderTarget._samples > 1) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._msaaFramebuffer);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        }\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\r\n        let gl = this._gl;\r\n        if (renderTarget._samples > 1) {\r\n\r\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, renderTarget._msaaFramebuffer);\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, renderTarget._framebuffer);\r\n\r\n            let texture = renderTarget._textures[0];\r\n\r\n            // todo 不用clear ?\r\n            // gl.clearBufferfv(gl.COLOR, 0, [0, 0, 0, 0]);\r\n            // gl.clearBufferfi(gl.DEPTH_STENCIL, 0, 1.0, 0);\r\n\r\n            // todo  blit mask\r\n            let biltMask = gl.COLOR_BUFFER_BIT;\r\n            if (renderTarget._depthTexture) {\r\n                biltMask |= gl.DEPTH_BUFFER_BIT;\r\n            }\r\n\r\n            gl.blitFramebuffer(0, 0, texture.width, texture.height, 0, 0, texture.width, texture.height, biltMask, gl.NEAREST);\r\n        }\r\n        if (renderTarget._generateMipmap) {\r\n            renderTarget._textures.forEach(tex => {\r\n                let target = (<WebGLInternalTex>tex).target;\r\n                this._engine._bindTexture(target, tex.resource);\r\n                gl.generateMipmap(target);\r\n                this._engine._bindTexture(target, null);\r\n            });\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GLBuffer extends GLObject implements IRenderBuffer {\r\n    //GLParams\r\n    _glBuffer: WebGLBuffer;\r\n    _glTarget: number;\r\n    _glUsage: number;\r\n    //Common Enum\r\n    _glTargetType: BufferTargetType;\r\n    _glBufferUsageType: BufferUsage;\r\n    //size\r\n    _byteLength: number = 0;\r\n\r\n    constructor(engine: WebGLEngine, targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(engine)\r\n        this._glTargetType = targetType;\r\n        this._glBufferUsageType = bufferUsageType;\r\n        this._getGLTarget(this._glTargetType);\r\n        this._getGLUsage(this._glBufferUsageType);\r\n        this._glBuffer = this._gl.createBuffer();\r\n    }\r\n\r\n    private _getGLUsage(usage: BufferUsage) {\r\n        switch (usage) {\r\n            case BufferUsage.Static:\r\n                this._glUsage = this._gl.STATIC_DRAW;\r\n                break;\r\n            case BufferUsage.Dynamic:\r\n                this._glUsage = this._gl.DYNAMIC_DRAW;\r\n                break;\r\n            case BufferUsage.Stream:\r\n                this._glUsage = this._gl.STREAM_DRAW;\r\n                break;\r\n            default:\r\n                console.error(\"usage is not standard\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _getGLTarget(target: BufferTargetType) {\r\n        switch (target) {\r\n            case BufferTargetType.ARRAY_BUFFER:\r\n                this._glTarget = this._gl.ARRAY_BUFFER\r\n                break;\r\n            case BufferTargetType.UNIFORM_BUFFER:\r\n                this._glTarget = (<WebGL2RenderingContext>this._gl).UNIFORM_BUFFER;\r\n                break;\r\n            case BufferTargetType.ELEMENT_ARRAY_BUFFER:\r\n                this._glTarget = this._gl.ELEMENT_ARRAY_BUFFER\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _memorychange(bytelength: number) {\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.BufferMemory, bytelength);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, bytelength);\r\n    }\r\n\r\n    bindBuffer(): boolean {\r\n        if (this._engine._getbindBuffer(this._glTargetType) != this) {\r\n            this._gl.bindBuffer(this._glTarget, this._glBuffer);\r\n            this._engine._setbindBuffer(this._glTargetType, this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    unbindBuffer() {\r\n        if (this._engine._getbindBuffer(this._glTargetType) == this) {\r\n            this._gl.bindBuffer(this._glTarget, null);\r\n            this._engine._setbindBuffer(this._glTargetType, null);\r\n        }\r\n    }\r\n\r\n    orphanStorage() {\r\n        this.bindBuffer();\r\n        this.setDataLength(this._byteLength);\r\n    }\r\n\r\n    setDataLength(srcData: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        this._memorychange(-this._byteLength);\r\n        this._byteLength = srcData;\r\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n        this.unbindBuffer();\r\n        this._memorychange(this._byteLength);\r\n    }\r\n\r\n\r\n\r\n\r\n    setData(srcData: ArrayBuffer | ArrayBufferView, offset: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\r\n        this.unbindBuffer();\r\n    }\r\n    setDataEx(srcData: ArrayBuffer | ArrayBufferView, offset: number, length: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\r\n        this.unbindBuffer();\r\n    }\r\n    // setData(srcData: ArrayBuffer | ArrayBufferView | number, offset?: number, length?: number): void {\r\n    //     let gl = this._gl;\r\n    //     this.bindBuffer();\r\n    //     if (typeof srcData == \"number\") {\r\n    //         this._byteLength = srcData as number;\r\n    //         gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n    //     }\r\n    //     if (offset != undefined && length == undefined) {\r\n    //         gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\r\n    //     }\r\n    //     if(offset != undefined && length != undefined) {\r\n    //         gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\r\n    //     }\r\n    //     this.unbindBuffer();\r\n    // }\r\n\r\n\r\n    //TODO:\r\n    bindBufferBase(glPointer: number) {\r\n        if (this._engine._getBindUBOBuffer(glPointer) != this) {\r\n            const gl = <WebGL2RenderingContext>this._gl;\r\n            gl.bindBufferBase(this._glTarget, glPointer, this._glBuffer);\r\n            this._engine._setBindUBOBuffer(glPointer, this);\r\n        }\r\n    }\r\n\r\n    //TODO:\r\n    bindBufferRange(glPointer: number, offset: number, byteCount: number) {\r\n        const gl = <WebGL2RenderingContext>this._gl;\r\n        gl.bindBufferRange(this._glTarget, glPointer, this._glBuffer, offset, byteCount);\r\n    }\r\n\r\n    resizeBuffer(dataLength: number) {\r\n        this.bindBuffer();\r\n        const gl = this._gl;\r\n        this._byteLength = dataLength;\r\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        gl.deleteBuffer(this._glBuffer);\r\n        this._memorychange(-this._byteLength);\r\n        this._byteLength = 0;\r\n        this._engine = null;\r\n        this._glBuffer = null;\r\n        this._glTarget = null;\r\n        this._glUsage = null;\r\n        this._gl = null;\r\n\r\n    }\r\n}","// @ts-nocheck\r\nexport class VertexArrayObject {\r\n    constructor() {\r\n    }\r\n}\r\n\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var glErrorShadow = {};\r\n\r\n    function error(msg) {\r\n        if (window.console && window.console.error) {\r\n            window.console.error(msg);\r\n        }\r\n    }\r\n\r\n    function log(msg) {\r\n        if (window.console && window.console.log) {\r\n            window.console.log(msg);\r\n        }\r\n    }\r\n\r\n    function synthesizeGLError(err, opt_msg) {\r\n        glErrorShadow[err] = true;\r\n        if (opt_msg !== undefined) {\r\n            error(opt_msg)\r\n        }\r\n    }\r\n\r\n    function wrapGLError(gl) {\r\n        var f = gl.getError;\r\n        gl.getError = function () {\r\n            var err;\r\n            do {\r\n                err = f.apply(gl);\r\n                if (err != gl.NO_ERROR) {\r\n                    glErrorShadow[err] = true;\r\n                }\r\n            } while (err != gl.NO_ERROR);\r\n\r\n            for (var err1 in glErrorShadow) {\r\n                if (glErrorShadow[err1]) {\r\n                    delete glErrorShadow[err1];\r\n                    return parseInt(err1);\r\n                }\r\n            }\r\n            return gl.NO_ERROR;\r\n        };\r\n    }\r\n\r\n    var WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\r\n        var gl = ext.gl;\r\n\r\n        this.ext = ext;\r\n        this.isAlive = true;\r\n        this.hasBeenBound = false;\r\n\r\n        this.elementArrayBuffer = null;\r\n        this.attribs = new Array(ext.maxVertexAttribs);\r\n        for (var n = 0; n < this.attribs.length; n++) {\r\n            var attrib = new (WebGLVertexArrayObjectOES as any).VertexAttrib(gl);\r\n            this.attribs[n] = attrib;\r\n        }\r\n\r\n        this.maxAttrib = 0;\r\n    };\r\n\r\n    (WebGLVertexArrayObjectOES as any).VertexAttrib = function VertexAttrib(gl) {\r\n        this.enabled = false;\r\n        this.buffer = null;\r\n        this.size = 4;\r\n        this.type = gl.FLOAT;\r\n        this.normalized = false;\r\n        this.stride = 16;\r\n        this.offset = 0;\r\n\r\n        this.cached = \"\";\r\n        this.recache();\r\n    };\r\n    (WebGLVertexArrayObjectOES as any).VertexAttrib.prototype.recache = function recache() {\r\n        this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(\":\");\r\n    };\r\n\r\n    var OESVertexArrayObject = function OESVertexArrayObject(gl) {\r\n        var self = this;\r\n        this.gl = gl;\r\n\r\n        wrapGLError(gl);\r\n\r\n        var original = this.original = {\r\n            getParameter: gl.getParameter,\r\n            enableVertexAttribArray: gl.enableVertexAttribArray,\r\n            disableVertexAttribArray: gl.disableVertexAttribArray,\r\n            bindBuffer: gl.bindBuffer,\r\n            getVertexAttrib: gl.getVertexAttrib,\r\n            vertexAttribPointer: gl.vertexAttribPointer\r\n        };\r\n\r\n        gl.getParameter = function getParameter(pname) {\r\n            if (pname == self.VERTEX_ARRAY_BINDING_OES) {\r\n                if (self.currentVertexArrayObject == self.defaultVertexArrayObject) {\r\n                    return null;\r\n                } else {\r\n                    return self.currentVertexArrayObject;\r\n                }\r\n            }\r\n            return original.getParameter.apply(this, arguments);\r\n        };\r\n\r\n        gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\r\n            var attrib = vao.attribs[index];\r\n            attrib.enabled = true;\r\n            return original.enableVertexAttribArray.apply(this, arguments);\r\n        };\r\n        gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\r\n            var attrib = vao.attribs[index];\r\n            attrib.enabled = false;\r\n            return original.disableVertexAttribArray.apply(this, arguments);\r\n        };\r\n\r\n        gl.bindBuffer = function bindBuffer(target, buffer) {\r\n            switch (target) {\r\n                case gl.ARRAY_BUFFER:\r\n                    self.currentArrayBuffer = buffer;\r\n                    break;\r\n                case gl.ELEMENT_ARRAY_BUFFER:\r\n                    self.currentVertexArrayObject.elementArrayBuffer = buffer;\r\n                    break;\r\n            }\r\n            return original.bindBuffer.apply(this, arguments);\r\n        };\r\n\r\n        gl.getVertexAttrib = function getVertexAttrib(index, pname) {\r\n            var vao = self.currentVertexArrayObject;\r\n            var attrib = vao.attribs[index];\r\n            switch (pname) {\r\n                case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\r\n                    return attrib.buffer;\r\n                case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\r\n                    return attrib.enabled;\r\n                case gl.VERTEX_ATTRIB_ARRAY_SIZE:\r\n                    return attrib.size;\r\n                case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\r\n                    return attrib.stride;\r\n                case gl.VERTEX_ATTRIB_ARRAY_TYPE:\r\n                    return attrib.type;\r\n                case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\r\n                    return attrib.normalized;\r\n                default:\r\n                    return original.getVertexAttrib.apply(this, arguments);\r\n            }\r\n        };\r\n\r\n        gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, indx);\r\n            var attrib = vao.attribs[indx];\r\n            attrib.buffer = self.currentArrayBuffer;\r\n            attrib.size = size;\r\n            attrib.type = type;\r\n            attrib.normalized = normalized;\r\n            attrib.stride = stride;\r\n            attrib.offset = offset;\r\n            attrib.recache();\r\n            return original.vertexAttribPointer.apply(this, arguments);\r\n        };\r\n\r\n        if (gl.instrumentExtension) {\r\n            gl.instrumentExtension(this, \"OES_vertex_array_object\");\r\n        }\r\n\r\n        gl.canvas.addEventListener('webglcontextrestored', function () {\r\n            log(\"OESVertexArrayObject emulation library context restored\");\r\n            self.reset_();\r\n        }, true);\r\n\r\n        this.reset_();\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85B5;\r\n\r\n    OESVertexArrayObject.prototype.reset_ = function reset_() {\r\n        var contextWasLost = this.vertexArrayObjects !== undefined;\r\n        if (contextWasLost) {\r\n            for (var ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\r\n                this.vertexArrayObjects.isAlive = false;\r\n            }\r\n        }\r\n        var gl = this.gl;\r\n        this.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\r\n        this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\r\n        this.currentVertexArrayObject = null;\r\n        this.currentArrayBuffer = null;\r\n        this.vertexArrayObjects = [this.defaultVertexArrayObject];\r\n\r\n        this.bindVertexArrayOES(null);\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\r\n        var arrayObject = new WebGLVertexArrayObjectOES(this);\r\n        this.vertexArrayObjects.push(arrayObject);\r\n        return arrayObject;\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\r\n        arrayObject.isAlive = false;\r\n        this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\r\n        if (this.currentVertexArrayObject == arrayObject) {\r\n            this.bindVertexArrayOES(null);\r\n        }\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\r\n        if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\r\n            if ((arrayObject as any).hasBeenBound && (arrayObject as any).ext == this) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\r\n        var gl = this.gl;\r\n        if (arrayObject && !arrayObject.isAlive) {\r\n            synthesizeGLError(gl.INVALID_OPERATION, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\r\n            return;\r\n        }\r\n        var original = this.original;\r\n\r\n        var oldVAO = this.currentVertexArrayObject;\r\n        this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\r\n        this.currentVertexArrayObject.hasBeenBound = true;\r\n        var newVAO = this.currentVertexArrayObject;\r\n\r\n        if (oldVAO == newVAO) {\r\n            return;\r\n        }\r\n\r\n        if (!oldVAO || newVAO.elementArrayBuffer != oldVAO.elementArrayBuffer) {\r\n            original.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\r\n        }\r\n\r\n        var currentBinding = this.currentArrayBuffer;\r\n        var maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\r\n        for (var n = 0; n <= maxAttrib; n++) {\r\n            var attrib = newVAO.attribs[n];\r\n            var oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\r\n\r\n            if (!oldVAO || attrib.enabled != oldAttrib.enabled) {\r\n                if (attrib.enabled) {\r\n                    original.enableVertexAttribArray.call(gl, n);\r\n                } else {\r\n                    original.disableVertexAttribArray.call(gl, n);\r\n                }\r\n            }\r\n\r\n            if (attrib.enabled) {\r\n                var bufferChanged = false;\r\n                if (!oldVAO || attrib.buffer != oldAttrib.buffer) {\r\n                    if (currentBinding != attrib.buffer) {\r\n                        original.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\r\n                        currentBinding = attrib.buffer;\r\n                    }\r\n                    bufferChanged = true;\r\n                }\r\n\r\n                if (bufferChanged || attrib.cached != oldAttrib.cached) {\r\n                    original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentArrayBuffer != currentBinding) {\r\n            original.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\r\n        }\r\n    };\r\n\r\n    (window as any)._setupVertexArrayObject = function (gl) {\r\n        var original_getSupportedExtensions = gl.getSupportedExtensions;\r\n        gl.getSupportedExtensions = function getSupportedExtensions() {\r\n            var list = original_getSupportedExtensions.call(this) || [];\r\n            if (list.indexOf(\"OES_vertex_array_object\") < 0) {\r\n                list.push(\"OES_vertex_array_object\");\r\n            }\r\n            return list;\r\n        };\r\n\r\n        var original_getExtension = gl.getExtension;\r\n\r\n        gl.getExtension = function getExtension(name) {\r\n            var ext = original_getExtension.call(this, name);\r\n            if (ext) {\r\n                return ext;\r\n            }\r\n            if (name !== \"OES_vertex_array_object\") {\r\n                return null;\r\n            }\r\n\r\n            if (!this.__OESVertexArrayObject) {\r\n                console.log(\"Setup OES_vertex_array_object polyfill\");\r\n                this.__OESVertexArrayObject = new OESVertexArrayObject(this);\r\n            }\r\n            return this.__OESVertexArrayObject;\r\n        };\r\n    };\r\n}());\r\n","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { VertexArrayObject } from \"./VertexArrayObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GlCapable {\r\n    /**@internal */\r\n    private _extentionVendorPrefixes: string[] = [\"\", \"WEBKIT_\", \"MOZ_\"];\r\n    /**@internal */\r\n    private _gl: any;\r\n    /**@internal */\r\n    private _extensionMap: Map<WebGLExtension, any>;\r\n    /**@internal */\r\n    private _capabilityMap: Map<RenderCapable, boolean>;\r\n\r\n\r\n    constructor(glEngine: WebGLEngine) {\r\n        this._gl = glEngine.gl;\r\n        this.initExtension(glEngine.isWebGL2);\r\n        this.initCapable(glEngine.isWebGL2);\r\n    }\r\n\r\n    private initCapable(isWebgl2: boolean) {\r\n        this._capabilityMap = new Map();\r\n        //Index Uint32\r\n        let value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_element_index_uint));\r\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint32, value);\r\n        //FLoat32Texture\r\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_float));\r\n        this._capabilityMap.set(RenderCapable.TextureFormat_R32G32B32A32, value);\r\n        //halfFloatTexture\r\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_half_float));\r\n        this._capabilityMap.set(RenderCapable.TextureFormat_R16G16B16A16, value);\r\n        //anistropic\r\n        value = !!(this.getExtension(WebGLExtension.EXT_texture_filter_anisotropic));\r\n        this._capabilityMap.set(RenderCapable.Texture_anisotropic, value);\r\n\r\n        // half float renderable\r\n        if (isWebgl2) {\r\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) || !!this.getExtension(WebGLExtension.EXT_color_buffer_half_float);\r\n        }\r\n        else {\r\n            value = ((!!this.getExtension(WebGLExtension.OES_texture_half_float)) || (!!this.getExtension(WebGLExtension.EXT_color_buffer_half_float))) && (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\r\n        }\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, value);\r\n\r\n        // float renderable\r\n        if (isWebgl2) {\r\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) && !!this.getExtension(WebGLExtension.OES_texture_float_linear);\r\n        }\r\n        else {\r\n            // OES_texture_float implicitly enables the WEBGL_color_buffer_float extension (if supported)\r\n            value = (!!this.getExtension(WebGLExtension.OES_texture_float)) && (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\r\n        }\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R32G32B32A32, value);\r\n\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.WEBGL_depth_texture));\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_Depth, value);\r\n        value = isWebgl2;\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_ShadowMap, value);\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_vertex_array_object));\r\n        this._capabilityMap.set(RenderCapable.Vertex_VAO, value);\r\n        value = (isWebgl2 || (!!this.getExtension(WebGLExtension.ANGLE_instanced_arrays)));\r\n        this._capabilityMap.set(RenderCapable.DrawElement_Instance, value);\r\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_shader_texture_lod));\r\n        this._capabilityMap.set(RenderCapable.Shader_TextureLod, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_pvrtc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_PVRTC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_astc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, value);\r\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_sRGB))\r\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, value);\r\n        value = (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\r\n        this._capabilityMap.set(RenderCapable.Texture_FloatLinearFiltering, value);\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\r\n        this._capabilityMap.set(RenderCapable.Texture_HalfFloatLinearFiltering, value);\r\n        value = isWebgl2;\r\n        this._capabilityMap.set(RenderCapable.MSAA, value);\r\n        this._capabilityMap.set(RenderCapable.UnifromBufferObject, value);\r\n        this._capabilityMap.set(RenderCapable.Texture3D, value);\r\n    }\r\n\r\n    private initExtension(isWebgl2: boolean) {\r\n        this._extensionMap = new Map();\r\n        const setExtensionMap = (extension: WebGLExtension, value: any, map: Map<WebGLExtension, any>) => {\r\n            value && map.set(extension, value);\r\n        }\r\n        const _extTextureFilterAnisotropic = this._getExtension(\"EXT_texture_filter_anisotropic\");\r\n        setExtensionMap(WebGLExtension.EXT_texture_filter_anisotropic, _extTextureFilterAnisotropic, this._extensionMap);\r\n        const _compressedTextureS3tc = this._getExtension(\"WEBGL_compressed_texture_s3tc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc, _compressedTextureS3tc, this._extensionMap);\r\n        const _compressdTextureS3tc_srgb = this._getExtension(\"WEBGL_compressed_texture_s3tc_srgb\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb, _compressdTextureS3tc_srgb, this._extensionMap);\r\n        const _compressedTexturePvrtc = this._getExtension(\"WEBGL_compressed_texture_pvrtc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_pvrtc, _compressedTexturePvrtc, this._extensionMap);\r\n        const _compressedTextureEtc1 = this._getExtension(\"WEBGL_compressed_texture_etc1\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc1, _compressedTextureEtc1, this._extensionMap);\r\n        const _compressedTextureETC = this._getExtension(\"WEBGL_compressed_texture_etc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc, _compressedTextureETC, this._extensionMap);\r\n        const _compressedTextureASTC = this._getExtension(\"WEBGL_compressed_texture_astc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_astc, _compressedTextureASTC, this._extensionMap);\r\n        const _oesTextureFloatLinear = this._getExtension(\"OES_texture_float_linear\");\r\n        setExtensionMap(WebGLExtension.OES_texture_float_linear, _oesTextureFloatLinear, this._extensionMap);\r\n        const _extColorBufferHalfFloat = this._getExtension(\"EXT_color_buffer_half_float\");\r\n        setExtensionMap(WebGLExtension.EXT_color_buffer_half_float, _extColorBufferHalfFloat, this._extensionMap);\r\n        if (isWebgl2) {\r\n            const _extColorBufferFloat = this._getExtension(\"EXT_color_buffer_float\");\r\n            setExtensionMap(WebGLExtension.EXT_color_buffer_float, _extColorBufferFloat, this._extensionMap);\r\n        } else {\r\n            VertexArrayObject;//强制引用\r\n            if ((window as any)._setupVertexArrayObject) //兼容VAO\r\n                (window as any)._setupVertexArrayObject(this._gl);\r\n            const _vaoExt = this._getExtension(\"OES_vertex_array_object\");\r\n            setExtensionMap(WebGLExtension.OES_vertex_array_object, _vaoExt, this._extensionMap);\r\n            const _angleInstancedArrays = this._getExtension(\"ANGLE_instanced_arrays\");\r\n            setExtensionMap(WebGLExtension.ANGLE_instanced_arrays, _angleInstancedArrays, this._extensionMap);\r\n            const _oesTextureHalfFloat = this._getExtension(\"OES_texture_half_float\");\r\n            setExtensionMap(WebGLExtension.OES_texture_half_float, _oesTextureHalfFloat, this._extensionMap);\r\n            const _oesTextureHalfFloatLinear = this._getExtension(\"OES_texture_half_float_linear\");\r\n            setExtensionMap(WebGLExtension.OES_texture_half_float_linear, _oesTextureHalfFloatLinear, this._extensionMap);\r\n            const _oesTextureFloat = this._getExtension(\"OES_texture_float\");\r\n            setExtensionMap(WebGLExtension.OES_texture_float, _oesTextureFloat, this._extensionMap);\r\n\r\n            const _oes_element_index_uint = this._getExtension(\"OES_element_index_uint\");\r\n            setExtensionMap(WebGLExtension.OES_element_index_uint, _oes_element_index_uint, this._extensionMap);\r\n            const _extShaderTextureLod = this._getExtension(\"EXT_shader_texture_lod\");\r\n            setExtensionMap(WebGLExtension.EXT_shader_texture_lod, _extShaderTextureLod, this._extensionMap);\r\n            const _webgl_depth_texture = this._getExtension(\"WEBGL_depth_texture\");\r\n            setExtensionMap(WebGLExtension.WEBGL_depth_texture, _webgl_depth_texture, this._extensionMap);\r\n            const _sRGB = this._getExtension(\"EXT_sRGB\");\r\n            setExtensionMap(WebGLExtension.EXT_sRGB, _sRGB, this._extensionMap);\r\n\r\n            const OES_standard_derivatives = this._getExtension(\"OES_standard_derivatives\");\r\n            setExtensionMap(WebGLExtension.OES_standard_derivatives, OES_standard_derivatives, this._extensionMap);\r\n        }\r\n    }\r\n\r\n    getCapable(type: RenderCapable): boolean {\r\n        return this._capabilityMap.get(type);\r\n    }\r\n\r\n    getExtension(type: WebGLExtension): any {\r\n        if (this._extensionMap.has(type))\r\n            return this._extensionMap.get(type);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getExtension(name: string) {\r\n        const prefixes: string[] = this._extentionVendorPrefixes;\r\n        for (const k in prefixes) {\r\n            var ext = this._gl.getExtension(prefixes[k] + name);\r\n            if (ext)\r\n                return ext;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/**\r\n * \r\n */\r\nexport class GLParams{\r\n    _engine: WebGLEngine;\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    _glParamsData:Map<RenderParams,number>;\r\n    constructor(engine: WebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._initParams();\r\n    }\r\n\r\n    private _initParams(){\r\n        const gl = this._gl;\r\n        this._glParamsData = new Map();\r\n        this._glParamsData.set(RenderParams.Max_Active_Texture_Count,gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));\r\n        const maxVertexUniform:number = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n        const maxFragUniform:number = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n        this._glParamsData.set(RenderParams.Max_Uniform_Count,Math.min(maxVertexUniform,maxFragUniform));\r\n        this._glParamsData.set(RenderParams.MAX_Texture_Size,gl.getParameter(gl.MAX_TEXTURE_SIZE));\r\n        this._glParamsData.set(RenderParams.MAX_Texture_Image_Uint,gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\r\n        if(this._engine.getCapable(RenderCapable.Texture_anisotropic)){\r\n            const anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\r\n            this._glParamsData.set(RenderParams.Max_AnisoLevel_Count,gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\r\n        }\r\n        if(this._engine.isWebGL2)\r\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,35);\r\n        else\r\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,30);\r\n        this._glParamsData.set(RenderParams.FLOAT,gl.FLOAT);\r\n        this._glParamsData.set(RenderParams.UNSIGNED_BYTE,gl.UNSIGNED_BYTE);\r\n        this._glParamsData.set(RenderParams.UNSIGNED_SHORT,gl.UNSIGNED_SHORT);\r\n        this._glParamsData.set(RenderParams.BYTE,gl.BYTE);\r\n\r\n    }\r\n\r\n    getParams(params:RenderParams):number{\r\n        return this._glParamsData.get(params);\r\n    }\r\n}","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { GLShaderInstance } from \"./GLShaderInstance\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLRender2DContext extends GLObject implements IRender2DContext {\r\n    private shaderInstance:GLShaderInstance;\r\n    private cacheShaderProgram:any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        //this.shaderInstance = new GLShaderInstance(engine, null, null, null);\r\n    }\r\n\r\n    activeTexture(textureID: number): void {\r\n        if (this._engine._activedTextureID !== textureID) {\r\n            this._gl.activeTexture(textureID);\r\n            this._engine._activedTextureID = textureID;\r\n        }\r\n    }\r\n\r\n    bindTexture(target: number, texture: WebGLTexture): void {\r\n        this._engine._bindTexture(target, texture);\r\n    }\r\n\r\n    bindUseProgram(webglProgram: any):boolean {\r\n        if(this.cacheShaderProgram==webglProgram)\r\n            return false;\r\n        this._gl.useProgram(webglProgram);\r\n        this._engine._glUseProgram = null;;\r\n        return true;\r\n    }\r\n\r\n}","import { RenderGeometryElementOBJ } from \"../../../d3/RenderObjs/RenderObj/RenderGeometryElementOBJ\";\r\nimport { DrawType } from \"../../RenderEnum/DrawType\";\r\nimport { IndexFormat } from \"../../RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\"\r\n\r\n//TODO\r\nexport class GLRenderDrawContext extends GLObject implements IRenderDrawContext {\r\n    /**@internal */\r\n    private _angleInstancedArrays: any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        if (!this._engine.isWebGL2) {\r\n            this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @returns \r\n     */\r\n    getMeshTopology(mode: MeshTopology): number {\r\n        switch (mode) {\r\n            case MeshTopology.Points:\r\n                return this._gl.POINTS;\r\n            case MeshTopology.Lines:\r\n                return this._gl.LINES;\r\n            case MeshTopology.LineLoop:\r\n                return this._gl.LINE_LOOP;\r\n            case MeshTopology.LineStrip:\r\n                return this._gl.LINE_STRIP;\r\n            case MeshTopology.Triangles:\r\n                return this._gl.TRIANGLES;\r\n            case MeshTopology.TriangleStrip:\r\n                return this._gl.TRIANGLE_STRIP;\r\n            case MeshTopology.TriangleFan:\r\n                return this._gl.TRIANGLE_FAN;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param type \r\n     * @returns \r\n     */\r\n    getIndexType(type: IndexFormat): number {\r\n        switch (type) {\r\n            case IndexFormat.UInt8:\r\n                return this._gl.UNSIGNED_BYTE;\r\n            case IndexFormat.UInt16:\r\n                return this._gl.UNSIGNED_SHORT;\r\n            case IndexFormat.UInt32:\r\n                return this._gl.UNSIGNED_INT;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElementsInstanced(mode: number, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\r\n\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3 * instanceCount);\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).drawArraysInstanced(mode, first, count, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2) * instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param first \r\n     * @param count \r\n     */\r\n    drawArrays(mode: number, first: number, count: number): void {\r\n        this._gl.drawArrays(mode, first, count);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param count \r\n     * @param type \r\n     * @param offset \r\n     */\r\n    drawElements(mode: number, count: number, type: IndexFormat, offset: number): void {\r\n        this._gl.drawElements(mode, count, type, offset);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param count \r\n     * @param type \r\n     * @param offset \r\n     */\r\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        mode = this.getMeshTopology(mode);\r\n        type = this.getIndexType(type);\r\n        this._gl.drawElements(mode, count, type, offset);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param geometryElement \r\n     */\r\n    drawGeometryElement(geometryElement: RenderGeometryElementOBJ): void {\r\n        geometryElement.bufferState.bind();\r\n        let element = geometryElement.drawParams.elements;\r\n        let length = geometryElement.drawParams.length;\r\n        switch (geometryElement.drawType) {\r\n            case DrawType.DrawArray:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawArrays(geometryElement._glmode, element[i], element[i + 1]);\r\n                }\r\n                break;\r\n            case DrawType.DrawElement:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawElements(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i]);\r\n                }\r\n                break;\r\n            case DrawType.DrawArrayInstance:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawArraysInstanced(geometryElement._glmode, element[i], element[i + 1], geometryElement.instanceCount);\r\n                }\r\n                break;\r\n            case DrawType.DrawElementInstance:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawElementsInstanced(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i], geometryElement.instanceCount);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}","import { BlendEquationSeparate } from \"../../RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../../RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../../RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../../RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../../RenderEnum/CullMode\";\r\nimport { RenderStateType } from \"../../RenderEnum/RenderStateType\";\r\nimport { StencilOperation } from \"../../RenderEnum/StencilOperation\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GLRenderState {\r\n    //Depth\r\n    /**@internal */\r\n    private _depthTest: boolean = true;\r\n    /**@internal */\r\n    private _depthMask: boolean = true;\r\n    /**@internal */\r\n    private _depthFunc: number;\r\n    //stencil\r\n    /**@internal */\r\n    private _stencilTest: boolean = false;\r\n    /**@internal */\r\n    private _stencilFunc: number;\r\n    /**@internal */\r\n    private _stencilMask: boolean;\r\n    /**@internal */\r\n    private _stencilRef: number\r\n    /**@internal */\r\n    private _stencilOp_fail: number;\r\n    /**@internal */\r\n    private _stencilOp_zfail: number;\r\n    /**@internal */\r\n    private _stencilOp_zpass: number;\r\n    //blender\r\n    /**@internal */\r\n    private _blend: boolean = false;\r\n    /**@internal */\r\n    private _blendEquation: number;\r\n    /**@internal */\r\n    private _blendEquationRGB: number;\r\n    /**@internal */\r\n    private _blendEquationAlpha: number;\r\n    /**@internal */\r\n    private _sFactor: number;\r\n    /**@internal */\r\n    private _dFactor: number;\r\n    /**@internal */\r\n    private _sFactorRGB: number;\r\n    /**@internal */\r\n    private _dFactorRGB: number;\r\n    /**@internal */\r\n    private _sFactorAlpha: number;\r\n    /**@internal */\r\n    private _dFactorAlpha: number;\r\n    //cull\r\n    /**@internal */\r\n    private _cullFace: boolean = false;\r\n    /**@internal */\r\n    private _frontFace: number;\r\n\r\n    /**@internal */\r\n    _engine: WebGLEngine;\r\n    /**@internal */\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /**\r\n     * intance glRenderState\r\n     * @param engine \r\n     */\r\n    constructor(engine: WebGLEngine) {\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._initState();\r\n    }\r\n\r\n    /**\r\n     * init\r\n     */\r\n    private _initState() {\r\n        //TODO:并不完全\r\n        const gl = this._gl;\r\n        this.setDepthFunc(CompareFunction.Less);\r\n        this.setBlendEquationSeparate(BlendEquationSeparate.ADD, BlendEquationSeparate.ADD);\r\n        this._blendEquation = BlendEquationSeparate.ADD;\r\n        this._sFactor = BlendFactor.One;\r\n        this._dFactor = BlendFactor.Zero;\r\n        this._sFactorAlpha = BlendFactor.One;\r\n        this._dFactorAlpha = BlendFactor.One;\r\n    }\r\n\r\n    /**\r\n     * get gl blend factor\r\n     * @param factor \r\n     * @returns \r\n     */\r\n    _getBlendFactor(factor: BlendFactor) {\r\n        const gl = this._gl;\r\n        switch (factor) {\r\n            case BlendFactor.Zero:\r\n                return gl.ZERO;\r\n            case BlendFactor.One:\r\n                return gl.ONE;\r\n            case BlendFactor.SourceColor:\r\n                return gl.SRC_COLOR;\r\n            case BlendFactor.OneMinusSourceColor:\r\n                return gl.ONE_MINUS_SRC_COLOR;\r\n            case BlendFactor.DestinationColor:\r\n                return gl.DST_COLOR;\r\n            case BlendFactor.OneMinusDestinationColor:\r\n                return gl.ONE_MINUS_DST_COLOR;\r\n            case BlendFactor.SourceAlpha:\r\n                return gl.SRC_ALPHA;\r\n            case BlendFactor.OneMinusSourceAlpha:\r\n                return gl.ONE_MINUS_SRC_ALPHA;\r\n            case BlendFactor.DestinationAlpha:\r\n                return gl.DST_ALPHA;\r\n            case BlendFactor.OneMinusDestinationAlpha:\r\n                return gl.ONE_MINUS_DST_ALPHA;\r\n            case BlendFactor.SourceAlphaSaturate:\r\n                return gl.SRC_ALPHA_SATURATE;\r\n            case BlendFactor.BlendColor:\r\n                return gl.CONSTANT_COLOR;\r\n            case BlendFactor.OneMinusBlendColor:\r\n                return gl.ONE_MINUS_CONSTANT_COLOR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl blend operation\r\n     * @param factor \r\n     * @returns \r\n     */\r\n    _getBlendOperation(factor: BlendEquationSeparate) {\r\n        const gl = this._gl;\r\n        switch (factor) {\r\n            case BlendEquationSeparate.ADD:\r\n                return gl.FUNC_ADD;\r\n            case BlendEquationSeparate.SUBTRACT:\r\n                return gl.FUNC_SUBTRACT;\r\n            case BlendEquationSeparate.REVERSE_SUBTRACT:\r\n                return gl.FUNC_REVERSE_SUBTRACT;\r\n            // case BlendEquationSeparate.MIN:\r\n            //     return -1;\r\n            // case BlendEquationSeparate.MAX:\r\n            //     return -1;\r\n            default:\r\n                throw \"Unknow type\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl compare fun factor\r\n     * @param compareFunction \r\n     * @returns \r\n     */\r\n    _getGLCompareFunction(compareFunction: CompareFunction): number {\r\n        const gl = this._gl;\r\n        switch (compareFunction) {\r\n            case CompareFunction.Never:\r\n                return gl.NEVER;\r\n            case CompareFunction.Less:\r\n                return gl.LESS;\r\n            case CompareFunction.Equal:\r\n                return gl.EQUAL;\r\n            case CompareFunction.LessEqual:\r\n                return gl.LEQUAL;\r\n            case CompareFunction.Greater:\r\n                return gl.GREATER;\r\n            case CompareFunction.NotEqual:\r\n                return gl.NOTEQUAL;\r\n            case CompareFunction.GreaterEqual:\r\n                return gl.GEQUAL;\r\n            case CompareFunction.Always:\r\n                return gl.ALWAYS;\r\n            default:\r\n                return gl.LEQUAL; // todo\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl stencil operation\r\n     * @param compareFunction \r\n     * @returns \r\n     */\r\n    _getGLStencilOperation(compareFunction: StencilOperation): number {\r\n        const gl = this._gl;\r\n        switch (compareFunction) {\r\n            case StencilOperation.Keep:\r\n                return gl.KEEP;\r\n            case StencilOperation.Zero:\r\n                return gl.ZERO;\r\n            case StencilOperation.Replace:\r\n                return gl.REPLACE;\r\n            case StencilOperation.IncrementSaturate:\r\n                return gl.INCR;\r\n            case StencilOperation.DecrementSaturate:\r\n                return gl.DECR;\r\n            case StencilOperation.Invert:\r\n                return gl.INVERT;\r\n            case StencilOperation.IncrementWrap:\r\n                return gl.INCR_WRAP;\r\n            case StencilOperation.DecrementWrap:\r\n                return gl.DECR_WRAP;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl frontface factor\r\n     * @param cullmode \r\n     * @returns \r\n     */\r\n    _getGLFrontfaceFactor(cullmode: CullMode) {\r\n        if (cullmode == CullMode.Front)\r\n            return this._gl.CCW;\r\n        else\r\n            return this._gl.CW;\r\n    }\r\n\r\n    //Depth\r\n    /**\r\n     * @internal\r\n     */\r\n    setDepthTest(value: boolean): void {\r\n        value !== this._depthTest && (this._depthTest = value, value ? this._gl.enable(this._gl.DEPTH_TEST) : this._gl.disable(this._gl.DEPTH_TEST));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setDepthMask(value: boolean): void {\r\n        value !== this._depthMask && (this._depthMask = value, this._gl.depthMask(value));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * value {CompareType}\r\n     */\r\n    setDepthFunc(value: number): void {\r\n        value !== this._depthFunc && (this._depthFunc = value, this._gl.depthFunc(this._getGLCompareFunction(value)));\r\n    }\r\n\r\n\r\n    //stencil\r\n    /**\r\n     * @internal\r\n     */\r\n    setStencilTest(value: boolean): void {\r\n        value !== this._stencilTest && (this._stencilTest = value, value ? this._gl.enable(this._gl.STENCIL_TEST) : this._gl.disable(this._gl.STENCIL_TEST));\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param value \r\n     */\r\n    setStencilMask(value: boolean): void {\r\n        value !== this._stencilMask && (this._stencilMask = value, value ? this._gl.stencilMask(0xff) : this._gl.stencilMask(0x00));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setStencilFunc(fun: number, ref: number): void {\r\n        if (fun != this._stencilFunc || ref != this._stencilRef) {\r\n            this._stencilFunc = fun;\r\n            this._stencilRef = ref;\r\n            this._gl.stencilFunc(this._getGLCompareFunction(fun), ref, 0xff);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    setstencilOp(fail: number, zfail: number, zpass: number) {\r\n        if (this._stencilOp_fail != fail || this._stencilOp_zfail != zfail || this._stencilOp_zpass != zpass) {\r\n            this._stencilOp_fail = fail;\r\n            this._stencilOp_zfail = zfail;\r\n            this._stencilOp_zpass = zpass;\r\n            this._gl.stencilOp(this._getGLStencilOperation(fail), this._getGLStencilOperation(zfail), this._getGLStencilOperation(zpass));\r\n        }\r\n    }\r\n\r\n    //blend()\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlend(value: boolean): void {\r\n        value !== this._blend && (this._blend = value, value ? this._gl.enable(this._gl.BLEND) : this._gl.disable(this._gl.BLEND));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendEquation(blendEquation: number): void {\r\n        if (blendEquation !== this._blendEquation) {\r\n            this._blendEquation = blendEquation;\r\n            this._blendEquationRGB = this._blendEquationAlpha = null;\r\n            this._gl.blendEquation(this._getBlendOperation(blendEquation));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendEquationSeparate(blendEquationRGB: number, blendEquationAlpha: number): void {\r\n        if (blendEquationRGB !== this._blendEquationRGB || blendEquationAlpha !== this._blendEquationAlpha) {\r\n            this._blendEquationRGB = blendEquationRGB;\r\n            this._blendEquationAlpha = blendEquationAlpha;\r\n            this._blendEquation = null;\r\n            this._gl.blendEquationSeparate(this._getBlendOperation(blendEquationRGB), this._getBlendOperation(blendEquationAlpha));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendFunc(sFactor: number, dFactor: number, force: boolean = false): void {\r\n        // 有个iOS的bug，用原来的写法有时候会出错\r\n        if (force || sFactor !== this._sFactor || dFactor !== this._dFactor) {\r\n            this._sFactor = sFactor;\r\n            this._dFactor = dFactor;\r\n            this._sFactorRGB = null;\r\n            this._dFactorRGB = null;\r\n            this._sFactorAlpha = null;\r\n            this._dFactorAlpha = null;\r\n            this._gl.blendFunc(this._getBlendFactor(sFactor), this._getBlendFactor(dFactor));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendFuncSeperate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void {\r\n        if (srcRGB !== this._sFactorRGB || dstRGB !== this._dFactorRGB || srcAlpha !== this._sFactorAlpha || dstAlpha !== this._dFactorAlpha) {\r\n            this._sFactorRGB = srcRGB;\r\n            this._dFactorRGB = dstRGB;\r\n            this._sFactorAlpha = srcAlpha;\r\n            this._dFactorAlpha = dstAlpha;\r\n            this._sFactor = null;\r\n            this._dFactor = null;\r\n            this._gl.blendFuncSeparate(this._getBlendFactor(srcRGB), this._getBlendFactor(dstRGB), this._getBlendFactor(srcAlpha), this._getBlendFactor(dstAlpha));\r\n        }\r\n    }\r\n\r\n    //cull\r\n    /**\r\n     * @internal\r\n     */\r\n    setCullFace(value: boolean): void {\r\n        value !== this._cullFace && (this._cullFace = value, value ? this._gl.enable(this._gl.CULL_FACE) : this._gl.disable(this._gl.CULL_FACE));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setFrontFace(value: number): void {\r\n        value !== this._frontFace && (this._frontFace = value, this._gl.frontFace(this._getGLFrontfaceFactor(value)));\r\n    }\r\n\r\n    /**\r\n     * apply RenderState list\r\n     * @param cmd \r\n     */\r\n    applyRenderStateCommand(cmd: RenderStateCommand) {\r\n        let cmdArray = cmd.cmdArray;\r\n        cmdArray.forEach((value, key) => {\r\n            switch (key) {\r\n                case RenderStateType.DepthTest:\r\n                    this.setDepthTest(value);\r\n                    break;\r\n                case RenderStateType.DepthMask:\r\n                    this.setDepthMask(value);\r\n                    break;\r\n                case RenderStateType.DepthFunc:\r\n                    this.setDepthFunc(value);\r\n                    break;\r\n                case RenderStateType.StencilTest:\r\n                    this.setStencilTest(value);\r\n                    break;\r\n                case RenderStateType.StencilMask:\r\n                    this.setStencilMask(value);\r\n                    break;\r\n                case RenderStateType.StencilFunc:\r\n                    this.setStencilFunc(value[0], value[1]);\r\n                    break;\r\n                case RenderStateType.StencilOp:\r\n                    this.setstencilOp(value[0], value[1], value[2]);//TODO\r\n                    break;\r\n                case RenderStateType.BlendType:\r\n                    this.setBlend(value != BlendType.BLEND_DISABLE);\r\n                    break;\r\n                case RenderStateType.BlendEquation:\r\n                    this.setBlendEquation(value);\r\n                    break;\r\n                case RenderStateType.BlendEquationSeparate:\r\n                    this.setBlendEquationSeparate(value[0], value[1]);//TODO\r\n                    break;\r\n                case RenderStateType.BlendFunc:\r\n                    this.setBlendFunc(value[0], value[1]);\r\n                    break;\r\n                case RenderStateType.BlendFuncSeperate:\r\n                    this.setBlendFuncSeperate(value[0], value[1], value[2], value[3]);\r\n                    break;\r\n                case RenderStateType.CullFace:\r\n                    this.setCullFace(value);\r\n                    break;\r\n                case RenderStateType.FrontFace:\r\n                    this.setFrontFace(value);\r\n                    break;\r\n                default:\r\n                    throw \"unknow type of renderStateType\";\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n}","import { LayaEnv } from \"../../../../LayaEnv\";\r\nimport { TextureCube } from \"../../../resource/TextureCube\";\r\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { Texture2D } from \"../../../resource/Texture2D\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\r\nimport { UniformBufferObject } from \"../../UniformBufferObject\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\r\n\r\n\r\nexport class GLShaderInstance extends GLObject implements IRenderShaderInstance {\r\n\r\n    _engine: WebGLEngine;\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /**@internal */\r\n    private _vs: string;\r\n    /**@internal */\r\n    private _ps: string;\r\n    /**@internal TextureId*/\r\n    private _curActTexIndex: number;\r\n    /**@internal */\r\n    private _vshader: WebGLShader;\r\n    /**@internal */\r\n    private _pshader: WebGLShader;\r\n    /**@internal */\r\n    private _program: WebGLProgram;\r\n    /**@internal */\r\n    private _attributeMap: { [name: string]: [number, ShaderDataType] };\r\n    /**@internal */\r\n    private _uniformMap: ShaderVariable[];\r\n    /**@internal */\r\n    // todo 没用到\r\n    private _uniformObjectMap: { [key: string]: ShaderVariable };\r\n    /**@internal */\r\n    _complete: boolean = true;\r\n\r\n    constructor(engine: WebGLEngine, vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n        super(engine);\r\n        this._vs = vs;\r\n        this._ps = ps;\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = [];\r\n        this._create();\r\n    }\r\n\r\n    private _create(): void {\r\n\r\n        const gl: WebGLRenderingContext = this._gl;\r\n        this._program = gl.createProgram();\r\n        this._vshader = this._createShader(gl, this._vs, gl.VERTEX_SHADER);\r\n        this._pshader = this._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\r\n        gl.attachShader(this._program, this._vshader);\r\n        gl.attachShader(this._program, this._pshader);\r\n\r\n        for (var k in this._attributeMap)//根据声明调整location,便于VAO使用\r\n            gl.bindAttribLocation(this._program, this._attributeMap[k][0], k);\r\n        gl.linkProgram(this._program);\r\n        const bo = gl.getProgramParameter(this._program, gl.LINK_STATUS);\r\n\r\n        if (!bo) {\r\n            var info = gl.getProgramInfoLog(this._program);\r\n            console.error(new Error('Could not compile WebGL program. \\n\\n' + info));\r\n            this._complete = false;\r\n            return;\r\n        }\r\n\r\n        //Uniform\r\n        //Unifrom Objcet\r\n        const nUniformNum: number = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\r\n\r\n        this.useProgram();\r\n        this._curActTexIndex = 0;\r\n        let one: ShaderVariable, i: number;\r\n        for (i = 0; i < nUniformNum; i++) {\r\n            var uniformData: WebGLActiveInfo = gl.getActiveUniform(this._program, i);\r\n            var uniName: string = uniformData.name;\r\n            let location: WebGLUniformLocation = gl.getUniformLocation(this._program, uniName);\r\n            if (!location && location != 0)\r\n                continue;\r\n            one = new ShaderVariable();\r\n            one.location = location as number;\r\n            if (uniName.indexOf('[0]') > 0) {\r\n                one.name = uniName = uniName.substr(0, uniName.length - 3);\r\n                one.isArray = true;\r\n            } else {\r\n                one.name = uniName;\r\n                one.isArray = false;\r\n            }\r\n            one.type = uniformData.type;\r\n            this._addShaderUnifiormFun(one);\r\n            this._uniformMap.push(one);\r\n            one.dataOffset = this._engine.propertyNameToID(uniName);\r\n        }\r\n        if (this._engine.isWebGL2) {\r\n            this._uniformObjectMap = {};\r\n            var nUniformBlock: number = gl.getProgramParameter(this._program, (gl as WebGL2RenderingContext).ACTIVE_UNIFORM_BLOCKS);\r\n            for (i = 0; i < nUniformBlock; i++) {\r\n                let gl2 = (gl as WebGL2RenderingContext);\r\n                var uniformBlockName: string = gl2.getActiveUniformBlockName(this._program, i);\r\n                one = new ShaderVariable();\r\n                one.name = uniformBlockName;\r\n                one.isArray = false;\r\n                one.type = (gl as WebGL2RenderingContext).UNIFORM_BUFFER;\r\n                one.dataOffset = this._engine.propertyNameToID(uniformBlockName);\r\n                let location = one.location = gl2.getUniformBlockIndex(this._program, uniformBlockName);\r\n                gl2.uniformBlockBinding(this._program, location, this._engine.getUBOPointer(uniformBlockName));\r\n                this._uniformObjectMap[one.name] = one;\r\n                this._uniformMap.push(one);\r\n                this._addShaderUnifiormFun(one);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _legalUBObyteLength(bytelength: number): number {\r\n        return Math.ceil(bytelength / 16) * 16;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    private _createShader(gl: WebGLRenderingContext, str: string, type: number): any {\r\n        var shader: WebGLShader = gl.createShader(type);\r\n        gl.shaderSource(shader, str);\r\n        gl.compileShader(shader);\r\n        if (this._engine._isShaderDebugMode && !gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            if (!LayaEnv.isPlaying) {\r\n                console.warn(gl.getShaderInfoLog(shader));\r\n            } else {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n            }\r\n        }\r\n        return shader;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _addShaderUnifiormFun(one: ShaderVariable): void {\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        one.caller = this;\r\n        var isArray: boolean = one.isArray;\r\n        switch (one.type) {\r\n            case gl.BOOL:\r\n                one.fun = this._uniform1i;\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.INT:\r\n                one.fun = isArray ? this._uniform1iv : this._uniform1i;//TODO:优化\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.FLOAT:\r\n                one.fun = isArray ? this._uniform1fv : this._uniform1f;\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.FLOAT_VEC2:\r\n                one.fun = isArray ? this._uniform_vec2v : this._uniform_vec2;\r\n                one.uploadedValue = new Array(2);\r\n                break;\r\n            case gl.FLOAT_VEC3:\r\n                one.fun = isArray ? this._uniform_vec3v : this._uniform_vec3;\r\n                one.uploadedValue = new Array(3);\r\n                break;\r\n            case gl.FLOAT_VEC4:\r\n                one.fun = isArray ? this._uniform_vec4v : this._uniform_vec4;\r\n                one.uploadedValue = new Array(4);\r\n                break;\r\n            case gl.FLOAT_MAT2:\r\n                one.fun = this._uniformMatrix2fv;\r\n                break;\r\n            case gl.FLOAT_MAT3:\r\n                one.fun = this._uniformMatrix3fv;\r\n                break;\r\n            case gl.FLOAT_MAT4:\r\n                one.fun = isArray ? this._uniformMatrix4fv : this._uniformMatrix4f;\r\n                break;\r\n            case gl.SAMPLER_2D:\r\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_SHADOW:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler2D;\r\n                break;\r\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_ARRAY:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler2DArray;\r\n                break;\r\n            case 0x8b5f://sampler3D\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler3D;\r\n                break;\r\n            case gl.SAMPLER_CUBE:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_samplerCube;\r\n                break;\r\n            case (gl as WebGL2RenderingContext).UNIFORM_BUFFER:\r\n                one.fun = this._uniform_UniformBuffer;\r\n                break;\r\n            default:\r\n                throw new Error(\"compile shader err!\");\r\n        }\r\n    }\r\n\r\n    getUniformMap(): ShaderVariable[] {\r\n        return this._uniformMap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    bind(): boolean {\r\n        return this.useProgram();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    useProgram(): boolean {\r\n        if (this._engine._glUseProgram === this)\r\n            return false;\r\n        this._gl.useProgram(this._program);\r\n        this._engine._glUseProgram = this;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    _uniform1f(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            this._gl.uniform1f(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    _uniform1fv(one: any, value: any): number {\r\n        if (value.length < 4) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                this._gl.uniform1fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            this._gl.uniform1fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec2(one: any, v: Vector2): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y) {\r\n            this._gl.uniform2f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec2v(one: any, value: Float32Array): number {\r\n        if (value.length < 2) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                this._gl.uniform2fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            this._gl.uniform2fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3(one: any, v: Vector3): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z) {\r\n            this._gl.uniform3f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3v(one: any, v: Float32Array): number {\r\n        this._gl.uniform3fv(one.location, v);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4(one: any, v: Vector4): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z || uploadedValue[3] !== v.w) {\r\n            this._gl.uniform4f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z, uploadedValue[3] = v.w);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4v(one: any, v: Float32Array): number {\r\n        this._gl.uniform4fv(one.location, v);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix2fv(one: any, value: any): number {\r\n        this._gl.uniformMatrix2fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix3fv(one: any, m: Matrix3x3): number {\r\n        let value = m.elements;\r\n        this._gl.uniformMatrix3fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix4f(one: any, m: Matrix4x4): number {\r\n        var value: Float32Array = m.elements;\r\n        this._gl.uniformMatrix4fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix4fv(one: any, m: Float32Array): number {\r\n        this._gl.uniformMatrix4fv(one.location, false, m);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform1i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            this._gl.uniform1i(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform1iv(one: any, value: any): number {\r\n        this._gl.uniform1iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_ivec2(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\r\n            this._gl.uniform2i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_ivec2v(one: any, value: any): number {\r\n        this._gl.uniform2iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\r\n            this._gl.uniform3i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3vi(one: any, value: any): number {\r\n        this._gl.uniform3iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n            this._gl.uniform4i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4vi(one: any, value: any): number {\r\n        this._gl.uniform4iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_sampler2D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_2D, value);\r\n        return 0;\r\n    }\r\n\r\n    _uniform_sampler2DArray(one: any, texture: BaseTexture): number {\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_2D_ARRAY, value);\r\n        return 0;\r\n    }\r\n\r\n    _uniform_sampler3D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_3D, value);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_samplerCube(one: any, texture: BaseTexture): number {//TODO:TEXTURTECUBE ARRAY\r\n        var value: any = texture ? texture._getSource() : TextureCube.errorTexture._getSource();\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_CUBE_MAP, value);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param one \r\n     * @param value \r\n     * @returns \r\n     */\r\n    _uniform_UniformBuffer(one: any, value: UniformBufferObject) {\r\n        value._bindUniformBufferBase();\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _bindTexture(textureID: number, target: number, texture: WebGLTexture): void {\r\n        const gl = this._gl;\r\n        if (this._engine._activedTextureID !== textureID) {\r\n            gl.activeTexture(textureID);\r\n            this._engine._activedTextureID = textureID;\r\n        }\r\n        const texID = this._engine._activedTextureID - this._gl.TEXTURE0;\r\n        if (this._engine._activeTextures[texID] !== texture) {\r\n            gl.bindTexture(target, texture);\r\n            this._engine._activeTextures[texID] = texture;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        gl.deleteShader(this._vshader);\r\n        gl.deleteShader(this._pshader);\r\n        gl.deleteProgram(this._program);\r\n        this._vshader = null;\r\n        this._pshader = null;\r\n        this._program = null;\r\n        this._attributeMap = null;\r\n        this._uniformMap = null;\r\n        this._uniformObjectMap = null;\r\n        this._gl = null;\r\n        this._engine = null;\r\n    }\r\n\r\n}","import { IndexBuffer } from \"../../IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../VertexBuffer\";\r\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLVertexState extends GLObject implements IRenderVertexState {\r\n    private _angleInstancedArrays: any;\r\n    private _vaoExt: any | null;\r\n    private _vao: WebGLVertexArrayObject | WebGLVertexArrayObjectOES;\r\n\r\n    _vertexDeclaration: VertexDeclaration[] = [];\r\n    _bindedIndexBuffer: IndexBuffer;\r\n    _vertexBuffers: VertexBuffer[];\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        if (!engine.isWebGL2)\r\n            this._vaoExt = engine._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object);\r\n        this._vao = this.createVertexArray();\r\n        this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private createVertexArray(): any {\r\n        if (this._engine.isWebGL2)\r\n            return (<WebGL2RenderingContext>this._gl).createVertexArray();\r\n        else\r\n            return this._vaoExt.createVertexArrayOES();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private deleteVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).deleteVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.deleteVertexArrayOES(this._vao);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    bindVertexArray(): void {\r\n        if (this._engine._GLBindVertexArray == this)\r\n            return;\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(this._vao);\r\n        this._engine._GLBindVertexArray = this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    unbindVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(null);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(null);\r\n        this._engine._GLBindVertexArray = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    isVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).isVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.isVertexArrayOES(this._vao);\r\n    }\r\n\r\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\r\n        //Clear front VAO\r\n        this.clearVAO();\r\n        this._vertexBuffers = vertexBuffer;\r\n        if (this._engine._GLBindVertexArray == this) {\r\n            this._vertexDeclaration.length = vertexBuffer.length;\r\n            var i = 0;\r\n            vertexBuffer.forEach(element => {\r\n                var verDec: VertexDeclaration = element.vertexDeclaration;\r\n                this._vertexDeclaration[i++] = element.vertexDeclaration;\r\n                var valueData: any = verDec._shaderValues;\r\n                element.bind();\r\n                for (var k in valueData) {\r\n                    var loc: number = parseInt(k);\r\n                    var attribute: any[] = valueData[k];\r\n                    this._gl.enableVertexAttribArray(loc);\r\n                    this._gl.vertexAttribPointer(loc, attribute[0], attribute[1], !!attribute[2], attribute[3], attribute[4]);\r\n                    if (element.instanceBuffer)\r\n                        this.vertexAttribDivisor(loc, 1);\r\n                }\r\n            });\r\n        } else {\r\n            throw \"BufferState: must call bind() function first.\";\r\n        }\r\n\r\n    }\r\n\r\n    //绑定之前需要先处理了前面的\r\n    clearVAO(){\r\n        for(let i = 0,n=this._vertexDeclaration.length;i<n;i++){\r\n            var verDec: VertexDeclaration = this._vertexDeclaration[i];\r\n            var valueData: any = verDec._shaderValues;\r\n            for (var k in valueData) {\r\n                var loc: number = parseInt(k);\r\n                this._gl.disableVertexAttribArray(loc);\r\n            }\r\n        }\r\n    }\r\n\r\n    applyIndexBuffer(indexBuffer: IndexBuffer | null): void {\r\n        //需要强制更新IndexBuffer\r\n\r\n        if (indexBuffer == null) {\r\n            return;\r\n        }\r\n        if (this._engine._GLBindVertexArray == this) {\r\n            if (this._bindedIndexBuffer !== indexBuffer) {\r\n                indexBuffer.bind();//TODO:可和vao合并bind\r\n                this._bindedIndexBuffer = indexBuffer;\r\n            }\r\n        } else {\r\n            throw \"BufferState: must call bind() function first.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n         * @internal\r\n         */\r\n    vertexAttribDivisor(index: number, divisor: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).vertexAttribDivisor(index, divisor);\r\n        else\r\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        this.deleteVertexArray();\r\n        this._gl = null;\r\n        this._engine = null;\r\n    }\r\n} ","import { LayaEnv } from \"../../../../LayaEnv\";\r\nimport { CommandEncoder } from \"../../../layagl/CommandEncoder\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\r\nimport { IRenderEngineFactory } from \"../../RenderInterface/IRenderEngineFactory\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { ShaderData, ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { GL2TextureContext } from \"./GL2TextureContext\";\r\nimport { GLBuffer } from \"./GLBuffer\";\r\nimport { GlCapable } from \"./GlCapable\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLMode } from \"./GLEnum/WebGLMode\";\r\nimport { GLParams } from \"./GLParams\";\r\nimport { GLRender2DContext } from \"./GLRender2DContext\";\r\nimport { GLRenderDrawContext } from \"./GLRenderDrawContext\";\r\nimport { GLRenderState } from \"./GLRenderState\";\r\nimport { GLShaderInstance } from \"./GLShaderInstance\";\r\nimport { GLTextureContext } from \"./GLTextureContext\";\r\nimport { GLVertexState } from \"./GLVertexState\";\r\nimport { WebGlConfig } from \"./WebGLConfig\";\r\n\r\n/**\r\n * 封装Webgl\r\n */\r\nexport class WebGLEngine implements IRenderEngine {\r\n\r\n    _context: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    private _config: WebGlConfig;\r\n\r\n    private _isWebGL2: boolean;\r\n\r\n    private _webglMode: WebGLMode;\r\n\r\n    /**@internal */\r\n    private _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private _propertyNameCounter: number = 0;\r\n    /**@internal */\r\n    _renderOBJCreateContext: IRenderEngineFactory;\r\n\r\n    /**@internal */\r\n    _IDCounter: number = 0;\r\n\r\n    /**@internal ShaderDebugMode*/\r\n    _isShaderDebugMode: boolean = true;\r\n\r\n    /**@internal gl.TextureID*/\r\n    _glTextureIDParams: Array<number>;\r\n\r\n    /**@internal bind active Texture*/\r\n    _activedTextureID: number;\r\n\r\n    /**@internal bindTexture */\r\n    //RenderTexture TODO\r\n    _activeTextures: WebGLTexture[];\r\n\r\n    /**\r\n    * @internal\r\n    * bind GLVertexArray\r\n    */\r\n    _GLBindVertexArray: GLVertexState;\r\n\r\n    /**\r\n    * @internal\r\n    * 支持功能\r\n    */\r\n    _supportCapatable: GlCapable;\r\n\r\n    /**\r\n     * @internal\r\n     * bind Program\r\n     */\r\n    _glUseProgram: GLShaderInstance;\r\n\r\n    //bind glBuffer by glBuffer target\r\n    //key BufferTargetType\r\n    private _GLBufferBindMap: { [key: number]: GLBuffer | null };\r\n\r\n    private _curUBOPointer: number = 0;\r\n    //记录绑定UBO的glPointer\r\n    private _GLUBOPointerMap: Map<string, number> = new Map();\r\n    //记录绑定Pointer的UBO\r\n    private _GLBindPointerUBOMap: Map<number, GLBuffer> = new Map();\r\n    //bind viewport\r\n    private _lastViewport: Vector4;\r\n    private _lastScissor: Vector4;\r\n\r\n    //bind clearColor\r\n    private _lastClearColor: Color = new Color;\r\n    private _lastClearDepth: number = 1;\r\n\r\n    //GL参数\r\n    private _GLParams: GLParams;\r\n\r\n    //GL纹理生成\r\n    private _GLTextureContext: GLTextureContext | GL2TextureContext;\r\n    //Gl Draw\r\n    private _GLRenderDrawContext: GLRenderDrawContext;\r\n\r\n    private _GL2DRenderContext: GLRender2DContext;\r\n\r\n    //GLRenderState\r\n    _GLRenderState: GLRenderState;\r\n\r\n    // //TODO:管理Buffer\r\n    // private _bufferResourcePool: any;\r\n    // //TODO:管理Texture\r\n    // private _textureResourcePool: any;\r\n    // //TODO:管理FrameBuffer\r\n    // private _RenderBufferResource: any;\r\n\r\n    //GPU统计数据\r\n    private _GLStatisticsInfo: Map<RenderStatisticsInfo, number> = new Map();\r\n\r\n    constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\r\n        this._config = config;\r\n        this._isWebGL2 = false;\r\n        //init data\r\n        this._lastViewport = new Vector4(0, 0, 0, 0);\r\n        this._lastClearColor = new Color(0, 0, 0, 0);\r\n        this._lastScissor = new Vector4(0, 0, 0, 0);\r\n        this._webglMode = webglMode;\r\n        this._initStatisticsInfo();\r\n    }\r\n\r\n    /**\r\n     * GL Context\r\n     * @member {WebGLRenderingContext}\r\n     */\r\n    get gl() {\r\n        return this._context;\r\n    }\r\n\r\n    get isWebGL2() {\r\n        return this._isWebGL2;\r\n    }\r\n\r\n    get webglConfig() {\r\n        return this._config;\r\n    }\r\n\r\n    private _initStatisticsInfo() {\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.DrawCall, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.InstanceDrawCall, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.Triangle, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.UniformUpload, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.TextureMemeory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.GPUMemory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.RenderTextureMemory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.BufferMemory, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param info \r\n     * @param value \r\n     */\r\n    _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\r\n        this._GLStatisticsInfo.set(info, this._GLStatisticsInfo.get(info) + value);\r\n    }\r\n\r\n    /**\r\n     * 清除\r\n     * @internal\r\n     * @param info \r\n     */\r\n    clearStatisticsInfo(info: RenderStatisticsInfo) {\r\n        this._GLStatisticsInfo.set(info, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param info \r\n     * @returns \r\n     */\r\n    getStatisticsInfo(info: RenderStatisticsInfo): number {\r\n        return this._GLStatisticsInfo.get(info);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param glPointer \r\n     * @returns \r\n     */\r\n    _getBindUBOBuffer(glPointer: number): GLBuffer {\r\n        return this._GLBindPointerUBOMap.get(glPointer);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param glPointer \r\n     * @param buffer \r\n     */\r\n    _setBindUBOBuffer(glPointer: number, buffer: GLBuffer): void {\r\n        this._GLBindPointerUBOMap.set(glPointer, buffer);\r\n    }\r\n\r\n    /**\r\n     * create GL\r\n     * @param canvas \r\n     */\r\n    initRenderEngine(canvas: any) {\r\n        let names;\r\n        let gl;\r\n        switch (this._webglMode) {\r\n            case WebGLMode.Auto:\r\n                names = [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"];\r\n                break;\r\n            case WebGLMode.WebGL1:\r\n                names = [\"webgl\", \"experimental-webgl\"];\r\n                break;\r\n            case WebGLMode.WebGL2:\r\n                names = [\"webgl2\", \"experimental-webgl2\"];\r\n                break;\r\n        }\r\n        for (var i: number = 0; i < names.length; i++) {\r\n            try {\r\n                gl = canvas.getContext(names[i], this._config);\r\n                // gl.drawingBufferColorSpace = \"display-p3\";\r\n            } catch (e) {\r\n            }\r\n            if (gl) {\r\n                if (names[i] === 'webgl2' || names[i] === 'experimental-webgl2') {\r\n                    this._isWebGL2 = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this._context = gl;\r\n\r\n        //init Other\r\n        this._initBindBufferMap();\r\n        this._supportCapatable = new GlCapable(this);\r\n        this._GLParams = new GLParams(this);\r\n        this._GLRenderState = new GLRenderState(this);\r\n        this._glTextureIDParams = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7, gl.TEXTURE8, gl.TEXTURE9, gl.TEXTURE10, gl.TEXTURE11, gl.TEXTURE12, gl.TEXTURE13, gl.TEXTURE14, gl.TEXTURE15, gl.TEXTURE16, gl.TEXTURE17, gl.TEXTURE18, gl.TEXTURE19, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23, gl.TEXTURE24, gl.TEXTURE25, gl.TEXTURE26, gl.TEXTURE27, gl.TEXTURE28, gl.TEXTURE29, gl.TEXTURE30, gl.TEXTURE31];\r\n        this._activedTextureID = gl.TEXTURE0;//默认激活纹理区为0;\r\n        this._activeTextures = [];\r\n        this._GLTextureContext = this.isWebGL2 ? new GL2TextureContext(this) : new GLTextureContext(this);\r\n        this._GLRenderDrawContext = new GLRenderDrawContext(this);\r\n        this._GL2DRenderContext = new GLRender2DContext(this);\r\n    }\r\n\r\n    private _initBindBufferMap() {\r\n        this._GLBufferBindMap = {};\r\n        this._GLBufferBindMap[BufferTargetType.ARRAY_BUFFER] = null;\r\n        this._GLBufferBindMap[BufferTargetType.ELEMENT_ARRAY_BUFFER] = null;\r\n        this._GLBufferBindMap[BufferTargetType.UNIFORM_BUFFER] = null;\r\n    }\r\n\r\n\r\n    _getbindBuffer(target: BufferTargetType) {\r\n        return this._GLBufferBindMap[target];\r\n    }\r\n\r\n    _setbindBuffer(target: BufferTargetType, buffer: GLBuffer | null) {\r\n        this._GLBufferBindMap[target] = buffer;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param target \r\n     * @param texture \r\n     */\r\n    _bindTexture(target: number, texture: WebGLTexture) {\r\n        const texID = this._activedTextureID - this._context.TEXTURE0;\r\n        if (this._activeTextures[texID] !== texture) {\r\n            this._context.bindTexture(target, texture);\r\n            this._activeTextures[texID] = texture;\r\n        }\r\n    }\r\n\r\n    bindTexture(texture: BaseTexture) {\r\n        this._bindTexture(texture._texture.target, texture._getSource());\r\n    }\r\n\r\n    applyRenderStateCMD(cmd: RenderStateCommand): void {\r\n        this._GLRenderState.applyRenderStateCommand(cmd);\r\n    }\r\n\r\n    //get capable of webgl\r\n    getCapable(capatableType: RenderCapable): boolean {\r\n        return this._supportCapatable.getCapable(capatableType);\r\n    }\r\n\r\n    viewport(x: number, y: number, width: number, height: number): void {\r\n        const gl = this._context;\r\n        const lv = this._lastViewport;\r\n        if (LayaEnv.isConch) {\r\n            gl.viewport(x, y, width, height);\r\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\r\n            gl.viewport(x, y, width, height);\r\n            lv.setValue(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    scissor(x: number, y: number, width: number, height: number) {\r\n        const gl = this._context;\r\n        const lv = this._lastScissor;\r\n        if (LayaEnv.isConch) {\r\n            gl.scissor(x, y, width, height);\r\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\r\n            gl.scissor(x, y, width, height);\r\n            lv.setValue(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    scissorTest(value: boolean) {\r\n        if (value)\r\n            this._context.enable(this._context.SCISSOR_TEST);\r\n        else\r\n            this._context.disable(this._context.SCISSOR_TEST);\r\n    }\r\n\r\n\r\n\r\n    clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\r\n        var flag: number;\r\n        //this.gl.enable(this._gl.SCISSOR_TEST)\r\n        if (clearFlag & RenderClearFlag.Color) {\r\n            if (clearcolor && !this._lastClearColor.equal(clearcolor)) {\r\n                this._context.clearColor(clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a);\r\n                clearcolor.cloneTo(this._lastClearColor);\r\n            }\r\n            flag |= this.gl.COLOR_BUFFER_BIT;\r\n        }\r\n        if (clearFlag & RenderClearFlag.Depth) {\r\n            if (this._lastClearDepth != clearDepth) {\r\n                this._context.clearDepth(clearDepth);\r\n                this._lastClearDepth = clearDepth;\r\n            }\r\n            this._GLRenderState.setDepthMask(true);\r\n            flag |= this._context.DEPTH_BUFFER_BIT;\r\n        }\r\n        if (clearFlag & RenderClearFlag.Stencil) {\r\n            this._context.clearStencil(0);\r\n            this._GLRenderState.setStencilMask(true);\r\n            flag |= this._context.STENCIL_BUFFER_BIT;\r\n        }\r\n        if (flag)\r\n            this._context.clear(flag);\r\n        //this._gl.disable(this._gl.SCISSOR_TEST);\r\n    }\r\n\r\n    copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\r\n        this._bindTexture(texture._texture.target, texture._getSource());\r\n        this._context.copyTexSubImage2D(texture._texture.target, level, xoffset, yoffset, x, y, width, height);\r\n    }\r\n\r\n    colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n        this._context.colorMask(r, g, b, a);\r\n    }\r\n\r\n    getParams(params: RenderParams): number {\r\n        return this._GLParams.getParams(params);\r\n    }\r\n\r\n\r\n    createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\r\n        //TODO SourceManager\r\n        return new GLBuffer(this, targetType, bufferUsageType);\r\n    }\r\n\r\n    createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\r\n        //TODO SourceManager\r\n        return new GLShaderInstance(this, vs, ps, attributeMap);\r\n    }\r\n\r\n    createVertexState(): IRenderVertexState {\r\n        return new GLVertexState(this);\r\n    }\r\n\r\n    getUBOPointer(name: string): number {\r\n        if (!this._GLUBOPointerMap.has(name))\r\n            this._GLUBOPointerMap.set(name, this._curUBOPointer++);\r\n        return this._GLUBOPointerMap.get(name);\r\n    }\r\n\r\n\r\n\r\n    getTextureContext(): ITextureContext {\r\n        return this._GLTextureContext;\r\n    }\r\n\r\n    //TODO 先写完测试，这种封装过于死板\r\n    getDrawContext(): IRenderDrawContext {\r\n        return this._GLRenderDrawContext;\r\n    }\r\n\r\n    get2DRenderContext(): IRender2DContext {\r\n        return this._GL2DRenderContext;\r\n    }\r\n\r\n    getCreateRenderOBJContext(): IRenderEngineFactory {\r\n        return this._renderOBJCreateContext;\r\n    }\r\n\r\n    // //TODO:\r\n    // propertyNameToID(name: string): number {\r\n    //   return this.propertyNameToID(name);\r\n    // }\r\n\r\n    /**\r\n   * 通过Shader属性名称获得唯一ID。\r\n   * @param name Shader属性名称。\r\n   * @return 唯一ID。\r\n   */\r\n    propertyNameToID(name: string): number {\r\n        if (this._propertyNameMap[name] != null) {\r\n            return this._propertyNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._propertyNameMap[name] = id;\r\n            this._propertyNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    propertyIDToName(id: number): string {\r\n        return this._propertyNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    uploadUniforms(shader: GLShaderInstance, commandEncoder: CommandEncoder, shaderData: ShaderData, uploadUnTexture: boolean): number {\r\n        shaderData.applyUBO && shaderData.applyUBOData();\r\n        var data: any = shaderData._data;\r\n        var shaderUniform: any[] = commandEncoder.getArrayData();\r\n        var shaderCall: number = 0;\r\n        for (var i: number = 0, n: number = shaderUniform.length; i < n; i++) {\r\n            var one: any/*ShaderVariable*/ = shaderUniform[i];\r\n            if (uploadUnTexture || one.textureID !== -1) {//如uniform为纹理切换Shader时需要重新上传\r\n                var value: any = data[one.dataOffset];\r\n                if (value != null)\r\n                    shaderCall += one.fun.call(one.caller, one, value);\r\n            }\r\n        }\r\n        return shaderCall;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    uploadCustomUniforms(shader: GLShaderInstance, custom: any[], index: number, data: any): number {\r\n        shader.bind();\r\n        var shaderCall: number = 0;\r\n        var one: ShaderVariable = custom[index];\r\n        if (one && data != null)\r\n            shaderCall += one.fun.call(one.caller, one, data);\r\n        return shaderCall;\r\n    }\r\n\r\n    createRenderStateComand(): RenderStateCommand {\r\n        return new RenderStateCommand();\r\n    }\r\n\r\n    unbindVertexState(): void {\r\n        if (this.isWebGL2)\r\n            (<WebGL2RenderingContext>this._context).bindVertexArray(null);\r\n        else\r\n            this._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object).bindVertexArrayOES(null);\r\n        this._GLBindVertexArray = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\n/**\r\n * 阿拉伯文的转码。把unicode的阿拉伯文字母编码转成他们的老的能描述不同写法的编码。\r\n *  这个是从GitHub上 Javascript-Arabic-Reshaper 项目转来的\r\n * https://github.com/louy/Javascript-Arabic-Reshaper/blob/master/src/index.js\r\n */\r\n/**\r\n\t * Javascript Arabic Reshaper by Louy Alakkad\r\n\t * https://github.com/louy/Javascript-Arabic-Reshaper\r\n\t * Based on (http://git.io/vsnAd)\r\n\t */\r\nexport class ArabicReshaper {\r\n    private static charsMap: any[] = [[0x0621, 0xFE80, null, null, null], /* HAMZA */\r\n    [0x0622, 0xFE81, null, null, 0xFE82], /* ALEF_MADDA */\r\n    [0x0623, 0xFE83, null, null, 0xFE84], /* ALEF_HAMZA_ABOVE */\r\n    [0x0624, 0xFE85, null, null, 0xFE86], /* WAW_HAMZA */\r\n    [0x0625, 0xFE87, null, null, 0xFE88], /* ALEF_HAMZA_BELOW */\r\n    [0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A], /* YEH_HAMZA */\r\n    [0x0627, 0xFE8D, null, null, 0xFE8E], /* ALEF */\r\n    [0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90], /* BEH */\r\n    [0x0629, 0xFE93, null, null, 0xFE94], /* TEH_MARBUTA */\r\n    [0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96], /* TEH */\r\n    [0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A], /* THEH */\r\n    [0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E], /* JEEM */\r\n    [0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2], /* HAH */\r\n    [0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6], /* KHAH */\r\n    [0x062F, 0xFEA9, null, null, 0xFEAA], /* DAL */\r\n    [0x0630, 0xFEAB, null, null, 0xFEAC], /* THAL */\r\n    [0x0631, 0xFEAD, null, null, 0xFEAE], /* REH */\r\n    [0x0632, 0xFEAF, null, null, 0xFEB0], /* ZAIN */\r\n    [0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2], /* SEEN */\r\n    [0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6], /* SHEEN */\r\n    [0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA], /* SAD */\r\n    [0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE], /* DAD */\r\n    [0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2], /* TAH */\r\n    [0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6], /* ZAH */\r\n    [0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA], /* AIN */\r\n    [0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE], /* GHAIN */\r\n    [0x0640, 0x0640, 0x0640, 0x0640, 0x0640], /* TATWEEL */\r\n    [0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2], /* FEH */\r\n    [0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6], /* QAF */\r\n    [0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA], /* KAF */\r\n    [0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE], /* LAM */\r\n    [0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2], /* MEEM */\r\n    [0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6], /* NOON */\r\n    [0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA], /* HEH */\r\n    [0x0648, 0xFEED, null, null, 0xFEEE], /* WAW */\r\n    [0x0649, 0xFEEF, null, null, 0xFEF0], /* ALEF_MAKSURA */\r\n    [0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2], /* YEH */\r\n    [0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57], /* PEH */\r\n    [0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFBFD], /* Farsi Yeh */\r\n    [0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B], /* Tcheh */\r\n    [0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F], /* Keheh */\r\n    [0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93], /* Gaf */\r\n    [0x0698, 0xFB8A, null, null, 0xFB8B]];\r\n    private static combCharsMap: any[] = [[[0x0644, 0x0622], 0xFEF5, null, null, 0xFEF6], /* LAM_ALEF_MADDA */\r\n    [[0x0644, 0x0623], 0xFEF7, null, null, 0xFEF8], /* LAM_ALEF_HAMZA_ABOVE */\r\n    [[0x0644, 0x0625], 0xFEF9, null, null, 0xFEFA], /* LAM_ALEF_HAMZA_BELOW */\r\n    [[0x0644, 0x0627], 0xFEFB, null, null, 0xFEFC]];\r\n    private static transChars: any[] = [0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\r\n        0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\r\n        0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\r\n        0x0614, /* ARABIC SIGN TAKHALLUS */\r\n        0x0615, /* ARABIC SMALL HIGH TAH */\r\n        0x064B, /* ARABIC FATHATAN */\r\n        0x064C, /* ARABIC DAMMATAN */\r\n        0x064D, /* ARABIC KASRATAN */\r\n        0x064E, /* ARABIC FATHA */\r\n        0x064F, /* ARABIC DAMMA */\r\n        0x0650, /* ARABIC KASRA */\r\n        0x0651, /* ARABIC SHADDA */\r\n        0x0652, /* ARABIC SUKUN */\r\n        0x0653, /* ARABIC MADDAH ABOVE */\r\n        0x0654, /* ARABIC HAMZA ABOVE */\r\n        0x0655, /* ARABIC HAMZA BELOW */\r\n        0x0656, /* ARABIC SUBSCRIPT ALEF */\r\n        0x0657, /* ARABIC INVERTED DAMMA */\r\n        0x0658, /* ARABIC MARK NOON GHUNNA */\r\n        0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\r\n        0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\r\n        0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\r\n        0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\r\n        0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\r\n        0x06DA, /* ARABIC SMALL HIGH JEEM */\r\n        0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\r\n        0x06DC, /* ARABIC SMALL HIGH SEEN */\r\n        0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\r\n        0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\r\n        0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\r\n        0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\r\n        0x06E3, /* ARABIC SMALL LOW SEEN */\r\n        0x06E4, /* ARABIC SMALL HIGH MADDA */\r\n        0x06E7, /* ARABIC SMALL HIGH YEH */\r\n        0x06E8, /* ARABIC SMALL HIGH NOON */\r\n        0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\r\n        0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\r\n        0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\r\n        0x06ED];\r\n\r\n\r\n    //TODO:coverage\r\n    characterMapContains(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCharRep(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return ArabicReshaper.charsMap[i];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCombCharRep(c1:number, c2:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.combCharsMap.length; ++i) {\r\n            if (ArabicReshaper.combCharsMap[i][0][0] === c1 && ArabicReshaper.combCharsMap[i][0][1] === c2) {\r\n                return ArabicReshaper.combCharsMap[i];\r\n            }\r\n        }\r\n\r\n        // We should never reach here...\r\n        // istanbul ignore next\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    isTransparent(c:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.transChars.length; ++i) {\r\n            if (ArabicReshaper.transChars[i] === c) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getOriginalCharsFromCode(code:number): string {\r\n        var j: number;\r\n\r\n        for (j = 0; j < ArabicReshaper.charsMap.length; ++j) {\r\n            if (ArabicReshaper.charsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.charsMap[j][0]);\r\n            }\r\n        }\r\n\r\n        for (j = 0; j < ArabicReshaper.combCharsMap.length; ++j) {\r\n            if (ArabicReshaper.combCharsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.combCharsMap[j][0][0]) +\r\n                    String.fromCharCode(ArabicReshaper.combCharsMap[j][0][1]);\r\n            }\r\n        }\r\n\r\n        return String.fromCharCode(code);\r\n    }\r\n\r\n    /**\r\n     * 转换函数。从normal转到presentB\r\n     * 这个返回的字符串可以直接按照从左到右的顺序渲染。\r\n     * 例如\r\n     * graphics.fillText(convertArabic('سلام'),....)\r\n     * \r\n    */\r\n    //TODO:coverage\r\n    convertArabic(normal:any): string {\r\n        var crep: any,\r\n            combcrep: any,\r\n            shaped: string = '';\r\n\r\n        for (var i: number = 0; i < normal.length; ++i) {\r\n            var current: number = normal.charCodeAt(i);\r\n            if (this.characterMapContains(current)) {\r\n                var prev: any = null,\r\n                    next: any = null,\r\n                    prevID: number = i - 1,\r\n                    nextID: number = i + 1;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are BEFORE the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; prevID >= 0; --prevID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(prevID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                prev = (prevID >= 0) ? normal.charCodeAt(prevID) : null;\r\n                crep = prev ? this.getCharRep(prev) : false;\r\n                if (!crep || crep[2] == null && crep[3] == null) {\r\n                    prev = null; // prev character doesn’t connect with its successor\r\n                }\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are AFTER the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; nextID < normal.length; ++nextID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(nextID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                next = (nextID < normal.length) ? normal.charCodeAt(nextID) : null;\r\n                crep = next ? this.getCharRep(next) : false;\r\n                if (!crep || crep[3] == null && crep[4] == null) {\r\n                    next = null; // next character doesn’t connect with its predecessor\r\n                }\r\n\r\n                /* Combinations */\r\n                if (current === 0x0644 && next != null &&\r\n                    (next === 0x0622 || next === 0x0623 || next === 0x0625 || next === 0x0627)) {\r\n                    combcrep = this.getCombCharRep(current, next);\r\n                    if (prev != null) {\r\n                        shaped += String.fromCharCode(combcrep[4]);\r\n                    } else {\r\n                        shaped += String.fromCharCode(combcrep[1]);\r\n                    }\r\n\r\n                    ++i;\r\n                    continue;\r\n                }\r\n\r\n                crep = this.getCharRep(current);\r\n\r\n                /* Medial */\r\n                if (prev != null && next != null && crep[3] != null) {\r\n                    shaped += String.fromCharCode(crep[3]);\r\n                    continue;\r\n                } else /* Final */\r\n                    if (prev != null && crep[4] != null) {\r\n                        shaped += String.fromCharCode(crep[4]);\r\n                        continue;\r\n                    } else /* Initial */\r\n                        if (next != null && crep[2] != null) {\r\n                            shaped += String.fromCharCode(crep[2]);\r\n                            continue;\r\n                        } else /* Isolated */ {\r\n                            shaped += String.fromCharCode(crep[1]);\r\n                        }\r\n            } else {\r\n                shaped += String.fromCharCode(current);\r\n            }\r\n        }\r\n\r\n        return shaped;\r\n    }/*;*/\r\n\r\n    // convert from Arabic Presentation Forms B\r\n    //TODO:coverage\r\n    convertArabicBack(apfb:any): string {\r\n        var toReturn: string = '',\r\n            selectedChar: number;\r\n\r\n        var i: number;\r\n\r\n        for (i = 0; i < apfb.length; ++i) {\r\n            selectedChar = apfb.charCodeAt(i);\r\n\r\n            toReturn += this.getOriginalCharsFromCode(selectedChar);\r\n        }\r\n        return toReturn;\r\n    }\r\n}\r\n\r\n\r\n","export class MatirxArray {\r\n\r\n    /**\r\n     * 4*4矩阵数组相乘。\r\n     * o=a*b;\r\n     * @param\ta 4*4矩阵数组。\r\n     * @param\tb 4*4矩阵数组。\r\n     * @param\to 4*4矩阵数组。\r\n     */\r\n    //TODO:coverage\r\n    static ArrayMul(a: any[], b: any[], o: any[]): void {\r\n        if (!a) {\r\n            MatirxArray.copyArray(b, o);\r\n            return;\r\n        }\r\n\r\n        if (!b) {\r\n            MatirxArray.copyArray(a, o);\r\n            return;\r\n        }\r\n\r\n        var ai0: number, ai1: number, ai2: number, ai3: number;\r\n        for (var i: number = 0; i < 4; i++) {\r\n            ai0 = a[i];\r\n            ai1 = a[i + 4];\r\n            ai2 = a[i + 8];\r\n            ai3 = a[i + 12];\r\n            o[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\r\n            o[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\r\n            o[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\r\n            o[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static copyArray(f: any[], t: any[]): void {\r\n        if (!f) return;\r\n        if (!t) return;\r\n        for (var i: number = 0; i < f.length; i++) {\r\n            t[i] = f[i];\r\n        }\r\n    }\r\n}\r\n\r\n","export class AnimatorState2DScript {\r\n    /**\r\n     * 动画状态开始时执行。\r\n     */\r\n    onStateEnter(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态更新时执行。\r\n     */\r\n    onStateUpdate(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态退出时执行。\r\n     */\r\n    onStateExit(): void {\r\n\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Ease } from \"../utils/Ease\";\r\nimport { Handler } from \"../utils/Handler\";\r\n\r\n/**\r\n * @Script {name:ButtonEffect}\r\n * @author ww\r\n */\r\nexport class ButtonEffect {\r\n\r\n    private _tar: Sprite;\r\n    private _curState: number = 0;\r\n    private _curTween: Tween;\r\n    /**\r\n     * effectScale\r\n     * @prop {name:effectScale,type:number, tips:\"缩放值\",default:\"1.5\"}\r\n     */\r\n    effectScale: number = 1.5;\r\n    /**\r\n     * tweenTime\r\n     * @prop {name:tweenTime,type:number, tips:\"缓动时长\",default:\"300\"}\r\n     */\r\n    tweenTime: number = 300;\r\n    /**\r\n     * effectEase\r\n     * @prop {name:effectEase,type:ease, tips:\"效果缓动类型\"}\r\n     */\r\n    effectEase: string;\r\n    /**\r\n     * backEase\r\n     * @prop {name:backEase,type:ease, tips:\"恢复缓动类型\"}\r\n     */\r\n    backEase: string;\r\n\r\n    /**\r\n     * 设置控制对象 \r\n     * @param tar\r\n     */\r\n    set target(tar: Sprite) {\r\n        this._tar = tar;\r\n        tar.on(Event.MOUSE_DOWN, this, this.toChangedState);\r\n        tar.on(Event.MOUSE_UP, this, this.toInitState);\r\n        tar.on(Event.MOUSE_OUT, this, this.toInitState);\r\n    }\r\n\r\n    private toChangedState(): void {\r\n        this._curState = 1;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curTween = Tween.to(this._tar, { scaleX: this.effectScale, scaleY: this.effectScale }, this.tweenTime, (Ease as any)[this.effectEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n\r\n    private toInitState(): void {\r\n        if (this._curState == 2) return;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curState = 2;\r\n        this._curTween = Tween.to(this._tar, { scaleX: 1, scaleY: 1 }, this.tweenTime, (Ease as any)[this.backEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n    private tweenComplete(): void {\r\n        this._curState = 0;\r\n        this._curTween = null;\r\n    }\r\n}\r\n\r\n\r\n","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * 淡入效果\r\n */\r\nexport class FadeIn extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 0;\r\n        return Tween.to(this.target, { alpha: 1 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * 淡出效果\r\n */\r\nexport class FadeOut extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 1;\r\n        return Tween.to(this.target, { alpha: 0 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n\r\nexport class NativeGLRender2DContext extends NativeGLObject implements IRender2DContext {\r\n\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n    }\r\n\r\n    activeTexture(textureID: number): void {\r\n\r\n    }\r\n\r\n    bindTexture(target: number, texture: WebGLTexture): void {\r\n    }\r\n\r\n    bindUseProgram(webglProgram: any):boolean {\r\n        return true;\r\n    }\r\n\r\n}","import { NativeRenderStateCommand } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand\";\r\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { IRenderEngineFactory } from \"../../../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { RenderState } from \"../../../RenderEngine/RenderShader/RenderState\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { NativeCommandUniformMap } from \"./NativeCommandUniformMap\";\r\nimport { NativeRenderState } from \"./NativeRenderState\";\r\nimport { NativeShaderData } from \"./NativeShaderData\";\r\nimport { NativeUniformBufferObject } from \"./NativeUniformBufferObject\";\r\n\r\n\r\nexport class NativeGLRenderEngineFactory implements IRenderEngineFactory {\r\n\r\n\r\n\r\n    createShaderData(): ShaderData {\r\n        return new NativeShaderData();\r\n    }\r\n\r\n    createShaderInstance(shaderProcessInfo:ShaderProcessInfo, shaderPass: ShaderCompileDefineBase): ShaderInstance {\r\n        //return new NativeShaderInstance(vs, ps, attributeMap, shaderPass) as unknown as ShaderInstance;\r\n        //TODO\r\n        return null;\r\n    }\r\n\r\n    createRenderStateComand(): NativeRenderStateCommand {\r\n        return new NativeRenderStateCommand();\r\n    }\r\n    createRenderState(): RenderState {\r\n        return new NativeRenderState() as unknown as RenderState;\r\n    }\r\n\r\n    createUniformBufferObject(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean): UniformBufferObject {\r\n        return new NativeUniformBufferObject(glPointer, name, bufferUsage, byteLength, isSingle);\r\n    }\r\n\r\n    createGlobalUniformMap(blockName: string): NativeCommandUniformMap{\r\n        return new NativeCommandUniformMap((window as any).conchCommandUniformMap.createGlobalUniformMap(blockName), blockName);\r\n    }\r\n\r\n    createEngine(config:any,canvas:any){\r\n        //TODO:\r\n        return Promise.resolve();\r\n    }\r\n}","import { CommandEncoder } from \"../../../layagl/CommandEncoder\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { NativeGL2TextureContext } from \"./NativeGL2TextureContext\";\r\nimport { WebGLMode } from \"../WebGLEngine/GLEnum/WebGLMode\";\r\nimport { NativeGLRender2DContext } from \"./NativeGLRender2DContext\";\r\nimport { NativeGLTextureContext } from \"./NativeGLTextureContext\";\r\nimport { NativeGLVertexState } from \"./NativeGLVertexState\";\r\nimport { WebGlConfig } from \"../WebGLEngine/WebGLConfig\";\r\nimport { NativeGLRenderDrawContext } from \"./NativeGLRenderDrawContext\";\r\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { NativeRenderStateCommand } from \"./NativeRenderStateCommand\";\r\nimport { IRenderEngineFactory } from \"../../RenderInterface/IRenderEngineFactory\";\r\n\r\n\r\n/**\r\n * @private 封装Webgl\r\n */\r\nexport class NativeWebGLEngine implements IRenderEngine {\r\n\r\n  _context: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n  private _config: WebGlConfig;\r\n\r\n  /**@internal ShaderDebugMode*/\r\n  _isShaderDebugMode: boolean = true;\r\n\r\n  private _GLTextureContext: NativeGLTextureContext;\r\n  //Gl Draw\r\n  private _GLRenderDrawContext: NativeGLRenderDrawContext;\r\n\r\n  private _GL2DRenderContext: NativeGLRender2DContext;\r\n\r\n  /**@internal */\r\n  _renderOBJCreateContext:IRenderEngineFactory;\r\n\r\n  _nativeObj: any;\r\n\r\n  /**@internal */\r\n  _IDCounter: number;\r\n\r\n  constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\r\n    this._nativeObj = new (window as any).conchWebGLEngine(webglMode);\r\n  }\r\n  \r\n  createRenderStateComand(): RenderStateCommand {\r\n    return new NativeRenderStateCommand();\r\n  }\r\n  getUBOPointer(name: string): number {\r\n    return this._nativeObj.getUBOPointer(name);\r\n  }\r\n\r\n  _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\r\n    this._nativeObj.addStatisticsInfo(info, value);\r\n  }\r\n  /**\r\n * 清除\r\n * @internal\r\n * @param info \r\n */\r\n  clearStatisticsInfo(info: RenderStatisticsInfo) {\r\n    this._nativeObj.clearStatisticsInfo(info);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   * @param info \r\n   * @returns \r\n   */\r\n  getStatisticsInfo(info: RenderStatisticsInfo): number {\r\n    return this._nativeObj.getStatisticsInfo(info);\r\n  }\r\n  /**\r\n   * GL Context\r\n   * @member {WebGLRenderingContext}\r\n   */\r\n  get gl() {\r\n    return this._context;\r\n  }\r\n\r\n  get isWebGL2() {\r\n    return this._nativeObj.isWebGL2;\r\n  }\r\n\r\n  get webglConfig() {\r\n    return this._config;\r\n  }\r\n\r\n  /**\r\n   * create GL\r\n   * @param canvas \r\n   */\r\n  initRenderEngine(canvas: any) {\r\n    this._nativeObj.initRenderEngine();\r\n    this._GLRenderDrawContext = new NativeGLRenderDrawContext(this);\r\n\r\n    if (this.isWebGL2) {\r\n      this._GLTextureContext = new NativeGL2TextureContext(this, new (window as any).conchGL2TextureContext(this._nativeObj));\r\n    }\r\n    else {\r\n      this._GLTextureContext = new NativeGLTextureContext(this, new (window as any).conchGLTextureContext(this._nativeObj));\r\n    }\r\n  }\r\n\r\n  bindTexture(texture: BaseTexture) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  applyRenderStateCMD(cmd: RenderStateCommand): void {\r\n    this._nativeObj.applyRenderStateCommand((cmd as any)._nativeObj);\r\n  }\r\n\r\n  //get capable of webgl\r\n  getCapable(capatableType: RenderCapable): boolean {\r\n    return this._nativeObj.getCapable(capatableType);\r\n  }\r\n\r\n  viewport(x: number, y: number, width: number, height: number): void {\r\n    this._nativeObj.viewport(x, y, width, height);\r\n  }\r\n\r\n  scissor(x: number, y: number, width: number, height: number) {\r\n    this._nativeObj.scissor(x, y, width, height);\r\n  }\r\n\r\n  scissorTest(value: boolean) {\r\n    this._nativeObj.scissorTest(value);\r\n  }\r\n\r\n  clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\r\n    if (clearcolor)\r\n      this._nativeObj.clearRenderTexture(clearFlag, true, clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a, clearDepth);\r\n    else\r\n      this._nativeObj.clearRenderTexture(clearFlag, false, Color.BLACK.r, Color.BLACK.g, Color.BLACK.b, Color.BLACK.a, clearDepth);\r\n  }\r\n\r\n  copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\r\n    this._nativeObj.copySubFrameBuffertoTex(texture._texture, level, xoffset, yoffset, x, y, width, height);\r\n  }\r\n\r\n  colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n    this._nativeObj.colorMask(r, g, b, a);\r\n  }\r\n\r\n  getParams(params: RenderParams): number {\r\n    return this._nativeObj.getParams(params);\r\n  }\r\n\r\n\r\n  createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\r\n    //TODO SourceManager\r\n    return new (window as any).conchGLBuffer(this._nativeObj, targetType, bufferUsageType);\r\n  }\r\n\r\n  createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  createVertexState(): IRenderVertexState {\r\n    return new NativeGLVertexState(this);\r\n  }\r\n\r\n  getTextureContext(): ITextureContext {\r\n    return this._GLTextureContext;\r\n  }\r\n\r\n  //TODO 先写完测试，这种封装过于死板\r\n  getDrawContext(): IRenderDrawContext {\r\n    return this._GLRenderDrawContext;\r\n  }\r\n\r\n  get2DRenderContext(): IRender2DContext {\r\n    return this._GL2DRenderContext;\r\n  }\r\n\r\n  getCreateRenderOBJContext(): IRenderEngineFactory {\r\n    return this._renderOBJCreateContext;\r\n  }\r\n\r\n  propertyNameToID(name: string): number {\r\n    return this._nativeObj.propertyNameToID(name);\r\n  }\r\n\r\n  propertyIDToName(id: number): string {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  uploadUniforms(shader: IRenderShaderInstance, commandEncoder: CommandEncoder, shaderData: any, uploadUnTexture: boolean): number {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  uploadCustomUniforms(shader: IRenderShaderInstance, custom: any[], index: number, data: any): number {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  unbindVertexState(): void{\r\n    this._nativeObj.unbindVertexState && this._nativeObj.unbindVertexState();\r\n  }\r\n}\r\n\r\n\r\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\n\r\n\r\n/**\r\n * <code>SpotLight</code> 类用于创建RenderTextureCube。\r\n */\r\nexport class RenderTextureCube extends RenderTexture {\r\n\r\n    /**\r\n     * +x, -x, +y, -y, +z, -z\r\n     */\r\n    faceIndex: number;\r\n\r\n    /**\r\n     * 实例化一个RendertextureCube\r\n     * @param size 像素\r\n     * @param colorFormat 颜色格式\r\n     * @param depthFormat 深度格式\r\n     * @param generateMipmap 是否生成mipmap\r\n     * @param multiSamples \r\n     */\r\n    constructor(size: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number) {\r\n        super(size, size, colorFormat, depthFormat, generateMipmap, multiSamples);\r\n        this.faceIndex = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _createRenderTarget(): void {\r\n        this._dimension = TextureDimension.Cube;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetCubeInternal(this.width, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        this._texture = this._renderTarget._textures[0];\r\n    }\r\n\r\n    _start() {\r\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n        if (RenderTexture._currentActive != this) {\r\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n            RenderTexture._currentActive = this;\r\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget, this.faceIndex);\r\n        }\r\n    }\r\n\r\n}","import { SoundChannel } from \"./SoundChannel\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * <code>Sound</code> 类是用来播放控制声音的类。\r\n * 引擎默认有两套声音方案，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n */\r\nexport class Sound extends EventDispatcher {\r\n\r\n    /**\r\n     * 加载声音。\r\n     * @param url 地址。\r\n     */\r\n    load(url: string): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 播放声音。\r\n     * @param startTime 开始时间,单位秒\r\n     * @param loops 循环次数,0表示一直循环\r\n     * @return 声道 SoundChannel 对象。\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源。\r\n     */\r\n    dispose(): void {\r\n\r\n    }\r\n}\r\n\r\n","/**\r\n * @private\r\n * <code>StringKey</code> 类用于存取字符串对应的数字。\r\n */\r\nexport class StringKey {\r\n\r\n    private _strsToID: any = {};\r\n    private _idToStrs: any[] = [];\r\n    private _length: number = 0;\r\n    //TODO:\r\n\r\n    /**\r\n     * 添加一个字符。\r\n     * @param\tstr 字符，将作为key 存储相应生成的数字。\r\n     * @return 此字符对应的数字。\r\n     */\r\n    //TODO:coverage\r\n    add(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        if (index != null) return index;\r\n\r\n        this._idToStrs[this._length] = str;\r\n        return this._strsToID[str] = this._length++;\r\n    }\r\n\r\n    /**\r\n     * 获取指定字符对应的ID。\r\n     * @param\tstr 字符。\r\n     * @return 此字符对应的ID。\r\n     */\r\n    //TODO:coverage\r\n    getID(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        return index == null ? -1 : index;\r\n    }\r\n\r\n    /**\r\n     * 根据指定ID获取对应字符。\r\n     * @param  id ID。\r\n     * @return 此id对应的字符。\r\n     */\r\n    //TODO:coverage\r\n    getName(id: number): string {\r\n        var str: any = this._idToStrs[id];\r\n        return str == null ? undefined : str;\r\n    }\r\n}\r\n\r\n","import { UniformBufferParamsType, UnifromBufferData } from \"./UniformBufferData\";\r\nexport class SubUniformBufferData extends UnifromBufferData{\r\n    \r\n    /**@internal */\r\n    _offset:number;\r\n\r\n    /**@interanl */\r\n    _isInPool:boolean = false;\r\n\r\n    /**@interanl */\r\n    _needUpdate:boolean = false;\r\n\r\n    /**@internal */\r\n    _realByte = 0;\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>,bufferOffset:number) {\r\n        super(uniformParamsStat);\r\n        this._offset = bufferOffset;\r\n        this._realByte = this._bytelength;\r\n        this._bytelength =Math.ceil(this._bytelength/256)*256;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class System {\r\n    /**\r\n     * 替换指定名称的定义。用来动态更改类的定义。\r\n     * @param\tname 属性名。\r\n     * @param\tclassObj 属性值。\r\n     */\r\n    //TODO:coverage\r\n    static changeDefinition(name: string, classObj: any): void {\r\n        (window as any).Laya[name] = classObj;\r\n        var str: string = name + \"=classObj\";\r\n        window['eval'](str);\r\n    }\r\n}\r\n\r\n","import { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * 2D 纹理 数组\r\n */\r\nexport class Texture2DArray extends BaseTexture {\r\n\r\n    depth: number;\r\n\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Texture2DArray;\r\n        this._gammaSpace = sRGB;\r\n\r\n        this.depth = depth;\r\n\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n\r\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 设置Image数据\r\n     * @param sources Image 数组\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setImageData(sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DImageData(texture, sources, this.depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素数据\r\n     * @param source 像素数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DPixelsData(texture, source, this.depth, premultiplyAlpha, invertY)\r\n    }\r\n\r\n    /**\r\n     * 更新像素数据\r\n     * @param xOffset x 偏移\r\n     * @param yOffset y 偏移\r\n     * @param zOffset z 偏移\r\n     * @param width 更新数据宽度\r\n     * @param height 更新数据高度\r\n     * @param depth 更新数据深度层级\r\n     * @param pixels 像素数据\r\n     * @param mipmapLevel mipmap 等级\r\n     * @param generateMipmap 是否生成 mipmap\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转 Y 轴\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n}","import { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * 3D 纹理\r\n */\r\nexport class Texture3D extends BaseTexture {\r\n\r\n    depth: number;\r\n\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex3D;\r\n        this.depth = depth;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n\r\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\r\n    }\r\n\r\n    /**\r\n    * 设置像素数据\r\n    * @param source 像素数据\r\n    */\r\n    setPixelsData(source: ArrayBufferView) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DPixelsData(texture, source, this.depth, false, false)\r\n    }\r\n\r\n    /**\r\n     * 更新像素数据\r\n     * @param xOffset x 偏移\r\n     * @param yOffset y 偏移\r\n     * @param zOffset z 偏移\r\n     * @param width 更新数据宽度\r\n     * @param height 更新数据高度\r\n     * @param depth 更新数据深度层级\r\n     * @param pixels 像素数据\r\n     * @param mipmapLevel mipmap 等级\r\n     * @param generateMipmap 是否生成 mipmap\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, false, false);\r\n    }\r\n\r\n}","\r\nimport { Config } from \"../../../../Config\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\nimport { CommandUniformMap } from \"../../../RenderEngine/CommandUniformMap\";\r\nimport { WebGLMode } from \"../../../RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode\";\r\nimport { WebGlConfig } from \"../../../RenderEngine/RenderEngine/WebGLEngine/WebGLConfig\";\r\nimport { WebGLEngine } from \"../../../RenderEngine/RenderEngine/WebGLEngine/WebGLEngine\";\r\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { IRenderEngineFactory } from \"../../../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { RenderState } from \"../../../RenderEngine/RenderShader/RenderState\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../../webgl/utils/ShaderCompileDefineBase\";\r\n\r\nexport class WebGLRenderEngineFactory implements IRenderEngineFactory {\r\n\r\n    /**@internal */\r\n    private globalBlockMap: any = {};\r\n\r\n    createShaderData(): ShaderData {\r\n        return new ShaderData();\r\n    }  \r\n\r\n \r\n    createShaderInstance(shaderProcessInfo: ShaderProcessInfo, shaderPass: ShaderCompileDefineBase): ShaderInstance {\r\n        return new ShaderInstance(shaderProcessInfo, shaderPass);\r\n    }\r\n\r\n    \r\n    createRenderStateComand(): RenderStateCommand {\r\n        return new RenderStateCommand();\r\n    }\r\n\r\n    createRenderState(): RenderState {\r\n        return new RenderState();\r\n    }\r\n\r\n    createUniformBufferObject(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean): UniformBufferObject {\r\n        return new UniformBufferObject(glPointer, name, bufferUsage, byteLength, isSingle);\r\n    }\r\n\r\n    createGlobalUniformMap(blockName: string): CommandUniformMap {\r\n        let comMap = this.globalBlockMap[blockName];\r\n        if (!comMap)\r\n            comMap = this.globalBlockMap[blockName] = new CommandUniformMap(blockName);;\r\n        return comMap;\r\n    }\r\n\r\n    createEngine(config: any, canvas: any): Promise<void> {\r\n        let engine: WebGLEngine;\r\n        let glConfig: WebGlConfig = { stencil: Config.isStencil, alpha: Config.isAlpha, antialias: Config.isAntialias, premultipliedAlpha: Config.premultipliedAlpha, preserveDrawingBuffer: Config.preserveDrawingBuffer, depth: Config.isDepth, failIfMajorPerformanceCaveat: Config.isfailIfMajorPerformanceCaveat, powerPreference: Config.powerPreference };\r\n\r\n        //TODO  other engine\r\n        const webglMode: WebGLMode = Config.useWebGL2 ? WebGLMode.Auto : WebGLMode.WebGL1;\r\n        engine = new WebGLEngine(glConfig, webglMode);\r\n        engine.initRenderEngine(canvas._source);\r\n        var gl: WebGLRenderingContext = engine._context;//TODO 优化\r\n        if (Config.printWebglOrder)\r\n            this._replaceWebglcall(gl);\r\n\r\n        if (gl) {\r\n            new LayaGL();\r\n        }\r\n        LayaGL.renderEngine = engine;\r\n        LayaGL.textureContext = engine.getTextureContext();\r\n        LayaGL.renderDrawContext = engine.getDrawContext();\r\n        LayaGL.render2DContext = engine.get2DRenderContext();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**@private test function*/\r\n    private _replaceWebglcall(gl: any) {\r\n        var tempgl: { [key: string]: any } = {};\r\n        for (const key in gl) {\r\n            if (typeof gl[key] == \"function\" && key != \"getError\" && key != \"__SPECTOR_Origin_getError\" && key != \"__proto__\") {\r\n                tempgl[key] = gl[key];\r\n                gl[key] = function () {\r\n                    let arr: IArguments[] = [];\r\n                    for (let i = 0; i < arguments.length; i++) {\r\n                        arr.push(arguments[i]);\r\n                    }\r\n                    let result = tempgl[key].apply(gl, arr);\r\n\r\n                    //console.log(RenderInfo.loopCount + \":gl.\" + key + \":\" + arr);\r\n                    let err = gl.getError();\r\n                    if (err) {\r\n                        //console.log(err);\r\n                        debugger;\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n \r\n"],"mappings":"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"}