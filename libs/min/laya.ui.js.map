{"version":3,"names":["UIConfig","touchScrollEnable","mouseWheelEnable","showButtons","popupBgColor","popupBgAlpha","closeDialogOnSide","AutoBitmap","Graphics","constructor","this","_width","_height","uv","_color","destroy","super","_source","LayaEnv","isPlaying","off","_setChanged","_sizeGrid","_offset","sizeGrid","value","map","v","width","sourceWidth","height","sourceHeight","_stateNum","source","on","_setDrawGridCmd","setState","index","numStates","_stateIndex","color","_isChanged","ILaya","timer","callLater","changeSource","bitmap","_sp","stateIndex","stateNum","h","getCachedClip","cmd","sw","sh","DrawTextureCmd","create","Draw9GridTextureCmd","newcmd","_drawGridCmd","removeCmd","recover","addCmd","UIEvent","SHOW_TIP","HIDE_TIP","UIUtils","static","arr","str","type","temp","concat","a","split","i","n","Math","min","length","Utils","toHexColor","target","isGray","filters","indexOf","grayFilter","push","splice","_funMap","WeakObject","fun","get","replace","window","Laya","_runScript","set","ColorFilter","UIComponent","Sprite","createChildren","_widget","Widget","EMPTY","preinitialize","initialize","destroyChild","_dataSource","_toolTip","get_width","_isWidthSet","measureWidth","max","commitMeasure","numChildren","comp","getChildAt","_visible","_x","scaleX","get_height","_isHeightSet","measureHeight","_y","scaleY","dataSource","get_dataSource","set_dataSource","prop","top","get_top","set_top","_getWidget","bottom","get_bottom","set_bottom","left","right","centerX","centerY","_shouldRefreshLayout","_sizeChanged","event","Event","RESIZE","resetLayout","toolTip","MOUSE_OVER","onMouseOver","MOUSE_OUT","onMouseOut","e","stage","gray","_gray","disabled","_disabled","SerializeUtil","isDeserializing","mouseEnabled","addComponent","onCompResize","_childChanged","child","freshLayout","Box","name","getChildByName","Function","bgColor","_bgColor","graphics","clear","drawRect","Styles","ScrollType","defaultSizeGrid","labelColor","labelPadding","inputLabelPadding","buttonStateNum","buttonLabelColors","comboBoxItemColors","scrollBarMinNum","scrollBarDelayTime","Button","skin","label","_state","_autoSize","_stateChanged","_labelColors","_text","_clickHandler","_strokeColors","setGraphics","createText","Text","overflow","HIDDEN","align","valign","hideFlags","HideFlags","HideAndDontSave","_mouseState","_setBit","NodeFlags","HAS_MOUSE","onMouse","MOUSE_DOWN","MOUSE_UP","CLICK","toggle","_selected","selected","run","state","stateMap","_skin","_setSkin","url","_skinBaseUrl","URL","formatURL","tex","Loader","getRes","_skinLoaded","Promise","resolve","loader","load","IMAGE","then","_graphics","changeClips","_setStateChanged","LOADED","parseInt","img","x","console","log","runCallLater","changeState","text","parent","addChild","CHANGE","strokeColor","labelColors","join","fillArray","String","strokeColors","padding","Number","labelSize","fontSize","labelStroke","stroke","labelStrokeColor","labelBold","bold","labelFont","font","labelAlign","labelVAlign","clickHandler","_setWidth","_setHeight","iconOffset","mouseup","mouseover","mousedown","mouseout","CheckBox","Boolean","Clip","clipX","clipY","_clipX","_clipY","_clipWidth","_clipHeight","_interval","_index","_toIndex","_sources","_onDisplay","_isPlaying","_getBit","DISPLAYED_INSTAGE","play","stop","_autoPlay","_setClipChanged","clipWidth","clipHeight","changeClip","_clipChanged","_destroyed","loadComplete","Handler","w","ceil","j","sources","group","_group","setGroup","total","autoPlay","interval","from","to","loop","_loop","DISPLAY","UNDISPLAY","COMPLETE","ColorPicker","_gridSize","_borderColor","_inputColor","_inputBgColor","_colors","_selectedColor","removeColorBox","_colorPanel","_colorButton","_colorTiles","_colorBlock","_colorInput","changeHandler","size","Input","onColorButtonClick","pos","onColorInputChange","KEY_DOWN","onColorFieldKeyDown","MOUSE_MOVE","onColorTilesMouseMove","onColorTilesClick","onPanelMouseDown","stopPropagation","changePanel","_panelChanged","g","drawBlock","borderColor","mainColors","strColor","toColor","y","close","open","p","localToGlobal","Point","px","py","zOrder","removeSelf","keyCode","selectedColor","getColorByMouse","focus","point","getMousePoint","floor","showColor","drawLine","changeColor","runWith","once","_setPanelChanged","inputColor","inputBgColor","Label","_fitContent","_tf","_parseEscapeChars","_onPostLayout","textWidth","textHeight","_fitFlag","wordWrap","italic","leading","html","ubb","maxWidth","fitContent","textField","set_width","set_height","underline","underlineColor","ignoreLang","templateVars","setVar","Image","dispose","clearRes","sk","repaint","_useSourceSize","useSourceSize","Slider","isVertical","showLabel","_showProgress","_max","_min","_tick","_value","_bg","_bar","_progress","addChildAt","onBarMouseDown","allowClickBack","_globalSacle","setTo","globalScaleX","globalScaleY","_maxMove","_tx","mouseX","_ty","mouseY","mouseMove","mouseUp","showValueText","hideValueText","sendChangeEvent","CHANGED","oldValue","pow","round","showProgress","AssetDb","inst","resolveURL","tasks","replaceFileExtension","all","setBarPoint","changeValue","setSlider","tick","num","_allowClickBack","onBgMouseDown","bar","ScrollBar","rollRatio","scaleBar","autoHide","elasticDistance","elasticBackTime","topMoveLimit","bottomMoveLimit","disableDrag","_scrollSize","_thumbPercent","_lastOffset","_checkElastic","_isElastic","_hide","_clickOnly","_showButtons","_touchScrollEnable","_mouseWheelEnable","stopScroll","upButton","downButton","slider","_offsets","onSliderChange","onButtonMouseDown","isUp","currentTarget","slide","startLoop","onStageMouseUp","frameLoop","changeScrollBar","visible","resetPositions","resetButtonPosition","setScroll","scrollSize","thumbPercent","_target","MOUSE_WHEEL","onTargetMouseWheel","onTargetMouseDown","hide","delta","isLockedFun","END","_lastPoint","tweenMove","Tween","clearTween","onStageMouseUp2","startDragForce","cancelDragOp","checkTriggers","isTweenMove","triggerDownDragLimit","triggerUpDragLimit","lastOffset","startTweenMoveForce","abs","_canvasTransform","getScaleY","getScaleX","alpha","START","moveValue","stopMoveLimit","Ease","sineOut","elasticOver","offset","dis","maxDistance","tarSpeed","backToNormal","_backToNormal","VScrollBar","HScrollBar","List","selectEnable","totalPage","disableStopScroll","_repeatX","_repeatY","_repeatX2","_repeatY2","_spaceX","_spaceY","_cells","_startIndex","_selectedIndex","_page","_isVertical","_cellSize","_cellOffset","_createdLine","_usedCache","_elasticEnabled","_scrollType","_preLen","_content","_scrollBar","_itemRender","_array","selectHandler","renderHandler","mouseHandler","cacheAs","onScrollStart","onScrollEnd","content","scrollType","None","scrollRect","Horizontal","_hScrollBarSkin","scrollBar","_setCellChanged","_vScrollBarSkin","vScrollBarSkin","Vertical","hScrollBarSkin","onScrollBarChange","Rectangle","itemRender","repeatX","repeatY","spaceX","spaceY","changeCells","_cellChanged","cell","_getOneCell","cellWidth","cellHeight","listWidth","listHeight","setContentSize","numX","numY","_createItems","array","renderItems","changeSelectStatus","item","createItem","cacheContent","startY","box","cacheBox","k","l","pop","addCell","_$type","_$prefab","HierarchyParser","parse","skinBaseUrl","LegacyUIParser","createComp","warn","watchMap","watcher","onCellMouse","RIGHT_CLICK","onAfterDeserialize","initItems","_afterInited","count","r","_isMoved","selectedIndex","changeCellState","selectBox","scrollValue","lineX","lineY","scrollLine","cellIndex","down","toIndex","shift","unshift","renderItem","_style","posCell","startIndex","selectedItem","selection","getCell","_bindData","hasListener","RENDER","data","_$bindData","ele","getBindFun","call","lineCount","updateArray","freshStart","page","Array","cells","elasticEnabled","refresh","getItem","changeItem","setItem","addItem","addItemAt","souce","deleteItem","scrollTo","tweenTo","time","complete","ComboBox","labels","_visibleNum","_itemSize","_labels","_defaultLabel","_itemColors","_itemPadding","removeList","_onStageMouseWheel","_button","_list","_itemHeight","_selectHandler","_createList","_scrollBarSkin","_setListEvent","list","onListDown","onlistItemMouse","onScrollBarDown","switchTo","_isOpen","_listChanged","changeList","labelWidth","_padding","itemPadding","props","_isCustomList","ROLL_OVER","isOpen","changeOpen","_itemChanged","_listHeight","changeSelected","selectedLabel","defaultLabel","visibleNum","itemHeight","itemColors","itemSize","TEMP","contains","scrollBarSkin","button","View","Scene","_watchMap","_scene","json","cacheRes","changeData","key","exe","uiMap","DialogManager","maskLayer","popupEffect","dialog","scale","_effectTween","backOut","doOpen","closeEffect","strongOut","doClose","popupEffectHandler","closeEffectHandler","_onResize","_closeOnSide","Dialog","setLockView","lockLayer","removeChildren","isPopupCenter","_centerDialog","pivotX","pivotY","closeOther","showEffect","_closeAll","_clearDialogEffect","isModal","HAS_ZORDER","_checkMask","OPEN","onOpened","_param","lock","isShowEffect","CLOSE","closeHandler","closeType","onClosed","autoDestroyAtClosed","closeAll","getDialogsByGroup","closeByGroup","manager","_dealDragArea","_onClick","_manager","dragTarget","dragArea","_dragArea","toString","_onMouseDown","startDrag","stopDrag","btn","CANCEL","SURE","NO","OK","YES","param","show","_open","popup","modal","isPopup","view","FontClip","sheet","_valueArr","_indexMap","_sheet","_direction","_align","_wordsW","_wordsH","line","direction","texture","isHorizontal","dX","sz","charAt","drawImage","resetLayoutX","resetLayoutY","LayoutBox","_space","onResize","_setItemChanged","removeChildAt","changeItems","space","sortItem","items","sort","b","HBox","maxHeight","TOP","MIDDLE","BOTTOM","NONE","HSlider","Panel","_vScrollBar","_hScrollBar","destroyChildren","_setScrollChanged","removeChild","_parent","_children","_setParent","beginIndex","endIndex","getChildIndex","changeScroll","_scrollChanged","contentW","contentWidth","contentH","contentHeight","vscroll","hscroll","vShow","hShow","showWidth","showHeight","createHScrollBar","createVScrollBar","Both","vScrollBar","hScrollBar","rect","start","ProgressBar","grid","isNaN","bg","Radio","onClick","obj","UIGroup","_items","autoLayout","display","preItem","delItem","newIndex","itemClick","setSelect","_setLabelChanged","hasHideFlag","startsWith","_labelStroke","_labelStrokeColor","_labelSize","_labelBold","_labelFont","_labelPadding","changeLabels","_labelChanged","_labelAlign","RadioGroup","ScaleBox","_oldW","_oldH","onEnable","onDisable","Tab","TextInput","INPUT","ENTER","BLUR","FOCUS","multiline","editable","select","restrict","pattern","prompt","promptColor","maxChars","setSelection","TextArea","onHBarChanged","onVBarChanged","scrollY","scrollX","maxScrollY","maxScrollX","TipManager","_tipBox","_tipText","tipTextColor","_defaultTipHandler","_showDefaultTip","_onStageShowTip","_onStageHideTip","_showTip","tipDelay","tip","apply","_onStageMouseMove","_onStageMouseDown","_showToStage","offsetX","offsetY","offX","offY","rec","getBounds","showDislayTip","tipBackColor","defaultTipHandler","Tree","_spaceLeft","_spaceBottom","_keepStatus","_renderHandler","onListChange","keepStatus","parseOpenStatus","getArray","spaceLeft","spaceBottom","getParentOpenStatus","getDepth","nodeParent","arrow","hasChild","__cellIndex","onArrowClick","folder","isDirectory","setItemState","fresh","xml","parseXml","isRoot","elements","childCount","list2","attributes","node","oldSource","newSource","newItem","m","oldItem","isSameParent","item1","item2","selectedPath","path","filter","result","getFilterSource","toLocaleLowerCase","toLowerCase","VBox","isSortItem","LEFT","CENTER","RIGHT","ViewStack","_setIndexHandler","setIndex","setItems","views","setIndexHandler","VSlider","OpenDataContextView","_fps","Texture","Texture2D","TextureFormat","R8G8B8A8","fps","activeInHierarchy","wx","sharedCanvas","_onLoop","_onActive","_onInActive","postMsg","canvas","setImageData","updateViewPort","sx","transform","sy","msg","getOpenDataContext","postMessage","StatUI","_show","_showToggle","Stat","AllShow","_view","createUI","showToggle","AllToggle","_toggleView","_toggleSprite","createToggleUI","update","strArray","isAverage","mode","units","_count","_txt","one","_checkBoxArray","sp","clientScaleX","clientScaleY","leftText","title","checkBoxTex","pixels","Uint8Array","R8G8B8","setPixelsData","TEXTURE2D","_testWord","toggles","cb","render","ctx","c","ClassUtils","regClass"],"sources":["../../src/layaAir/UIConfig.ts","../../src/layaAir/laya/ui/AutoBitmap.ts","../../src/layaAir/laya/ui/UIEvent.ts","../../src/layaAir/laya/ui/UIUtils.ts","../../src/layaAir/laya/ui/UIComponent.ts","../../src/layaAir/laya/ui/Box.ts","../../src/layaAir/laya/ui/Styles.ts","../../src/layaAir/laya/ui/Button.ts","../../src/layaAir/laya/ui/CheckBox.ts","../../src/layaAir/laya/ui/Clip.ts","../../src/layaAir/laya/ui/ColorPicker.ts","../../src/layaAir/laya/ui/Label.ts","../../src/layaAir/laya/ui/Image.ts","../../src/layaAir/laya/ui/Slider.ts","../../src/layaAir/laya/ui/ScrollBar.ts","../../src/layaAir/laya/ui/VScrollBar.ts","../../src/layaAir/laya/ui/HScrollBar.ts","../../src/layaAir/laya/ui/List.ts","../../src/layaAir/laya/ui/ComboBox.ts","../../src/layaAir/laya/ui/View.ts","../../src/layaAir/laya/ui/DialogManager.ts","../../src/layaAir/laya/ui/Dialog.ts","../../src/layaAir/laya/ui/FontClip.ts","../../src/layaAir/laya/ui/LayoutBox.ts","../../src/layaAir/laya/ui/HBox.ts","../../src/layaAir/laya/ui/HSlider.ts","../../src/layaAir/laya/ui/Panel.ts","../../src/layaAir/laya/ui/ProgressBar.ts","../../src/layaAir/laya/ui/Radio.ts","../../src/layaAir/laya/ui/UIGroup.ts","../../src/layaAir/laya/ui/RadioGroup.ts","../../src/layaAir/laya/ui/ScaleBox.ts","../../src/layaAir/laya/ui/Tab.ts","../../src/layaAir/laya/ui/TextInput.ts","../../src/layaAir/laya/ui/TextArea.ts","../../src/layaAir/laya/ui/TipManager.ts","../../src/layaAir/laya/ui/Tree.ts","../../src/layaAir/laya/ui/VBox.ts","../../src/layaAir/laya/ui/ViewStack.ts","../../src/layaAir/laya/ui/VSlider.ts","../../src/layaAir/laya/ui/OpenDataContextView.ts","../../src/layaAir/laya/ui/StatUI.ts","../../src/layaAir/laya/ui/ModuleDef.ts"],"sourcesContent":["/**全局配置*/\r\nexport class UIConfig {\r\n    /**是否开启触摸滚动（针对滚动条）*/\r\n    static touchScrollEnable: boolean = true;\r\n    /**是否开启滑轮滚动（针对滚动条）*/\r\n    static mouseWheelEnable: boolean = true;\r\n    /**是否显示滚动条按钮*/\r\n    static showButtons: boolean = true;\r\n    /**弹出框背景颜色*/\r\n    static popupBgColor: string = \"#000000\";\r\n    /**弹出框背景透明度*/\r\n    static popupBgAlpha: number = 0.5;\r\n    /**模式窗口点击边缘，是否关闭窗口，默认是关闭的*/\r\n    static closeDialogOnSide: boolean = true;\r\n}\r\n\r\n","import { Graphics } from \"../display/Graphics\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Draw9GridTextureCmd } from \"../display/cmd/Draw9GridTextureCmd\";\r\nimport { DrawTextureCmd } from \"../display/cmd/DrawTextureCmd\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>AutoBitmap</code> 类是用于表示位图图像或绘制图形的显示对象。\r\n * <p>封装了位置，宽高及九宫格的处理，供UI组件使用。</p>\r\n */\r\nexport class AutoBitmap extends Graphics {\r\n    /**@private 宽度*/\r\n    private _width: number = null;\r\n    /**@private 高度*/\r\n    private _height: number = null;\r\n    /**@private 源数据*/\r\n    private _source: Texture;\r\n    /**@private 网格数据*/\r\n    private _sizeGrid: number[];\r\n    /**@private */\r\n    protected _isChanged: boolean;\r\n\r\n    protected _stateIndex: number;\r\n    protected _stateNum: number;\r\n\r\n    /**@internal */\r\n    _offset: any[];\r\n    uv: number[] = null;\r\n\r\n    _color: string = \"#ffffff\";\r\n\r\n    /**@private */\r\n    private _drawGridCmd: Draw9GridTextureCmd | DrawTextureCmd;\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    destroy(): void {\r\n        super.destroy();\r\n        if (this._source && !LayaEnv.isPlaying)\r\n            this._source.off(\"reload\", this, this._setChanged);\r\n        this._source = null;\r\n        this._sizeGrid = null;\r\n        this._offset = null;\r\n    }\r\n\r\n    get sizeGrid(): number[] {\r\n        return this._sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: number[]) {\r\n        this._sizeGrid = value ? value.map((v) => { return +v; }) : null;\r\n        this._setChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示显示对象的宽度，以像素为单位。\r\n     */\r\n    get width(): number {\r\n        if (this._width != null) return this._width;\r\n        if (this._source) return this._source.sourceWidth;\r\n        return 0;\r\n    }\r\n\r\n    set width(value: number) {\r\n        if (this._width != value) {\r\n            this._width = value;\r\n            this._setChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示显示对象的高度，以像素为单位。\r\n     */\r\n    get height(): number {\r\n        if (this._height != null) return this._height;\r\n        if (this._source) return this._source.sourceHeight / (this._source._stateNum || this._stateNum || 1);\r\n        return 0;\r\n    }\r\n\r\n    set height(value: number) {\r\n        if (this._height != value) {\r\n            this._height = value;\r\n            this._setChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对象的纹理资源。\r\n     */\r\n    get source(): Texture {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: Texture) {\r\n        if (this._source && !LayaEnv.isPlaying)\r\n            this._source.off(\"reload\", this, this._setChanged);\r\n        if (value) {\r\n            this._source = value;\r\n            this._setChanged();\r\n            if (!LayaEnv.isPlaying)\r\n                value.on(\"reload\", this, this._setChanged);\r\n        } else {\r\n            this._source = null;\r\n            this._setDrawGridCmd(null);\r\n        }\r\n    }\r\n\r\n    setState(index: number, numStates: number) {\r\n        this._stateIndex = index;\r\n        this._stateNum = numStates;\r\n        this._setChanged();\r\n    }\r\n\r\n    get color() {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        if (this._color != value) {\r\n            this._color = value;\r\n            this._setChanged();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    protected _setChanged(): void {\r\n        if (!this._isChanged) {\r\n            this._isChanged = true;\r\n            ILaya.timer.callLater(this, this.changeSource);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 修改纹理资源。\r\n     */\r\n    protected changeSource(): void {\r\n        this._isChanged = false;\r\n        let source = this._source;\r\n        if (!source || !source.bitmap || !this._sp)\r\n            return;\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let sizeGrid = this._sizeGrid || source._sizeGrid;\r\n        let stateIndex = this._stateIndex;\r\n        if (stateIndex != null) {\r\n            let stateNum = source._stateNum || this._stateNum || 1;\r\n            if (stateNum == 1)\r\n                stateIndex = 0;\r\n            else if (stateNum == 2) {\r\n                if (stateIndex == 2)\r\n                    stateIndex = 1;\r\n                else\r\n                    stateIndex = 0;\r\n            }\r\n            else if (stateNum == 3) {\r\n                if (stateIndex == 3)\r\n                    stateIndex = 0;\r\n            }\r\n\r\n            let h = source.height / stateNum;\r\n            source = source.getCachedClip(0, h * stateIndex, source.width, h)\r\n            if (!source)\r\n                return;\r\n        }\r\n\r\n        let sw = source.sourceWidth;\r\n        let sh = source.sourceHeight;\r\n\r\n        //如果没有设置9宫格，或大小未改变，则直接用原图绘制\r\n        let cmd: any;\r\n        if (!sizeGrid || (sw === width && sh === height))\r\n            cmd = DrawTextureCmd.create(source, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, width, height, null, 1, this._color, null, this.uv)\r\n        else\r\n            cmd = Draw9GridTextureCmd.create(source, 0, 0, width, height, sizeGrid, false, this._color);\r\n        this._setDrawGridCmd(cmd);\r\n    }\r\n\r\n    /**\r\n     *  由于可能有其他的graphic命令，因此不能用原来的直接clear()的方法\r\n     */\r\n    private _setDrawGridCmd(newcmd: any) {\r\n        if (this._drawGridCmd) {\r\n            this.removeCmd(this._drawGridCmd);\r\n            this._drawGridCmd.recover();\r\n        }\r\n        this._drawGridCmd = newcmd;\r\n        if (newcmd)\r\n            this.addCmd(newcmd);\r\n    }\r\n}\r\n","/**\r\n * <code>UIEvent</code> 类用来定义UI组件类的事件类型。\r\n */\r\nexport class UIEvent {\r\n    /**\r\n     * 显示提示信息。\r\n     */\r\n    static SHOW_TIP: string = \"showtip\";\r\n    /**\r\n     * 隐藏提示信息。\r\n     */\r\n    static HIDE_TIP: string = \"hidetip\";\r\n}","import { Sprite } from \"../display/Sprite\"\r\nimport { ColorFilter } from \"../filters/ColorFilter\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { WeakObject } from \"../utils/WeakObject\"\r\n\r\n/**\r\n * <code>UIUtils</code> 是文本工具集。\r\n */\r\nexport class UIUtils {\r\n    private static grayFilter: ColorFilter = new ColorFilter([0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0]);\r\n\r\n    /**\r\n     * 用字符串填充数组，并返回数组副本。\r\n     * @param\tarr 源数组对象。\r\n     * @param\tstr 用逗号连接的字符串。如\"p1,p2,p3,p4\"。\r\n     * @param\ttype 如果值不为null，则填充的是新增值得类型。\r\n     * @return 填充后的数组。\r\n     */\r\n    static fillArray(arr: any[], str: string, type: typeof Number | typeof String = null): any[] {\r\n        let temp = arr.concat();\r\n        if (str) {\r\n            let a = str.split(\",\");\r\n            for (let i = 0, n = Math.min(temp.length, a.length); i < n; i++) {\r\n                let value = a[i];\r\n                temp[i] = (value == \"true\" ? true : (value == \"false\" ? false : value));\r\n                if (type != null) temp[i] = type(value);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    /**\r\n     * 转换uint类型颜色值为字符型颜色值。\r\n     * @param color uint颜色值。\r\n     * @return 字符型颜色值。\r\n     */\r\n    static toColor(color: number): string {\r\n        return Utils.toHexColor(color);\r\n    }\r\n\r\n    /**\r\n     * 给指定的目标显示对象添加或移除灰度滤镜。\r\n     * @param\ttarget 目标显示对象。\r\n     * @param\tisGray 如果值true，则添加灰度滤镜，否则移除灰度滤镜。\r\n     */\r\n    //TODO:coverage\r\n    static gray(target: Sprite, isGray: boolean = true): void {\r\n        let filters: any[] = target.filters || [];\r\n        let i = filters.indexOf(UIUtils.grayFilter);\r\n        if (isGray) {\r\n            if (i == -1) {\r\n                filters.push(UIUtils.grayFilter);\r\n                target.filters = filters;\r\n            }\r\n        }\r\n        else if (i != -1) {\r\n            filters.splice(i, 1);\r\n            target.filters = filters;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _funMap: WeakObject = null;//new WeakObject();\r\n\r\n    /**\r\n     * @private 根据字符串，返回函数表达式\r\n     */\r\n    //TODO:coverage\r\n    static getBindFun(value: string): Function {\r\n        if (!UIUtils._funMap) {\r\n            UIUtils._funMap = new WeakObject();\r\n        }\r\n        var fun: Function = UIUtils._funMap.get(value);\r\n        if (fun == null) {\r\n            var temp: string = \"\\\"\" + value + \"\\\"\";\r\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\r\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\r\n            fun = (window as any).Laya._runScript(str);\r\n            UIUtils._funMap.set(value, fun);\r\n        }\r\n        return fun;\r\n    }\r\n}","import { Widget } from \"../components/Widget\";\r\nimport { UIEvent } from \"./UIEvent\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * <code>Component</code> 是ui控件类的基类。\r\n * <p>生命周期：preinitialize > createChildren > initialize > 组件构造函数</p>\r\n */\r\nexport class UIComponent extends Sprite {\r\n    /**@private 控件的数据源。 */\r\n    protected _dataSource: any;\r\n    /**@private 鼠标悬停提示 */\r\n    protected _toolTip: any;\r\n    /**@private 禁用 */\r\n    protected _disabled: boolean;\r\n    /**@private 变灰*/\r\n    protected _gray: boolean;\r\n    /**@private 相对布局组件*/\r\n    protected _widget: Widget = Widget.EMPTY;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>Component</code> 实例。</p>\r\n     */\r\n    constructor(createChildren = true) {\r\n        super();\r\n        if (createChildren) {\r\n            this.preinitialize();\r\n            this.createChildren();\r\n            this.initialize();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._dataSource = null;\r\n        this._toolTip = null;\r\n    }\r\n\r\n    /**\r\n     * <p>预初始化。</p>\r\n     * 子类可在此函数内设置、修改属性默认值\r\n     */\r\n    protected preinitialize(): void {\r\n    }\r\n\r\n    /**\r\n     * <p>创建并添加控件子节点。</p>\r\n     * 子类可在此函数内创建并添加子节点。\r\n     */\r\n    protected createChildren(): void {\r\n    }\r\n\r\n    /**\r\n     * <p>控件初始化。</p>\r\n     * 在此子对象已被创建，可以对子对象进行修改。\r\n     */\r\n    protected initialize(): void {\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        return this.measureWidth();\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的实际显示区域宽度（以像素为单位）。</p>\r\n     */\r\n    protected measureWidth(): number {\r\n        var max: number = 0;\r\n        this.commitMeasure();\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * <p>立即执行影响宽高度量的延迟调用函数。</p>\r\n     * <p>使用 <code>runCallLater</code> 函数，立即执行影响宽高度量的延迟运行函数(使用 <code>callLater</code> 设置延迟执行函数)。</p>\r\n     * @see #callLater()\r\n     * @see #runCallLater()\r\n     */\r\n    protected commitMeasure(): void {\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        return this.measureHeight();\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的实际显示区域高度（以像素为单位）。</p>\r\n     */\r\n    protected measureHeight(): number {\r\n        var max: number = 0;\r\n        this.commitMeasure();\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @implements\r\n     * <p>数据赋值，通过对UI赋值来控制UI显示逻辑。</p>\r\n     * <p>简单赋值会更改组件的默认属性，使用大括号可以指定组件的任意属性进行赋值。</p>\r\n     * @example\r\n       //默认属性赋值\r\n       dataSource = {label1: \"改变了label\", checkbox1: true};//(更改了label1的text属性值，更改checkbox1的selected属性)。\r\n       //任意属性赋值\r\n       dataSource = {label2: {text:\"改变了label\",size:14}, checkbox2: {selected:true,x:10}};\r\n     */\r\n    get dataSource(): any {\r\n        return this.get_dataSource();\r\n    }\r\n\r\n    get_dataSource(): any {\r\n        return this._dataSource;\r\n    }\r\n\r\n    set dataSource(value: any) {\r\n        this.set_dataSource(value);\r\n    }\r\n\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        for (var prop in this._dataSource) {\r\n            if (prop in this && !(typeof ((this as any)[prop]) == 'function')) {\r\n                (this as any)[prop] = this._dataSource[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get top(): number {\r\n        return this.get_top();\r\n    }\r\n\r\n    get_top(): number {\r\n        return this._widget.top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        this.set_top(value);\r\n    }\r\n\r\n    set_top(value: number) {\r\n        if (value != this._widget.top) {\r\n            this._getWidget().top = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get bottom(): number {\r\n        return this.get_bottom();\r\n    }\r\n\r\n    get_bottom(): number {\r\n        return this._widget.bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        this.set_bottom(value);\r\n    }\r\n\r\n    set_bottom(value: number) {\r\n        if (value != this._widget.bottom) {\r\n            this._getWidget().bottom = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get left(): number {\r\n        return this._widget.left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (value != this._widget.left) {\r\n            this._getWidget().left = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get right(): number {\r\n        return this._widget.right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (value != this._widget.right) {\r\n            this._getWidget().right = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerX(): number {\r\n        return this._widget.centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (value != this._widget.centerX) {\r\n            this._getWidget().centerX = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerY(): number {\r\n        return this._widget.centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (value != this._widget.centerY) {\r\n            this._getWidget().centerY = value;\r\n        }\r\n    }\r\n\r\n    protected _shouldRefreshLayout(): void {\r\n        super._shouldRefreshLayout();\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n\r\n    protected _sizeChanged(): void {\r\n        this.event(Event.RESIZE);\r\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\r\n    }\r\n\r\n    /**\r\n     * <p>鼠标悬停提示。</p>\r\n     * <p>可以赋值为文本 <code>String</code> 或函数 <code>Handler</code> ，用来实现自定义样式的鼠标提示和参数携带等。</p>\r\n     * @example\r\n     * private var _testTips:TestTipsUI = new TestTipsUI();\r\n     * private function testTips():void {\r\n       //简单鼠标提示\r\n     * btn2.toolTip = \"这里是鼠标提示&lt;b&gt;粗体&lt;/b&gt;&lt;br&gt;换行\";\r\n       //自定义的鼠标提示\r\n     * btn1.toolTip = showTips1;\r\n       //带参数的自定义鼠标提示\r\n     * clip.toolTip = new Handler(this,showTips2, [\"clip\"]);\r\n     * }\r\n     * private function showTips1():void {\r\n     * _testTips.label.text = \"这里是按钮[\" + btn1.label + \"]\";\r\n     * tip.addChild(_testTips);\r\n     * }\r\n     * private function showTips2(name:String):void {\r\n     * _testTips.label.text = \"这里是\" + name;\r\n     * tip.addChild(_testTips);\r\n     * }\r\n     */\r\n    get toolTip(): any {\r\n        return this._toolTip;\r\n    }\r\n\r\n    set toolTip(value: any) {\r\n        if (this._toolTip != value) {\r\n            this._toolTip = value;\r\n            if (value != null) {\r\n                this.on(Event.MOUSE_OVER, this, this.onMouseOver);\r\n                this.on(Event.MOUSE_OUT, this, this.onMouseOut);\r\n            } else {\r\n                this.off(Event.MOUSE_OVER, this, this.onMouseOver);\r\n                this.off(Event.MOUSE_OUT, this, this.onMouseOut);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对象的 <code>Event.MOUSE_OVER</code> 事件侦听处理函数。\r\n     */\r\n    private onMouseOver(e: Event): void {\r\n        ILaya.stage.event(UIEvent.SHOW_TIP, this._toolTip);\r\n    }\r\n\r\n    /**\r\n     * 对象的 <code>Event.MOUSE_OUT</code> 事件侦听处理函数。\r\n     */\r\n    private onMouseOut(e: Event): void {\r\n        ILaya.stage.event(UIEvent.HIDE_TIP, this._toolTip);\r\n    }\r\n\r\n    /** 是否变灰。*/\r\n    get gray(): boolean {\r\n        return this._gray;\r\n    }\r\n\r\n    set gray(value: boolean) {\r\n        if (value !== this._gray) {\r\n            this._gray = value;\r\n            UIUtils.gray(this, value);\r\n        }\r\n    }\r\n\r\n    /** 是否禁用页面，设置为true后，会变灰并且禁用鼠标。*/\r\n    get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        if (value !== this._disabled) {\r\n            this._disabled = value;\r\n            if (!SerializeUtil.isDeserializing)\r\n                this.gray = value;\r\n            this.mouseEnabled = !value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\r\n     */\r\n    private _getWidget(): Widget {\r\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\r\n        return this._widget;\r\n    }\r\n\r\n    /**@private */\r\n    protected onCompResize(): void {\r\n        this._sizeChanged();\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param child \r\n     * @override\r\n     */\r\n    protected _childChanged(child: Node = null): void {\r\n        this.callLater(this._sizeChanged);\r\n        super._childChanged(child);\r\n    }\r\n\r\n    /**\r\n     * 重新排版\r\n     */\r\n    freshLayout() {\r\n        if (this._widget != Widget.EMPTY) {\r\n            this._widget.resetLayout();\r\n        }\r\n    }\r\n}\r\n","import { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n * <code>Box</code> 类是一个控件容器类。\r\n */\r\nexport class Box extends UIComponent {\r\n    private _bgColor: string;\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        for (let name in value) {\r\n            let comp = (<UIComponent>this.getChildByName(name));\r\n            if (comp)\r\n                comp.dataSource = value[name];\r\n            else if (name in this && !((this as any)[name] instanceof Function))\r\n                (this as any)[name] = value[name];\r\n        }\r\n    }\r\n\r\n    /**背景颜色*/\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this.graphics.clear();\r\n        this.graphics.drawRect(0, 0, 1, 1, this._bgColor, null, null, true);\r\n    }\r\n}","\r\n/**\r\n * <code>Styles</code> 定义了组件常用的样式属性。\r\n */\r\nexport class Styles {\r\n\r\n    /**\r\n     * 默认九宫格信息。\r\n     * @see laya.ui.AutoBitmap#sizeGrid\r\n     */\r\n    static defaultSizeGrid: any[] = [4, 4, 4, 4, 0];\r\n\r\n    //-----------------Label-----------------\r\n    /**\r\n     * 标签颜色。\r\n     */\r\n    static labelColor: string = \"#000000\";\r\n    /**\r\n     * 标签的边距。\r\n     * <p><b>格式：</b>[上边距，右边距，下边距，左边距]。</p>\r\n     */\r\n    static labelPadding: any[] = [2, 2, 2, 2];\r\n\r\n    /**\r\n     * 标签的边距。\r\n     * <p><b>格式：</b>[上边距，右边距，下边距，左边距]。</p>\r\n     */\r\n    static inputLabelPadding: any[] = [1, 1, 1, 3];\r\n\r\n    //-----------------Button-----------------\r\n    /**\r\n     * 按钮皮肤的状态数，支持1,2,3三种状态值。\r\n     */\r\n    static buttonStateNum: number = 3;\r\n    /**\r\n     * 按钮标签颜色。\r\n     * <p><b>格式：</b>[upColor,overColor,downColor]。</p>\r\n     */\r\n    static buttonLabelColors: any[] = [\"#32556b\", \"#32cc6b\", \"#ff0000\"];\r\n\r\n    //-----------------ComboBox-----------------\r\n    /**\r\n     * 下拉框项颜色。\r\n     * <p><b>格式：</b>[overBgColor,overLabelColor,outLabelColor,borderColor,bgColor]。</p>\r\n     */\r\n    static comboBoxItemColors: any[] = [\"#5e95b6\", \"#ffffff\", \"#000000\", \"#8fa4b1\", \"#ffffff\"];\r\n\r\n    //-----------------ScrollBar-----------------\r\n    /**\r\n     * 滚动条的最小值。\r\n     */\r\n    static scrollBarMinNum: number = 15;\r\n    /**\r\n     * 长按按钮，等待时间，使其可激活连续滚动。\r\n     */\r\n    static scrollBarDelayTime: number = 500;\r\n}\r\n\r\nexport enum ScrollType {\r\n    None,\r\n    Horizontal,\r\n    Vertical,\r\n    Both\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { ISelect } from \"./ISelect\";\r\nimport { Styles } from \"./Styles\";\r\nimport { NodeFlags, HideFlags } from \"../Const\"\r\nimport { Text } from \"../display/Text\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { AutoBitmap } from \"./AutoBitmap\"\r\nimport { UIUtils } from \"./UIUtils\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { URL } from \"../net/URL\";\r\n\r\n/**\r\n * 当按钮的选中状态（ <code>selected</code> 属性）发生改变时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Button</code> 组件用来表示常用的多态按钮。 <code>Button</code> 组件可显示文本标签、图标或同时显示两者。\t *\r\n * <p>可以是单态，两态和三态，默认三态(up,over,down)。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Button</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Button;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class Button_Example\r\n *\t\t{\r\n *\t\t\tpublic function Button_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"资源加载完成！\");\r\n *\t\t\t\tvar button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,并传入它的皮肤。\r\n *\t\t\t\tbutton.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n *\t\t\t\tbutton.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n *\t\t\t\tbutton.clickHandler = new Handler(this, onClickButton,[button]);//设置 button 的点击事件处理器。\r\n *\t\t\t\tLaya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onClickButton(button:Button):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"按钮button被点击了！\");\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete()\r\n * {\r\n *     console.log(\"资源加载完成！\");\r\n *     var button = new laya.ui.Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\r\n *     button.x =100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n *     button.y =100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n *     button.clickHandler = laya.utils.Handler.create(this,onClickButton,[button],false);//设置 button 的点击事件处理函数。\r\n *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n * }\r\n * function onClickButton(button)\r\n * {\r\n *     console.log(\"按钮被点击了。\",button);\r\n * }\r\n * @example\r\n * import Button=laya.ui.Button;\r\n * import Handler=laya.utils.Handler;\r\n * class Button_Example{\r\n *     constructor()\r\n *     {\r\n *         Laya.init(640, 800);\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/button.png\", laya.utils.Handler.create(this,this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete()\r\n *     {\r\n *         var button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,并传入它的皮肤。\r\n *         button.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n *         button.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n *         button.clickHandler = new Handler(this, this.onClickButton,[button]);//设置 button 的点击事件处理器。\r\n *         Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n *     }\r\n *     private onClickButton(button:Button):void\r\n *     {\r\n *         console.log(\"按钮button被点击了！\")\r\n *     }\r\n * }\r\n */\r\nexport class Button extends UIComponent implements ISelect {\r\n    /**\r\n     * 指定按钮按下时是否是切换按钮的显示状态。\r\n     *\r\n     * @example 以下示例代码，创建了一个 <code>Button</code> 实例，并设置为切换按钮。\r\n     * @example\r\n     * package\r\n     *\t{\r\n     *\t\timport laya.ui.Button;\r\n     *\t\timport laya.utils.Handler;\r\n     *\t\tpublic class Button_toggle\r\n     *\t\t{\r\n     *\t\t\tpublic function Button_toggle()\r\n     *\t\t\t{\r\n     *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n     *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n     *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));\r\n     *\t\t\t}\r\n     *\t\t\tprivate function onLoadComplete():void\r\n     *\t\t\t{\r\n     *\t\t\t\ttrace(\"资源加载完成！\");\r\n     *\t\t\t\tvar button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 实例对象 button ,传入它的皮肤skin和标签label。\r\n     *\t\t\t\tbutton.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n     *\t\t\t\tbutton.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n     *\t\t\t\tbutton.toggle = true;//设置 button 对象为切换按钮。\r\n     *\t\t\t\tbutton.clickHandler = new Handler(this, onClickButton,[button]);//设置 button 的点击事件处理器。\r\n     *\t\t\t\tLaya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n     *\t \t\t}\r\n     *\t\t\tprivate function onClickButton(button:Button):void\r\n     *\t\t\t{\r\n     *\t\t\t\ttrace(\"button.selected = \"+ button.selected);\r\n     *\t\t\t}\r\n     *\t\t}\r\n     *\t}\r\n     * @example\r\n     * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n     * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n     * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n     * function loadComplete()\r\n     * {\r\n     *     console.log(\"资源加载完成！\");\r\n     *     var button = new laya.ui.Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\r\n     *     button.x =100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n     *     button.y =100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n     *     button.toggle = true;//设置 button 对象为切换按钮。\r\n     *     button.clickHandler = laya.utils.Handler.create(this,onClickButton,[button],false);//设置 button 的点击事件处理器。\r\n     *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n     * }\r\n     * function onClickButton(button)\r\n     * {\r\n     *     console.log(\"button.selected = \",button.selected);\r\n     * }\r\n     * @example\r\n     * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n     * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n     * Laya.loader.load(\"button.png\", null,null, null, null, null);//加载资源\r\n     * function loadComplete() {\r\n     *     console.log(\"资源加载完成！\");\r\n     *     var button:laya.ui.Button = new laya.ui.Button(\"button.png\", \"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\r\n     *     button.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n     *     button.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n     *     button.toggle = true;//设置 button 对象为切换按钮。\r\n     *     button.clickHandler = laya.utils.Handler.create(this, onClickButton, [button], false);//设置 button 的点击事件处理器。\r\n     *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n     * }\r\n     * function onClickButton(button) {\r\n     *     console.log(\"button.selected = \", button.selected);\r\n     * }\r\n     */\r\n    toggle: boolean;\r\n    /**\r\n     * @private\r\n     * 按钮上的文本。\r\n     */\r\n    protected _text: Text;\r\n    /**\r\n     * @private\r\n     * 按钮文本标签的颜色值。\r\n     */\r\n    protected _labelColors: string[];\r\n    /**\r\n     * @private\r\n     * 按钮文本标签描边的颜色值。\r\n     */\r\n    protected _strokeColors: string[];\r\n    /**\r\n     * @private\r\n     * 按钮的状态值。\r\n     */\r\n    protected _state: number = 0;\r\n    /**\r\n     * @private\r\n     * 表示按钮的选中状态。\r\n     */\r\n    protected _selected: boolean;\r\n\r\n    protected _skin: string;\r\n\r\n    /**\r\n     * @private\r\n     * 指定此显示对象是否自动计算并改变大小等属性。\r\n     */\r\n    protected _autoSize: boolean = true;\r\n    /**\r\n     * @private\r\n     * 按钮的状态数。\r\n     */\r\n    protected _stateNum: number;\r\n    /**\r\n     * @private\r\n     * 按钮的点击事件函数。\r\n     */\r\n    protected _clickHandler: Handler;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _stateChanged: boolean = false;\r\n\r\n    declare _graphics: AutoBitmap;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Button</code> 类实例。\r\n     * @param skin 皮肤资源地址。\r\n     * @param label 按钮的文本内容。\r\n     */\r\n    constructor(skin: string = null, label: string = \"\") {\r\n        super();\r\n        this._labelColors = Styles.buttonLabelColors;\r\n        this._stateNum = Styles.buttonStateNum;\r\n\r\n        if (skin)\r\n            this.skin = skin;\r\n        this.label = label;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._text && this._text.destroy(destroyChild);\r\n        this._text = null;\r\n        this._clickHandler = null;\r\n        this._labelColors = this._strokeColors = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this.setGraphics(new AutoBitmap(), true);\r\n    }\r\n\r\n    /**@private */\r\n    protected createText(): void {\r\n        if (!this._text) {\r\n            this._text = new Text();\r\n            this._text.overflow = Text.HIDDEN;\r\n            this._text.align = \"center\";\r\n            this._text.valign = \"middle\";\r\n            this._text.width = this._width;\r\n            this._text.height = this._height;\r\n            this._text.hideFlags = HideFlags.HideAndDontSave;\r\n        }\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    protected initialize(): void {\r\n        if (this._mouseState !== 1) {\r\n            this.mouseEnabled = true;\r\n            this._setBit(NodeFlags.HAS_MOUSE, true);\r\n        }\r\n        this.on(Event.MOUSE_OVER, this, this.onMouse);\r\n        this.on(Event.MOUSE_OUT, this, this.onMouse);\r\n        this.on(Event.MOUSE_DOWN, this, this.onMouse);\r\n        this.on(Event.MOUSE_UP, this, this.onMouse);\r\n        this.on(Event.CLICK, this, this.onMouse);\r\n    }\r\n\r\n    /**\r\n     * 对象的 <code>Event.MOUSE_OVER、Event.MOUSE_OUT、Event.MOUSE_DOWN、Event.MOUSE_UP、Event.CLICK</code> 事件侦听处理函数。\r\n     * @param e Event 对象。\r\n     */\r\n    protected onMouse(e: Event): void {\r\n        if (this.toggle === false && this._selected) return;\r\n        let type = e ? e.type : Event.CLICK;\r\n        if (type === Event.CLICK) {\r\n            this.toggle && (this.selected = !this._selected);\r\n            this._clickHandler && this._clickHandler.run();\r\n            return;\r\n        }\r\n        !this._selected && (this.state = stateMap[type]);\r\n    }\r\n\r\n    /**\r\n     * <p>对象的皮肤资源地址。</p>\r\n     * 支持单态，两态和三态，用 <code>stateNum</code> 属性设置\r\n     * <p>对象的皮肤地址，以字符串表示。</p>\r\n     * @see #stateNum\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            let tex = Loader.getRes(url);\r\n            if (!tex)\r\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded(tex));\r\n            else {\r\n                this._skinLoaded(tex);\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n        else {\r\n            this._skinLoaded(null);\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(tex: any): void {\r\n        this._graphics.source = tex;\r\n        if (tex)\r\n            this.callLater(this.changeClips);\r\n        this._setStateChanged();\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * <p>指定对象的状态值，以数字表示。</p>\r\n     * <p>默认值为3。此值决定皮肤资源图片的切割方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>1：单态。图片不做切割，按钮的皮肤状态只有一种。</li>\r\n     * <li>2：两态。图片将以竖直方向被等比切割为2部分，从上向下，依次为\r\n     * 弹起状态皮肤、\r\n     * 按下和经过及选中状态皮肤。</li>\r\n     * <li>3：三态。图片将以竖直方向被等比切割为3部分，从上向下，依次为\r\n     * 弹起状态皮肤、\r\n     * 经过状态皮肤、\r\n     * 按下和选中状态皮肤</li>\r\n     * </p>\r\n     */\r\n    get stateNum(): number {\r\n        return this._stateNum;\r\n    }\r\n\r\n    set stateNum(value: number) {\r\n        if (typeof (value as any) == 'string') {\r\n            value = parseInt(value as any);\r\n        }\r\n        if (this._stateNum != value) {\r\n            this._stateNum = value < 1 ? 1 : value > 3 ? 3 : value;\r\n            this._graphics.setState(this._state, this._stateNum);\r\n            if (this._skin) {\r\n                this.callLater(this.changeClips);\r\n                this._setStateChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对象的资源切片发生改变。\r\n     */\r\n    protected changeClips(): void {\r\n        let width: number = 0, height: number = 0;\r\n\r\n        let img: Texture = Loader.getRes(this._skin);\r\n        if (!img) {\r\n            console.log(`lose skin ${this._skin}`);\r\n            return;\r\n        }\r\n\r\n        width = img.sourceWidth;\r\n        height = img.sourceHeight / (img._stateNum || this._stateNum);\r\n\r\n        if (this._autoSize) {\r\n            this._graphics.width = this._isWidthSet ? this._width : width;\r\n            this._graphics.height = this._isHeightSet ? this._height : height;\r\n            if (this._text) {\r\n                this._text.width = this._graphics.width;\r\n                this._text.height = this._graphics.height;\r\n            }\r\n        } else {\r\n            if (this._text) {\r\n                this._text.x = width;\r\n                this._text.height = height;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        if (this._skin)\r\n            this.runCallLater(this.changeClips);\r\n        if (this._autoSize) return this._graphics.width;\r\n        this.runCallLater(this.changeState);\r\n        return this._graphics.width + (this._text ? this._text.width : 0);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        if (this._skin)\r\n            this.runCallLater(this.changeClips);\r\n        return this._text ? Math.max(this._graphics.height, this._text.height) : this._graphics.height;\r\n    }\r\n\r\n    /**\r\n     * 按钮的文本内容。\r\n     */\r\n    get label(): string {\r\n        return this._text ? this._text.text : null;\r\n    }\r\n\r\n    set label(value: string) {\r\n        if (!this._text && !value) return;\r\n        this.createText();\r\n        if (this._text.text != value) {\r\n            value && !this._text.parent && this.addChild(this._text);\r\n            this._text.text = (value + \"\").replace(/\\\\n/g, \"\\n\");\r\n            this._setStateChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮的选中状态。\r\n     * <p>如果值为true，表示该对象处于选中状态。否则该对象处于未选中状态。</p>\r\n     * @implements\r\n     */\r\n    get selected(): boolean {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: boolean) {\r\n        if (this._selected != value) {\r\n            this._selected = value;\r\n            this.state = this._selected ? 2 : 0;\r\n            this.event(Event.CHANGE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对象的状态值。\r\n     * @see #stateMap\r\n     */\r\n    protected get state(): number {\r\n        return this._state;\r\n    }\r\n\r\n    protected set state(value: number) {\r\n        if (this._state != value) {\r\n            this._state = value;\r\n            this._setStateChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变对象的状态。\r\n     */\r\n    protected changeState(): void {\r\n        this._stateChanged = false;\r\n        if (this._skin)\r\n            this.runCallLater(this.changeClips);\r\n        let index = Math.max(this._state, 0);\r\n        this._graphics.setState(index, this._stateNum);\r\n        if (this.label) {\r\n            this._text.color = this._labelColors[index];\r\n            if (this._strokeColors) this._text.strokeColor = this._strokeColors[index];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮各个状态下的文本颜色。\r\n     * <p><b>格式:</b> \"upColor,overColor,downColor\"。</p>\r\n     */\r\n    get labelColors(): string {\r\n        return this._labelColors.join(\",\");\r\n    }\r\n\r\n    set labelColors(value: string) {\r\n        this._labelColors = UIUtils.fillArray(Styles.buttonLabelColors, value, String);\r\n        this._setStateChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示按钮各个状态下的描边颜色。\r\n     * <p><b>格式:</b> \"upColor,overColor,downColor\"。</p>\r\n     */\r\n    get strokeColors(): string {\r\n        return this._strokeColors ? this._strokeColors.join(\",\") : \"\";\r\n    }\r\n\r\n    set strokeColors(value: string) {\r\n        this._strokeColors = UIUtils.fillArray(Styles.buttonLabelColors, value, String);\r\n        this._setStateChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的边距。\r\n     * <p><b>格式：</b>\"上边距,右边距,下边距,左边距\"。</p>\r\n     */\r\n    get labelPadding(): string {\r\n        this.createText();\r\n        return this._text.padding.join(\",\");\r\n    }\r\n\r\n    set labelPadding(value: string) {\r\n        this.createText();\r\n        this._text.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体大小。\r\n     * @see laya.display.Text.fontSize()\r\n     */\r\n    get labelSize(): number {\r\n        this.createText();\r\n        return this._text.fontSize;\r\n    }\r\n\r\n    set labelSize(value: number) {\r\n        this.createText();\r\n        this._text.fontSize = value\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @see laya.display.Text.stroke()\r\n     */\r\n    get labelStroke(): number {\r\n        this.createText();\r\n        return this._text.stroke;\r\n    }\r\n\r\n    set labelStroke(value: number) {\r\n        this.createText();\r\n        this._text.stroke = value\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * 默认值为 \"#000000\"（黑色）;\r\n     * @see laya.display.Text.strokeColor()\r\n     */\r\n    get labelStrokeColor(): string {\r\n        this.createText();\r\n        return this._text.strokeColor;\r\n    }\r\n\r\n    set labelStrokeColor(value: string) {\r\n        this.createText();\r\n        this._text.strokeColor = value\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签是否为粗体字。\r\n     * @see laya.display.Text.bold()\r\n     */\r\n    get labelBold(): boolean {\r\n        this.createText();\r\n        return this._text.bold;\r\n    }\r\n\r\n    set labelBold(value: boolean) {\r\n        this.createText();\r\n        this._text.bold = value;\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\r\n     */\r\n    get labelFont(): string {\r\n        this.createText();\r\n        return this._text.font;\r\n    }\r\n\r\n    set labelFont(value: string) {\r\n        this.createText();\r\n        this._text.font = value;\r\n    }\r\n\r\n    /**\r\n     * 标签对齐模式，\r\n     */\r\n    get labelAlign(): string {\r\n        this.createText()\r\n        return this._text.align;\r\n    }\r\n\r\n    set labelAlign(value: string) {\r\n        this.createText()\r\n        this._text.align = value;\r\n    }\r\n\r\n    /**\r\n     * 标签垂直对齐模式，\r\n     */\r\n    get labelVAlign(): string {\r\n        this.createText()\r\n        return this._text.valign;\r\n    }\r\n\r\n    set labelVAlign(value: string) {\r\n        this.createText()\r\n        this._text.valign = value;\r\n    }\r\n\r\n    /**\r\n     * 对象的点击事件处理器函数（无默认参数）。\r\n     * @implements\r\n     */\r\n    get clickHandler(): Handler {\r\n        return this._clickHandler;\r\n    }\r\n\r\n    set clickHandler(value: Handler) {\r\n        this._clickHandler = value;\r\n    }\r\n\r\n    /**\r\n     * 按钮文本标签 <code>Text</code> 控件。\r\n     */\r\n    get text(): Text {\r\n        this.createText();\r\n        return this._text;\r\n    }\r\n\r\n    /**\r\n     * 兼容老IDE\r\n     * @private\r\n    */\r\n    set text(value: Text) {\r\n        if (typeof (value) == \"string\") {\r\n            this._text && (this._text.text = value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\r\n        return null;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        if (value)\r\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n        else\r\n            this._graphics.sizeGrid = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if (this._autoSize) {\r\n            this._graphics.width = value;\r\n            this._text && (this._text.width = value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if (this._autoSize) {\r\n            this._graphics.height = value;\r\n            this._text && (this._text.height = value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        if (typeof (value) == 'number' || typeof (value) == 'string') {\r\n            this._dataSource = value;\r\n            this.label = value + \"\";\r\n        }\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**图标x,y偏移，格式：100,100*/\r\n    get iconOffset(): string {\r\n        return this._graphics._offset ? this._graphics._offset.join(\",\") : null;\r\n    }\r\n\r\n    set iconOffset(value: string) {\r\n        if (value)\r\n            this._graphics._offset = UIUtils.fillArray([1, 1], value, Number);\r\n        else\r\n            this._graphics._offset = [];\r\n    }\r\n\r\n    /**@private */\r\n    protected _setStateChanged(): void {\r\n        if (!this._stateChanged) {\r\n            this._stateChanged = true;\r\n            this.callLater(this.changeState);\r\n        }\r\n    }\r\n}\r\n\r\nconst stateMap: any = { \"mouseup\": 0, \"mouseover\": 1, \"mousedown\": 2, \"mouseout\": 0 };","import { Button } from \"./Button\"\r\n\r\n/**\r\n * 当按钮的选中状态（ <code>selected</code> 属性）发生改变时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>CheckBox</code> 组件显示一个小方框，该方框内可以有选中标记。\r\n * <code>CheckBox</code> 组件还可以显示可选的文本标签，默认该标签位于 CheckBox 右侧。\r\n * <p><code>CheckBox</code> 使用 <code>dataSource</code>赋值时的的默认属性是：<code>selected</code>。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>CheckBox</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.CheckBox;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class CheckBox_Example\r\n *\t\t{\r\n *\t\t\tpublic function CheckBox_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n * \t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/check.png\", Handler.create(this,onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"资源加载完成！\");\r\n *\t\t\t\tvar checkBox:CheckBox = new CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的实例对象 checkBox ,传入它的皮肤skin和标签label。\r\n *\t\t\t\tcheckBox.x = 100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\r\n *\t\t\t\tcheckBox.y = 100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\r\n *\t\t\t\tcheckBox.clickHandler = new Handler(this, onClick, [checkBox]);//设置 checkBox 的点击事件处理器。\r\n *\t\t\t\tLaya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onClick(checkBox:CheckBox):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"输出选中状态: checkBox.selected = \" + checkBox.selected);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load(\"resource/ui/check.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete()\r\n * {\r\n *     console.log(\"资源加载完成！\");\r\n *     var checkBox:laya.ui.CheckBox= new laya.ui.CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的类的实例对象 checkBox ,传入它的皮肤skin和标签label。\r\n *     checkBox.x =100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\r\n *     checkBox.y =100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\r\n *     checkBox.clickHandler = new laya.utils.Handler(this,this.onClick,[checkBox],false);//设置 checkBox 的点击事件处理器。\r\n *     Laya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\r\n * }\r\n * function onClick(checkBox)\r\n * {\r\n *     console.log(\"checkBox.selected = \",checkBox.selected);\r\n * }\r\n * @example\r\n * import CheckBox= laya.ui.CheckBox;\r\n * import Handler=laya.utils.Handler;\r\n * class CheckBox_Example{\r\n *     constructor()\r\n *     {\r\n *         Laya.init(640, 800);\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/check.png\", Handler.create(this,this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete()\r\n *     {\r\n *         var checkBox:CheckBox = new CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的实例对象 checkBox ,传入它的皮肤skin和标签label。\r\n *         checkBox.x = 100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\r\n *         checkBox.y = 100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\r\n *         checkBox.clickHandler = new Handler(this, this.onClick,[checkBox]);//设置 checkBox 的点击事件处理器。\r\n *         Laya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\r\n *     }\r\n *     private onClick(checkBox:CheckBox):void\r\n *     {\r\n *         console.log(\"输出选中状态: checkBox.selected = \" + checkBox.selected);\r\n *     }\r\n * }\r\n */\r\nexport class CheckBox extends Button {\r\n\r\n    /**\r\n     * 创建一个新的 <code>CheckBox</code> 组件实例。\r\n     * @param skin 皮肤资源地址。\r\n     * @param label 文本标签的内容。\r\n     */\r\n    constructor(skin: string = null, label: string = \"\") {\r\n        super(skin, label);\r\n        this.toggle = true;\r\n        this._autoSize = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected preinitialize(): void {\r\n        super.preinitialize();\r\n        this.toggle = true;\r\n        this._autoSize = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected initialize(): void {\r\n        super.initialize();\r\n        this.createText();\r\n        this._text.align = \"left\";\r\n        this._text.valign = \"top\";\r\n        this._text.width = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (value instanceof Boolean)\r\n            this.selected = value as boolean;\r\n        else if (typeof (value) == 'string')\r\n            this.selected = value === \"true\";\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { AutoBitmap } from \"./AutoBitmap\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Styles } from \"./Styles\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { URL } from \"../net/URL\";\r\n\r\n/**\r\n * 图片加载完成后调度。\r\n * @eventType Event.LOADED\r\n */\r\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当前帧发生变化后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Clip</code> 类是位图切片动画。</p>\r\n * <p> <code>Clip</code> 可将一张图片，按横向分割数量 <code>clipX</code> 、竖向分割数量 <code>clipY</code> ，\r\n * 或横向分割每个切片的宽度 <code>clipWidth</code> 、竖向分割每个切片的高度 <code>clipHeight</code> ，\r\n * 从左向右，从上到下，分割组合为一个切片动画。</p>\r\n * Image和Clip组件是唯一支持异步加载的两个组件，比如clip.skin = \"abc/xxx.png\"，其他UI组件均不支持异步加载。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Clip</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Clip;\r\n *\t\tpublic class Clip_Example\r\n *\t\t{\r\n *\t\t\tprivate var clip:Clip;\r\n *\t\t\tpublic function Clip_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tonInit();\r\n *\t\t\t}\r\n *\t\t\tprivate function onInit():void\r\n *\t\t\t{\r\n *\t\t\t\tclip = new Clip(\"resource/ui/clip_num.png\", 10, 1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\r\n *\t\t\t\tclip.autoPlay = true;//设置 clip 动画自动播放。\r\n *\t\t\t\tclip.interval = 100;//设置 clip 动画的播放时间间隔。\r\n *\t\t\t\tclip.x = 100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\r\n *\t\t\t\tclip.y = 100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\r\n *\t\t\t\tclip.on(Event.CLICK, this, onClick);//给 clip 添加点击事件函数侦听。\r\n *\t\t\t\tLaya.stage.addChild(clip);//将此 clip 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onClick():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"clip 的点击事件侦听处理函数。clip.total=\"+ clip.total);\r\n *\t\t\t\tif (clip.isPlaying == true)\r\n *\t\t\t\t{\r\n *\t\t\t\t\tclip.stop();//停止动画。\r\n *\t\t\t\t}else {\r\n *\t\t\t\t\tclip.play();//播放动画。\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var clip;\r\n * Laya.loader.load(\"resource/ui/clip_num.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     clip = new laya.ui.Clip(\"resource/ui/clip_num.png\",10,1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\r\n *     clip.autoPlay = true;//设置 clip 动画自动播放。\r\n *     clip.interval = 100;//设置 clip 动画的播放时间间隔。\r\n *     clip.x =100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\r\n *     clip.y =100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\r\n *     clip.on(Event.CLICK,this,onClick);//给 clip 添加点击事件函数侦听。\r\n *     Laya.stage.addChild(clip);//将此 clip 对象添加到显示列表。\r\n * }\r\n * function onClick()\r\n * {\r\n *     console.log(\"clip 的点击事件侦听处理函数。\");\r\n *     if(clip.isPlaying == true)\r\n *     {\r\n *         clip.stop();\r\n *     }else {\r\n *         clip.play();\r\n *     }\r\n * }\r\n * @example\r\n * import Clip = laya.ui.Clip;\r\n * import Handler = laya.utils.Handler;\r\n * class Clip_Example {\r\n *     private clip: Clip;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         this.clip = new Clip(\"resource/ui/clip_num.png\", 10, 1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\r\n *         this.clip.autoPlay = true;//设置 clip 动画自动播放。\r\n *         this.clip.interval = 100;//设置 clip 动画的播放时间间隔。\r\n *         this.clip.x = 100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\r\n *         this.clip.y = 100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\r\n *         this.clip.on(laya.events.Event.CLICK, this, this.onClick);//给 clip 添加点击事件函数侦听。\r\n *         Laya.stage.addChild(this.clip);//将此 clip 对象添加到显示列表。\r\n *     }\r\n *     private onClick(): void {\r\n *         console.log(\"clip 的点击事件侦听处理函数。clip.total=\" + this.clip.total);\r\n *         if (this.clip.isPlaying == true) {\r\n *             this.clip.stop();//停止动画。\r\n *         } else {\r\n *             this.clip.play();//播放动画。\r\n *         }\r\n *     }\r\n * }\r\n *\r\n */\r\nexport class Clip extends UIComponent {\r\n    /**@private */\r\n    protected _sources: Texture[];\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _clipX: number = 1;\r\n    /**@private */\r\n    protected _clipY: number = 1;\r\n    /**@private */\r\n    protected _clipWidth: number = 0;\r\n    /**@private */\r\n    protected _clipHeight: number = 0;\r\n    /**@private */\r\n    protected _autoPlay: boolean;\r\n    /**@private */\r\n    protected _interval: number = 50;\r\n    /**@private */\r\n    protected _complete: Handler;\r\n    /**@private */\r\n    protected _isPlaying: boolean;\r\n    /**@private */\r\n    protected _index: number = 0;\r\n    /**@private */\r\n    protected _clipChanged: boolean;\r\n    /**@private */\r\n    protected _group: string;\r\n    /**@private */\r\n    protected _toIndex: number = -1;\r\n\r\n    declare _graphics: AutoBitmap;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Clip</code> 示例。\r\n     * @param url 资源类库名或者地址\r\n     * @param clipX x方向分割个数\r\n     * @param clipY y方向分割个数\r\n     */\r\n    constructor(url: string = null, clipX: number = 1, clipY: number = 1) {\r\n        super();\r\n\r\n        this._sources = [];\r\n        this._clipX = clipX;\r\n        this._clipY = clipY;\r\n        this.skin = url;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override \r\n     */\r\n    protected createChildren(): void {\r\n        this.setGraphics(new AutoBitmap(), true);\r\n    }\r\n\r\n    /**@private\t @override*/\r\n    protected _onDisplay(e?: boolean): void {\r\n        if (this._isPlaying) {\r\n            if (this._getBit(NodeFlags.DISPLAYED_INSTAGE)) this.play();\r\n            else this.stop();\r\n        } else if (this._autoPlay) {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            if (!Loader.getRes(url))\r\n                return ILaya.loader.load(url, Loader.IMAGE).then(() => this._skinLoaded());\r\n            else {\r\n                this._skinLoaded();\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n        else {\r\n            this._graphics.source = null;\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        this._setClipChanged();\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**X轴（横向）切片数量。*/\r\n    get clipX(): number {\r\n        return this._clipX;\r\n    }\r\n\r\n    set clipX(value: number) {\r\n        this._clipX = value || 1;\r\n        this._setClipChanged()\r\n    }\r\n\r\n    /**Y轴(竖向)切片数量。*/\r\n    get clipY(): number {\r\n        return this._clipY;\r\n    }\r\n\r\n    set clipY(value: number) {\r\n        this._clipY = value || 1;\r\n        this._setClipChanged()\r\n    }\r\n\r\n    /**\r\n     * 横向分割时每个切片的宽度，与 <code>clipX</code> 同时设置时优先级高于 <code>clipX</code> 。\r\n     */\r\n    get clipWidth(): number {\r\n        return this._clipWidth;\r\n    }\r\n\r\n    set clipWidth(value: number) {\r\n        this._clipWidth = value;\r\n        this._setClipChanged()\r\n    }\r\n\r\n    /**\r\n     * 竖向分割时每个切片的高度，与 <code>clipY</code> 同时设置时优先级高于 <code>clipY</code> 。\r\n     */\r\n    get clipHeight(): number {\r\n        return this._clipHeight;\r\n    }\r\n\r\n    set clipHeight(value: number) {\r\n        this._clipHeight = value;\r\n        this._setClipChanged()\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变切片的资源、切片的大小。\r\n     */\r\n    protected changeClip(): void {\r\n        this._clipChanged = false;\r\n        if (!this._skin || this._destroyed) return;\r\n\r\n        let url = this._skinBaseUrl ? URL.formatURL(this._skin, this._skinBaseUrl) : this._skin;\r\n\r\n        let img: any = Loader.getRes(url);\r\n        if (img) {\r\n            this.loadComplete(this._skin, img);\r\n        } else {\r\n            ILaya.loader.load(url, Handler.create(this, this.loadComplete, [this._skin]), null, Loader.IMAGE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 加载切片图片资源完成函数。\r\n     * @param url 资源地址。\r\n     * @param img 纹理。\r\n     */\r\n    protected loadComplete(url: string, img: Texture): void {\r\n        if (url !== this._skin)\r\n            return;\r\n\r\n        this._sources.length = 0;\r\n        if (img) {\r\n            var w: number = this._clipWidth || Math.ceil(img.sourceWidth / this._clipX);\r\n            var h: number = this._clipHeight || Math.ceil(img.sourceHeight / this._clipY);\r\n\r\n            for (let i = 0; i < this._clipY; i++) {\r\n                for (let j = 0; j < this._clipX; j++) {\r\n                    this._sources.push(img.getCachedClip(w * j, h * i, w, h));\r\n                }\r\n            }\r\n        }\r\n\r\n        this.index = this._index;\r\n        this.event(Event.LOADED);\r\n        this.onCompResize();\r\n    }\r\n\r\n    /**\r\n     * 源数据。\r\n     */\r\n    get sources(): Texture[] {\r\n        return this._sources;\r\n    }\r\n\r\n    set sources(value: Texture[]) {\r\n        this._sources = value;\r\n        this.index = this._index;\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * 资源分组。\r\n     */\r\n    get group(): string {\r\n        return this._group;\r\n    }\r\n\r\n    set group(value: string) {\r\n        if (value && this._skin) Loader.setGroup(this._skin, value);\r\n        this._group = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._graphics.width = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._graphics.height = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        this.runCallLater(this.changeClip);\r\n        return this._graphics.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        this.runCallLater(this.changeClip);\r\n        return this._graphics.height;\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\r\n        return null;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        if (value)\r\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n        else\r\n            this._graphics.sizeGrid = null;\r\n    }\r\n\r\n    /**\r\n     * 当前帧索引。\r\n     */\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        this._graphics && (this._graphics.source = this._sources[value]);\r\n        this.event(Event.CHANGE);\r\n    }\r\n\r\n    /**\r\n     * 切片动画的总帧数。\r\n     */\r\n    get total(): number {\r\n        this.runCallLater(this.changeClip);\r\n        return this._sources.length;\r\n    }\r\n\r\n    /**\r\n     * 表示是否自动播放切片动画，若自动播放值为true,否则值为false;\r\n     * <p>可控制切片动画的播放、停止。</p>\r\n     */\r\n    get autoPlay(): boolean {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    set autoPlay(value: boolean) {\r\n        if (this._autoPlay != value) {\r\n            this._autoPlay = value;\r\n            value ? this.play() : this.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示切片动画播放间隔时间(以毫秒为单位)。\r\n     */\r\n    get interval(): number {\r\n        return this._interval;\r\n    }\r\n\r\n    set interval(value: number) {\r\n        if (this._interval != value) {\r\n            this._interval = value;\r\n            if (this._isPlaying) this.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示切片动画的当前播放状态。\r\n     * 如果切片动画正在播放中，则为true，否则为flash。\r\n     */\r\n    get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    set isPlaying(value: boolean) {\r\n        this._isPlaying = value;\r\n    }\r\n\r\n    /**\r\n     * 播放切片动画。\r\n     * @param\tfrom\t开始索引\r\n     * @param\tto\t\t结束索引，-1为不限制\r\n     */\r\n    play(from: number = 0, to: number = -1): void {\r\n        this._setClipChanged();\r\n        this._isPlaying = true;\r\n        this.index = from;\r\n        this._toIndex = to;\r\n        // this._index++;\r\n        //修复clip重复播放丢失帧的问题\r\n        ILaya.timer.loop(this.interval, this, this._loop);\r\n\r\n        this.on(Event.DISPLAY, this, this._onDisplay);\r\n        this.on(Event.UNDISPLAY, this, this._onDisplay);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _loop(): void {\r\n        if (this._visible) {\r\n            this._index++;\r\n            if (this._toIndex > -1 && this._index >= this._toIndex)\r\n                this.stop();\r\n            else if (this._index >= this._sources.length)\r\n                this._index = 0;\r\n            this.index = this._index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止切片动画。\r\n     */\r\n    stop(): void {\r\n        this._isPlaying = false;\r\n        ILaya.timer.clear(this, this._loop);\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any): void {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.index = parseInt(value as string);\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**@private */\r\n    protected _setClipChanged(): void {\r\n        if (!this._clipChanged) {\r\n            this._clipChanged = true;\r\n            this.callLater(this.changeClip);\r\n        }\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Box } from \"./Box\";\r\nimport { Button } from \"./Button\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Input } from \"../display/Input\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\n\r\n/**\r\n * 选择项改变后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>ColorPicker</code> 组件将显示包含多个颜色样本的列表，用户可以从中选择颜色。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>ColorPicker</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.ColorPicker;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class ColorPicker_Example\r\n *\t\t{\r\n *\t\t\tpublic function ColorPicker_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/color.png\", Handler.create(this,onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"资源加载完成！\");\r\n *\t\t\t\tvar colorPicket:ColorPicker = new ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\r\n *\t\t\t\tcolorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\r\n *\t\t\t\tcolorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\r\n *\t\t\t\tcolorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\r\n *\t\t\t\tcolorPicket.changeHandler = new Handler(this, onChangeColor,[colorPicket]);//设置 colorPicket 的颜色改变回调函数。\r\n *\t\t\t\tLaya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChangeColor(colorPicket:ColorPicker):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选择的颜色： \" + colorPicket.selectedColor);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load(\"resource/ui/color.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete()\r\n * {\r\n *     console.log(\"资源加载完成！\");\r\n *     var colorPicket = new laya.ui.ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\r\n *     colorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\r\n *     colorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\r\n *     colorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\r\n *     colorPicket.changeHandler = laya.utils.Handler.create(this, onChangeColor,[colorPicket],false);//设置 colorPicket 的颜色改变回调函数。\r\n *     Laya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\r\n * }\r\n * function onChangeColor(colorPicket)\r\n * {\r\n *     console.log(\"当前选择的颜色： \" + colorPicket.selectedColor);\r\n * }\r\n * @example\r\n * import ColorPicker = laya.ui.ColorPicker;\r\n * import Handler = laya.utils.Handler;\r\n * class ColorPicker_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/color.png\", Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         console.log(\"资源加载完成！\");\r\n *         var colorPicket: ColorPicker = new ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\r\n *         colorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\r\n *         colorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\r\n *         colorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\r\n *         colorPicket.changeHandler = new Handler(this, this.onChangeColor, [colorPicket]);//设置 colorPicket 的颜色改变回调函数。\r\n *         Laya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\r\n *     }\r\n *     private onChangeColor(colorPicket: ColorPicker): void {\r\n *         console.log(\"当前选择的颜色： \" + colorPicket.selectedColor);\r\n *     }\r\n * }\r\n */\r\nexport class ColorPicker extends UIComponent {\r\n\r\n    /**\r\n     * 当颜色发生改变时执行的函数处理器。\r\n     * 默认返回参数color：颜色值字符串。\r\n     */\r\n    changeHandler: Handler;\r\n\r\n    /**\r\n     * @private\r\n     * 指定每个正方形的颜色小格子的宽高（以像素为单位）。\r\n     */\r\n    protected _gridSize: number = 11;\r\n    /**\r\n     * @private\r\n     * 表示颜色样本列表面板的背景颜色值。\r\n     */\r\n    protected _bgColor: string = \"#ffffff\";\r\n    /**\r\n     * @private\r\n     * 表示颜色样本列表面板的边框颜色值。\r\n     */\r\n    protected _borderColor: string = \"#000000\";\r\n    /**\r\n     * @private\r\n     * 表示颜色样本列表面板选择或输入的颜色值。\r\n     */\r\n    protected _inputColor: string = \"#000000\";\r\n    /**\r\n     * @private\r\n     * 表示颜色输入框的背景颜色值。\r\n     */\r\n    protected _inputBgColor: string = \"#efefef\";\r\n    /**\r\n     * @private\r\n     * 表示颜色样本列表面板。\r\n     */\r\n    protected _colorPanel: Box;\r\n    /**\r\n     * @private\r\n     * 表示颜色网格。\r\n     */\r\n    protected _colorTiles: Sprite;\r\n    /**\r\n     * @private\r\n     * 表示颜色块显示对象。\r\n     */\r\n    protected _colorBlock: Sprite;\r\n    /**\r\n     * @private\r\n     * 表示颜色输入框控件 <code>Input</code> 。\r\n     */\r\n    protected _colorInput: Input;\r\n    /**\r\n     * @private\r\n     * 表示点击后显示颜色样本列表面板的按钮控件 <code>Button</code> 。\r\n     */\r\n    protected _colorButton: Button;\r\n    /**\r\n     * @private\r\n     * 表示颜色值列表。\r\n     */\r\n    protected _colors: any[] = [];\r\n    /**\r\n     * @private\r\n     * 表示选择的颜色值。\r\n     */\r\n    protected _selectedColor: string = \"#000000\";\r\n    /** @private */\r\n    protected _panelChanged: boolean;\r\n\r\n    constructor(createChildren = true) {\r\n        super(false);\r\n        if (createChildren) {\r\n            this.preinitialize();\r\n            this.createChildren();\r\n            this.initialize();\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeColorBox);\r\n        super.destroy(destroyChild);\r\n        this._colorPanel && this._colorPanel.destroy(destroyChild);\r\n        this._colorButton && this._colorButton.destroy(destroyChild);\r\n        this._colorPanel = null;\r\n        this._colorTiles = null;\r\n        this._colorBlock = null;\r\n        this._colorInput = null;\r\n        this._colorButton = null;\r\n        this._colors = null;\r\n        this.changeHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this._colorButton = new Button()\r\n        this._colorButton.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._colorButton);\r\n        this._colorPanel = new Box();\r\n        this._colorPanel.hideFlags = HideFlags.HideAndDontSave;\r\n        this._colorPanel.size(230, 166);\r\n        this._colorPanel.addChild(this._colorTiles = new Sprite());\r\n        this._colorPanel.addChild(this._colorBlock = new Sprite());\r\n        this._colorPanel.addChild(this._colorInput = new Input());\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected initialize(): void {\r\n        this._colorButton.on(Event.CLICK, this, this.onColorButtonClick);\r\n\r\n        this._colorBlock.pos(5, 5);\r\n\r\n        this._colorInput.pos(60, 5);\r\n        this._colorInput.size(60, 20);\r\n        this._colorInput.on(Event.CHANGE, this, this.onColorInputChange);\r\n        this._colorInput.on(Event.KEY_DOWN, this, this.onColorFieldKeyDown);\r\n\r\n        this._colorTiles.pos(5, 30);\r\n        this._colorTiles.on(Event.MOUSE_MOVE, this, this.onColorTilesMouseMove);\r\n        this._colorTiles.on(Event.CLICK, this, this.onColorTilesClick);\r\n        this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize);\r\n\r\n        this._colorPanel.on(Event.MOUSE_DOWN, this, this.onPanelMouseDown);\r\n\r\n        this.bgColor = this._bgColor;\r\n    }\r\n\r\n    private onPanelMouseDown(e: Event): void {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * 改变颜色样本列表面板。\r\n     */\r\n    protected changePanel(): void {\r\n        this._panelChanged = false;\r\n        var g: Graphics = this._colorPanel.graphics;\r\n        g.clear(true);\r\n        //g.drawRect(0, 0, 230, 166, _bgColor);\r\n        g.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor);\r\n\r\n        this.drawBlock(this._selectedColor);\r\n\r\n        this._colorInput.borderColor = this._borderColor;\r\n        this._colorInput.bgColor = this._inputBgColor;\r\n        this._colorInput.color = this._inputColor;\r\n\r\n        g = this._colorTiles.graphics;\r\n        g.clear(true);\r\n\r\n        var mainColors: any[] = [0x000000, 0x333333, 0x666666, 0x999999, 0xCCCCCC, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0x00FFFF, 0xFF00FF];\r\n        for (var i: number = 0; i < 12; i++) {\r\n            for (var j: number = 0; j < 20; j++) {\r\n                var color: number;\r\n                if (j === 0) color = mainColors[i];\r\n                else if (j === 1) color = 0x000000;\r\n                else color = (((i * 3 + j / 6) % 3 << 0) + ((i / 6) << 0) * 3) * 0x33 << 16 | j % 6 * 0x33 << 8 | (i << 0) % 6 * 0x33;\r\n\r\n                var strColor: string = UIUtils.toColor(color);\r\n                this._colors.push(strColor);\r\n\r\n                var x: number = j * this._gridSize;\r\n                var y: number = i * this._gridSize;\r\n\r\n                g.drawRect(x, y, this._gridSize, this._gridSize, strColor, \"#000000\");\r\n                //g.drawRect(x + 1, y + 1, _gridSize - 1, _gridSize - 1, strColor);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 颜色样本列表面板的显示按钮的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    private onColorButtonClick(e: Event): void {\r\n        if (this._colorPanel.parent) this.close();\r\n        else this.open();\r\n    }\r\n\r\n    /**\r\n     * 打开颜色样本列表面板。\r\n     */\r\n    open(): void {\r\n        let stage = ILaya.stage;\r\n        var p: Point = this.localToGlobal(new Point());\r\n        var px: number = p.x + this._colorPanel.width <= stage.width ? p.x : stage.width - this._colorPanel.width;\r\n        var py: number = p.y + this._colorButton.height;\r\n        py = py + this._colorPanel.height <= stage.height ? py : p.y - this._colorPanel.height;\r\n        this._colorPanel.pos(px, py);\r\n        this._colorPanel.zOrder = 1001;\r\n        stage.addChild(this._colorPanel);\r\n        stage.on(Event.MOUSE_DOWN, this, this.removeColorBox);\r\n    }\r\n\r\n    /**\r\n     * 关闭颜色样本列表面板。\r\n     */\r\n    close(): void {\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeColorBox);\r\n        this._colorPanel.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * 舞台的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    private removeColorBox(e: Event = null): void {\r\n        this.close();\r\n        //var target:Sprite = e.target as Sprite;\r\n        //if (!_colorButton.contains(target) && !_colorPanel.contains(target)) {\r\n        //close();\r\n        //}\r\n    }\r\n\r\n    /**\r\n     * 小格子色块的 <code>Event.KEY_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    private onColorFieldKeyDown(e: Event): void {\r\n        if (e.keyCode == 13) {\r\n            if (this._colorInput.text) this.selectedColor = this._colorInput.text;\r\n            else this.selectedColor = null;\r\n            this.close();\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 颜色值输入框 <code>Event.CHANGE</code> 事件侦听处理函数。\r\n     */\r\n    private onColorInputChange(e: Event = null): void {\r\n        if (this._colorInput.text) this.drawBlock(this._colorInput.text);\r\n        else this.drawBlock(\"#FFFFFF\");\r\n    }\r\n\r\n    /**\r\n     * 小格子色块的 <code>Event.CLICK</code> 事件侦听处理函数。\r\n     */\r\n    private onColorTilesClick(e: Event): void {\r\n        this.selectedColor = this.getColorByMouse();\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 小格子色块的 <code>Event.MOUSE_MOVE</code> 事件侦听处理函数。\r\n     */\r\n    private onColorTilesMouseMove(e: Event): void {\r\n        this._colorInput.focus = false;\r\n        var color: string = this.getColorByMouse();\r\n        this._colorInput.text = color;\r\n        this.drawBlock(color);\r\n    }\r\n\r\n    /**\r\n     * 通过鼠标位置取对应的颜色块的颜色值。\r\n     */\r\n    protected getColorByMouse(): string {\r\n        var point: Point = this._colorTiles.getMousePoint();\r\n        var x: number = Math.floor(point.x / this._gridSize);\r\n        var y: number = Math.floor(point.y / this._gridSize);\r\n        return this._colors[y * 20 + x];\r\n    }\r\n\r\n    /**\r\n     * 绘制颜色块。\r\n     * @param color 需要绘制的颜色块的颜色值。\r\n     */\r\n    private drawBlock(color: string): void {\r\n        var g: Graphics = this._colorBlock.graphics;\r\n        g.clear(true);\r\n        var showColor: string = color ? color : \"#ffffff\";\r\n        g.drawRect(0, 0, 50, 20, showColor, this._borderColor);\r\n\r\n        color || g.drawLine(0, 0, 50, 20, \"#ff0000\");\r\n    }\r\n\r\n    /**\r\n     * 表示选择的颜色值。\r\n     */\r\n    get selectedColor(): string {\r\n        return this._selectedColor;\r\n    }\r\n\r\n    set selectedColor(value: string) {\r\n        if (this._selectedColor != value) {\r\n            this._selectedColor = this._colorInput.text = value;\r\n            this.drawBlock(value);\r\n            this.changeColor();\r\n            this.changeHandler && this.changeHandler.runWith(this._selectedColor);\r\n            this.event(Event.CHANGE, Event.EMPTY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Button#skin\r\n     */\r\n    get skin(): string {\r\n        return this._colorButton.skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        this._colorButton.once(Event.LOADED, this, this.changeColor);\r\n        this._colorButton.skin = value;\r\n        //changeColor();\r\n    }\r\n\r\n    /**\r\n     * 改变颜色。\r\n     */\r\n    private changeColor(): void {\r\n        var g: Graphics = this.graphics;\r\n        g.clear(true);\r\n        var showColor: string = this._selectedColor || \"#000000\";\r\n        g.drawRect(0, 0, this._colorButton.width, this._colorButton.height, showColor);\r\n    }\r\n\r\n    /**\r\n     * 表示颜色样本列表面板的背景颜色值。\r\n     */\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this._setPanelChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示颜色样本列表面板的边框颜色值。\r\n     */\r\n    get borderColor(): string {\r\n        return this._borderColor;\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._borderColor = value;\r\n        this._setPanelChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示颜色样本列表面板选择或输入的颜色值。\r\n     */\r\n    get inputColor(): string {\r\n        return this._inputColor;\r\n    }\r\n\r\n    set inputColor(value: string) {\r\n        this._inputColor = value;\r\n        this._setPanelChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示颜色输入框的背景颜色值。\r\n     */\r\n    get inputBgColor(): string {\r\n        return this._inputBgColor;\r\n    }\r\n\r\n    set inputBgColor(value: string) {\r\n        this._inputBgColor = value;\r\n        this._setPanelChanged();\r\n    }\r\n\r\n    /**@private */\r\n    protected _setPanelChanged(): void {\r\n        if (!this._panelChanged) {\r\n            this._panelChanged = true;\r\n            this.callLater(this.changePanel);\r\n        }\r\n    }\r\n}","import { Styles } from \"./Styles\";\r\nimport { Text } from \"../display/Text\"\r\nimport { Event } from \"../events/Event\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { UIUtils } from \"./UIUtils\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\nexport type LabelFitContent = \"no\" | \"yes\" | \"height\";\r\n\r\n/**\r\n * 文本内容发生改变后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Label</code> 类用于创建显示对象以显示文本。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Label</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Label;\r\n *\t\tpublic class Label_Example\r\n *\t\t{\r\n *\t\t\tpublic function Label_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tonInit();\r\n *\t\t\t}\r\n *\t\t\tprivate function onInit():void\r\n *\t\t\t{\r\n *\t\t\t\tvar label:Label = new Label();//创建一个 Label 类的实例对象 label 。\r\n *\t\t\t\tlabel.font = \"Arial\";//设置 label 的字体。\r\n *\t\t\t\tlabel.bold = true;//设置 label 显示为粗体。\r\n *\t\t\t\tlabel.leading = 4;//设置 label 的行间距。\r\n *\t\t\t\tlabel.wordWrap = true;//设置 label 自动换行。\r\n *\t\t\t\tlabel.padding = \"10,10,10,10\";//设置 label 的边距。\r\n *\t\t\t\tlabel.color = \"#ff00ff\";//设置 label 的颜色。\r\n *\t\t\t\tlabel.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\r\n *\t\t\t\tlabel.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\r\n *\t\t\t\tlabel.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\r\n *\t\t\t\tlabel.width = 300;//设置 label 的宽度。\r\n *\t\t\t\tlabel.height = 200;//设置 label 的高度。\r\n *\t\t\t\tLaya.stage.addChild(label);//将 label 添加到显示列表。\r\n *\t\t\t\tvar passwordLabel:Label = new Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\r\n *\t\t\t\tpasswordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\r\n *\t\t\t\tpasswordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\r\n *\t\t\t\tpasswordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\r\n *\t\t\t\tpasswordLabel.width = 300;//设置 passwordLabel 的宽度。\r\n *\t\t\t\tpasswordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\r\n *\t\t\t\tpasswordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\r\n *\t\t\t\tpasswordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\r\n *\t\t\t\tLaya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * onInit();\r\n * function onInit(){\r\n *     var label = new laya.ui.Label();//创建一个 Label 类的实例对象 label 。\r\n *     label.font = \"Arial\";//设置 label 的字体。\r\n *     label.bold = true;//设置 label 显示为粗体。\r\n *     label.leading = 4;//设置 label 的行间距。\r\n *     label.wordWrap = true;//设置 label 自动换行。\r\n *     label.padding = \"10,10,10,10\";//设置 label 的边距。\r\n *     label.color = \"#ff00ff\";//设置 label 的颜色。\r\n *     label.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\r\n *     label.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\r\n *     label.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\r\n *     label.width = 300;//设置 label 的宽度。\r\n *     label.height = 200;//设置 label 的高度。\r\n *     Laya.stage.addChild(label);//将 label 添加到显示列表。\r\n *     var passwordLabel = new laya.ui.Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\r\n *     passwordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\r\n *     passwordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\r\n *     passwordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\r\n *     passwordLabel.width = 300;//设置 passwordLabel 的宽度。\r\n *     passwordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\r\n *     passwordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\r\n *     passwordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\r\n *     Laya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\r\n * }\r\n * @example\r\n * import Label = laya.ui.Label;\r\n * class Label_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         var label: Label = new Label();//创建一个 Label 类的实例对象 label 。\r\n *         label.font = \"Arial\";//设置 label 的字体。\r\n *         label.bold = true;//设置 label 显示为粗体。\r\n *         label.leading = 4;//设置 label 的行间距。\r\n *         label.wordWrap = true;//设置 label 自动换行。\r\n *         label.padding = \"10,10,10,10\";//设置 label 的边距。\r\n *         label.color = \"#ff00ff\";//设置 label 的颜色。\r\n *         label.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\r\n *         label.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\r\n *         label.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\r\n *         label.width = 300;//设置 label 的宽度。\r\n *         label.height = 200;//设置 label 的高度。\r\n *         Laya.stage.addChild(label);//将 label 添加到显示列表。\r\n *         var passwordLabel: Label = new Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\r\n *         passwordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\r\n *         passwordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\r\n *         passwordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\r\n *         passwordLabel.width = 300;//设置 passwordLabel 的宽度。\r\n *         passwordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\r\n *         passwordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\r\n *         passwordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\r\n *         Laya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\r\n *     }\r\n * }\r\n * @see laya.display.Text\r\n */\r\nexport class Label extends UIComponent {\r\n\r\n    /**\r\n     * @private\r\n     * 文本 <code>Text</code> 实例。\r\n     */\r\n    protected _tf: Text;\r\n    protected _fitContent: LabelFitContent;\r\n    /** @internal */\r\n    private _fitFlag: boolean;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Label</code> 实例。\r\n     * @param text 文本内容字符串。\r\n     */\r\n    constructor(text?: string) {\r\n        super();\r\n        this._fitContent = \"no\";\r\n        if (text != null)\r\n            this.text = text;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @inheritDoc \r\n    */\r\n    protected createChildren(): void {\r\n        this._tf = new Text();\r\n        this._tf.hideFlags = HideFlags.HideAndDontSave;\r\n        this._tf._parseEscapeChars = true;\r\n        this._tf._onPostLayout = () => this._onPostLayout();\r\n        this._tf.on(Event.CHANGE, () => {\r\n            this.event(Event.CHANGE);\r\n            if (!this._isWidthSet || !this._isHeightSet)\r\n                this.onCompResize();\r\n        });\r\n        this.addChild(this._tf);\r\n    }\r\n\r\n    protected _onPostLayout() {\r\n        if ((this._fitContent == \"yes\" || this._fitContent == \"height\") && (LayaEnv.isPlaying || this._tf.textWidth > 0 && this._tf.textHeight > 0)) {\r\n            this._fitFlag = true;\r\n            if (this._fitContent == \"height\")\r\n                this.height = this._tf.textHeight;\r\n            else\r\n                this.size(this._tf.textWidth, this._tf.textHeight);\r\n            this._fitFlag = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当前文本内容字符串。\r\n     * @see laya.display.Text.text\r\n     */\r\n    get text(): string {\r\n        return this._tf.text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._tf.text = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#wordWrap\r\n     */\r\n    get wordWrap(): boolean {\r\n        return this._tf.wordWrap;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#wordWrap\r\n     */\r\n    set wordWrap(value: boolean) {\r\n        this._tf.wordWrap = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#color\r\n     */\r\n    get color(): string {\r\n        return this._tf.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._tf.color = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#font\r\n     */\r\n    get font(): string {\r\n        return this._tf.font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._tf.font = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#align\r\n     */\r\n    get align(): string {\r\n        return this._tf.align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        this._tf.align = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#valign\r\n     */\r\n    get valign(): string {\r\n        return this._tf.valign;\r\n    }\r\n\r\n    set valign(value: string) {\r\n        this._tf.valign = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#bold\r\n     */\r\n    get bold(): boolean {\r\n        return this._tf.bold;\r\n    }\r\n\r\n    set bold(value: boolean) {\r\n        this._tf.bold = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#italic\r\n     */\r\n    get italic(): boolean {\r\n        return this._tf.italic;\r\n    }\r\n\r\n    set italic(value: boolean) {\r\n        this._tf.italic = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#leading\r\n     */\r\n    get leading(): number {\r\n        return this._tf.leading;\r\n    }\r\n\r\n    set leading(value: number) {\r\n        this._tf.leading = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#fontSize\r\n     */\r\n    get fontSize(): number {\r\n        return this._tf.fontSize;\r\n    }\r\n\r\n    set fontSize(value: number) {\r\n        this._tf.fontSize = value;\r\n    }\r\n\r\n    /**\r\n     * <p>边距信息</p>\r\n     * <p>\"上边距，右边距，下边距 , 左边距（边距以像素为单位）\"</p>\r\n     */\r\n    get padding(): string {\r\n        return this._tf.padding.join(\",\");\r\n    }\r\n\r\n    set padding(value: string) {\r\n        this._tf.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#bgColor\r\n     */\r\n    get bgColor(): string {\r\n        return this._tf.bgColor\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._tf.bgColor = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#borderColor\r\n     */\r\n    get borderColor(): string {\r\n        return this._tf.borderColor\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._tf.borderColor = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#stroke\r\n     */\r\n    get stroke(): number {\r\n        return this._tf.stroke;\r\n    }\r\n\r\n    set stroke(value: number) {\r\n        this._tf.stroke = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#strokeColor\r\n     */\r\n    get strokeColor(): string {\r\n        return this._tf.strokeColor;\r\n    }\r\n\r\n    set strokeColor(value: string) {\r\n        this._tf.strokeColor = value;\r\n    }\r\n\r\n    get html(): boolean {\r\n        return this._tf.html;\r\n    }\r\n\r\n    /** 设置是否富文本，支持html语法 */\r\n    set html(value: boolean) {\r\n        this._tf.html = value;\r\n    }\r\n\r\n    get ubb(): boolean {\r\n        return this._tf.ubb;\r\n    }\r\n\r\n    /** 设置是否使用UBB语法解析文本 */\r\n    set ubb(value: boolean) {\r\n        this._tf.ubb = value;\r\n    }\r\n\r\n    get maxWidth(): number {\r\n        return this._tf.maxWidth;\r\n    }\r\n\r\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\r\n    set maxWidth(value: number) {\r\n        this._tf.maxWidth = value;\r\n    }\r\n\r\n    get fitContent(): LabelFitContent {\r\n        return this._fitContent;\r\n    }\r\n\r\n    /** 设置文本框大小是否自动适应文本内容的大小。可取值为both或者height */\r\n    set fitContent(value: LabelFitContent) {\r\n        if (typeof (value) === \"boolean\")\r\n            value = value ? \"yes\" : \"no\";\r\n        if (this._fitContent != value) {\r\n            if ((value == \"yes\" || value == \"height\") && !SerializeUtil.isDeserializing && (LayaEnv.isPlaying || this._tf.textWidth > 0 && this._tf.textHeight > 0)) {\r\n                if (value == \"height\")\r\n                    this.height = this._tf.textHeight;\r\n                else\r\n                    this.size(this._tf.textWidth, this._tf.textHeight);\r\n            }\r\n            this._fitContent = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 文本控件实体 <code>Text</code> 实例。\r\n     */\r\n    get textField(): Text {\r\n        return this._tf;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        return this._tf.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        return this._tf.height;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet || this._tf.text) return super.get_width();\r\n        return 0;\r\n    }\r\n\r\n    set_width(value: number): void {\r\n        if (this._fitContent == \"yes\" && !this._fitFlag)\r\n            return;\r\n        super.set_width(value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _setWidth(value: number): void {\r\n        super._setWidth(value);\r\n        this._tf.width = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet || this._tf.text) return super.get_height();\r\n        return 0;\r\n    }\r\n\r\n    set_height(value: number): void {\r\n        if ((this._fitContent == \"yes\" || this._fitContent == \"height\") && !this._fitFlag)\r\n            return;\r\n        super.set_height(value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._tf.height = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.text = value + \"\";\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#overflow\r\n     */\r\n    get overflow(): string {\r\n        return this._tf.overflow;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#overflow\r\n     */\r\n    set overflow(value: string) {\r\n        this._tf.overflow = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#underline\r\n     */\r\n    get underline(): boolean {\r\n        return this._tf.underline;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#underline\r\n     */\r\n    set underline(value: boolean) {\r\n        this._tf.underline = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#underlineColor\r\n     */\r\n    get underlineColor(): string {\r\n        return this._tf.underlineColor;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#underlineColor\r\n     */\r\n    set underlineColor(value: string) {\r\n        this._tf.underlineColor = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#ignoreLang\r\n     */\r\n    get ignoreLang(): boolean {\r\n        return this._tf.ignoreLang;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#ignoreLang\r\n     */\r\n    set ignoreLang(value: boolean) {\r\n        this._tf.ignoreLang = value;\r\n    }\r\n\r\n    public get templateVars(): Record<string, any> {\r\n        return this._tf.templateVars;\r\n    }\r\n\r\n    public set templateVars(value: Record<string, any> | boolean) {\r\n        this._tf.templateVars = value;\r\n    }\r\n\r\n    public setVar(name: string, value: any): Label {\r\n        this._tf.setVar(name, value);\r\n\r\n        return this;\r\n    }\r\n}","import { Styles } from \"./Styles\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { AutoBitmap } from \"./AutoBitmap\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { UIUtils } from \"./UIUtils\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { URL } from \"../net/URL\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * 资源加载完成后调度。\r\n * @eventType Event.LOADED\r\n */\r\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Image</code> 类是用于表示位图图像或绘制图形的显示对象。\r\n * Image和Clip组件是唯一支持异步加载的两个组件，比如img.skin = \"abc/xxx.png\"，其他UI组件均不支持异步加载。\r\n * \r\n * @example <caption>以下示例代码，创建了一个新的 <code>Image</code> 实例，设置了它的皮肤、位置信息，并添加到舞台上。</caption>\r\n *\tpackage\r\n *\t {\r\n *\t\timport laya.ui.Image;\r\n *\t\tpublic class Image_Example\r\n *\t\t{\r\n *\t\t\tpublic function Image_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tonInit();\r\n *\t\t\t}\r\n *\t\t\tprivate function onInit():void\r\n *\t \t\t{\r\n *\t\t\t\tvar bg:Image = new Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\r\n *\t\t\t\tbg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\r\n *\t\t\t\tbg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\r\n *\t\t\t\tbg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\r\n *\t\t\t\tbg.width = 150;//设置 bg 对象的宽度。\r\n *\t\t\t\tbg.height = 250;//设置 bg 对象的高度。\r\n *\t\t\t\tLaya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\r\n *\t\t\t\tvar image:Image = new Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\r\n *\t\t\t\timage.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\r\n *\t\t\t\timage.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\r\n *\t\t\t\tLaya.stage.addChild(image);//将此 image 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t }\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * onInit();\r\n * function onInit() {\r\n *     var bg = new laya.ui.Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\r\n *     bg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\r\n *     bg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\r\n *     bg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\r\n *     bg.width = 150;//设置 bg 对象的宽度。\r\n *     bg.height = 250;//设置 bg 对象的高度。\r\n *     Laya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\r\n *     var image = new laya.ui.Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\r\n *     image.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\r\n *     image.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\r\n *     Laya.stage.addChild(image);//将此 image 对象添加到显示列表。\r\n * }\r\n * @example\r\n * class Image_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         var bg: laya.ui.Image = new laya.ui.Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\r\n *         bg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\r\n *         bg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\r\n *         bg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\r\n *         bg.width = 150;//设置 bg 对象的宽度。\r\n *         bg.height = 250;//设置 bg 对象的高度。\r\n *         Laya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\r\n *         var image: laya.ui.Image = new laya.ui.Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\r\n *         image.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\r\n *         image.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\r\n *         Laya.stage.addChild(image);//将此 image 对象添加到显示列表。\r\n *     }\r\n * }\r\n * @see AutoBitmap\r\n */\r\nexport class Image extends UIComponent {\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _group: string;\r\n    protected _useSourceSize: boolean;\r\n\r\n    declare _graphics: AutoBitmap;\r\n\r\n    /**\r\n     * 创建一个 <code>Image</code> 实例。\r\n     * @param skin 皮肤资源地址。\r\n     */\r\n    constructor(skin: string | null = null) {\r\n        super();\r\n        this.skin = skin;\r\n    }\r\n\r\n    /**\r\n     * 销毁对象并释放加载的皮肤资源。\r\n     */\r\n    dispose(): void {\r\n        this.destroy(true);\r\n        ILaya.loader.clearRes(this._skin);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this.setGraphics(new AutoBitmap(), true);\r\n    }\r\n\r\n    /**\r\n     * <p>对象的皮肤地址，以字符串表示。</p>\r\n     * <p>如果资源未加载，则先加载资源，加载完成后应用于此对象。</p>\r\n     * <b>注意：</b>资源加载完成后，会自动缓存至资源库中。\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            let source = Loader.getRes(url);\r\n            if (source) {\r\n                this.source = source;\r\n                return Promise.resolve();\r\n            }\r\n            else {\r\n                let sk = this._skin;\r\n                return ILaya.loader.load(url, { type: Loader.IMAGE, group: this._group }).then(tex => {\r\n                    if (sk == this._skin)\r\n                        this.source = tex;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.source = null;\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    get source(): Texture {\r\n        return this._graphics.source;\r\n    }\r\n\r\n    set source(value: Texture) {\r\n        if (!this._graphics) return;\r\n        this._graphics.source = value;\r\n        this.event(Event.LOADED);\r\n        this.repaint();\r\n\r\n        if (this._useSourceSize && value) {\r\n            this.size(value.sourceWidth, value.sourceHeight);\r\n            this._useSourceSize = true; //重置，因为size会改变\r\n        }\r\n        else\r\n            this.onCompResize();\r\n    }\r\n\r\n    get color() {\r\n        return this._graphics.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._graphics.color = value;\r\n    }\r\n\r\n    /**\r\n     * 资源分组。\r\n     */\r\n    get group(): string {\r\n        return this._group;\r\n    }\r\n\r\n    set group(value: string) {\r\n        if (value && this._skin) Loader.setGroup(this._skin, value);\r\n        this._group = value;\r\n    }\r\n\r\n    get useSourceSize(): boolean {\r\n        return this._useSourceSize;\r\n    }\r\n\r\n    set useSourceSize(value: boolean) {\r\n        if (this._useSourceSize != value) {\r\n            if (value && this._graphics.source)\r\n                this.size(this._graphics.source.sourceWidth, this._graphics.source.sourceHeight);\r\n            this._useSourceSize = value; //放最后，因为size会改变autoSize的值\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        return this._graphics.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        return this._graphics.height;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._graphics.width = value;\r\n        if (!SerializeUtil.isDeserializing)\r\n            this._useSourceSize = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._graphics.height = value;\r\n        if (!SerializeUtil.isDeserializing)\r\n            this._useSourceSize = false;\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"。</li></ul></p>\r\n     * @see laya.ui.AutoBitmap#sizeGrid\r\n     */\r\n    get sizeGrid(): string {\r\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\r\n        return null;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        if (value)\r\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n        else\r\n            this._graphics.sizeGrid = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any): void {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'string')\r\n            this.skin = value as string;\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Label } from \"./Label\";\r\nimport { Image } from \"./Image\";\r\nimport { Button } from \"./Button\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * 移动滑块位置时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 移动滑块位置完成（用户鼠标抬起）后调度。\r\n * @eventType @eventType laya.events.EventD\r\n *\r\n */\r\n/*[Event(name = \"changed\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 使用 <code>Slider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\r\n * <p>滑块的当前值由滑块端点（对应于滑块的最小值和最大值）之间滑块的相对位置确定。</p>\r\n * <p>滑块允许最小值和最大值之间特定间隔内的值。滑块还可以使用数据提示显示其当前值。</p>\r\n *\r\n * @see laya.ui.HSlider\r\n * @see laya.ui.VSlider\r\n */\r\nexport class Slider extends UIComponent {\r\n\r\n    /** @private 获取对 <code>Slider</code> 组件所包含的 <code>Label</code> 组件的引用。*/\r\n    static label: Label = null;// new Label(); 静态的可能还没有初始化\r\n\r\n    /**\r\n     * 数据变化处理器。\r\n     * <p>默认回调参数为滑块位置属性 <code>value</code>属性值：Number 。</p>\r\n     */\r\n    changeHandler: Handler;\r\n\r\n    /**\r\n     * 一个布尔值，指示是否为垂直滚动。如果值为true，则为垂直方向，否则为水平方向。\r\n     * <p>默认值为：true。</p>\r\n     * @default true\r\n     */\r\n    isVertical: boolean = true;\r\n\r\n    /**\r\n     * 一个布尔值，指示是否显示标签。\r\n     * @default true\r\n     */\r\n    showLabel: boolean = true;\r\n\r\n    /**\r\n     * 一个布尔值，指示是否显示进度条。\r\n     */\r\n    protected _showProgress: boolean = false;\r\n\r\n    /**@private */\r\n    protected _allowClickBack: boolean;\r\n    /**@private */\r\n    protected _max: number = 100;\r\n    /**@private */\r\n    protected _min: number = 0;\r\n    /**@private */\r\n    protected _tick: number = 1;\r\n    /**@private */\r\n    protected _value: number = 0;\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _bg: Image;\r\n    /**@private */\r\n    protected _progress: Image;\r\n    /**@private */\r\n    protected _bar: Button;\r\n    /**@private */\r\n    protected _tx: number;\r\n    /**@private */\r\n    protected _ty: number;\r\n    /**@private */\r\n    protected _maxMove: number;\r\n    /**@private */\r\n    protected _globalSacle: Point;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Slider</code> 类示例。\r\n     * @param skin 皮肤。\r\n     */\r\n    constructor(skin: string = null) {\r\n        super();\r\n        if (!Slider.label) {\r\n            Slider.label = new Label();\r\n            Slider.label.hideFlags = HideFlags.HideAndDontSave;\r\n        }\r\n        this.skin = skin;\r\n    }\r\n\r\n    /**\r\n     *@inheritDoc\r\n     @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._bg && this._bg.destroy(destroyChild);\r\n        this._bar && this._bar.destroy(destroyChild);\r\n        this._progress && this._progress.destroy(destroyChild);\r\n        this._bg = null;\r\n        this._bar = null;\r\n        this._progress = null;\r\n        this.changeHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected createChildren(): void {\r\n        this._bg = new Image();\r\n        this._bg.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._bg);\r\n\r\n        this._progress = new Image();\r\n        this._progress.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChildAt(this._progress, 1);\r\n\r\n        this._bar = new Button();\r\n        this._bar.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._bar);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected initialize(): void {\r\n        this._bar.on(Event.MOUSE_DOWN, this, this.onBarMouseDown);\r\n        this.allowClickBack = true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滑块的的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    protected onBarMouseDown(e: Event): void {\r\n        let stage = ILaya.stage;\r\n        this._globalSacle || (this._globalSacle = new Point());\r\n        this._globalSacle.setTo(this.globalScaleX || 0.01, this.globalScaleY || 0.01);\r\n\r\n        this._maxMove = this.isVertical ? (this.height - this._bar.height) : (this.width - this._bar.width);\r\n        this._tx = stage.mouseX;\r\n        this._ty = stage.mouseY;\r\n        stage.on(Event.MOUSE_MOVE, this, this.mouseMove);\r\n        stage.once(Event.MOUSE_UP, this, this.mouseUp);\r\n        stage.once(Event.MOUSE_OUT, this, this.mouseUp);\r\n        //显示提示\r\n        this.showValueText();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 显示标签。\r\n     */\r\n    protected showValueText(): void {\r\n        if (this.showLabel) {\r\n            var label: Label = Slider.label;\r\n            this.addChild(label);\r\n            label.textField.text = this._value + \"\";\r\n            if (this.isVertical) {\r\n                label.x = this._bar._x + 20;\r\n                label.y = (this._bar.height - label.height) * 0.5 + this._bar._y;\r\n            } else {\r\n                label.y = this._bar._y - 20;\r\n                label.x = (this._bar.width - label.width) * 0.5 + this._bar._x;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 隐藏标签。\r\n     */\r\n    protected hideValueText(): void {\r\n        Slider.label && Slider.label.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private mouseUp(e: Event): void {\r\n        let stage = ILaya.stage;\r\n        stage.off(Event.MOUSE_MOVE, this, this.mouseMove);\r\n        stage.off(Event.MOUSE_UP, this, this.mouseUp);\r\n        stage.off(Event.MOUSE_OUT, this, this.mouseUp);\r\n        this.sendChangeEvent(Event.CHANGED);\r\n        this.hideValueText();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private mouseMove(e: Event): void {\r\n        let stage = ILaya.stage;\r\n        var oldValue: number = this._value;\r\n        if (this.isVertical) {\r\n            this._bar.y += (stage.mouseY - this._ty) / this._globalSacle.y;\r\n            if (this._bar._y > this._maxMove) this._bar.y = this._maxMove;\r\n            else if (this._bar._y < 0) this._bar.y = 0;\r\n            this._value = this._bar._y / this._maxMove * (this._max - this._min) + this._min;\r\n            this._progress.height = this._bar._y + 0.5 * this._bar.height;\r\n        } else {\r\n            this._bar.x += (stage.mouseX - this._tx) / this._globalSacle.x;\r\n            if (this._bar._x > this._maxMove) this._bar.x = this._maxMove;\r\n            else if (this._bar._x < 0) this._bar.x = 0;\r\n            this._value = this._bar._x / this._maxMove * (this._max - this._min) + this._min;\r\n            this._progress.width = this._bar._x + 0.5 * this._bar.width;\r\n        }\r\n\r\n        this._tx = stage.mouseX;\r\n        this._ty = stage.mouseY;\r\n\r\n        if (this._tick != 0) {\r\n            var pow: number = Math.pow(10, (this._tick + \"\").length - 1);\r\n            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * pow) / pow;\r\n        }\r\n\r\n        if (this._value != oldValue) {\r\n            this.sendChangeEvent();\r\n        }\r\n        this.showValueText();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected sendChangeEvent(type: string = Event.CHANGE): void {\r\n        this.event(type);\r\n        this.changeHandler && this.changeHandler.runWith(this._value);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    get showProgress(): boolean {\r\n        return this._showProgress;\r\n    }\r\n\r\n    set showProgress(value: boolean) {\r\n        this._showProgress = value;\r\n        if (value) {\r\n            if (this._skin && !SerializeUtil.isDeserializing)\r\n                this._setSkin(this._skin);\r\n        }\r\n        else\r\n            this._progress.skin = null;\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n\r\n        if (url) {\r\n            return AssetDb.inst.resolveURL(url).then(url => {\r\n                if (this._destroyed)\r\n                    return null;\r\n\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                let tasks = [\r\n                    this._bg._setSkin(url),\r\n                    this._bar._setSkin(Utils.replaceFileExtension(url, \"$bar.png\", true))\r\n                ];\r\n                if (this._showProgress)\r\n                    tasks.push(this._progress._setSkin(Utils.replaceFileExtension(url, \"$progress.png\", true)));\r\n                else\r\n                    this._progress.skin = null;\r\n\r\n                return Promise.all(tasks).then(() => this._skinLoaded());\r\n            });\r\n        }\r\n        else {\r\n            this._bg.skin = null;\r\n            this._bar.skin = null;\r\n            this._progress.skin = null;\r\n            this._skinLoaded();\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        this.setBarPoint();\r\n        this.callLater(this.changeValue);\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置滑块的位置信息。\r\n     */\r\n    protected setBarPoint(): void {\r\n        if (this.isVertical) this._bar.x = Math.round((this._bg.width - this._bar.width) * 0.5);\r\n        else this._bar.y = Math.round((this._bg.height - this._bar.height) * 0.5);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    protected measureWidth(): number {\r\n        return Math.max(this._bg.width, this._bar.width);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureHeight(): number {\r\n        return Math.max(this._bg.height, this._bar.height);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        super._sizeChanged();\r\n        if (this.isVertical) this._bg.height = this.height;\r\n        else this._bg.width = this.width;\r\n        this.setBarPoint();\r\n        this.changeValue();\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的背景图（ <code>Image</code> ）和滑块按钮（ <code>Button</code> ）实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this._bg.sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        this._bg.sizeGrid = value;\r\n        this._bar.sizeGrid = value;\r\n        this._progress.sizeGrid = this._bar.sizeGrid;\r\n    }\r\n\r\n    /**\r\n     * 设置滑动条的信息。\r\n     * @param min 滑块的最小值。\r\n     * @param max 滑块的最小值。\r\n     * @param value 滑块的当前值。\r\n     */\r\n    setSlider(min: number, max: number, value: number): void {\r\n        this._value = -1;\r\n        this._min = min;\r\n        this._max = max > min ? max : min;\r\n        this.value = value < min ? min : value > max ? max : value;\r\n    }\r\n\r\n    /**\r\n     * 滑动的刻度值，滑动数值为tick的整数倍。默认值为1。\r\n     */\r\n    get tick(): number {\r\n        return this._tick;\r\n    }\r\n\r\n    set tick(value: number) {\r\n        if (this._tick != value) {\r\n            this._tick = value;\r\n            this.callLater(this.changeValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变滑块的位置值。\r\n     */\r\n    changeValue(): void {\r\n        if (this.tick != 0) {\r\n            var pow: number = Math.pow(10, (this._tick + \"\").length - 1);\r\n            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * pow) / pow;\r\n        }\r\n\r\n        if (this._max >= this._min) {\r\n            this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;\r\n        } else {\r\n            //当设置的最小值大于最大值的时候，滑动条会反向处理，滑动条限制也应反向处理。\r\n            this._value = this._value > this._min ? this._min : this._value < this._max ? this._max : this._value;\r\n        }\r\n\r\n        var num: number = this._max - this._min;\r\n        if (num === 0) num = 1;\r\n        if (this.isVertical) {\r\n            this._bar.y = (this._value - this._min) / num * (this.height - this._bar.height);\r\n            this._progress.height = this._bar._y + 0.5 * this._bar.height;\r\n        }\r\n        else {\r\n            this._bar.x = (this._value - this._min) / num * (this.width - this._bar.width);\r\n            this._progress.width = this._bar._x + 0.5 * this._bar.width;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示最高位置的数字。 默认值为100。\r\n     */\r\n    get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: number) {\r\n        if (this._max != value) {\r\n            this._max = value;\r\n            this.callLater(this.changeValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示最低位置的数字。 默认值为0。\r\n     */\r\n    get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: number) {\r\n        if (this._min != value) {\r\n            this._min = value;\r\n            this.callLater(this.changeValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示当前滑块位置的数字。\r\n     */\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n    set value(num: number) {\r\n        if (this._value != num) {\r\n            var oldValue: number = this._value;\r\n            this._value = num;\r\n            this.changeValue();\r\n            if (this._value != oldValue) {\r\n                this.sendChangeEvent();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 一个布尔值，指定是否允许通过点击滑动条改变 <code>Slider</code> 的 <code>value</code> 属性值。\r\n     */\r\n    get allowClickBack(): boolean {\r\n        return this._allowClickBack;\r\n    }\r\n\r\n    set allowClickBack(value: boolean) {\r\n        if (this._allowClickBack != value) {\r\n            this._allowClickBack = value;\r\n            if (value) this._bg.on(Event.MOUSE_DOWN, this, this.onBgMouseDown);\r\n            else this._bg.off(Event.MOUSE_DOWN, this, this.onBgMouseDown);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滑动条的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    protected onBgMouseDown(e: Event): void {\r\n        var point: Point = this._bg.getMousePoint();\r\n        if (this.isVertical) this.value = point.y / (this.height - this._bar.height) * (this._max - this._min) + this._min;\r\n        else this.value = point.x / (this.width - this._bar.width) * (this._max - this._min) + this._min;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.value = Number(value);\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**\r\n     * 表示滑块按钮的引用。\r\n     */\r\n    get bar(): Button {\r\n        return this._bar;\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Button } from \"./Button\";\r\nimport { Slider } from \"./Slider\";\r\nimport { UIConfig } from \"./../../UIConfig\";\r\nimport { Styles } from \"./Styles\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Ease } from \"../utils/Ease\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Tween } from \"../utils/Tween\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\n\r\n/**\r\n * 滚动条滑块位置发生变化后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 开始滑动。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"start\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 结束滑动。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"end\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>ScrollBar</code> 组件是一个滚动条组件。\r\n * <p>当数据太多以至于显示区域无法容纳时，最终用户可以使用 <code>ScrollBar</code> 组件控制所显示的数据部分。</p>\r\n * <p> 滚动条由四部分组成：两个箭头按钮、一个轨道和一个滑块。 </p>\t *\r\n *\r\n * @see laya.ui.VScrollBar\r\n * @see laya.ui.HScrollBar\r\n */\r\nexport class ScrollBar extends UIComponent {\r\n    /**滚动衰减系数*/\r\n    rollRatio: number = 0.97;\r\n    /**滚动变化时回调，回传value参数。*/\r\n    changeHandler: Handler;\r\n    /**是否缩放滑动条，默认值为true。 */\r\n    scaleBar: boolean = true;\r\n    /**一个布尔值，指定是否自动隐藏滚动条(无需滚动时)，默认值为false。*/\r\n    autoHide: boolean = false;\r\n    /**橡皮筋效果极限距离，0为没有橡皮筋效果。*/\r\n    elasticDistance: number = 0;\r\n    /**橡皮筋回弹时间，单位为毫秒。*/\r\n    elasticBackTime: number = 500;\r\n    /**上按钮 */\r\n    upButton: Button;\r\n    /**下按钮 */\r\n    downButton: Button;\r\n    /**滑条 */\r\n    slider: Slider;\r\n    /**顶部移动限制（达到限制后，会抛出dragTopLimit事件，配合stopMoveLimit()，可让开发者做一些动态数据更新的操作）*/\r\n    topMoveLimit: number = 0;\r\n    /**底部移动限制（达到限制后，会抛出dragTopLimit事件，配合stopMoveLimit()，可让开发者做一些动态数据更新的操作）*/\r\n    bottomMoveLimit: number = 0;\r\n    /** 调用滚动停止接口stopMoveLimit时，是否禁止内容的拖拽 */\r\n    disableDrag: boolean = false;\r\n\r\n    /**@private */\r\n    protected _showButtons: boolean;\r\n    /**@private */\r\n    protected _scrollSize: number = 1;\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _thumbPercent: number = 1;\r\n    /**@private */\r\n    protected _target: Sprite;\r\n    /**@private */\r\n    protected _lastPoint: Point;\r\n    /**@private */\r\n    protected _lastOffset: number = 0;\r\n    /**@private */\r\n    protected _checkElastic: boolean = false;\r\n    /**@private */\r\n    protected _isElastic: boolean = false;\r\n    /**@private */\r\n    protected _value: number;\r\n    /**@private */\r\n    protected _hide: boolean = false;\r\n    /**@private */\r\n    protected _clickOnly: boolean = true;\r\n    /**@private */\r\n    protected _offsets: any[];\r\n    /**@private */\r\n    protected _touchScrollEnable: boolean;\r\n    /**@private */\r\n    protected _mouseWheelEnable: boolean;\r\n\r\n    /**\r\n     * 创建一个新的 <code>ScrollBar</code> 实例。\r\n     * @param skin 皮肤资源地址。\r\n     */\r\n    constructor(skin: string = null) {\r\n        super();\r\n\r\n        this._showButtons = UIConfig.showButtons;\r\n        this._touchScrollEnable = UIConfig.touchScrollEnable;\r\n        this._mouseWheelEnable = UIConfig.mouseWheelEnable;\r\n\r\n        this.skin = skin;\r\n        this.max = 1;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.stopScroll();\r\n        this.target = null;\r\n        super.destroy(destroyChild);\r\n        this.upButton && this.upButton.destroy(destroyChild);\r\n        this.downButton && this.downButton.destroy(destroyChild);\r\n        this.slider && this.slider.destroy(destroyChild);\r\n        this.upButton = this.downButton = null;\r\n        this.slider = null;\r\n        this.changeHandler = null;\r\n        this._offsets = null;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this.slider = new Slider();\r\n        this.slider.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this.slider);\r\n\r\n        this.upButton = new Button();\r\n        this.upButton.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this.upButton);\r\n\r\n        this.downButton = new Button();\r\n        this.downButton.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this.downButton);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected initialize(): void {\r\n        this.slider.showLabel = false;\r\n        this.slider.tick = 0;\r\n        this.slider.on(Event.CHANGE, this, this.onSliderChange);\r\n        this.slider.setSlider(0, 0, 0);\r\n\r\n        this.upButton.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\r\n        this.downButton.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滑块位置发生改变的处理函数。\r\n     */\r\n    protected onSliderChange(): void {\r\n        if (this._value != this.slider.value) this.value = this.slider.value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 向上和向下按钮的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    protected onButtonMouseDown(e: Event): void {\r\n        var isUp: boolean = e.currentTarget === this.upButton;\r\n        this.slide(isUp);\r\n        ILaya.timer.once(Styles.scrollBarDelayTime, this, this.startLoop, [isUp]);\r\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n    }\r\n\r\n    /**@private */\r\n    protected startLoop(isUp: boolean): void {\r\n        ILaya.timer.frameLoop(1, this, this.slide, [isUp]);\r\n    }\r\n\r\n    /**@private */\r\n    protected slide(isUp: boolean): void {\r\n        if (isUp) this.value -= this._scrollSize;\r\n        else this.value += this._scrollSize;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 舞台的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    protected onStageMouseUp(e: Event): void {\r\n        ILaya.timer.clear(this, this.startLoop);\r\n        ILaya.timer.clear(this, this.slide);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n\r\n        if (url) {\r\n            return AssetDb.inst.resolveURL(url).then(url => {\r\n                if (this._destroyed)\r\n                    return null;\r\n\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                return Promise.all([\r\n                    this.slider._setSkin(url),\r\n                    this.upButton._setSkin(Utils.replaceFileExtension(url, \"$up.png\", true)),\r\n                    this.downButton._setSkin(Utils.replaceFileExtension(url, \"$down.png\", true))\r\n                ]).then(() => this._skinLoaded());\r\n            });\r\n        }\r\n        else {\r\n            this.slider.skin = null;\r\n            this.upButton.skin = null;\r\n            this.downButton.skin = null;\r\n            this._skinLoaded();\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this.callLater(this.changeScrollBar);\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 更改对象的皮肤及位置。\r\n     */\r\n    protected changeScrollBar(): void {\r\n        this.upButton.visible = this._showButtons;\r\n        this.downButton.visible = this._showButtons;\r\n        if (this.slider.isVertical)\r\n            this.slider.y = this._showButtons ? this.upButton.height : 0;\r\n        else\r\n            this.slider.x = this._showButtons ? this.upButton.width : 0;\r\n        this.resetPositions();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        super._sizeChanged();\r\n        this.repaint();\r\n        this.resetPositions();\r\n        this.event(Event.CHANGE);\r\n        this.changeHandler && this.changeHandler.runWith(this.value);\r\n    }\r\n\r\n    /**@private */\r\n    private resetPositions(): void {\r\n        if (this.slider.isVertical) this.slider.height = this.height - (this._showButtons ? (this.upButton.height + this.downButton.height) : 0);\r\n        else this.slider.width = this.width - (this._showButtons ? (this.upButton.width + this.downButton.width) : 0);\r\n        this.resetButtonPosition();\r\n\r\n    }\r\n\r\n    /**@private */\r\n    protected resetButtonPosition(): void {\r\n        if (this.slider.isVertical) this.downButton.y = this.slider._y + this.slider.height;\r\n        else this.downButton.x = this.slider._x + this.slider.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureWidth(): number {\r\n        if (this.slider.isVertical) return this.slider.width;\r\n        return 100;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureHeight(): number {\r\n        if (this.slider.isVertical) return 100;\r\n        return this.slider.height;\r\n    }\r\n\r\n    /**\r\n     * 设置滚动条信息。\r\n     * @param min 滚动条最小位置值。\r\n     * @param max 滚动条最大位置值。\r\n     * @param value 滚动条当前位置值。\r\n     */\r\n    setScroll(min: number, max: number, value: number): void {\r\n        this.runCallLater(this._sizeChanged);\r\n        this.slider.setSlider(min, max, value);\r\n        //_upButton.disabled = max <= 0;\r\n        //_downButton.disabled = max <= 0;\r\n        this.slider.bar.visible = max > 0;\r\n        if (!this._hide && this.autoHide) this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示最高滚动位置的数字。\r\n     */\r\n    get max(): number {\r\n        return this.slider.max;\r\n    }\r\n\r\n    set max(value: number) {\r\n        this.slider.max = value;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示最低滚动位置的数字。\r\n     */\r\n    get min(): number {\r\n        return this.slider.min;\r\n    }\r\n\r\n    set min(value: number) {\r\n        this.slider.min = value;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示当前滚动位置的数字。\r\n     */\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n    set value(v: number) {\r\n        if (v !== this._value) {\r\n            this._value = v;\r\n            if (!this._isElastic) {\r\n                if (this.slider[\"_value\"] != v) {\r\n                    this.slider[\"_value\"] = v;\r\n                    this.slider.changeValue();\r\n                }\r\n                this._value = this.slider[\"_value\"];\r\n            }\r\n            this.event(Event.CHANGE);\r\n            this.changeHandler && this.changeHandler.runWith(this._value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 一个布尔值，指示滚动条是否为垂直滚动。如果值为true，则为垂直滚动，否则为水平滚动。\r\n     * <p>默认值为：true。</p>\r\n     */\r\n    get isVertical(): boolean {\r\n        return this.slider.isVertical;\r\n    }\r\n\r\n    set isVertical(value: boolean) {\r\n        this.slider.isVertical = value;\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的 <code>Slider</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this.slider.sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        this.slider.sizeGrid = value;\r\n    }\r\n\r\n    /**获取或设置一个值，该值表示按下滚动条轨道时页面滚动的增量。 */\r\n    get scrollSize(): number {\r\n        return this._scrollSize;\r\n    }\r\n\r\n    set scrollSize(value: number) {\r\n        this._scrollSize = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.value = Number(value);\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**获取或设置一个值，该值表示滑条长度比例，值为：（0-1）。 */\r\n    get thumbPercent(): number {\r\n        return this._thumbPercent;\r\n    }\r\n\r\n    set thumbPercent(value: number) {\r\n        this.runCallLater(this.changeScrollBar);\r\n        this.runCallLater(this._sizeChanged);\r\n        value = value >= 1 ? 0.99 : value;\r\n        this._thumbPercent = value;\r\n        if (this.scaleBar) {\r\n            if (this.slider.isVertical) this.slider.bar.height = Math.max(this.slider.height * value, Styles.scrollBarMinNum);\r\n            else this.slider.bar.width = Math.max(this.slider.width * value, Styles.scrollBarMinNum);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置滚动对象。\r\n     * @see laya.ui.TouchScroll#target\r\n     */\r\n    get target(): Sprite {\r\n        return this._target;\r\n    }\r\n\r\n    set target(value: Sprite) {\r\n        if (this._target) {\r\n            this._target.off(Event.MOUSE_WHEEL, this, this.onTargetMouseWheel);\r\n            this._target.off(Event.MOUSE_DOWN, this, this.onTargetMouseDown);\r\n        }\r\n        this._target = value;\r\n        if (value) {\r\n            this._mouseWheelEnable && this._target.on(Event.MOUSE_WHEEL, this, this.onTargetMouseWheel);\r\n            this._touchScrollEnable && this._target.on(Event.MOUSE_DOWN, this, this.onTargetMouseDown);\r\n        }\r\n    }\r\n\r\n    /**是否隐藏滚动条，不显示滚动条，但是可以正常滚动，默认为false。*/\r\n    get hide(): boolean {\r\n        return this._hide;\r\n    }\r\n\r\n    set hide(value: boolean) {\r\n        this._hide = value;\r\n        this.visible = !value;\r\n    }\r\n\r\n    /**一个布尔值，指定是否显示向上、向下按钮，默认值为true。*/\r\n    get showButtons(): boolean {\r\n        return this._showButtons;\r\n    }\r\n\r\n    set showButtons(value: boolean) {\r\n        this._showButtons = value;\r\n        this.callLater(this.changeScrollBar);\r\n    }\r\n\r\n    /**一个布尔值，指定是否开启触摸，默认值为true。*/\r\n    get touchScrollEnable(): boolean {\r\n        return this._touchScrollEnable;\r\n    }\r\n\r\n    set touchScrollEnable(value: boolean) {\r\n        this._touchScrollEnable = value;\r\n        this.target = this._target;\r\n    }\r\n\r\n    /** 一个布尔值，指定是否滑轮滚动，默认值为true。*/\r\n    get mouseWheelEnable(): boolean {\r\n        return this._mouseWheelEnable;\r\n    }\r\n\r\n    set mouseWheelEnable(value: boolean) {\r\n        this._mouseWheelEnable = value;\r\n        this.target = this._target;\r\n    }\r\n\r\n    /**@private */\r\n    protected onTargetMouseWheel(e: Event): void {\r\n        this.value += e.delta * this._scrollSize;\r\n        this.target = this._target;\r\n    }\r\n\r\n    isLockedFun: Function;\r\n\r\n    /**@private */\r\n    protected onTargetMouseDown(e: Event): void {\r\n        if ((this.isLockedFun) && !this.isLockedFun(e)) return;\r\n        this.event(Event.END);\r\n        this._clickOnly = true;\r\n        this._lastOffset = 0;\r\n        this._checkElastic = false;\r\n        this._lastPoint || (this._lastPoint = new Point());\r\n        this._lastPoint.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY);\r\n        ILaya.timer.clear(this, this.tweenMove);\r\n        Tween.clearTween(this);\r\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp2);\r\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp2);\r\n        ILaya.timer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    startDragForce(): void {\r\n        this._clickOnly = true;\r\n        this._lastOffset = 0;\r\n        this._checkElastic = false;\r\n        this._lastPoint || (this._lastPoint = new Point());\r\n        this._lastPoint.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY);\r\n        ILaya.timer.clear(this, this.tweenMove);\r\n        Tween.clearTween(this);\r\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp2);\r\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp2);\r\n        ILaya.timer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    private cancelDragOp(): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp2);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp2);\r\n        ILaya.timer.clear(this, this.tweenMove);\r\n        ILaya.timer.clear(this, this.loop);\r\n        this._target.mouseEnabled = true;\r\n    }\r\n\r\n\r\n    triggerDownDragLimit: Function;\r\n    triggerUpDragLimit: Function;\r\n    /** 暂停滚动的重载方法-add:xiaosong */\r\n    stopMoveLimit: Function;\r\n    private checkTriggers(isTweenMove: boolean = false): boolean {\r\n        if (this.value >= 0 && this.value - this._lastOffset <= 0) {\r\n            if ((this.triggerDownDragLimit) && this.triggerDownDragLimit(isTweenMove)) {\r\n                this.cancelDragOp();\r\n                this.value = 0;\r\n                return true;\r\n            }\r\n        }\r\n        if (this.value <= this.max && (this.value - this._lastOffset >= this.max)) {\r\n            if ((this.triggerUpDragLimit) && this.triggerUpDragLimit(isTweenMove)) {\r\n                this.cancelDragOp();\r\n                this.value = this.max;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get lastOffset(): number {\r\n        return this._lastOffset;\r\n    }\r\n\r\n    startTweenMoveForce(lastOffset: number): void {\r\n        this._lastOffset = lastOffset;\r\n        ILaya.timer.frameLoop(1, this, this.tweenMove, [200]);\r\n    }\r\n    /**@private */\r\n    protected loop(): void {\r\n        if (this.disableDrag) return;\r\n        var mouseY: number = ILaya.stage.mouseY;\r\n        var mouseX: number = ILaya.stage.mouseX;\r\n        this._lastOffset = this.isVertical ? (mouseY - this._lastPoint.y) : (mouseX - this._lastPoint.x);\r\n\r\n        if (this._clickOnly) {\r\n            if (Math.abs(this._lastOffset * (this.isVertical ? ILaya.stage._canvasTransform.getScaleY() : ILaya.stage._canvasTransform.getScaleX())) > 1) {\r\n                this._clickOnly = false;\r\n                if (this.checkTriggers()) return;\r\n                this._offsets || (this._offsets = []);\r\n                this._offsets.length = 0;\r\n                this._target.mouseEnabled = false;\r\n                if (!this.hide && this.autoHide) {\r\n                    this.alpha = 1;\r\n                    this.visible = true;\r\n                }\r\n                this.event(Event.START);\r\n            } else return;\r\n        } else {\r\n            if (this.checkTriggers()) return;\r\n        }\r\n        this._offsets.push(this._lastOffset);\r\n\r\n        this._lastPoint.x = mouseX;\r\n        this._lastPoint.y = mouseY;\r\n\r\n        if (this._lastOffset === 0) return;\r\n\r\n        if (!this._checkElastic) {\r\n            if (this.elasticDistance > 0) {\r\n                if (!this._checkElastic && this._lastOffset != 0) {\r\n                    if ((this._lastOffset > 0 && this._value <= this.min) || (this._lastOffset < 0 && this._value >= this.max)) {\r\n                        this._isElastic = true;\r\n                        this._checkElastic = true;\r\n                    } else {\r\n                        this._isElastic = false;\r\n                    }\r\n                }\r\n            } else {\r\n                this._checkElastic = true;\r\n            }\r\n        }\r\n\r\n        if (this._isElastic) {\r\n            if (this._value <= this.min) {\r\n                if (this._lastOffset > 0) {\r\n                    this.value -= this._lastOffset * Math.max(0, (1 - ((this.min - this._value) / this.elasticDistance)));\r\n                } else {\r\n                    this.value -= this._lastOffset * 0.5;\r\n                    if (this._value >= this.min)\r\n                        this._checkElastic = false;\r\n                }\r\n            } else if (this._value >= this.max) {\r\n                if (this._lastOffset < 0) {\r\n                    this.value -= this._lastOffset * Math.max(0, (1 - ((this._value - this.max) / this.elasticDistance)));\r\n                } else {\r\n                    this.value -= this._lastOffset * 0.5;\r\n                    if (this._value <= this.max)\r\n                        this._checkElastic = false;\r\n                }\r\n\r\n            }\r\n        } else {\r\n            this.value -= this._lastOffset;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected onStageMouseUp2(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp2);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp2);\r\n        ILaya.timer.clear(this, this.loop);\r\n\r\n        if (this._clickOnly) {\r\n            if (this._value >= this.min && this._value <= this.max)\r\n                return;\r\n        }\r\n        this._target.mouseEnabled = true;\r\n\r\n        if (this._isElastic) {\r\n            if (this._value < this.min) {\r\n                this.event(\"dragTopLimit\");\r\n                var moveValue: number = (this.stopMoveLimit && this.stopMoveLimit()) ? (this.min - this.topMoveLimit) : this.min;\r\n                Tween.to(this, { value: moveValue }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\r\n            } else if (this._value > this.max) {\r\n                this.event(\"dragBottomLimit\");\r\n                var moveValue: number = (this.stopMoveLimit && this.stopMoveLimit()) ? (this.max + this.bottomMoveLimit) : this.max;\r\n                Tween.to(this, { value: moveValue }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\r\n            }\r\n        } else {\r\n            if (!this._offsets) return;\r\n            //计算平均值\r\n            if (this._offsets.length < 1) {\r\n                this._offsets[0] = this.isVertical ? ILaya.stage.mouseY - this._lastPoint.y : ILaya.stage.mouseX - this._lastPoint.x;\r\n            }\r\n            var offset: number = 0;\r\n            var n: number = Math.min(this._offsets.length, 3);\r\n            for (var i: number = 0; i < n; i++) {\r\n                offset += this._offsets[this._offsets.length - 1 - i];\r\n            }\r\n            this._lastOffset = offset / n;\r\n\r\n            offset = Math.abs(this._lastOffset);\r\n            if (offset < 2) {\r\n                this.event(Event.END);\r\n                return;\r\n            }\r\n            if (offset > 250) this._lastOffset = this._lastOffset > 0 ? 250 : -250;\r\n            var dis: number = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 150)));\r\n            ILaya.timer.frameLoop(1, this, this.tweenMove, [dis]);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private elasticOver(): void {\r\n        this._isElastic = false;\r\n        if (!this.hide && this.autoHide) {\r\n            Tween.to(this, { alpha: 0 }, 500);\r\n        }\r\n        this.event(Event.END);\r\n    }\r\n\r\n    /**@private */\r\n    protected tweenMove(maxDistance: number): void {\r\n        this._lastOffset *= this.rollRatio;\r\n        if (this.checkTriggers(true)) {\r\n            return;\r\n        }\r\n        var tarSpeed: number;\r\n        if (maxDistance > 0) {\r\n            if (this._lastOffset > 0 && this.value <= this.min) {\r\n                this._isElastic = true;\r\n                tarSpeed = -(this.min - maxDistance - this.value) * 0.5;\r\n                if (this._lastOffset > tarSpeed) this._lastOffset = tarSpeed;\r\n            } else if (this._lastOffset < 0 && this.value >= this.max) {\r\n                this._isElastic = true;\r\n                tarSpeed = -(this.max + maxDistance - this.value) * 0.5;\r\n                if (this._lastOffset < tarSpeed) this._lastOffset = tarSpeed;\r\n            }\r\n        }\r\n\r\n        this.value -= this._lastOffset;\r\n        //if (Math.abs(_lastOffset) < 1 || value == max || value == min) \r\n        if (Math.abs(this._lastOffset) < 0.1) {\r\n            ILaya.timer.clear(this, this.tweenMove);\r\n            if (this._isElastic) {\r\n                if (this._value < this.min) {\r\n                    Tween.to(this, { value: this.min }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\r\n                } else if (this._value > this.max) {\r\n                    Tween.to(this, { value: this.max }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\r\n                } else {\r\n                    this.elasticOver();\r\n                }\r\n                return;\r\n            }\r\n            this.event(Event.END);\r\n            if (!this.hide && this.autoHide) {\r\n                Tween.to(this, { alpha: 0 }, 500);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止滑动。\r\n     */\r\n    stopScroll(): void {\r\n        this.onStageMouseUp2(null);\r\n        ILaya.timer.clear(this, this.tweenMove);\r\n        Tween.clearTween(this);\r\n    }\r\n\r\n    /**\r\n     * 滚动的刻度值，滑动数值为tick的整数倍。默认值为1。\r\n     */\r\n    get tick(): number {\r\n        return this.slider.tick;\r\n    }\r\n\r\n    set tick(value: number) {\r\n        this.slider.tick = value;\r\n    }\r\n\r\n    /** 恢复到正常的弹性缓动效果 */\r\n    backToNormal(): void {\r\n        if (this._value < this.min) {\r\n            this._backToNormal(this.min);\r\n        } else if (this._value > this.max) {\r\n            this._backToNormal(this.max);\r\n        }\r\n    }\r\n\r\n    private _backToNormal(value: number) {\r\n        Tween.to(this, { value: value }, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.elasticOver));\r\n    }\r\n}","import { ScrollBar } from \"./ScrollBar\";\r\n\r\n/**\r\n *\r\n * 使用 <code>VScrollBar</code> （垂直 <code>ScrollBar</code> ）控件，可以在因数据太多而不能在显示区域完全显示时控制显示的数据部分。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>VScrollBar</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.vScrollBar;\r\n *\t\timport laya.ui.VScrollBar;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class VScrollBar_Example\r\n *\t\t{\r\n *\t\t\tprivate var vScrollBar:VScrollBar;\r\n *\t\t\tpublic function VScrollBar_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, onLoadComplete));\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvScrollBar = new VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\r\n *\t\t\t\tvScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\r\n *\t\t\t\tvScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\r\n *\t\t\t\tvScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\r\n *\t\t\t\tvScrollBar.changeHandler = new Handler(this, onChange);//设置 vScrollBar 的滚动变化处理器。\r\n *\t\t\t\tLaya.stage.addChild(vScrollBar);//将此 vScrollBar 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"滚动条的位置： value=\" + value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var vScrollBar;\r\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"];\r\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     vScrollBar = new laya.ui.VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\r\n *     vScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\r\n *     vScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\r\n *     vScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\r\n *     vScrollBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 vScrollBar 的滚动变化处理器。\r\n *     Laya.stage.addChild(vScrollBar);//将此 vScrollBar 对象添加到显示列表。\r\n * }\r\n * function onChange(value) {\r\n *     console.log(\"滚动条的位置： value=\" + value);\r\n * }\r\n * @example\r\n * import VScrollBar = laya.ui.VScrollBar;\r\n * import Handler = laya.utils.Handler;\r\n * class VScrollBar_Example {\r\n *     private vScrollBar: VScrollBar;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, this.onLoadComplete));\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.vScrollBar = new VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\r\n *         this.vScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\r\n *         this.vScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\r\n *         this.vScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\r\n *         this.vScrollBar.changeHandler = new Handler(this, this.onChange);//设置 vScrollBar 的滚动变化处理器。\r\n *         Laya.stage.addChild(this.vScrollBar);//将此 vScrollBar 对象添加到显示列表。\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"滚动条的位置： value=\" + value);\r\n *     }\r\n * }\r\n */\r\nexport class VScrollBar extends ScrollBar {\r\n\r\n}","import { ScrollBar } from \"./ScrollBar\";\r\n\r\n/**\r\n * 使用 <code>HScrollBar</code> （水平 <code>ScrollBar</code> ）控件，可以在因数据太多而不能在显示区域完全显示时控制显示的数据部分。\r\n * @example <caption>以下示例代码，创建了一个 <code>HScrollBar</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.HScrollBar;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class HScrollBar_Example\r\n *\t\t{\r\n *\t\t\tprivate var hScrollBar:HScrollBar;\r\n *\t\t\tpublic function HScrollBar_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\thScrollBar = new HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\r\n *\t\t\t\thScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\r\n *\t\t\t\thScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\r\n *\t\t\t\thScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\r\n *\t\t\t\thScrollBar.changeHandler = new Handler(this, onChange);//设置 hScrollBar 的滚动变化处理器。\r\n *\t\t\t\tLaya.stage.addChild(hScrollBar);//将此 hScrollBar 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"滚动条的位置： value=\" + value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var hScrollBar;\r\n * var res  = [\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"];\r\n * Laya.loader.load(res,laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     hScrollBar = new laya.ui.HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\r\n *     hScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\r\n *     hScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\r\n *     hScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\r\n *     hScrollBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 hScrollBar 的滚动变化处理器。\r\n *     Laya.stage.addChild(hScrollBar);//将此 hScrollBar 对象添加到显示列表。\r\n * }\r\n * function onChange(value)\r\n * {\r\n *     console.log(\"滚动条的位置： value=\" + value);\r\n * }\r\n * @example\r\n * import HScrollBar = laya.ui.HScrollBar;\r\n * import Handler = laya.utils.Handler;\r\n * class HScrollBar_Example {\r\n *     private hScrollBar: HScrollBar;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.hScrollBar = new HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\r\n *         this.hScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\r\n *         this.hScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\r\n *         this.hScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\r\n *         this.hScrollBar.changeHandler = new Handler(this, this.onChange);//设置 hScrollBar 的滚动变化处理器。\r\n *         Laya.stage.addChild(this.hScrollBar);//将此 hScrollBar 对象添加到显示列表。\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"滚动条的位置： value=\" + value);\r\n *     }\r\n * }\r\n*/\r\nexport class HScrollBar extends ScrollBar {\r\n\r\n    /**\r\n     * @override\r\n     * @inheritDoc \r\n     */\r\n    protected initialize(): void {\r\n        super.initialize();\r\n        this.slider.isVertical = false;\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { ScrollBar } from \"./ScrollBar\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { HScrollBar } from \"./HScrollBar\";\r\nimport { Clip } from \"./Clip\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Tween } from \"../utils/Tween\"\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { HierarchyParser } from \"../loaders/HierarchyParser\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { ScrollType } from \"./Styles\";\r\n\r\n/**\r\n * 当对象的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 渲染列表的单元项对象时调度。\r\n * @eventType Event.RENDER\r\n */\r\n/*[Event(name = \"render\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>List</code> 控件可显示项目列表。默认为垂直方向列表。可通过UI编辑器自定义列表。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>List</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.List;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class List_Example\r\n *\t\t{\r\n *\t\t\tpublic function List_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800, \"false\");//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, onLoadComplete));\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar arr:Array = [];//创建一个数组，用于存贮列表的数据信息。\r\n *\t\t\t\tfor (var i:int = 0; i &lt; 20; i++)\r\n *\t\t\t\t{\r\n *\t\t\t\t\tarr.push({label: \"item\" + i});\r\n *\t\t\t\t}\r\n *\t\t\t\tvar list:List = new List();//创建一个 List 类的实例对象 list 。\r\n *\t\t\t\tlist.itemRender = Item;//设置 list 的单元格渲染器。\r\n *\t\t\t\tlist.repeatX = 1;//设置 list 的水平方向单元格数量。\r\n *\t\t\t\tlist.repeatY = 10;//设置 list 的垂直方向单元格数量。\r\n *\t\t\t\tlist.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\r\n *\t\t\t\tlist.array = arr;//设置 list 的列表数据源。\r\n *\t\t\t\tlist.pos(100, 100);//设置 list 的位置。\r\n *\t\t\t\tlist.selectEnable = true;//设置 list 可选。\r\n *\t\t\t\tlist.selectHandler = new Handler(this, onSelect);//设置 list 改变选择项执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(list);//将 list 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onSelect(index:int):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选择的项目索引： index= \", index);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n *\timport laya.ui.Box;\r\n *\timport laya.ui.Label;\r\n *\tclass Item extends Box\r\n *\t{\r\n *\t\tpublic function Item()\r\n *\t\t{\r\n *\t\t\tgraphics.drawRect(0, 0, 100, 20,null, \"#ff0000\");\r\n *\t\t\tvar label:Label = new Label();\r\n *\t\t\tlabel.text = \"100000\";\r\n *\t\t\tlabel.name = \"label\";//设置 label 的name属性值。\r\n *\t\t\tlabel.size(100, 20);\r\n *\t\t\taddChild(label);\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * (function (_super){\r\n *     function Item(){\r\n *         Item.__super.call(this);//初始化父类\r\n *         this.graphics.drawRect(0, 0, 100, 20, \"#ff0000\");\r\n *         var label = new laya.ui.Label();//创建一个 Label 类的实例对象 label 。\r\n *         label.text = \"100000\";//设置 label 的文本内容。\r\n *         label.name = \"label\";//设置 label 的name属性值。\r\n *         label.size(100, 20);//设置 label 的宽度、高度。\r\n *         this.addChild(label);//将 label 添加到显示列表。\r\n *     };\r\n *     Laya.class(Item,\"mypackage.listExample.Item\",_super);//注册类 Item 。\r\n * })(laya.ui.Box);\r\n    \r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"];\r\n * Laya.loader.load(res, new laya.utils.Handler(this, onLoadComplete));//加载资源。\r\n    \r\n * function onLoadComplete() {\r\n *     var arr = [];//创建一个数组，用于存贮列表的数据信息。\r\n *     for (var i = 0; i &lt; 20; i++) {\r\n *         arr.push({label: \"item\" + i});\r\n *     }\r\n    \r\n *     var list = new laya.ui.List();//创建一个 List 类的实例对象 list 。\r\n *     list.itemRender = mypackage.listExample.Item;//设置 list 的单元格渲染器。\r\n *     list.repeatX = 1;//设置 list 的水平方向单元格数量。\r\n *     list.repeatY = 10;//设置 list 的垂直方向单元格数量。\r\n *     list.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\r\n *     list.array = arr;//设置 list 的列表数据源。\r\n *     list.pos(100, 100);//设置 list 的位置。\r\n *     list.selectEnable = true;//设置 list 可选。\r\n *     list.selectHandler = new laya.utils.Handler(this, onSelect);//设置 list 改变选择项执行的处理器。\r\n *     Laya.stage.addChild(list);//将 list 添加到显示列表。\r\n * }\r\n    \r\n * function onSelect(index)\r\n * {\r\n *     console.log(\"当前选择的项目索引： index= \", index);\r\n * }\r\n *\r\n * @example\r\n * import List = laya.ui.List;\r\n * import Handler = laya.utils.Handler;\r\n * public class List_Example {\r\n *     public List_Example() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, this.onLoadComplete));\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var arr= [];//创建一个数组，用于存贮列表的数据信息。\r\n *         for (var i: number = 0; i &lt; 20; i++)\r\n *         {\r\n *             arr.push({ label: \"item\" + i });\r\n *         }\r\n *         var list: List = new List();//创建一个 List 类的实例对象 list 。\r\n *         list.itemRender = Item;//设置 list 的单元格渲染器。\r\n *         list.repeatX = 1;//设置 list 的水平方向单元格数量。\r\n *         list.repeatY = 10;//设置 list 的垂直方向单元格数量。\r\n *         list.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\r\n *         list.array = arr;//设置 list 的列表数据源。\r\n *         list.pos(100, 100);//设置 list 的位置。\r\n *         list.selectEnable = true;//设置 list 可选。\r\n *         list.selectHandler = new Handler(this, this.onSelect);//设置 list 改变选择项执行的处理器。\r\n *         Laya.stage.addChild(list);//将 list 添加到显示列表。\r\n *     }\r\n *     private onSelect(index: number): void {\r\n *         console.log(\"当前选择的项目索引： index= \", index);\r\n *     }\r\n * }\r\n * import Box = laya.ui.Box;\r\n * import Label = laya.ui.Label;\r\n * class Item extends Box {\r\n *     constructor() {\r\n *         this.graphics.drawRect(0, 0, 100, 20, null, \"#ff0000\");\r\n *         var label: Label = new Label();\r\n *         label.text = \"100000\";\r\n *         label.name = \"label\";//设置 label 的name属性值。\r\n *         label.size(100, 20);\r\n *         this.addChild(label);\r\n *     }\r\n * }\r\n */\r\nexport class List extends Box {\r\n\r\n    /**改变 <code>List</code> 的选择项时执行的处理器，(默认返回参数： 项索引（index:int）)。*/\r\n    selectHandler: Handler | null;\r\n    /**单元格渲染处理器(默认返回参数cell:UIComponent,index:int)。*/\r\n    renderHandler: Handler | null;\r\n    /**单元格鼠标事件处理器(默认返回参数e:Event,index:int)。*/\r\n    mouseHandler: Handler | null;\r\n    /**指定是否可以选择，若值为true则可以选择，否则不可以选择。 @default false*/\r\n    selectEnable: boolean = false;\r\n    /**最大分页数。*/\r\n    totalPage: number = 0;\r\n    /**禁用滚动条停止 */\r\n    disableStopScroll: boolean = false;\r\n\r\n    /**@private */\r\n    protected _content!: Box;\r\n    /**@private */\r\n    protected _scrollBar: ScrollBar | null;\r\n    /**@private */\r\n    protected _itemRender: any;\r\n    /**@private */\r\n    protected _repeatX: number = 0;\r\n    /**@private */\r\n    protected _repeatY: number = 0;\r\n    /**@private */\r\n    protected _repeatX2: number = 0;\r\n    /**@private */\r\n    protected _repeatY2: number = 0;\r\n    /**@private */\r\n    protected _spaceX: number = 0;\r\n    /**@private */\r\n    protected _spaceY: number = 0;\r\n    /**@private */\r\n    protected _cells: UIComponent[] = [];\r\n    /**@private */\r\n    protected _array: any[] | null;\r\n    /**@private */\r\n    protected _startIndex: number = 0;\r\n    /**@private */\r\n    protected _selectedIndex: number = -1;\r\n    /**@private */\r\n    protected _page: number = 0;\r\n    /**@private */\r\n    protected _isVertical: boolean = true;\r\n    /**@private */\r\n    protected _cellSize: number = 20;\r\n    /**@private */\r\n    protected _cellOffset: number = 0;\r\n    /**@private */\r\n    protected _isMoved: boolean;\r\n    /**是否缓存内容，如果数据源较少，并且list内无动画，设置此属性为true能大大提高性能 */\r\n    cacheContent: boolean;\r\n    /**@private */\r\n    protected _createdLine: number = 0;\r\n    /**@private */\r\n    protected _cellChanged: boolean;\r\n    /**@private */\r\n    protected _offset: Point = new Point();\r\n    /**@private */\r\n    protected _usedCache: string | null = null;\r\n    /**@private */\r\n    protected _elasticEnabled: boolean = false;\r\n\r\n    protected _scrollType: ScrollType = 0;\r\n    protected _vScrollBarSkin: string;\r\n    protected _hScrollBarSkin: string;\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._content && this._content.destroy(destroyChild);\r\n        this._scrollBar && this._scrollBar.destroy(destroyChild);\r\n        super.destroy(destroyChild);\r\n        this._content = null;\r\n        this._scrollBar = null;\r\n        this._itemRender = null;\r\n        this._cells = null;\r\n        this._array = null;\r\n        this.selectHandler = this.renderHandler = this.mouseHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this._content = new Box();\r\n        this._content.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._content);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set cacheAs(value: string) {\r\n        super.cacheAs = value;\r\n        if (this._scrollBar) {\r\n            this._usedCache = null;\r\n            if (value !== \"none\") this._scrollBar.on(Event.START, this, this.onScrollStart);\r\n            else this._scrollBar.off(Event.START, this, this.onScrollStart);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get cacheAs() {\r\n        return super.cacheAs;\r\n    }\r\n\r\n    private onScrollStart(): void {\r\n        this._usedCache || (this._usedCache = super.cacheAs);\r\n        super.cacheAs = \"none\";\r\n        this._scrollBar!.once(Event.END, this, this.onScrollEnd);\r\n    }\r\n\r\n    private onScrollEnd(): void {\r\n        super.cacheAs = this._usedCache || 'none';\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>List</code> 组件所包含的内容容器 <code>Box</code> 组件的引用。\r\n     */\r\n    get content() {\r\n        return this._content;\r\n    }\r\n\r\n    /**\r\n     * 滚动类型\r\n     */\r\n    get scrollType() {\r\n        return this._scrollType;\r\n    }\r\n\r\n    set scrollType(value: ScrollType) {\r\n        this._scrollType = value;\r\n\r\n        if (this._scrollType == ScrollType.None) {\r\n            if (this._scrollBar) {\r\n                this._scrollBar.destroy();\r\n                this._scrollBar = null;\r\n                this._content.scrollRect = null;\r\n            }\r\n        }\r\n        else if (this._scrollType == ScrollType.Horizontal) {\r\n            if (this._scrollBar && !this._scrollBar.isVertical) {\r\n                this._scrollBar.skin = this._hScrollBarSkin;\r\n                return;\r\n            }\r\n\r\n            if (this._scrollBar) {\r\n                this._scrollBar.destroy();\r\n                this._scrollBar = null;\r\n            }\r\n\r\n            let scrollBar = new HScrollBar();\r\n            scrollBar.name = \"scrollBar\";\r\n            scrollBar.bottom = 0;\r\n            scrollBar._skinBaseUrl = this._skinBaseUrl;\r\n            scrollBar.skin = this._hScrollBarSkin;\r\n            scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\r\n            scrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n            this.scrollBar = scrollBar;\r\n            this._setCellChanged();\r\n        }\r\n        else {\r\n            if (this._scrollBar && this._scrollBar.isVertical) {\r\n                this._scrollBar.skin = this._vScrollBarSkin;\r\n                return;\r\n            }\r\n\r\n            if (this._scrollBar) {\r\n                this._scrollBar.destroy();\r\n                this._scrollBar = null;\r\n            }\r\n\r\n            let scrollBar = new VScrollBar();\r\n            scrollBar.name = \"scrollBar\";\r\n            scrollBar.right = 0;\r\n            scrollBar._skinBaseUrl = this._skinBaseUrl;\r\n            scrollBar.skin = this._vScrollBarSkin;\r\n            scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\r\n            scrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n            this.scrollBar = scrollBar;\r\n            this._setCellChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 垂直方向滚动条皮肤。\r\n     */\r\n    get vScrollBarSkin(): string {\r\n        return this._vScrollBarSkin;\r\n    }\r\n\r\n    set vScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._vScrollBarSkin != value) {\r\n            this._vScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Vertical;\r\n            else\r\n                this.scrollType = this._scrollType;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 水平方向滚动条皮肤。\r\n     */\r\n    get hScrollBarSkin(): string {\r\n        return this._hScrollBarSkin;\r\n    }\r\n\r\n    set hScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._hScrollBarSkin != value) {\r\n            this._hScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Horizontal;\r\n            else\r\n                this.scrollType = this._scrollType;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>List</code> 组件所包含的滚动条 <code>ScrollBar</code> 组件的引用。\r\n     */\r\n    get scrollBar(): ScrollBar | null {\r\n        return this._scrollBar;\r\n    }\r\n\r\n    set scrollBar(value: ScrollBar | null) {\r\n        if (this._scrollBar != value) {\r\n            this._scrollBar = value;\r\n            if (value) {\r\n                this._isVertical = this._scrollBar.isVertical;\r\n                this._scrollBar.target = this._content;\r\n                this._scrollBar.on(Event.CHANGE, this, this.onScrollBarChange);\r\n                this.addChild(this._scrollBar);\r\n                this._content.scrollRect = Rectangle.create();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 单元格渲染器。\r\n     * <p><b>取值：</b>\r\n     * <ol>\r\n     * <li>单元格类对象。</li>\r\n     * <li> UI 的 JSON 描述。</li>\r\n     * </ol></p>\r\n     * @implements\r\n     */\r\n    get itemRender(): any {\r\n        return this._itemRender;\r\n    }\r\n\r\n    set itemRender(value: any) {\r\n        if (this._itemRender != value) {\r\n            this._itemRender = value;\r\n            //销毁老单元格\r\n            for (let i = this._cells!.length - 1; i > -1; i--) {\r\n                this._cells![i].destroy();\r\n            }\r\n            this._cells!.length = 0;\r\n            this._setCellChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    _setHeight(value: number) {\r\n        super._setWidth(value);\r\n        this._setCellChanged();\r\n    }\r\n\r\n\r\n    /**\r\n     * 水平方向显示的单元格数量。\r\n     */\r\n    get repeatX(): number {\r\n        return this._repeatX > 0 ? this._repeatX : this._repeatX2 > 0 ? this._repeatX2 : 1;\r\n    }\r\n\r\n    set repeatX(value: number) {\r\n        this._repeatX = value;\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * 垂直方向显示的单元格数量。\r\n     */\r\n    get repeatY(): number {\r\n        return this._repeatY > 0 ? this._repeatY : this._repeatY2 > 0 ? this._repeatY2 : 1;\r\n    }\r\n\r\n    set repeatY(value: number) {\r\n        this._repeatY = value;\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * 水平方向显示的单元格之间的间距（以像素为单位）。\r\n     */\r\n    get spaceX(): number {\r\n        return this._spaceX;\r\n    }\r\n\r\n    set spaceX(value: number) {\r\n        this._spaceX = value;\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * 垂直方向显示的单元格之间的间距（以像素为单位）。\r\n     */\r\n    get spaceY(): number {\r\n        return this._spaceY;\r\n    }\r\n\r\n    set spaceY(value: number) {\r\n        this._spaceY = value;\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 更改单元格的信息。\r\n     * 在此销毁、创建单元格，并设置单元格的位置等属性。相当于此列表内容发送改变时调用此函数。\r\n     */\r\n    protected changeCells(): void {\r\n        this._cellChanged = false;\r\n        if (this._itemRender) {\r\n            //获取滚动条\r\n            this.scrollBar = (<ScrollBar>this.getChildByName(\"scrollBar\"));\r\n\r\n            //自适应宽高\r\n            let cell = this._getOneCell();\r\n\r\n            let cellWidth = (cell.width + this._spaceX) || 1;\r\n            let cellHeight = (cell.height + this._spaceY) || 1;\r\n            if (this._width > 0) this._repeatX2 = this._isVertical ? Math.round(this._width / cellWidth) : Math.ceil(this._width / cellWidth);\r\n            if (this._height > 0) this._repeatY2 = this._isVertical ? Math.ceil(this._height / cellHeight) : Math.round(this._height / cellHeight);\r\n\r\n            let listWidth = this._isWidthSet ? this._width : (cellWidth * this.repeatX - this._spaceX);\r\n            let listHeight = this._isHeightSet ? this._height : (cellHeight * this.repeatY - this._spaceY);\r\n            this._cellSize = this._isVertical ? cellHeight : cellWidth;\r\n            this._cellOffset = this._isVertical ? (cellHeight * Math.max(this._repeatY2, this._repeatY) - listHeight - this._spaceY) : (cellWidth * Math.max(this._repeatX2, this._repeatX) - listWidth - this._spaceX);\r\n\r\n            if (this._scrollBar) {\r\n                if (this._isVertical)\r\n                    this._scrollBar.height = listHeight;\r\n                else\r\n                    this._scrollBar.width = listWidth;\r\n            }\r\n            this.setContentSize(listWidth, listHeight);\r\n\r\n            //创建新单元格\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            let numY = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);\r\n            this._createItems(0, numX, numY);\r\n            this._createdLine = numY;\r\n\r\n            if (this._array) {\r\n                this.array = this._array;\r\n                this.runCallLater(this.renderItems);\r\n            }\r\n            else\r\n                this.changeSelectStatus();\r\n        }\r\n    }\r\n\r\n    private _getOneCell(): UIComponent {\r\n        if (this._cells.length === 0) {\r\n            let item = this.createItem();\r\n            this._offset.setTo(item._x, item._y);\r\n            if (this.cacheContent) return item;\r\n            this._cells.push(item);\r\n        }\r\n        return this._cells[0];\r\n    }\r\n\r\n    private _createItems(startY: number, numX: number, numY: number): void {\r\n        let box = this._content;\r\n        let cell = this._getOneCell();\r\n        let cellWidth = cell.width + this._spaceX;\r\n        let cellHeight = cell.height + this._spaceY;\r\n        let arr: Array<UIComponent>;\r\n\r\n        if (this.cacheContent) {\r\n            let cacheBox = new Box();\r\n            cacheBox.hideFlags = HideFlags.HideAndDontSave;\r\n            cacheBox.cacheAs = \"normal\";\r\n            cacheBox.pos((this._isVertical ? 0 : startY) * cellWidth, (this._isVertical ? startY : 0) * cellHeight);\r\n            this._content.addChild(cacheBox);\r\n            box = cacheBox;\r\n        } else {\r\n            arr = [];\r\n            for (let i = this._cells.length - 1; i > -1; i--) {\r\n                let item = this._cells[i];\r\n                item.removeSelf();\r\n                arr.push(item);\r\n            }\r\n            this._cells.length = 0;\r\n        }\r\n\r\n        for (let k = startY; k < numY; k++) {\r\n            for (let l = 0; l < numX; l++) {\r\n                if (arr && arr.length) {\r\n                    cell = arr.pop();\r\n                } else {\r\n                    cell = this.createItem();\r\n                    cell.hideFlags = HideFlags.HideAndDontSave;\r\n                }\r\n                cell.x = (this._isVertical ? l : k) * cellWidth - box._x;\r\n                cell.y = (this._isVertical ? k : l) * cellHeight - box._y;\r\n                cell.name = \"item\" + (k * numX + l);\r\n                box.addChild(cell);\r\n                this.addCell(cell);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected createItem(): UIComponent {\r\n        let arr: any[] = [];\r\n        let box: UIComponent;\r\n        if (typeof (this._itemRender) == \"function\") {//TODO:\r\n            box = new this._itemRender();\r\n            box._skinBaseUrl = this._skinBaseUrl;\r\n        } else {\r\n            if (this._itemRender._$type || this._itemRender._$prefab)\r\n                box = <UIComponent>HierarchyParser.parse(this._itemRender, { skinBaseUrl: this._skinBaseUrl })[0];\r\n            else\r\n                box = LegacyUIParser.createComp(this._itemRender, null, null, arr);\r\n            if (!box) {\r\n                console.warn(\"cannot create item\");\r\n                box = new Box();\r\n            }\r\n        }\r\n        box.hideFlags = HideFlags.HideAndDontSave;\r\n\r\n        if (arr.length == 0 && (<any>box)[\"_watchMap\"]) {\r\n            let watchMap = (<any>box)[\"_watchMap\"];\r\n            for (let name in watchMap) {\r\n                let a: any[] = watchMap[name];\r\n                for (let i = 0; i < a.length; i++) {\r\n                    let watcher = a[i];\r\n                    arr.push(watcher.comp, watcher.prop, watcher.value)\r\n                }\r\n            }\r\n        }\r\n        if (arr.length) (<any>box)[\"_$bindData\"] = arr;\r\n\r\n        return box;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 添加单元格。\r\n     * @param cell 需要添加的单元格对象。\r\n     */\r\n    protected addCell(cell: UIComponent): void {\r\n        cell.on(Event.CLICK, this, this.onCellMouse);\r\n        cell.on(Event.RIGHT_CLICK, this, this.onCellMouse);\r\n        cell.on(Event.MOUSE_OVER, this, this.onCellMouse);\r\n        cell.on(Event.MOUSE_OUT, this, this.onCellMouse);\r\n        cell.on(Event.MOUSE_DOWN, this, this.onCellMouse);\r\n        cell.on(Event.MOUSE_UP, this, this.onCellMouse);\r\n        this._cells.push(cell);\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n        this.initItems();\r\n    }\r\n\r\n    /**@internal */\r\n    _afterInited(): void {\r\n        this.initItems();\r\n    }\r\n\r\n    /**\r\n     * 初始化单元格信息。\r\n     */\r\n    initItems(): void {\r\n        if (!this._itemRender && this.getChildByName(\"item0\") != null) {\r\n            this.repeatX = 1;\r\n            let count: number;\r\n            count = 0;\r\n            for (let i = 0; i < 10000; i++) {\r\n                let cell = <UIComponent>this.getChildByName(\"item\" + i);\r\n                if (cell) {\r\n                    this.addCell(cell);\r\n                    count++;\r\n                    continue;\r\n                }\r\n                break;\r\n            }\r\n            this.repeatY = count;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置可视区域大小。\r\n     * <p>以（0，0，width参数，height参数）组成的矩形区域为可视区域。</p>\r\n     * @param width 可视区域宽度。\r\n     * @param height 可视区域高度。\r\n     */\r\n    setContentSize(width: number, height: number): void {\r\n        this._content.width = width;\r\n        this._content.height = height;\r\n        if (this._scrollBar) {\r\n            let r = this._content.scrollRect;\r\n            if (!r)\r\n                r = Rectangle.create();\r\n            r.setTo(-this._offset.x, -this._offset.y, width, height);\r\n            this._content.scrollRect = r;\r\n        }\r\n        this.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 单元格的鼠标事件侦听处理函数。\r\n     */\r\n    protected onCellMouse(e: Event): void {\r\n        if (e.type === Event.MOUSE_DOWN) this._isMoved = false;\r\n        let cell = (<UIComponent>e.currentTarget);\r\n        let index = this._startIndex + this._cells.indexOf(cell);\r\n        if (index < 0) return;\r\n        if (e.type === Event.CLICK || e.type === Event.RIGHT_CLICK) {\r\n            if (this.selectEnable && !this._isMoved) this.selectedIndex = index;\r\n            else this.changeCellState(cell, true, 0);\r\n        } else if ((e.type === Event.MOUSE_OVER || e.type === Event.MOUSE_OUT) && this._selectedIndex !== index) {\r\n            this.changeCellState(cell, e.type === Event.MOUSE_OVER, 0);\r\n        }\r\n        this.mouseHandler && this.mouseHandler.runWith([e, index]);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变单元格的可视状态。\r\n     * @param cell 单元格对象。\r\n     * @param visable 是否显示。\r\n     * @param index 单元格的属性 <code>index</code> 值。\r\n     */\r\n    protected changeCellState(cell: UIComponent, visible: boolean, index: number): void {\r\n        let selectBox = (<Clip>cell.getChildByName(\"selectBox\"));\r\n        if (selectBox) {\r\n            this.selectEnable = true;\r\n            selectBox.visible = visible;\r\n            selectBox.index = index;\r\n        }\r\n    }\r\n\r\n    /** \r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        super._sizeChanged();\r\n        this.setContentSize(this.width, this.height);\r\n        if (this._scrollBar) this.callLater(this.onScrollBarChange);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滚动条的 <code>Event.CHANGE</code> 事件侦听处理函数。\r\n     */\r\n    protected onScrollBarChange(e: Event | null = null): void {\r\n        this.runCallLater(this.changeCells);\r\n        let scrollValue = this._scrollBar!.value;\r\n        let lineX = (this._isVertical ? this.repeatX : this.repeatY);\r\n        let lineY = (this._isVertical ? this.repeatY : this.repeatX);\r\n        let scrollLine = Math.floor(scrollValue / this._cellSize);\r\n\r\n        if (!this.cacheContent) {\r\n            let index = scrollLine * lineX;\r\n            let num = 0;\r\n            let down = true;\r\n            let toIndex = 0;\r\n            if (index > this._startIndex) {\r\n                num = index - this._startIndex;\r\n                //let down = true;\r\n                toIndex = this._startIndex + lineX * (lineY + 1);\r\n                this._isMoved = true;\r\n            } else if (index < this._startIndex) {\r\n                num = this._startIndex - index;\r\n                down = false;\r\n                toIndex = this._startIndex - 1;\r\n                this._isMoved = true;\r\n            }\r\n\r\n            let cell: UIComponent;\r\n            let cellIndex: number;\r\n            for (let i = 0; i < num; i++) {\r\n                if (down) {\r\n                    cell = this._cells.shift();\r\n                    this._cells[this._cells.length] = cell;\r\n                    cellIndex = toIndex + i;\r\n                } else {\r\n                    cell = this._cells.pop();\r\n                    this._cells.unshift(cell);\r\n                    cellIndex = toIndex - i;\r\n                }\r\n                let pos = Math.floor(cellIndex / lineX) * this._cellSize;\r\n                this._isVertical ? cell.y = pos : cell.x = pos;\r\n                this.renderItem(cell, cellIndex);\r\n            }\r\n            this._startIndex = index;\r\n            this.changeSelectStatus();\r\n        } else {\r\n            let num = (lineY + 1);\r\n            if (this._createdLine - scrollLine < num) {\r\n                this._createItems(this._createdLine, lineX, this._createdLine + num);\r\n                this.renderItems(this._createdLine * lineX, 0);\r\n                this._createdLine += num;\r\n            }\r\n        }\r\n\r\n        let r = this._content._style.scrollRect;\r\n        if (this._isVertical) {\r\n            r.y = scrollValue - this._offset.y;\r\n            r.x = -this._offset.x;\r\n        } else {\r\n            r.y = -this._offset.y;\r\n            r.x = scrollValue - this._offset.x;\r\n        }\r\n        this._content.scrollRect = r;\r\n    }\r\n\r\n    private posCell(cell: UIComponent, cellIndex: number): void {\r\n        if (!this._scrollBar) return;\r\n        let lineX = (this._isVertical ? this.repeatX : this.repeatY);\r\n        //let lineY = (this._isVertical ? this.repeatY : this.repeatX);\r\n        let pos = Math.floor(cellIndex / lineX) * this._cellSize;\r\n        this._isVertical ? cell._y = pos : cell.x = pos;\r\n    }\r\n\r\n    /**\r\n     * 表示当前选择的项索引。selectedIndex值更改会引起list重新渲染\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        if (this._selectedIndex != value) {\r\n            this._selectedIndex = value;\r\n            this.changeSelectStatus();\r\n            this.event(Event.CHANGE);\r\n            this.selectHandler && this.selectHandler.runWith(value);\r\n            //选择发生变化，自动渲染一次\r\n            this.startIndex = this._startIndex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变单元格的选择状态。\r\n     */\r\n    protected changeSelectStatus(): void {\r\n        for (let i: number = 0, n: number = this._cells.length; i < n; i++) {\r\n            this.changeCellState(this._cells[i], this._selectedIndex === this._startIndex + i, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当前选中的单元格数据源。\r\n     */\r\n    get selectedItem(): any {\r\n        if (!this._array) return null;\r\n        return this._selectedIndex != -1 ? this._array[this._selectedIndex] : null;\r\n    }\r\n\r\n    set selectedItem(value: any) {\r\n        this._array && (this.selectedIndex = this._array.indexOf(value));\r\n    }\r\n\r\n    /**\r\n     * 获取或设置当前选择的单元格对象。\r\n     */\r\n    get selection(): UIComponent {\r\n        return this.getCell(this._selectedIndex);\r\n    }\r\n\r\n    set selection(value: UIComponent) {\r\n        this.selectedIndex = this._startIndex + this._cells.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * 当前显示的单元格列表的开始索引。\r\n     */\r\n    get startIndex(): number {\r\n        return this._startIndex;\r\n    }\r\n\r\n    set startIndex(value: number) {\r\n        this._startIndex = value > 0 ? value : 0;\r\n        this.callLater(this.renderItems);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 渲染单元格列表。\r\n     */\r\n    protected renderItems(from: number = 0, to: number = 0): void {\r\n        for (let i = from, n = to || this._cells.length; i < n; i++) {\r\n            this.renderItem(this._cells[i], this._startIndex + i);\r\n        }\r\n        this.changeSelectStatus();\r\n    }\r\n\r\n    /**\r\n     * 渲染一个单元格。\r\n     * @param cell 需要渲染的单元格对象。\r\n     * @param index 单元格索引。\r\n     */\r\n    protected renderItem(cell: UIComponent, index: number): void {\r\n        if (!this._array || index >= 0 && index < this._array.length) {\r\n            cell.visible = true;\r\n\r\n            if (this._array) {\r\n                if ((cell as any)[\"_$bindData\"]) {\r\n                    cell[\"_dataSource\"] = this._array[index];\r\n                    this._bindData(cell, this._array[index]);\r\n                } else\r\n                    cell.dataSource = this._array[index];\r\n            }\r\n\r\n            if (!this.cacheContent) {\r\n                //TODO:\r\n                this.posCell(cell, index);\r\n            }\r\n            if (this.hasListener(Event.RENDER)) this.event(Event.RENDER, [cell, index]);\r\n            if (this.renderHandler) this.renderHandler.runWith([cell, index]);\r\n        } else {\r\n            cell.visible = false;\r\n            cell.dataSource = null;\r\n        }\r\n    }\r\n\r\n    private _bindData(cell: any, data: any): void {\r\n        let arr: any[] = cell._$bindData;\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let ele: any = arr[i++];\r\n            let prop: string = arr[i++];\r\n            let value: string = arr[i];\r\n            let fun = UIUtils.getBindFun(value);\r\n            ele[prop] = fun.call(this, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 列表数据源。\r\n     */\r\n    get array(): any[] {\r\n        return this._array as any[];\r\n    }\r\n\r\n    private _preLen = 0;\r\n\r\n    set array(value: any[]) {\r\n        this.runCallLater(this.changeCells);\r\n        this._array = value || [];\r\n        this._preLen = this._array.length;\r\n        let length = this._array.length;\r\n        this.totalPage = Math.ceil(length / (this.repeatX * this.repeatY));\r\n        //重设selectedIndex\r\n        this._selectedIndex = this._selectedIndex < length ? this._selectedIndex : length - 1;\r\n        //重设startIndex\r\n        this.startIndex = this._startIndex;\r\n        //重设滚动条\r\n        if (this._scrollBar) {\r\n            //根据开关决定滚动条是否停止，默认在重设的时候会停止滚动\r\n            (!this.disableStopScroll && this._scrollBar.stopScroll());\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            let numY = this._isVertical ? this.repeatY : this.repeatX;\r\n            let lineCount = Math.ceil(length / numX);\r\n            let total = this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage;\r\n            if (total > 1 && lineCount >= numY) {\r\n                this._scrollBar.scrollSize = this._cellSize;\r\n                this._scrollBar.thumbPercent = numY / lineCount;\r\n                this._scrollBar.setScroll(0, (lineCount - numY) * this._cellSize + this._cellOffset, this._scrollBar.value);\r\n            } else {\r\n                this._scrollBar.setScroll(0, 0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新数据源，不刷新list，只增加滚动长度\r\n     * @param\tarray 数据源\r\n     */\r\n    updateArray(array: any[]): void {\r\n        this._array = array;\r\n        if (this._array) {\r\n            let freshStart = this._preLen - this._startIndex;\r\n            if (freshStart >= 0)\r\n                this.renderItems(freshStart);\r\n            this._preLen = this._array.length;\r\n        }\r\n        if (this._scrollBar) {\r\n            let length = array.length;\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            let numY = this._isVertical ? this.repeatY : this.repeatX;\r\n            let lineCount = Math.ceil(length / numX);\r\n            if (lineCount >= numY) {\r\n                this._scrollBar.thumbPercent = numY / lineCount;\r\n                this._scrollBar.slider[\"_max\"] = (lineCount - numY) * this._cellSize + this._cellOffset;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 列表的当前页码。\r\n     */\r\n    get page(): number {\r\n        return this._page;\r\n    }\r\n\r\n    set page(value: number) {\r\n        this._page = value\r\n        if (this._array) {\r\n            this._page = value > 0 ? value : 0;\r\n            this._page = this._page < this.totalPage ? this._page : this.totalPage - 1;\r\n            this.startIndex = this._page * this.repeatX * this.repeatY;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 列表的数据总个数。\r\n     */\r\n    get length(): number {\r\n        return this._array ? this._array.length : 0;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.selectedIndex = parseInt(value as string);\r\n        else if (value instanceof Array)\r\n            this.array = (<any[]>value)\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * 单元格集合。\r\n     */\r\n    get cells(): UIComponent[] {\r\n        this.runCallLater(this.changeCells);\r\n        return this._cells;\r\n    }\r\n\r\n    /**是否开启橡皮筋效果*/\r\n    get elasticEnabled(): boolean {\r\n        return this._elasticEnabled;\r\n    }\r\n\r\n    set elasticEnabled(value: boolean) {\r\n        this._elasticEnabled = value;\r\n        if (this._scrollBar) {\r\n            this._scrollBar.elasticDistance = value ? 200 : 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 刷新列表数据源。\r\n     */\r\n    refresh(): void {\r\n        this.array = this._array as any[];\r\n        //startIndex = _startIndex;\r\n    }\r\n\r\n    /**\r\n     * 获取单元格数据源。\r\n     * @param index 单元格索引。\r\n     */\r\n    getItem(index: number): any {\r\n        if (!this._array)\r\n            return null;\r\n        if (index > -1 && index < this._array.length) {\r\n            return this._array[index];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 修改单元格数据源。\r\n     * @param index 单元格索引。\r\n     * @param source 单元格数据源。\r\n     */\r\n    changeItem(index: number, source: any): void {\r\n        if (index > -1 && this._array && index < this._array.length) {\r\n            this._array[index] = source;\r\n            //如果是可视范围，则重新渲染\r\n            if (index >= this._startIndex && index < this._startIndex + this._cells.length) {\r\n                this.renderItem(this.getCell(index)!, index);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置单元格数据源。\r\n     * @param index 单元格索引。\r\n     * @param source 单元格数据源。\r\n     */\r\n    setItem(index: number, source: any): void {\r\n        this.changeItem(index, source);\r\n    }\r\n\r\n    /**\r\n     * 添加单元格数据源。\r\n     * @param source 数据源。\r\n     */\r\n    addItem(source: any): void {\r\n        if (!this.array) {\r\n            this.array = [source];\r\n        } else {\r\n            this._array!.push(source);\r\n        }\r\n        this.array = this._array as any[];\r\n    }\r\n\r\n    /**\r\n     * 添加单元格数据源到对应的数据索引处。\r\n     * @param souce 单元格数据源。\r\n     * @param index 索引。\r\n     */\r\n    addItemAt(souce: any, index: number): void {\r\n        this._array!.splice(index, 0, souce);\r\n        this.array = this._array!;\r\n    }\r\n\r\n    /**\r\n     * 通过数据源索引删除单元格数据源。\r\n     * @param index 需要删除的数据源索引值。\r\n     */\r\n    deleteItem(index: number): void {\r\n        if (this._array) {\r\n            this._array.splice(index, 1);\r\n            this.array = this._array;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过可视单元格索引，获取单元格。\r\n     * @param index 可视单元格索引。\r\n     * @return 单元格对象。\r\n     */\r\n    getCell(index: number): UIComponent | null {\r\n        this.runCallLater(this.changeCells);\r\n        if (index > -1 && this._cells) {\r\n            return this._cells[(index - this._startIndex) % this._cells.length];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * <p>滚动列表，以设定的数据索引对应的单元格为当前可视列表的第一项。</p>\r\n     * @param index 单元格在数据列表中的索引。\r\n     */\r\n    scrollTo(index: number): void {\r\n        if (this._scrollBar) {\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            this._scrollBar.value = Math.floor(index / numX) * this._cellSize;\r\n        } else {\r\n            this.startIndex = index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>缓动滚动列表，以设定的数据索引对应的单元格为当前可视列表的第一项。</p>\r\n     * @param index 单元格在数据列表中的索引。\r\n     * @param time\t缓动时间。\r\n     * @param complete\t缓动结束回掉\r\n     */\r\n    tweenTo(index: number, time: number = 200, complete: Handler | null = null): void {\r\n        if (this._scrollBar) {\r\n            this._scrollBar.stopScroll();\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            Tween.to(this._scrollBar, { value: Math.floor(index / numX) * this._cellSize }, time, null, complete, 0, true);\r\n        } else {\r\n            this.startIndex = index;\r\n            if (complete) complete.run();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _setCellChanged(): void {\r\n        if (!this._cellChanged) {\r\n            this._cellChanged = true;\r\n            this.callLater(this.changeCells);\r\n        }\r\n    }\r\n    /**@override */\r\n    protected commitMeasure(): void {\r\n        this.runCallLater(this.changeCells);\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Button } from \"./Button\";\r\nimport { List } from \"./List\";\r\nimport { ScrollType, Styles } from \"./Styles\";\r\nimport { Label } from \"./Label\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\n\r\n/**\r\n * 当用户更改 <code>ComboBox</code> 组件中的选定内容时调度。\r\n * @eventType laya.events.Event\r\n * selectedIndex属性变化时调度。\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>ComboBox</code> 组件包含一个下拉列表，用户可以从该列表中选择单个值。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>ComboBox</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.ComboBox;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class ComboBox_Example\r\n *\t\t{\r\n *\t\t\tpublic function ComboBox_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"资源加载完成！\");\r\n *\t\t\t\tvar comboBox:ComboBox = new ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\r\n *\t\t\t\tcomboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *\t\t\t\tcomboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *\t\t\t\tcomboBox.selectHandler = new Handler(this, onSelect);//设置 comboBox 选择项改变时执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onSelect(index:int):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选中的项对象索引： \",index);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高。\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     var comboBox = new laya.ui.ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\r\n *     comboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *     comboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *     comboBox.selectHandler = new laya.utils.Handler(this, onSelect);//设置 comboBox 选择项改变时执行的处理器。\r\n *     Laya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\r\n * }\r\n * function onSelect(index)\r\n * {\r\n *     console.log(\"当前选中的项对象索引： \",index);\r\n * }\r\n * @example\r\n * import ComboBox = laya.ui.ComboBox;\r\n * import Handler = laya.utils.Handler;\r\n * class ComboBox_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/button.png\", Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         console.log(\"资源加载完成！\");\r\n *         var comboBox: ComboBox = new ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\r\n *         comboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *         comboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *         comboBox.selectHandler = new Handler(this, this.onSelect);//设置 comboBox 选择项改变时执行的处理器。\r\n *         Laya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\r\n *     }\r\n *     private onSelect(index: number): void {\r\n *         console.log(\"当前选中的项对象索引： \", index);\r\n *     }\r\n * }\r\n *\r\n */\r\nexport class ComboBox extends UIComponent {\r\n    /**@private */\r\n    protected _visibleNum: number = 6;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _button: Button;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _list: List;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _isOpen: boolean;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _itemColors: string[];\r\n    /**\r\n     * @private\r\n     */\r\n    protected _itemPadding: number[];\r\n    /**\r\n     * @private\r\n     */\r\n    protected _itemSize: number = 12;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _labels: string[] = [];\r\n    /**\r\n     * @private\r\n     * 下拉提示文本\r\n     */\r\n    protected _defaultLabel: string = '';\r\n    /**\r\n     * @private\r\n     */\r\n    protected _selectedIndex: number = -1;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _selectHandler: Handler;\r\n    /**\r\n     * @private 下拉框列表单元的高度\r\n     */\r\n    protected _itemHeight: number;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _listHeight: number;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _listChanged: boolean;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _itemChanged: boolean;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _scrollBarSkin: string;\r\n    protected _scrollType: ScrollType = 0;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _isCustomList: boolean;\r\n    /**\r\n     * 渲染项，用来显示下拉列表展示对象\r\n     */\r\n    itemRender: any = null;\r\n\r\n    /**\r\n     * 创建一个新的 <code>ComboBox</code> 组件实例。\r\n     * @param skin 皮肤资源地址。\r\n     * @param labels 下拉列表的标签集字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\r\n     */\r\n    constructor(skin: string = null, labels: string = null) {\r\n        super();\r\n\r\n        this._itemColors = Styles.comboBoxItemColors;\r\n        this._itemPadding = [3, 3, 3, 3];\r\n\r\n        this.skin = skin;\r\n        this.labels = labels;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeList);\r\n        ILaya.stage.off(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\r\n        super.destroy(destroyChild);\r\n        this._button && this._button.destroy(destroyChild);\r\n        this._list && this._list.destroy(destroyChild);\r\n        this._button = null;\r\n        this._list = null;\r\n        this._itemColors = null;\r\n        this._itemPadding = null;\r\n        this._itemHeight = null;\r\n        this._labels = null;\r\n        this._selectHandler = null;\r\n        this._defaultLabel = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected createChildren(): void {\r\n        this._button = new Button();\r\n        this._button.hideFlags = HideFlags.HideAndDontSave;\r\n        this._button.text.align = \"left\";\r\n        this._button.labelPadding = \"0,0,0,5\";\r\n        this._button.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\r\n        this.addChild(this._button);\r\n    }\r\n\r\n    private _createList(): void {\r\n        this._list = new List();\r\n        this._list.hideFlags = HideFlags.HideAndDontSave;\r\n        this._list.scrollType = this._scrollType;\r\n        if (this._scrollBarSkin)\r\n            this._list.vScrollBarSkin = this._scrollBarSkin;\r\n        this._setListEvent(this._list);\r\n    }\r\n\r\n    private _setListEvent(list: List): void {\r\n        this._list.selectEnable = true;\r\n        this._list.on(Event.MOUSE_DOWN, this, this.onListDown);\r\n        this._list.mouseHandler = Handler.create(this, this.onlistItemMouse, null, false);\r\n        if (this._list.scrollBar) this._list.scrollBar.on(Event.MOUSE_DOWN, this, this.onScrollBarDown);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private onListDown(e: Event): void {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private onScrollBarDown(e: Event): void {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private onButtonMouseDown(e: Event): void {\r\n        this.callLater(this.switchTo, [!this._isOpen]);\r\n    }\r\n\r\n    get skin(): string {\r\n        return this._button.skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (this._button.skin != value) {\r\n            this._button.skin = value;\r\n            this._listChanged = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureWidth(): number {\r\n        return this._button.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureHeight(): number {\r\n        return this._button.height;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected changeList(): void {\r\n        this._listChanged = false;\r\n        var labelWidth: number = this.width - 2;\r\n        var labelColor: string = this._itemColors[2];\r\n        this._itemHeight = (this._itemHeight) ? this._itemHeight : this._itemSize + 6;\r\n        let _padding: string = (this.itemPadding) ? this.itemPadding : \"3,3,3,3\";\r\n        this._list.itemRender = this.itemRender || { type: \"Box\", child: [{ type: \"Label\", props: { name: \"label\", x: 1, padding: _padding, width: labelWidth, height: this._itemHeight, fontSize: this._itemSize, color: labelColor } }] };\r\n        this._list.repeatY = this._visibleNum;\r\n        this._list.refresh();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 下拉列表的鼠标事件响应函数。\r\n     */\r\n    protected onlistItemMouse(e: Event, index: number): void {\r\n        let type: string = e.type;\r\n        if (type === Event.MOUSE_OVER || type === Event.MOUSE_OUT) {\r\n            if (this._isCustomList) return;\r\n            let box = this._list.getCell(index);\r\n            if (!box) return;\r\n            let label: Label = (<Label>box.getChildByName(\"label\"));\r\n            if (label) {\r\n                if (type === Event.ROLL_OVER) {\r\n                    label.bgColor = this._itemColors[0];\r\n                    label.color = this._itemColors[1];\r\n                } else {\r\n                    label.bgColor = null;\r\n                    label.color = this._itemColors[2];\r\n                }\r\n            }\r\n        } else if (type === Event.CLICK) {\r\n            this.selectedIndex = index;\r\n            this.isOpen = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private switchTo(value: boolean): void {\r\n        this.isOpen = value;\r\n    }\r\n\r\n    /**\r\n     * 更改下拉列表的打开状态。\r\n     */\r\n    protected changeOpen(): void {\r\n        this.isOpen = !this._isOpen;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._button.width = this._width;\r\n        this._itemChanged = true;\r\n        this._listChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 下拉列表文本的边距Padding\r\n     * @readme <p><b>格式：</b>上边距,右边距,下边距,左边距</p>\r\n     */\r\n    get itemPadding(): string {\r\n        return this._itemPadding.join(\",\");\r\n    }\r\n\r\n    set itemPadding(value: string) {\r\n        this._itemPadding = UIUtils.fillArray(this._itemPadding, value, Number);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._button.height = this._height;\r\n    }\r\n\r\n    /**\r\n     * 标签集合字符串。\r\n     */\r\n    get labels(): string {\r\n        return this._labels.join(\",\");\r\n    }\r\n\r\n    set labels(value: string) {\r\n        if (this._labels.length > 0)\r\n            this.selectedIndex = -1;\r\n        if (value)\r\n            this._labels = value.split(\",\");\r\n        else\r\n            this._labels.length = 0;\r\n        this._itemChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 更改下拉列表。\r\n     */\r\n    protected changeItem(): void {\r\n        this._itemChanged = false;\r\n        //显示边框\r\n        this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight;\r\n        if (!this._isCustomList) {\r\n            //填充背景\r\n            var g: Graphics = this._list.graphics;\r\n            g.clear();\r\n            g.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]);\r\n        }\r\n\r\n        //填充数据\r\n        let a: any[] = this._list.array || [];\r\n        a.length = 0;\r\n        for (let i = 0, n = this._labels.length; i < n; i++) {\r\n            a.push({ label: this._labels[i] });\r\n        }\r\n        this._list.size(this.width, this._listHeight);\r\n        this._list.array = a;\r\n\r\n        //if (_visibleNum > a.length) {\r\n        //_list.height = _listHeight;\r\n        //} else {\r\n        //_list.height = 0;\r\n        //}\r\n    }\r\n\r\n    /**\r\n     * 表示选择的下拉列表项的索引。\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        if (this._selectedIndex != value) {\r\n            this._selectedIndex = value;\r\n\r\n            if (this._labels.length > 0)\r\n                this.changeSelected();\r\n            else\r\n                this.callLater(this.changeSelected);\r\n\r\n            this.event(Event.CHANGE, Event.EMPTY);\r\n            this._selectHandler && this._selectHandler.runWith(this._selectedIndex);\r\n        }\r\n    }\r\n\r\n    private changeSelected(): void {\r\n        this._button.label = this.selectedLabel;\r\n    }\r\n\r\n    /**\r\n    * 默认的下拉提示文本。\r\n    */\r\n    get defaultLabel(): string {\r\n        return this._defaultLabel;\r\n    }\r\n\r\n    set defaultLabel(value: string) {\r\n        this._defaultLabel = value;\r\n        this._selectedIndex < 0 && (this._button.label = value);\r\n    }\r\n\r\n    /**\r\n     * 改变下拉列表的选择项时执行的处理器(默认返回参数index:int)。\r\n     */\r\n    get selectHandler(): Handler {\r\n        return this._selectHandler;\r\n    }\r\n\r\n    set selectHandler(value: Handler) {\r\n        this._selectHandler = value;\r\n    }\r\n\r\n    /**\r\n     * 表示选择的下拉列表项的的标签。\r\n     */\r\n    get selectedLabel(): string {\r\n        return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : this.defaultLabel;\r\n    }\r\n\r\n    set selectedLabel(value: string) {\r\n        this.selectedIndex = this._labels.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * 获取或设置没有滚动条的下拉列表中可显示的最大行数。\r\n     */\r\n    get visibleNum(): number {\r\n        return this._visibleNum;\r\n    }\r\n\r\n    set visibleNum(value: number) {\r\n        this._visibleNum = value;\r\n        this._listChanged = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * 下拉列表项的高度\r\n     */\r\n    get itemHeight(): number {\r\n        return this._itemHeight;\r\n    }\r\n    set itemHeight(value: number) {\r\n        this._itemHeight = value;\r\n        this._listChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 下拉列表项颜色。\r\n     * <p><b>格式：</b>\"悬停或被选中时背景颜色,悬停或被选中时标签颜色,标签颜色,边框颜色,背景颜色\"</p>\r\n     */\r\n    get itemColors(): string {\r\n        return this._itemColors.join(\",\");\r\n    }\r\n\r\n    set itemColors(value: string) {\r\n        this._itemColors = UIUtils.fillArray(this._itemColors, value, String);\r\n        this._listChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 下拉列表项标签的字体大小。\r\n     */\r\n    get itemSize(): number {\r\n        return this._itemSize;\r\n    }\r\n\r\n    set itemSize(value: number) {\r\n        this._itemSize = value;\r\n        this._listChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 表示下拉列表的打开状态。\r\n     */\r\n    get isOpen(): boolean {\r\n        return this._isOpen;\r\n    }\r\n\r\n    set isOpen(value: boolean) {\r\n        //var Laya = ILaya.Laya;\r\n        if (this._isOpen != value) {\r\n            this._isOpen = value;\r\n            this._button.selected = this._isOpen;\r\n            if (this._isOpen) {\r\n                this._list || this._createList();\r\n                this._listChanged && !this._isCustomList && this.changeList();\r\n                this._itemChanged && this.changeItem();\r\n\r\n                var p: Point = this.localToGlobal(Point.TEMP.setTo(0, 0));\r\n                var py: number = p.y + this._button.height;\r\n                py = py + this._listHeight <= ILaya.stage.height ? py : p.y - this._listHeight < 0 ? py : p.y - this._listHeight;\r\n\r\n                this._list.pos(p.x, py);\r\n                this._list.zOrder = 1001;\r\n\r\n                ILaya.stage.addChild(this._list);\r\n                //Laya.stage.once(Event.MOUSE_DOWN, this, removeList);\r\n                //Laya.stage.on(Event.MOUSE_WHEEL, this, _onStageMouseWheel);\r\n                //parent.addChild(_list);\r\n                ILaya.stage.once(Event.MOUSE_DOWN, this, this.removeList);\r\n                ILaya.stage.on(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\r\n                this._list.selectedIndex = this._selectedIndex;\r\n            } else {\r\n                this._list && this._list.removeSelf();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onStageMouseWheel(e: Event): void {\r\n        if (!this._list || this._list.contains(e.target)) return;\r\n        this.removeList(null);\r\n    }\r\n\r\n    /**\r\n     * 关闭下拉列表。\r\n     */\r\n    protected removeList(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeList);\r\n        ILaya.stage.off(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\r\n        this.isOpen = false;\r\n    }\r\n\r\n    /**\r\n     * 滚动类型\r\n     */\r\n    get scrollType() {\r\n        return this._scrollType;\r\n    }\r\n\r\n    set scrollType(value: ScrollType) {\r\n        this._scrollType = value;\r\n    }\r\n\r\n    /**\r\n     * 滚动条皮肤。\r\n     */\r\n    get scrollBarSkin(): string {\r\n        return this._scrollBarSkin;\r\n    }\r\n\r\n    set scrollBarSkin(value: string) {\r\n        this._scrollBarSkin = value;\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this._button.sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        this._button.sizeGrid = value;\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>VScrollBar</code> 滚动条组件的引用。\r\n     */\r\n    get scrollBar(): VScrollBar {\r\n        return (<VScrollBar>this.list.scrollBar);\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的引用。\r\n     */\r\n    get button(): Button {\r\n        return this._button;\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>List</code> 列表组件的引用。\r\n     */\r\n    get list(): List {\r\n        this._list || this._createList();\r\n        return this._list;\r\n    }\r\n\r\n    set list(value: List) {\r\n        if (value) {\r\n            value.removeSelf();\r\n            this._isCustomList = true;\r\n            this._list = value;\r\n            this._setListEvent(value);\r\n            this._itemHeight = value.getCell(0).height + value.spaceY;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_dataSource(value: any): void {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.selectedIndex = parseInt(value as string);\r\n        else if (value instanceof Array)\r\n            this.labels = ((<any[]>value)).join(\",\");\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**\r\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的文本标签颜色。\r\n     * <p><b>格式：</b>upColor,overColor,downColor</p>\r\n     */\r\n    get labelColors(): string {\r\n        return this._button.labelColors;\r\n    }\r\n\r\n    set labelColors(value: string) {\r\n        if (this._button.labelColors != value) {\r\n            this._button.labelColors = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的文本边距。\r\n     * <p><b>格式：</b>上边距,右边距,下边距,左边距</p>\r\n     */\r\n    get labelPadding(): string {\r\n        return this._button.text.padding.join(\",\");\r\n    }\r\n\r\n    set labelPadding(value: string) {\r\n        this._button.text.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\r\n    }\r\n\r\n    /**\r\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的标签字体大小。\r\n     */\r\n    get labelSize(): number {\r\n        return this._button.text.fontSize;\r\n    }\r\n\r\n    set labelSize(value: number) {\r\n        this._button.text.fontSize = value\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签是否为粗体字。\r\n     * @see laya.display.Text#bold\r\n     */\r\n    get labelBold(): boolean {\r\n        return this._button.text.bold;\r\n    }\r\n\r\n    set labelBold(value: boolean) {\r\n        this._button.text.bold = value\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\r\n     * @see laya.display.Text#font\r\n     */\r\n    get labelFont(): string {\r\n        return this._button.text.font;\r\n    }\r\n\r\n    set labelFont(value: string) {\r\n        this._button.text.font = value\r\n    }\r\n\r\n    /**\r\n     * 表示按钮的状态值。\r\n     * @see laya.ui.Button#stateNum\r\n     */\r\n    get stateNum(): number {\r\n        return this._button.stateNum;\r\n    }\r\n\r\n    set stateNum(value: number) {\r\n        this._button.stateNum = value\r\n    }\r\n}","import { Scene } from \"../display/Scene\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>View</code> 是一个视图类\r\n * 在2.0里，View继承自Scene类，但这是不合理的，Scene是一个2D+3D的大概念。所以在3.0里请忽略这个继承。\r\n */\r\nexport class View extends Scene {\r\n    /**@private 兼容老版本*/\r\n    static uiMap: any = {};\r\n    /**@internal */\r\n    _watchMap: any = {};\r\n    /**@private 控件的数据源。 */\r\n    protected _dataSource: any;\r\n\r\n    constructor() {\r\n        super(false);   // 先不要createChildren 因为 this._widget还没有赋值\r\n\r\n        //3.0里View并不是Scene\r\n        this._scene = null;\r\n\r\n        this.createChildren();\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老版本\r\n     * 注册UI配置信息，比如注册一个路径为\"test/TestPage\"的页面，UI内容是IDE生成的json\r\n     * @param\turl\t\tUI的路径\r\n     * @param\tjson\tUI内容\r\n     */\r\n    static regUI(url: string, json: any): void {\r\n        ILaya.loader.cacheRes(url, json);\r\n    }\r\n\r\n\r\n    /**@private */\r\n    changeData(key: string): void {\r\n        let arr: any[] = this._watchMap[key];\r\n        if (!arr) return;\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let watcher: any = arr[i];\r\n            watcher.exe(this);\r\n        }\r\n    }\r\n\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        for (let name in value) {\r\n            let comp = this.getChildByName(name);\r\n            if (comp instanceof UIComponent)\r\n                comp.dataSource = value[name];\r\n            else if (name in this && !((this as any)[name] instanceof Function))\r\n                (this as any)[name] = value[name];\r\n        }\r\n    }\r\n}","import { UIConfig } from \"./../../UIConfig\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Box } from \"./Box\"\r\nimport { Dialog } from \"./Dialog\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { Ease } from \"../utils/Ease\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Tween } from \"../utils/Tween\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**打开任意窗口后调度。\r\n * @eventType Event.OPEN\r\n */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n/**关闭任意窗口后调度。\r\n * @eventType Event.CLOSE\r\n */\r\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>DialogManager</code> 对话框管理容器，所有的对话框都在该容器内，并且受管理器管理。\r\n * 任意对话框打开和关闭，都会出发管理类的open和close事件\r\n * 可以通过UIConfig设置弹出框背景透明度，模式窗口点击边缘是否关闭，点击窗口是否切换层次等\r\n * 通过设置对话框的zOrder属性，可以更改弹出的层次\r\n */\r\nexport class DialogManager extends Sprite {\r\n    /**遮罩层*/\r\n    maskLayer: Sprite = new Sprite();\r\n    /**锁屏层*/\r\n    lockLayer: Sprite;\r\n\r\n    /**@private 全局默认弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null*/\r\n    popupEffect = (dialog: Dialog)=>{\r\n        dialog.scale(1, 1);\r\n        dialog._effectTween = Tween.from(dialog, { x: ILaya.stage.width / 2, y: ILaya.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, Ease.backOut, Handler.create(this, this.doOpen, [dialog]), 0, false, false);\r\n    }\r\n\r\n    /**@private 全局默认关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null*/\r\n    closeEffect = (dialog: Dialog)=>{\r\n        dialog._effectTween = Tween.to(dialog, { x: ILaya.stage.width / 2, y: ILaya.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, Ease.strongOut, Handler.create(this, this.doClose, [dialog]), 0, false, false);\r\n    }\r\n\r\n    /**全局默认关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null*/\r\n    popupEffectHandler: Handler = new Handler(this, this.popupEffect);\r\n    /**全局默认弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null*/\r\n    closeEffectHandler: Handler = new Handler(this, this.closeEffect);\r\n\r\n    /**\r\n     * 创建一个新的 <code>DialogManager</code> 类实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.mouseEnabled = this.maskLayer.mouseEnabled = true;\r\n        this.zOrder = 1000;\r\n        ILaya.stage.addChild(this);\r\n        ILaya.stage.on(Event.RESIZE, this, this._onResize);\r\n        if (UIConfig.closeDialogOnSide) this.maskLayer.on(\"click\", this, this._closeOnSide);\r\n        this._onResize(null);\r\n    }\r\n\r\n    private _closeOnSide(): void {\r\n        var dialog: Dialog = (<Dialog>this.getChildAt(this.numChildren - 1));\r\n        if (dialog instanceof Dialog) dialog.close(\"side\");\r\n    }\r\n\r\n    /**设置锁定界面，如果为空则什么都不显示*/\r\n    setLockView(value: UIComponent): void {\r\n        if (!this.lockLayer) {\r\n            this.lockLayer = new Box();\r\n            this.lockLayer.mouseEnabled = true;\r\n            this.lockLayer.size(ILaya.stage.width, ILaya.stage.height);\r\n        }\r\n        this.lockLayer.removeChildren();\r\n        if (value) {\r\n            value.centerX = value.centerY = 0;\r\n            this.lockLayer.addChild(value);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _onResize(e: Event = null): void {\r\n        var width: number = this.maskLayer.width = ILaya.stage.width;\r\n        var height: number = this.maskLayer.height = ILaya.stage.height;\r\n        if (this.lockLayer) this.lockLayer.size(width, height);\r\n\r\n        this.maskLayer.graphics.clear(true);\r\n        this.maskLayer.graphics.drawRect(0, 0, width, height, UIConfig.popupBgColor);\r\n        this.maskLayer.alpha = UIConfig.popupBgAlpha;\r\n\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var item: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (item.isPopupCenter) this._centerDialog(item);\r\n        }\r\n    }\r\n\r\n    private _centerDialog(dialog: Dialog): void {\r\n        dialog.x = Math.round(((ILaya.stage.width - dialog.width) >> 1) + dialog.pivotX);\r\n        dialog.y = Math.round(((ILaya.stage.height - dialog.height) >> 1) + dialog.pivotY);\r\n    }\r\n\r\n    /**\r\n     * 显示对话框\r\n     * @param dialog 需要显示的对象框 <code>Dialog</code> 实例。\r\n     * @param closeOther 是否关闭其它对话框，若值为ture，则关闭其它的对话框。\r\n     * @param showEffect 是否显示弹出效果\r\n     */\r\n    open(dialog: Dialog, closeOther: boolean = false, showEffect: boolean = false): void {\r\n        if (closeOther) this._closeAll();\r\n        this._clearDialogEffect(dialog);\r\n        if (dialog.isPopupCenter) this._centerDialog(dialog);\r\n        this.addChild(dialog);\r\n        if (dialog.isModal || this._getBit(NodeFlags.HAS_ZORDER)) ILaya.timer.callLater(this, this._checkMask);\r\n        if (showEffect && dialog.popupEffect != null) dialog.popupEffect.runWith(dialog);\r\n        else this.doOpen(dialog);\r\n        this.event(Event.OPEN);\r\n    }\r\n\r\n    /**@private */\r\n    private _clearDialogEffect(dialog: Dialog): void {\r\n        if (dialog._effectTween) {\r\n            Tween.clear(dialog._effectTween);\r\n            dialog._effectTween = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 执行打开对话框。\r\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\r\n     */\r\n    doOpen(dialog: Dialog): void {\r\n        dialog.onOpened(dialog._param);\r\n    }\r\n\r\n    /**\r\n     * 锁定所有层，显示加载条信息，防止双击\r\n     */\r\n    lock(value: boolean): void {\r\n        if (this.lockLayer) {\r\n            if (value) this.addChild(this.lockLayer);\r\n            else this.lockLayer.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭对话框。\r\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\r\n     */\r\n    close(dialog: Dialog): void {\r\n        this._clearDialogEffect(dialog);\r\n        if (dialog.isShowEffect && dialog.closeEffect != null) dialog.closeEffect.runWith([dialog]);\r\n        else this.doClose(dialog);\r\n        this.event(Event.CLOSE);\r\n    }\r\n\r\n    /**\r\n     * 执行关闭对话框。\r\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\r\n     */\r\n    doClose(dialog: Dialog): void {\r\n        dialog.removeSelf();\r\n        dialog.isModal && this._checkMask();\r\n        dialog.closeHandler && dialog.closeHandler.runWith(dialog.closeType);\r\n        dialog.onClosed(dialog.closeType);\r\n        if (dialog.autoDestroyAtClosed) dialog.destroy();\r\n    }\r\n\r\n    /**\r\n     * 关闭所有的对话框。\r\n     */\r\n    closeAll(): void {\r\n        this._closeAll();\r\n        this.event(Event.CLOSE);\r\n    }\r\n\r\n    /**@private */\r\n    private _closeAll(): void {\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var item: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (item && item.close != null) {\r\n                this.doClose(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据组获取所有对话框\r\n     * @param\tgroup 组名称\r\n     * @return\t对话框数组\r\n     */\r\n    getDialogsByGroup(group: string): any[] {\r\n        var arr: any[] = [];\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var item: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (item && item.group === group) {\r\n                arr.push(item);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 根据组关闭所有弹出框\r\n     * @param\tgroup 需要关闭的组名称\r\n     * @return\t需要关闭的对话框数组\r\n     */\r\n    closeByGroup(group: string): any[] {\r\n        var arr: any[] = [];\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var item: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (item && item.group === group) {\r\n                item.close();\r\n                arr.push(item);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**@internal 发生层次改变后，重新检查遮罩层是否正确*/\r\n    _checkMask(): void {\r\n        this.maskLayer.removeSelf();\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var dialog: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (dialog && dialog.isModal) {\r\n                //trace(numChildren,i);\r\n                this.addChildAt(this.maskLayer, i);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}","import { View } from \"./View\";\r\nimport { DialogManager } from \"./DialogManager\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Button } from \"./Button\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Tween } from \"../utils/Tween\"\r\n\r\n/**\r\n * <code>Dialog</code> 组件是一个弹出对话框，实现对话框弹出，拖动，模式窗口功能。\r\n * 可以通过UIConfig设置弹出框背景透明度，模式窗口点击边缘是否关闭等\r\n * 通过设置zOrder属性，可以更改弹出的层次\r\n * 通过设置popupEffect和closeEffect可以设置弹出效果和关闭效果，如果不想有任何弹出关闭效果，可以设置前述属性为空\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Dialog</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Dialog;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class Dialog_Example\r\n *\t\t{\r\n *\t\t\tprivate var dialog:Dialog_Instance;\r\n *\t\t\tpublic function Dialog_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/btn_close.png\", Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tdialog = new Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\r\n *\t\t\t\tdialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\r\n *\t\t\t\tdialog.show();//显示 dialog。\r\n *\t\t\t\tdialog.closeHandler = new Handler(this, onClose);//设置 dialog 的关闭函数处理器。\r\n *\t\t\t}\r\n *\t\t\tprivate function onClose(name:String):void\r\n *\t\t\t{\r\n *\t\t\t\tif (name == Dialog.CLOSE)\r\n *\t\t\t\t{\r\n *\t\t\t\t\ttrace(\"通过点击 name 为\" + name +\"的组件，关闭了dialog。\");\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n *\timport laya.ui.Button;\r\n *\timport laya.ui.Dialog;\r\n *\timport laya.ui.Image;\r\n *\tclass Dialog_Instance extends Dialog\r\n *\t{\r\n *\t\tfunction Dialog_Instance():void\r\n *\t\t{\r\n *\t\t\tvar bg:Image = new Image(\"resource/ui/bg.png\");\r\n *\t\t\tbg.sizeGrid = \"40,10,5,10\";\r\n *\t\t\tbg.width = 150;\r\n *\t\t\tbg.height = 250;\r\n *\t\t\taddChild(bg);\r\n *\t\t\tvar image:Image = new Image(\"resource/ui/image.png\");\r\n *\t\t\taddChild(image);\r\n *\t\t\tvar button:Button = new Button(\"resource/ui/btn_close.png\");\r\n *\t\t\tbutton.name = Dialog.CLOSE;//设置button的name属性值。\r\n *\t\t\tbutton.x = 0;\r\n *\t\t\tbutton.y = 0;\r\n *\t\t\taddChild(button);\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var dialog;\r\n * Laya.loader.load(\"resource/ui/btn_close.png\", laya.utils.Handler.create(this, loadComplete));//加载资源\r\n * (function (_super) {//新建一个类Dialog_Instance继承自laya.ui.Dialog。\r\n *     function Dialog_Instance() {\r\n *         Dialog_Instance.__super.call(this);//初始化父类\r\n *         var bg = new laya.ui.Image(\"resource/ui/bg.png\");//新建一个 Image 类的实例 bg 。\r\n *         bg.sizeGrid = \"10,40,10,5\";//设置 bg 的网格信息。\r\n *         bg.width = 150;//设置 bg 的宽度。\r\n *         bg.height = 250;//设置 bg 的高度。\r\n *         this.addChild(bg);//将 bg 添加到显示列表。\r\n *         var image = new laya.ui.Image(\"resource/ui/image.png\");//新建一个 Image 类的实例 image 。\r\n *         this.addChild(image);//将 image 添加到显示列表。\r\n *         var button = new laya.ui.Button(\"resource/ui/btn_close.png\");//新建一个 Button 类的实例 bg 。\r\n *         button.name = laya.ui.Dialog.CLOSE;//设置 button 的 name 属性值。\r\n *         button.x = 0;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n *         button.y = 0;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n *         this.addChild(button);//将 button 添加到显示列表。\r\n *     };\r\n *     Laya.class(Dialog_Instance,\"mypackage.dialogExample.Dialog_Instance\",_super);//注册类Dialog_Instance。\r\n * })(laya.ui.Dialog);\r\n * function loadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     dialog = new mypackage.dialogExample.Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\r\n *     dialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\r\n *     dialog.show();//显示 dialog。\r\n *     dialog.closeHandler = new laya.utils.Handler(this, onClose);//设置 dialog 的关闭函数处理器。\r\n * }\r\n * function onClose(name) {\r\n *     if (name == laya.ui.Dialog.CLOSE) {\r\n *         console.log(\"通过点击 name 为\" + name + \"的组件，关闭了dialog。\");\r\n *     }\r\n * }\r\n * @example\r\n * import Dialog = laya.ui.Dialog;\r\n * import Handler = laya.utils.Handler;\r\n * class Dialog_Example {\r\n *     private dialog: Dialog_Instance;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/btn_close.png\", Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.dialog = new Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\r\n *         this.dialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\r\n *         this.dialog.show();//显示 dialog。\r\n *         this.dialog.closeHandler = new Handler(this, this.onClose);//设置 dialog 的关闭函数处理器。\r\n *     }\r\n *     private onClose(name: string): void {\r\n *         if (name == Dialog.CLOSE) {\r\n *             console.log(\"通过点击 name 为\" + name + \"的组件，关闭了dialog。\");\r\n *         }\r\n *     }\r\n * }\r\n * import Button = laya.ui.Button;\r\n * class Dialog_Instance extends Dialog {\r\n *     Dialog_Instance(): void {\r\n *         var bg: laya.ui.Image = new laya.ui.Image(\"resource/ui/bg.png\");\r\n *         bg.sizeGrid = \"40,10,5,10\";\r\n *         bg.width = 150;\r\n *         bg.height = 250;\r\n *         this.addChild(bg);\r\n *         var image: laya.ui.Image = new laya.ui.Image(\"resource/ui/image.png\");\r\n *         this.addChild(image);\r\n *         var button: Button = new Button(\"resource/ui/btn_close.png\");\r\n *         button.name = Dialog.CLOSE;//设置button的name属性值。\r\n *         button.x = 0;\r\n *         button.y = 0;\r\n *         this.addChild(button);\r\n *     }\r\n * }\r\n */\r\nexport class Dialog extends View {\r\n    /**对话框内的某个按钮命名为close，点击此按钮则会关闭*/\r\n    static CLOSE: string = \"close\";\r\n    /**对话框内的某个按钮命名为cancel，点击此按钮则会关闭*/\r\n    static CANCEL: string = \"cancel\";\r\n    /**对话框内的某个按钮命名为sure，点击此按钮则会关闭*/\r\n    static SURE: string = \"sure\";\r\n    /**对话框内的某个按钮命名为no，点击此按钮则会关闭*/\r\n    static NO: string = \"no\";\r\n    /**对话框内的某个按钮命名为yes，点击此按钮则会关闭*/\r\n    static YES: string = \"yes\";\r\n    /**对话框内的某个按钮命名为ok，点击此按钮则会关闭*/\r\n    static OK: string = \"ok\";\r\n\r\n    /**@private 表示对话框管理器。*/\r\n    private static _manager: DialogManager;\r\n\r\n    /**对话框管理容器，所有的对话框都在该容器内，并且受管理器管理，可以自定义自己的管理器，来更改窗口管理的流程。\r\n     * 任意对话框打开和关闭，都会触发管理类的open和close事件*/\r\n    static get manager(): DialogManager {\r\n        return Dialog._manager = Dialog._manager || new DialogManager();\r\n    }\r\n\r\n    static set manager(value: DialogManager) {\r\n        Dialog._manager = value;\r\n    }\r\n\r\n    /**\r\n     * 对话框被关闭时会触发的回调函数处理器。\r\n     * <p>回调函数参数为用户点击的按钮名字name:String。</p>\r\n     */\r\n    closeHandler: Handler;\r\n    /**\r\n     * 弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null\r\n     * 全局默认弹出效果可以通过manager.popupEffect修改\r\n     */\r\n    popupEffect: Handler;\r\n    /**\r\n     * 关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null\r\n     * 全局默认关闭效果可以通过manager.closeEffect修改\r\n     */\r\n    closeEffect: Handler;\r\n    /**组名称*/\r\n    group: string;\r\n    /**是否是模式窗口*/\r\n    isModal: boolean;\r\n    /**是否显示弹出效果*/\r\n    isShowEffect: boolean = true;\r\n    /**指定对话框是否居中弹。<p>如果值为true，则居中弹出，否则，则根据对象坐标显示，默认为true。</p>*/\r\n    isPopupCenter: boolean = true;\r\n    /**关闭类型，点击name为\"close\"，\"cancel\"，\"sure\"，\"no\"，\"yes\"，\"no\"的按钮时，会自动记录点击按钮的名称*/\r\n    closeType: string;\r\n    /**@private */\r\n    private _dragArea: Rectangle;\r\n    /**@internal */\r\n    _param: any;\r\n    /**@internal */\r\n    _effectTween: Tween;\r\n\r\n    constructor() {\r\n        super();\r\n        this.popupEffect = Dialog.manager.popupEffectHandler;\r\n        this.closeEffect = Dialog.manager.closeEffectHandler;\r\n        this._dealDragArea();\r\n        this.on(Event.CLICK, this, this._onClick);\r\n    }\r\n\r\n    /**@private 提取拖拽区域*/\r\n    protected _dealDragArea(): void {\r\n        var dragTarget: Sprite = (<Sprite>this.getChildByName(\"drag\"));\r\n        if (dragTarget) {\r\n            this.dragArea = dragTarget._x + \",\" + dragTarget._y + \",\" + dragTarget.width + \",\" + dragTarget.height;\r\n            dragTarget.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 用来指定对话框的拖拽区域。默认值为\"0,0,0,0\"。\r\n     * <p><b>格式：</b>构成一个矩形所需的 x,y,width,heith 值，用逗号连接为字符串。\r\n     * 例如：\"0,0,100,200\"。</p>\r\n     * @see #includeExamplesSummary 请参考示例\r\n     */\r\n    get dragArea(): string {\r\n        if (this._dragArea) return this._dragArea.toString();\r\n        return null;\r\n    }\r\n\r\n    set dragArea(value: string) {\r\n        if (value) {\r\n            var a: any[] = UIUtils.fillArray([0, 0, 0, 0], value, Number);\r\n            this._dragArea = new Rectangle(a[0], a[1], a[2], a[3]);\r\n            this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        } else {\r\n            this._dragArea = null;\r\n            this.off(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _onMouseDown(e: Event): void {\r\n        var point: Point = this.getMousePoint();\r\n        if (this._dragArea.contains(point.x, point.y)) this.startDrag();\r\n        else this.stopDrag();\r\n    }\r\n\r\n    /**@private 处理默认点击事件*/\r\n    protected _onClick(e: Event): void {\r\n        var btn: Button = (<Button>e.target);\r\n        if (btn) {\r\n            switch (btn.name) {\r\n                case Dialog.CLOSE:\r\n                case Dialog.CANCEL:\r\n                case Dialog.SURE:\r\n                case Dialog.NO:\r\n                case Dialog.OK:\r\n                case Dialog.YES:\r\n                    this.close(btn.name);\r\n                    return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    open(closeOther: boolean = true, param: any = null): void {\r\n        this._dealDragArea();\r\n        this._param = param;\r\n        Dialog.manager.open(this, closeOther, this.isShowEffect);\r\n        Dialog.manager.lock(false);\r\n    }\r\n\r\n    /**\r\n     * 关闭对话框。\r\n     * @param type 关闭的原因，会传递给onClosed函数\r\n     * @override\r\n     */\r\n    close(type: string = null): void {\r\n        this.closeType = type;\r\n        Dialog.manager.close(this);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.closeHandler = null;\r\n        this.popupEffect = null;\r\n        this.closeEffect = null;\r\n        this._dragArea = null;\r\n        super.destroy(destroyChild);\r\n    }\r\n\r\n    /**\r\n     * 显示对话框（以非模式窗口方式显示）。\r\n     * @param closeOther 是否关闭其它的对话框。若值为true则关闭其它对话框。\r\n     * @param showEffect 是否显示弹出效果\r\n     */\r\n    show(closeOther: boolean = false, showEffect: boolean = true): void {\r\n        this._open(false, closeOther, showEffect);\r\n    }\r\n\r\n    /**\r\n     * 显示对话框（以模式窗口方式显示）。\r\n     * @param closeOther 是否关闭其它的对话框。若值为true则关闭其它对话框。\r\n     * @param showEffect 是否显示弹出效果\r\n     */\r\n    popup(closeOther: boolean = false, showEffect: boolean = true): void {\r\n        this._open(true, closeOther, showEffect);\r\n    }\r\n\r\n    /**@private */\r\n    protected _open(modal: boolean, closeOther: boolean, showEffect: boolean): void {\r\n        this.isModal = modal;\r\n        this.isShowEffect = showEffect;\r\n        Dialog.manager.lock(true);\r\n        this.open(closeOther);\r\n    }\r\n\r\n    /**弹出框的显示状态；如果弹框处于显示中，则为true，否则为false;*/\r\n    get isPopup(): boolean {\r\n        return this.parent != null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set zOrder(value: number) {\r\n        super.zOrder = value;\r\n        Dialog.manager._checkMask();\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get zOrder() {\r\n        return super.zOrder;\r\n    }\r\n\r\n    /**\r\n     * 设置锁定界面，在界面未准备好前显示锁定界面，准备完毕后则移除锁定层，如果为空则什么都不显示\r\n     * @param\tview 锁定界面内容\r\n     */\r\n    static setLockView(view: UIComponent): void {\r\n        Dialog.manager.setLockView(view);\r\n    }\r\n\r\n    /**\r\n     * 锁定所有层，显示加载条信息，防止下面内容被点击\r\n     */\r\n    static lock(value: boolean): void {\r\n        Dialog.manager.lock(value);\r\n    }\r\n\r\n    /**关闭所有对话框。*/\r\n    static closeAll(): void {\r\n        Dialog.manager.closeAll();\r\n    }\r\n\r\n    /**\r\n     * 根据组获取对话框集合\r\n     * @param\tgroup 组名称\r\n     * @return\t对话框数组\r\n     */\r\n    static getDialogsByGroup(group: string): any[] {\r\n        return Dialog.manager.getDialogsByGroup(group);\r\n    }\r\n\r\n    /**\r\n     * 根据组关闭所有弹出框\r\n     * @param\tgroup 需要关闭的组名称\r\n     */\r\n    static closeByGroup(group: string): any[] {\r\n        return Dialog.manager.closeByGroup(group);\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Clip } from \"./Clip\"\r\n\r\n/**\r\n * 字体切片，简化版的位图字体，只需设置一个切片图片和文字内容即可使用，效果同位图字体\r\n * 使用方式：设置位图字体皮肤skin，设置皮肤对应的字体内容sheet（如果多行，可以使用空格换行），示例：\r\n * fontClip.skin = \"font1.png\";//设置皮肤\r\n * fontClip.sheet = \"abc123 456\";//设置皮肤对应的内容，空格换行。此皮肤为2行5列（显示时skin会被等分为2行5列），第一行对应的文字为\"abc123\"，第二行为\"456\"\r\n * fontClip.value = \"a1326\";//显示\"a1326\"文字\r\n */\r\nexport class FontClip extends Clip {\r\n    /**数值*/\r\n    protected _valueArr: string = '';\r\n    /**文字内容数组**/\r\n    protected _indexMap: Record<string, number> = null;\r\n    /**位图字体内容**/\r\n    protected _sheet: string = null;\r\n    /**@private */\r\n    protected _direction: string = \"horizontal\";\r\n    /**X方向间隙*/\r\n    protected _spaceX: number = 0;\r\n    /**Y方向间隙*/\r\n    protected _spaceY: number = 0;\r\n    /**@private 水平对齐方式*/\r\n    private _align: string = \"left\";\r\n    /**@private 显示文字宽*/\r\n    private _wordsW: number = 0;\r\n    /**@private 显示文字高*/\r\n    private _wordsH: number = 0;\r\n\r\n    /**\r\n     * @param skin 位图字体皮肤\r\n     * @param sheet 位图字体内容，空格代表换行\r\n     */\r\n    constructor(skin: string = null, sheet: string = null) {\r\n        super();\r\n        if (skin) this.skin = skin;\r\n        if (sheet) this.sheet = sheet;\r\n    }\r\n\r\n    /**\r\n     * 资源加载完毕\r\n     */\r\n    protected loadComplete(url: string, img: Texture): void {\r\n        super.loadComplete(url, img);\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        ////屏蔽Clip类操作\r\n    }\r\n\r\n    /**\r\n     * 设置位图字体内容，空格代表换行。比如\"abc123 456\"，代表第一行对应的文字为\"abc123\"，第二行为\"456\"\r\n     */\r\n    get sheet(): string {\r\n        return this._sheet;\r\n    }\r\n\r\n    set sheet(value: string) {\r\n        value += \"\";\r\n        this._sheet = value;\r\n        //根据空格换行\r\n        var arr: any[] = value.split(\" \");\r\n        this._clipX = String(arr[0]).length;\r\n        this.clipY = arr.length;\r\n\r\n        this._indexMap = {};\r\n        for (var i: number = 0; i < this._clipY; i++) {\r\n            var line: any[] = arr[i].split(\"\");\r\n            for (var j: number = 0, n: number = line.length; j < n; j++) {\r\n                this._indexMap[line[j]] = i * this._clipX + j;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置位图字体的显示内容\r\n     */\r\n    get value(): string {\r\n        if (!this._valueArr) return \"\";\r\n        return this._valueArr;\r\n    }\r\n\r\n    set value(value: string) {\r\n        value += \"\";\r\n        this._valueArr = value;\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**\r\n     * 布局方向。\r\n     * <p>默认值为\"horizontal\"。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"horizontal\"：表示水平布局。</li>\r\n     * <li>\"vertical\"：表示垂直布局。</li>\r\n     * </p>\r\n     */\r\n    get direction(): string {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction(value: string) {\r\n        this._direction = value;\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**X方向文字间隙*/\r\n    get spaceX(): number {\r\n        return this._spaceX;\r\n    }\r\n\r\n    set spaceX(value: number) {\r\n        this._spaceX = value;\r\n        if (this._direction === \"horizontal\") this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**Y方向文字间隙*/\r\n    get spaceY(): number {\r\n        return this._spaceY;\r\n    }\r\n\r\n    set spaceY(value: number) {\r\n        this._spaceY = value;\r\n        if (!(this._direction === \"horizontal\")) this.callLater(this.changeValue);\r\n    }\r\n\r\n\r\n    set align(v: string) {\r\n        this._align = v;\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**水平对齐方式*/\r\n    get align(): string {\r\n        return this._align;\r\n    }\r\n\r\n    /**渲染数值*/\r\n    protected changeValue(): void {\r\n        if (!this._sources) return;\r\n        if (!this._valueArr) return;\r\n        this.graphics.clear(true);\r\n        let texture: Texture;\r\n        texture = this._sources[0];\r\n        if (!texture) return;\r\n        var isHorizontal: boolean = (this._direction === \"horizontal\");\r\n        if (isHorizontal) {\r\n            this._wordsW = this._valueArr.length * (texture.sourceWidth + this.spaceX);\r\n            this._wordsH = texture.sourceHeight;\r\n        } else {\r\n            this._wordsW = texture.sourceWidth;\r\n            this._wordsH = (texture.sourceHeight + this.spaceY) * this._valueArr.length;\r\n        }\r\n        let dX: number = 0;\r\n        if (this._isWidthSet) {\r\n            switch (this._align) {\r\n                case \"center\":\r\n                    dX = 0.5 * (this._width - this._wordsW);\r\n                    break;\r\n                case \"right\":\r\n                    dX = this._width - this._wordsW;\r\n                    break;\r\n                default:\r\n                    dX = 0;\r\n            }\r\n        }\r\n\r\n        for (let i = 0, sz = this._valueArr.length; i < sz; i++) {\r\n            let index = this._indexMap[this._valueArr.charAt(i)];\r\n            texture = this._sources[index];\r\n            if (!texture)\r\n                continue;\r\n\r\n            if (isHorizontal)\r\n                this.graphics.drawImage(texture, dX + i * (texture.sourceWidth + this.spaceX), 0, texture.sourceWidth, texture.sourceHeight);\r\n            else\r\n                this.graphics.drawImage(texture, 0 + dX, i * (texture.sourceHeight + this.spaceY), texture.sourceWidth, texture.sourceHeight);\r\n        }\r\n\r\n        if (!this._isWidthSet) {\r\n            this._widget.resetLayoutX();\r\n            this.callLater(this._sizeChanged);\r\n        }\r\n        if (!this._isHeightSet) {\r\n            this._widget.resetLayoutY();\r\n            this.callLater(this._sizeChanged);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        return this._wordsW;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        return this._wordsH;\r\n    }\r\n    /**\r\n     * \r\n     * @param destroyChild \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._valueArr = null;\r\n        this._indexMap = null;\r\n        this.graphics.clear(true);\r\n\r\n        super.destroy(destroyChild);\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * <code>LayoutBox</code> 是一个布局容器类。\r\n */\r\nexport class LayoutBox extends Box {\r\n    /**@private */\r\n    protected _space: number = 0;\r\n    /**@private */\r\n    protected _align: string = \"none\";\r\n    /**@private */\r\n    protected _itemChanged: boolean = false;\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n    */\r\n    addChild<T extends Node>(child: T): T {\r\n        child.on(Event.RESIZE, this, this.onResize);\r\n        this._setItemChanged();\r\n        return super.addChild(child);\r\n    }\r\n\r\n    private onResize(e: Event): void {\r\n        this._setItemChanged();\r\n    }\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n    */\r\n    addChildAt(child: Node, index: number): Node {\r\n        child.on(Event.RESIZE, this, this.onResize);\r\n        this._setItemChanged();\r\n        return super.addChildAt(child, index);\r\n    }\r\n\r\n    /**\r\n     *  @inheritDoc\t\r\n     * @override\r\n    */\r\n    removeChildAt(index: number): Node {\r\n        this.getChildAt(index).off(Event.RESIZE, this, this.onResize);\r\n        this._setItemChanged();\r\n        return super.removeChildAt(index);\r\n    }\r\n\r\n    /** 刷新。*/\r\n    refresh(): void {\r\n        this._setItemChanged();\r\n    }\r\n\r\n    /**\r\n     * 改变子对象的布局。\r\n     */\r\n    protected changeItems(): void {\r\n        this._itemChanged = false;\r\n    }\r\n\r\n    /** 子对象的间隔。*/\r\n    get space(): number {\r\n        return this._space;\r\n    }\r\n\r\n    set space(value: number) {\r\n        this._space = value;\r\n        this._setItemChanged();\r\n    }\r\n\r\n    /** 子对象对齐方式。*/\r\n    get align(): string {\r\n        return this._align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        this._align = value;\r\n        this._setItemChanged();\r\n    }\r\n\r\n    /**\r\n     * 排序项目列表。可通过重写改变默认排序规则。\r\n     * @param items  项目列表。\r\n     */\r\n    protected sortItem(items: any[]): void {\r\n        if (items) items.sort(function (a: any, b: any): number { return a.y - b.y; });\r\n    }\r\n\r\n    protected _setItemChanged(): void {\r\n        if (!this._itemChanged) {\r\n            this._itemChanged = true;\r\n            this.callLater(this.changeItems);\r\n        }\r\n    }\r\n}","import { LayoutBox } from \"./LayoutBox\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n * <code>HBox</code> 是一个水平布局容器类。\r\n */\r\nexport class HBox extends LayoutBox {\r\n    /**\r\n     * 无对齐。\r\n     */\r\n    static NONE: string = \"none\";\r\n    /**\r\n     * 居顶部对齐。\r\n     */\r\n    static TOP: string = \"top\";\r\n    /**\r\n     * 居中对齐。\r\n     */\r\n    static MIDDLE: string = \"middle\";\r\n    /**\r\n     * 居底部对齐。\r\n     */\r\n    static BOTTOM: string = \"bottom\";\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n     */\r\n    protected sortItem(items: any[]): void {\r\n        if (items) items.sort(function (a: any, b: any): number { return a.x - b.x; });\r\n    }\r\n    /**\r\n     * @inheritDoc\t\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this.callLater(this.changeItems);\r\n    }\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n     */\r\n    protected changeItems(): void {\r\n        this._itemChanged = false;\r\n        var items: any[] = [];\r\n        var maxHeight = 0;\r\n        for (let i = 0, n = this.numChildren; i < n; i++) {\r\n            let item = (<UIComponent>this.getChildAt(i));\r\n            if (item) {\r\n                items.push(item);\r\n                maxHeight = this._isHeightSet ? this._height : Math.max(maxHeight, item.height * item.scaleY);\r\n            }\r\n        }\r\n        this.sortItem(items);\r\n        let left = 0;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            let item = items[i];\r\n            item.x = left;\r\n            left += item.width * item.scaleX + this._space;\r\n            if (this._align == HBox.TOP) {\r\n                item.y = 0;\r\n            } else if (this._align == HBox.MIDDLE) {\r\n                item.y = (maxHeight - item.height * item.scaleY) * 0.5;\r\n            } else if (this._align == HBox.BOTTOM) {\r\n                item.y = maxHeight - item.height * item.scaleY;\r\n            }\r\n        }\r\n        this._sizeChanged();\r\n    }\r\n}","import { Slider } from \"./Slider\";\r\n\r\n/**\r\n * 使用 <code>HSlider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\r\n * <p> <code>HSlider</code> 控件采用水平方向。滑块轨道从左向右扩展，而标签位于轨道的顶部或底部。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>HSlider</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.HSlider;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class HSlider_Example\r\n *\t\t{\r\n *\t\t\tprivate var hSlider:HSlider;\r\n *\t\t\tpublic function HSlider_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\thSlider = new HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\r\n *\t\t\t\thSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\r\n *\t\t\t\thSlider.min = 0;//设置 hSlider 最低位置值。\r\n *\t\t\t\thSlider.max = 10;//设置 hSlider 最高位置值。\r\n *\t\t\t\thSlider.value = 2;//设置 hSlider 当前位置值。\r\n *\t\t\t\thSlider.tick = 1;//设置 hSlider 刻度值。\r\n *\t\t\t\thSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\r\n *\t\t\t\thSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\r\n *\t\t\t\thSlider.changeHandler = new Handler(this, onChange);//设置 hSlider 位置变化处理器。\r\n *\t\t\t\tLaya.stage.addChild(hSlider);//把 hSlider 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"滑块的位置： value=\" + value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800, \"canvas\");//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var hSlider;\r\n * var res = [\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"];\r\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));\r\n * function onLoadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     hSlider = new laya.ui.HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\r\n *     hSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\r\n *     hSlider.min = 0;//设置 hSlider 最低位置值。\r\n *     hSlider.max = 10;//设置 hSlider 最高位置值。\r\n *     hSlider.value = 2;//设置 hSlider 当前位置值。\r\n *     hSlider.tick = 1;//设置 hSlider 刻度值。\r\n *     hSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\r\n *     hSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\r\n *     hSlider.changeHandler = new laya.utils.Handler(this, onChange);//设置 hSlider 位置变化处理器。\r\n *     Laya.stage.addChild(hSlider);//把 hSlider 添加到显示列表。\r\n * }\r\n * function onChange(value)\r\n * {\r\n *     console.log(\"滑块的位置： value=\" + value);\r\n * }\r\n * @example\r\n * import Handler = laya.utils.Handler;\r\n * import HSlider = laya.ui.HSlider;\r\n * class HSlider_Example {\r\n *     private hSlider: HSlider;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.hSlider = new HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\r\n *         this.hSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\r\n *         this.hSlider.min = 0;//设置 hSlider 最低位置值。\r\n *         this.hSlider.max = 10;//设置 hSlider 最高位置值。\r\n *         this.hSlider.value = 2;//设置 hSlider 当前位置值。\r\n *         this.hSlider.tick = 1;//设置 hSlider 刻度值。\r\n *         this.hSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\r\n *         this.hSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\r\n *         this.hSlider.changeHandler = new Handler(this, this.onChange);//设置 hSlider 位置变化处理器。\r\n *         Laya.stage.addChild(this.hSlider);//把 hSlider 添加到显示列表。\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"滑块的位置： value=\" + value);\r\n *     }\r\n * }\r\n *\r\n * @see laya.ui.Slider\r\n*/\r\nexport class HSlider extends Slider {\r\n\r\n    /**\r\n     * 创建一个 <code>HSlider</code> 类实例。\r\n     * @param skin 皮肤。\r\n     */\r\n    constructor(skin: string = null) {\r\n        super(skin);\r\n        this.isVertical = false;\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { HScrollBar } from \"./HScrollBar\";\r\nimport { ScrollBar } from \"./ScrollBar\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { ScrollType } from \"./Styles\";\r\n\r\n/**\r\n * <code>Panel</code> 是一个面板容器类。\r\n */\r\nexport class Panel extends Box {\r\n    /**@private */\r\n    protected _content: Box;\r\n    /**@private */\r\n    protected _vScrollBar: VScrollBar;\r\n    /**@private */\r\n    protected _hScrollBar: HScrollBar;\r\n    /**@private */\r\n    protected _scrollChanged: boolean;\r\n    /**@private */\r\n    protected _usedCache: string = null;\r\n    /**@private */\r\n    protected _elasticEnabled: boolean = false;\r\n\r\n    protected _scrollType: ScrollType = 0;\r\n    protected _vScrollBarSkin: string;\r\n    protected _hScrollBarSkin: string;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Panel</code> 类实例。\r\n     * <p>在 <code>Panel</code> 构造函数中设置属性width、height的值都为100。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.width = this.height = 100;\r\n        //子对象缩放的情况下，优化会有问题，先屏蔽掉\r\n        //_content.optimizeScrollRect = true;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._content && this._content.destroy(destroyChild);\r\n        this._vScrollBar && this._vScrollBar.destroy(destroyChild);\r\n        this._hScrollBar && this._hScrollBar.destroy(destroyChild);\r\n        this._vScrollBar = null;\r\n        this._hScrollBar = null;\r\n        this._content = null;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    destroyChildren(): void {\r\n        this._content.destroyChildren();\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    protected createChildren(): void {\r\n        this._content = new Box();\r\n        this._content.hideFlags = HideFlags.HideAndDontSave;\r\n        super.addChild(this._content);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    addChild<T extends Node>(child: T): T {\r\n        child.on(Event.RESIZE, this, this.onResize);\r\n        this._setScrollChanged();\r\n        return this._content.addChild(child);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 子对象的 <code>Event.RESIZE</code> 事件侦听处理函数。\r\n     */\r\n    private onResize(): void {\r\n        this._setScrollChanged();\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    addChildAt(child: Node, index: number): Node {\r\n        child.on(Event.RESIZE, this, this.onResize);\r\n        this._setScrollChanged();\r\n        return this._content.addChildAt(child, index);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    removeChild(child: Node): Node {\r\n        child.off(Event.RESIZE, this, this.onResize);\r\n        this._setScrollChanged();\r\n        if (child._parent == this && this._children) {\r\n            let index = this._children.indexOf(child);\r\n            if (index != -1) {\r\n                this._children.splice(index, 1);\r\n                (<any>child)._setParent(null);\r\n            }\r\n            return child;\r\n        }\r\n        else\r\n            return this._content.removeChild(child);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    removeChildAt(index: number): Node {\r\n        this.getChildAt(index).off(Event.RESIZE, this, this.onResize);\r\n        this._setScrollChanged();\r\n        return this._content.removeChildAt(index);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\r\n        this._content.removeChildren(beginIndex, endIndex);\r\n        this._setScrollChanged();\r\n        return this;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getChildAt(index: number): Node {\r\n        return this._content.getChildAt(index);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getChildByName(name: string): Node {\r\n        return this._content.getChildByName(name);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getChildIndex(child: Node): number {\r\n        return this._content.getChildIndex(child);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    get numChildren(): number {\r\n        return this._content.numChildren;\r\n    }\r\n\r\n    /**@private */\r\n    private changeScroll(): void {\r\n        this._scrollChanged = false;\r\n        var contentW = this.contentWidth || 1;\r\n        var contentH = this.contentHeight || 1;\r\n\r\n        var vscroll = this._vScrollBar;\r\n        var hscroll = this._hScrollBar;\r\n\r\n        var vShow = vscroll && contentH > this._height;\r\n        var hShow = hscroll && contentW > this._width;\r\n        var showWidth = vShow ? this._width - vscroll.width : this._width;\r\n        var showHeight = hShow ? this._height - hscroll.height : this._height;\r\n\r\n        if (vscroll) {\r\n            vscroll.height = this._height - (hShow ? hscroll.height : 0);\r\n            vscroll.scrollSize = Math.max(this._height * 0.033, 1);\r\n            vscroll.thumbPercent = showHeight / contentH;\r\n            vscroll.setScroll(0, contentH - showHeight, vscroll.value);\r\n        }\r\n        if (hscroll) {\r\n            hscroll.width = this._width - (vShow ? vscroll.width : 0);\r\n            hscroll.scrollSize = Math.max(this._width * 0.033, 1);\r\n            hscroll.thumbPercent = showWidth / contentW;\r\n            hscroll.setScroll(0, contentW - showWidth, hscroll.value);\r\n        }\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    protected _sizeChanged(): void {\r\n        super._sizeChanged();\r\n        this.setContentSize(this._width, this._height);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取内容宽度（以像素为单位）。\r\n     */\r\n    get contentWidth(): number {\r\n        var max = 0;\r\n        for (var i = this._content.numChildren - 1; i > -1; i--) {\r\n            var comp = <Sprite>this._content.getChildAt(i);\r\n            max = Math.max(comp._x + comp.width * comp.scaleX - comp.pivotX, max);\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取内容高度（以像素为单位）。\r\n     */\r\n    get contentHeight(): number {\r\n        let max = 0;\r\n        for (let i = this._content.numChildren - 1; i > -1; i--) {\r\n            let comp = <Sprite>this._content.getChildAt(i);\r\n            max = Math.max(comp._y + comp.height * comp.scaleY - comp.pivotY, max);\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置内容的宽度、高度（以像素为单位）。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     */\r\n    private setContentSize(width: number, height: number): void {\r\n        let content = this._content;\r\n        content.width = width;\r\n        content.height = height;\r\n        content._style.scrollRect || (content.scrollRect = Rectangle.create());\r\n        content._style.scrollRect.setTo(0, 0, width, height);\r\n        content.scrollRect = content.scrollRect;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._setScrollChanged();\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._setScrollChanged();\r\n    }\r\n\r\n\r\n    get scrollType() {\r\n        return this._scrollType;\r\n    }\r\n\r\n    set scrollType(value: ScrollType) {\r\n        this._scrollType = value;\r\n\r\n        if (this._scrollType == ScrollType.None) {\r\n            if (this._hScrollBar) {\r\n                this._hScrollBar.destroy();\r\n                this._hScrollBar = null;\r\n            }\r\n            if (this._vScrollBar) {\r\n                this._vScrollBar.destroy();\r\n                this._vScrollBar = null;\r\n            }\r\n        }\r\n        else if (this._scrollType == ScrollType.Horizontal) {\r\n            if (this._vScrollBar) {\r\n                this._vScrollBar.destroy();\r\n                this._vScrollBar = null;\r\n            }\r\n\r\n            if (this._hScrollBar)\r\n                this._hScrollBar.skin = this._hScrollBarSkin;\r\n            else\r\n                this.createHScrollBar();\r\n        }\r\n        else if (this._scrollType == ScrollType.Vertical) {\r\n            if (this._hScrollBar) {\r\n                this._hScrollBar.destroy();\r\n                this._hScrollBar = null;\r\n            }\r\n\r\n            if (this._vScrollBar)\r\n                this._vScrollBar.skin = this._vScrollBarSkin;\r\n            else\r\n                this.createVScrollBar();\r\n        }\r\n        else { //both\r\n            if (this._hScrollBar)\r\n                this._hScrollBar.skin = this._hScrollBarSkin;\r\n            else\r\n                this.createHScrollBar();\r\n            if (this._vScrollBar)\r\n                this._vScrollBar.skin = this._vScrollBarSkin;\r\n            else\r\n                this.createVScrollBar();\r\n        }\r\n    }\r\n\r\n    private createHScrollBar() {\r\n        let scrollBar = this._hScrollBar = new HScrollBar();\r\n        scrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n        scrollBar.on(Event.CHANGE, this, this.onScrollBarChange, [scrollBar]);\r\n        scrollBar.target = this._content;\r\n        scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\r\n        scrollBar.bottom = 0;\r\n        scrollBar._skinBaseUrl = this._skinBaseUrl;\r\n        scrollBar.skin = this._hScrollBarSkin;\r\n        scrollBar.on(Event.LOADED, this, this._setScrollChanged);\r\n        super.addChild(scrollBar);\r\n        this._setScrollChanged();\r\n    }\r\n\r\n    private createVScrollBar() {\r\n        let scrollBar = this._vScrollBar = new VScrollBar();\r\n        scrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n        scrollBar.on(Event.CHANGE, this, this.onScrollBarChange, [scrollBar]);\r\n        scrollBar.target = this._content;\r\n        scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\r\n        scrollBar.right = 0;\r\n        scrollBar._skinBaseUrl = this._skinBaseUrl;\r\n        scrollBar.skin = this._vScrollBarSkin;\r\n        scrollBar.on(Event.LOADED, this, this._setScrollChanged);\r\n        super.addChild(scrollBar);\r\n        this._setScrollChanged();\r\n    }\r\n\r\n    /**\r\n     * 垂直方向滚动条皮肤。\r\n     */\r\n    get vScrollBarSkin(): string {\r\n        return this._vScrollBarSkin;\r\n    }\r\n\r\n    set vScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._vScrollBarSkin != value) {\r\n            this._vScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Vertical;\r\n            else if (this._scrollType == ScrollType.Horizontal)\r\n                this.scrollType = ScrollType.Both;\r\n            else\r\n                this.scrollType = this._scrollType;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 水平方向滚动条皮肤。\r\n     */\r\n    get hScrollBarSkin(): string {\r\n        return this._hScrollBarSkin;\r\n    }\r\n\r\n    set hScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._hScrollBarSkin != value) {\r\n            this._hScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Horizontal;\r\n            else if (this._scrollType == ScrollType.Vertical)\r\n                this.scrollType = ScrollType.Both;\r\n            this.scrollType = this._scrollType;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 垂直方向滚动条对象。\r\n     */\r\n    get vScrollBar(): ScrollBar {\r\n        return this._vScrollBar;\r\n    }\r\n\r\n    /**\r\n     * 水平方向滚动条对象。\r\n     */\r\n    get hScrollBar(): ScrollBar {\r\n        return this._hScrollBar;\r\n    }\r\n\r\n    /**\r\n     * 获取内容容器对象。\r\n     */\r\n    get content(): Sprite {\r\n        return this._content;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滚动条的<code><code>Event.MOUSE_DOWN</code>事件侦听处理函数。</code>事件侦听处理函数。\r\n     * @param scrollBar 滚动条对象。\r\n     * @param e Event 对象。\r\n     */\r\n    protected onScrollBarChange(scrollBar: ScrollBar): void {\r\n        var rect = this._content._style.scrollRect;\r\n        if (rect) {\r\n            var start = Math.round(scrollBar.value);\r\n            scrollBar.isVertical ? rect.y = start : rect.x = start;\r\n            this._content.scrollRect = rect;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>滚动内容容器至设定的垂直、水平方向滚动条位置。</p>\r\n     * @param x 水平方向滚动条属性value值。滚动条位置数字。\r\n     * @param y 垂直方向滚动条属性value值。滚动条位置数字。\r\n     */\r\n    scrollTo(x: number = 0, y: number = 0): void {\r\n        if (this.vScrollBar) this.vScrollBar.value = y;\r\n        if (this.hScrollBar) this.hScrollBar.value = x;\r\n    }\r\n\r\n    /**\r\n     * 刷新滚动内容。\r\n     */\r\n    refresh(): void {\r\n        this.changeScroll();\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set cacheAs(value: string) {\r\n        super.cacheAs = value;\r\n        this._usedCache = null;\r\n        if (value !== \"none\") {\r\n            this._hScrollBar && this._hScrollBar.on(Event.START, this, this.onScrollStart);\r\n            this._vScrollBar && this._vScrollBar.on(Event.START, this, this.onScrollStart);\r\n        } else {\r\n            this._hScrollBar && this._hScrollBar.off(Event.START, this, this.onScrollStart);\r\n            this._vScrollBar && this._vScrollBar.off(Event.START, this, this.onScrollStart);\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get cacheAs() {\r\n        return super.cacheAs;\r\n    }\r\n\r\n    /**是否开启橡皮筋效果*/\r\n    get elasticEnabled(): boolean {\r\n        return this._elasticEnabled;\r\n    }\r\n\r\n    set elasticEnabled(value: boolean) {\r\n        this._elasticEnabled = value;\r\n        if (this._vScrollBar) {\r\n            this._vScrollBar.elasticDistance = value ? 200 : 0;\r\n        }\r\n        if (this._hScrollBar) {\r\n            this._hScrollBar.elasticDistance = value ? 200 : 0;\r\n        }\r\n    }\r\n\r\n    private onScrollStart(): void {\r\n        this._usedCache || (this._usedCache = super.cacheAs);\r\n        super.cacheAs = \"none\";\r\n        this._hScrollBar && this._hScrollBar.once(Event.END, this, this.onScrollEnd);\r\n        this._vScrollBar && this._vScrollBar.once(Event.END, this, this.onScrollEnd);\r\n    }\r\n\r\n    private onScrollEnd(): void {\r\n        super.cacheAs = this._usedCache;\r\n    }\r\n\r\n    /**@private */\r\n    protected _setScrollChanged(): void {\r\n        if (!this._scrollChanged) {\r\n            this._scrollChanged = true;\r\n            this.callLater(this.changeScroll);\r\n        }\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { Image } from \"./Image\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { HideFlags } from \"../Const\"\r\nimport { URL } from \"../net/URL\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { AssetDb } from \"../resource/AssetDb\"\r\n\r\n/**\r\n * 值发生改变后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>ProgressBar</code> 组件显示内容的加载进度。\r\n * @example <caption>以下示例代码，创建了一个新的 <code>ProgressBar</code> 实例，设置了它的皮肤、位置、宽高、网格等信息，并添加到舞台上。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.ProgressBar;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class ProgressBar_Example\r\n *\t\t{\r\n *\t\t\tprivate var progressBar:ProgressBar;\r\n *\t\t\tpublic function ProgressBar_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tprogressBar = new ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\r\n *\t\t\t\tprogressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\r\n *\t\t\t\tprogressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\r\n *\t\t\t\tprogressBar.value = 0.3;//设置 progressBar 的进度值。\r\n *\t\t\t\tprogressBar.width = 200;//设置 progressBar 的宽度。\r\n *\t\t\t\tprogressBar.height = 50;//设置 progressBar 的高度。\r\n *\t\t\t\tprogressBar.sizeGrid = \"5,10,5,10\";//设置 progressBar 的网格信息。\r\n *\t\t\t\tprogressBar.changeHandler = new Handler(this, onChange);//设置 progressBar 的value值改变时执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(progressBar);//将 progressBar 添加到显示列表。\r\n *\t\t\t\tLaya.timer.once(3000, this, changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\r\n *\t\t\t}\r\n *\t\t\tprivate function changeValue():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"改变进度条的进度值。\");\r\n *\t\t\t\tprogressBar.value = 0.6;\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"进度发生改变： value=\" ,value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var res = [\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"];\r\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete()\r\n * {\r\n *     progressBar = new laya.ui.ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\r\n *     progressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\r\n *     progressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\r\n *     progressBar.value = 0.3;//设置 progressBar 的进度值。\r\n *     progressBar.width = 200;//设置 progressBar 的宽度。\r\n *     progressBar.height = 50;//设置 progressBar 的高度。\r\n *     progressBar.sizeGrid = \"10,5,10,5\";//设置 progressBar 的网格信息。\r\n *     progressBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 progressBar 的value值改变时执行的处理器。\r\n *     Laya.stage.addChild(progressBar);//将 progressBar 添加到显示列表。\r\n *     Laya.timer.once(3000, this, changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\r\n * }\r\n * function changeValue()\r\n * {\r\n *     console.log(\"改变进度条的进度值。\");\r\n *     progressBar.value = 0.6;\r\n * }\r\n * function onChange(value)\r\n * {\r\n *     console.log(\"进度发生改变： value=\" ,value);\r\n * }\r\n * @example\r\n * import ProgressBar = laya.ui.ProgressBar;\r\n * import Handler = laya.utils.Handler;\r\n * class ProgressBar_Example {\r\n *     private progressBar: ProgressBar;\r\n *     public ProgressBar_Example() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.progressBar = new ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\r\n *         this.progressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\r\n *         this.progressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\r\n *         this.progressBar.value = 0.3;//设置 progressBar 的进度值。\r\n *         this.progressBar.width = 200;//设置 progressBar 的宽度。\r\n *         this.progressBar.height = 50;//设置 progressBar 的高度。\r\n *         this.progressBar.sizeGrid = \"5,10,5,10\";//设置 progressBar 的网格信息。\r\n *         this.progressBar.changeHandler = new Handler(this, this.onChange);//设置 progressBar 的value值改变时执行的处理器。\r\n *         Laya.stage.addChild(this.progressBar);//将 progressBar 添加到显示列表。\r\n *         Laya.timer.once(3000, this, this.changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\r\n *     }\r\n *     private changeValue(): void {\r\n *         console.log(\"改变进度条的进度值。\");\r\n *         this.progressBar.value = 0.6;\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"进度发生改变： value=\", value);\r\n *     }\r\n * }\r\n */\r\nexport class ProgressBar extends UIComponent {\r\n    /**\r\n     * 当 <code>ProgressBar</code> 实例的 <code>value</code> 属性发生变化时的函数处理器。\r\n     * <p>默认返回参数<code>value</code> 属性（进度值）。</p>\r\n     */\r\n    changeHandler: Handler;\r\n    /**@private */\r\n    protected _bg: Image;\r\n    /**@private */\r\n    protected _bar: Image;\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _value: number = 0.5;\r\n\r\n    /**\r\n     * 创建一个新的 <code>ProgressBar</code> 类实例。\r\n     * @param skin 皮肤地址。\r\n     */\r\n    constructor(skin: string = null) {\r\n        super();\r\n        this.skin = skin;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._bg && this._bg.destroy(destroyChild);\r\n        this._bar && this._bar.destroy(destroyChild);\r\n        this._bg = this._bar = null;\r\n        this.changeHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected createChildren(): void {\r\n        this._bg = new Image();\r\n        this._bg.left = 0;\r\n        this._bg.right = 0;\r\n        this._bg.top = 0;\r\n        this._bg.bottom = 0;\r\n        this._bg.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._bg);\r\n\r\n        this._bar = new Image();\r\n        this._bar.hideFlags = HideFlags.HideAndDontSave;\r\n        this._bar.top = 0;\r\n        this._bar.bottom = 0;\r\n        this.addChild(this._bar);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n\r\n        if (url) {\r\n            return AssetDb.inst.resolveURL(url).then(url => {\r\n                if (this._destroyed)\r\n                    return null;\r\n\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n\r\n                return Promise.all([\r\n                    this._bg._setSkin(url),\r\n                    this._bar._setSkin(Utils.replaceFileExtension(url, \"$bar.png\", true))\r\n                ]).then(() => this._skinLoaded());\r\n            });\r\n        }\r\n        else {\r\n            this._bg.skin = null;\r\n            this._bar.skin = null;\r\n            this._skinLoaded();\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this.callLater(this.changeValue);\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureWidth(): number {\r\n        return this._bg.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureHeight(): number {\r\n        return this._bg.height;\r\n    }\r\n\r\n    /**\r\n     * 当前的进度量。\r\n     * <p><b>取值：</b>介于0和1之间。</p>\r\n     */\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n    set value(num: number) {\r\n        if (this._value != num) {\r\n            num = num > 1 ? 1 : num < 0 ? 0 : num;\r\n            this._value = num;\r\n            this.callLater(this.changeValue);\r\n            this.event(Event.CHANGE);\r\n            this.changeHandler && this.changeHandler.runWith(num);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 更改进度值的显示。\r\n     */\r\n    protected changeValue(): void {\r\n        if (this.sizeGrid) {\r\n            let grid = this.sizeGrid.split(\",\");\r\n            let left = parseInt(grid[3]);\r\n            if (isNaN(left))\r\n                left = 0;\r\n            let right = parseInt(grid[1]);\r\n            if (isNaN(right))\r\n                right = 0;\r\n            let max = this.width - left - right;\r\n            let sw = max * this._value;\r\n            this._bar.width = left + right + sw;\r\n            this._bar.visible = this._bar.width > left + right;\r\n        } else {\r\n            this._bar.width = this.width * this._value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取进度条对象。\r\n     */\r\n    get bar(): Image {\r\n        return this._bar;\r\n    }\r\n\r\n    /**\r\n     * 获取背景条对象。\r\n     */\r\n    get bg(): Image {\r\n        return this._bg;\r\n    }\r\n\r\n    /**\r\n     * <p>当前 <code>ProgressBar</code> 实例的进度条背景位图（ <code>Image</code> 实例）的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this._bg.sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        this._bg.sizeGrid = this._bar.sizeGrid = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_dataSource(value: any): void {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.value = Number(value);\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { Button } from \"./Button\"\r\n\r\n/**\r\n * <code>Radio</code> 控件使用户可在一组互相排斥的选择中做出一种选择。\r\n * 用户一次只能选择 <code>Radio</code> 组中的一个成员。选择未选中的组成员将取消选择该组中当前所选的 <code>Radio</code> 控件。 \r\n * @see laya.ui.RadioGroup\r\n */\r\nexport class Radio extends Button {\r\n\r\n    /**@private */\r\n    protected _value: any;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Radio</code> 类实例。 \r\n     * @param skin 皮肤。\r\n     * @param label 标签。\r\n     */\r\n    constructor(skin: string = null, label: string = \"\") {\r\n        super(skin, label);\r\n        // preinitialize 放到这里了，因为不知道什么时候调用\r\n        this.toggle = false;\r\n        this._autoSize = false;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected preinitialize(): void {\r\n        super.preinitialize();\r\n        this.toggle = false;\r\n        this._autoSize = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     * */\r\n    protected initialize(): void {\r\n        super.initialize();\r\n        this.createText();\r\n        this._text.align = \"left\";\r\n        this._text.valign = \"top\";\r\n        this._text.width = null;\r\n        this.on(Event.CLICK, this, this.onClick);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对象的<code>Event.CLICK</code>事件侦听处理函数。 \r\n     */\r\n    protected onClick(e: Event): void {\r\n        this.selected = true;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置 <code>Radio</code> 关联的可选用户定义值。\r\n     */\r\n    get value(): any {\r\n        return this._value != null ? this._value : this.label;\r\n    }\r\n\r\n    set value(obj: any) {\r\n        this._value = obj;\r\n    }\r\n    protected changeClips(): void {\r\n        super.changeClips();\r\n        this._setWidth(this._width);\r\n    }\r\n    _setWidth(value: number): void {\r\n        if (!this._autoSize) {\r\n            this._text.width = this.width - this._text.x;\r\n        }\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { ISelect } from \"./ISelect\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Button } from \"./Button\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { URL } from \"../net/URL\";\r\n\r\n/**\r\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Group</code> 是一个可以自动布局的项集合控件。\r\n * <p> <code>Group</code> 的默认项对象为 <code>Button</code> 类实例。\r\n * <code>Group</code> 是 <code>Tab</code> 和 <code>RadioGroup</code> 的基类。</p>\r\n */\r\nexport class UIGroup extends Box {\r\n\r\n    /**\r\n     * 改变 <code>Group</code> 的选择项时执行的处理器，(默认返回参数： 项索引（index:int）)。\r\n     */\r\n    selectHandler: Handler;\r\n\r\n    /**@private */\r\n    protected _items: ISelect[];\r\n    /**@private */\r\n    protected _selectedIndex: number = -1;\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _direction: string = \"horizontal\";\r\n    /**@private */\r\n    protected _space: number = 0;\r\n    /**@private */\r\n    protected _labels: string;\r\n    /**@private */\r\n    protected _labelColors: string;\r\n    /**@private */\r\n    private _labelFont: string;\r\n    /**@private */\r\n    protected _labelStrokeColor: string;\r\n    /**@private */\r\n    protected _strokeColors: string;\r\n    /**@private */\r\n    protected _labelStroke: number;\r\n    /**@private */\r\n    protected _labelSize: number;\r\n    /**@private */\r\n    protected _labelBold: boolean;\r\n    /**@private */\r\n    protected _labelPadding: string;\r\n    /**@private */\r\n    protected _labelAlign: string;\r\n    /**@private */\r\n    protected _stateNum: number;\r\n    /**@private */\r\n    protected _labelChanged: boolean;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Group</code> 类实例。\r\n     * @param labels 标签集字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\r\n     * @param skin 皮肤。\r\n     */\r\n    constructor(labels: string = null, skin: string = null) {\r\n        super();\r\n        this._items = [];\r\n        this.skin = skin;\r\n        this.labels = labels;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected preinitialize(): void {\r\n        this.mouseEnabled = true;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._items && (this._items.length = 0);\r\n        this._items = null;\r\n        this.selectHandler = null;\r\n    }\r\n\r\n    /**\r\n     * 添加一个项对象，返回此项对象的索引id。\r\n     *\r\n     * @param item 需要添加的项对象。\r\n     * @param autoLayout 是否自动布局，如果为true，会根据 <code>direction</code> 和 <code>space</code> 属性计算item的位置。\r\n     * @return\r\n     */\r\n    addItem(item: ISelect, autoLayout: boolean = true): number {\r\n        let display = (<Sprite>(item as any));\r\n        let index = this._items.length;\r\n        display.name = \"item\" + index;\r\n        this.addChild(display);\r\n        this.initItems();\r\n\r\n        if (autoLayout && index > 0) {\r\n            let preItem = (<Sprite>(this._items[index - 1] as any));\r\n            if (this._direction == \"horizontal\") {\r\n                display.x = preItem._x + preItem.width + this._space;\r\n            } else {\r\n                display.y = preItem._y + preItem.height + this._space;\r\n            }\r\n        } else {\r\n            if (autoLayout) {\r\n                display.x = 0;\r\n                display.y = 0;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * 删除一个项对象。\r\n     * @param item 需要删除的项对象。\r\n     * @param autoLayout 是否自动布局，如果为true，会根据 <code>direction</code> 和 <code>space</code> 属性计算item的位置。\r\n     */\r\n    delItem(item: ISelect, autoLayout: boolean = true): void {\r\n        var index: number = this._items.indexOf(item);\r\n        if (index != -1) {\r\n            let display: Sprite = (<Sprite>(item as any));\r\n            this.removeChild(display);\r\n            for (let i = index + 1, n = this._items.length; i < n; i++) {\r\n                let child = (<Sprite>(this._items[i] as any));\r\n                child.name = \"item\" + (i - 1);\r\n                if (autoLayout) {\r\n                    if (this._direction == \"horizontal\") {\r\n                        child.x -= display.width + this._space;\r\n                    } else {\r\n                        child.y -= display.height + this._space;\r\n                    }\r\n                }\r\n            }\r\n            this.initItems();\r\n            if (this._selectedIndex > -1) {\r\n                let newIndex = this._selectedIndex < this._items.length ? this._selectedIndex : (this._selectedIndex - 1);\r\n                this._selectedIndex = -1;\r\n                this.selectedIndex = newIndex;\r\n            }\r\n        }\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n        if (!this._labels)\r\n            this.initItems();\r\n    }\r\n\r\n    /**@internal 2.0解析会调用 */\r\n    _afterInited(): void {\r\n        this.initItems();\r\n    }\r\n\r\n    /**\r\n     * 初始化项对象们。\r\n     */\r\n    initItems(): void {\r\n        this._items.length = 0;\r\n        for (let i = 0; i < 10000; i++) {\r\n            let item = <ISelect>this.getChildByName(\"item\" + i);\r\n            if (item == null)\r\n                break;\r\n            this._items.push(item);\r\n            item.selected = (i === this._selectedIndex);\r\n            item.clickHandler = Handler.create(this, this.itemClick, [i], false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 项对象的点击事件侦听处理函数。\r\n     * @param index 项索引。\r\n     */\r\n    protected itemClick(index: number): void {\r\n        this.selectedIndex = index;\r\n    }\r\n\r\n    /**\r\n     * 表示当前选择的项索引。默认值为-1。\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        if (this._selectedIndex != value) {\r\n            this.setSelect(this._selectedIndex, false);\r\n            this._selectedIndex = value;\r\n            this.setSelect(value, true);\r\n            this.event(Event.CHANGE);\r\n            this.selectHandler && this.selectHandler.runWith(this._selectedIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过对象的索引设置项对象的 <code>selected</code> 属性值。\r\n     * @param index 需要设置的项对象的索引。\r\n     * @param selected 表示项对象的选中状态。\r\n     */\r\n    protected setSelect(index: number, selected: boolean): void {\r\n        if (this._items && index > -1 && index < this._items.length) this._items[index].selected = selected;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            if (Loader.getRes(url)) {\r\n                this._skinLoaded();\r\n                return Promise.resolve();\r\n            }\r\n            else\r\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded());\r\n        }\r\n        else {\r\n            this._skinLoaded();\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        this._setLabelChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * 标签集合字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\r\n     */\r\n    get labels(): string {\r\n        return this._labels;\r\n    }\r\n\r\n    set labels(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._labels != value) {\r\n            this._labels = value;\r\n            let i = 0;\r\n            let n = this.numChildren;\r\n            while (i < n) {\r\n                let item = this.getChildAt(i);\r\n                if (item.hasHideFlag(HideFlags.HideAndDontSave) && item.name && item.name.startsWith(\"item\")) {\r\n                    this.removeChildAt(i);\r\n                    n--;\r\n                }\r\n                else\r\n                    i++;\r\n            }\r\n            this._setLabelChanged();\r\n            if (this._labels) {\r\n                let a = this._labels.split(\",\");\r\n                for (let i = 0, n = a.length; i < n; i++) {\r\n                    let item = this.createItem(this._skin, a[i]);\r\n                    item.name = \"item\" + i;\r\n                    item.hideFlags = HideFlags.HideAndDontSave;\r\n                    this.addChild(item);\r\n                }\r\n            }\r\n            this.initItems();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 创建一个项显示对象。\r\n     * @param skin 项对象的皮肤。\r\n     * @param label 项对象标签。\r\n     */\r\n    protected createItem(skin: string, label: string): Sprite {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Button#labelColors()\r\n     */\r\n    get labelColors(): string {\r\n        return this._labelColors;\r\n    }\r\n\r\n    set labelColors(value: string) {\r\n        if (this._labelColors != value) {\r\n            this._labelColors = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @see laya.display.Text.stroke()\r\n     */\r\n    get labelStroke(): number {\r\n        return this._labelStroke;\r\n    }\r\n\r\n    set labelStroke(value: number) {\r\n        if (this._labelStroke != value) {\r\n            this._labelStroke = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * 默认值为 \"#000000\"（黑色）;\r\n     * @see laya.display.Text.strokeColor()\r\n     */\r\n    get labelStrokeColor(): string {\r\n        return this._labelStrokeColor;\r\n    }\r\n\r\n    set labelStrokeColor(value: string) {\r\n        if (this._labelStrokeColor != value) {\r\n            this._labelStrokeColor = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示各个状态下的描边颜色。</p>\r\n     * @see laya.display.Text.strokeColor()\r\n     */\r\n    get strokeColors(): string {\r\n        return this._strokeColors;\r\n    }\r\n\r\n    set strokeColors(value: string) {\r\n        if (this._strokeColors != value) {\r\n            this._strokeColors = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体大小。\r\n     */\r\n    get labelSize(): number {\r\n        return this._labelSize;\r\n    }\r\n\r\n    set labelSize(value: number) {\r\n        if (this._labelSize != value) {\r\n            this._labelSize = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮的状态值，以数字表示，默认为3态。\r\n     * @see laya.ui.Button#stateNum\r\n     */\r\n    get stateNum(): number {\r\n        return this._stateNum;\r\n    }\r\n\r\n    set stateNum(value: number) {\r\n        if (this._stateNum != value) {\r\n            this._stateNum = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签是否为粗体字。\r\n     */\r\n    get labelBold(): boolean {\r\n        return this._labelBold;\r\n    }\r\n\r\n    set labelBold(value: boolean) {\r\n        if (this._labelBold != value) {\r\n            this._labelBold = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\r\n     * @see laya.display.Text.font()\r\n     */\r\n    get labelFont(): string {\r\n        return this._labelFont;\r\n    }\r\n\r\n    set labelFont(value: string) {\r\n        if (this._labelFont != value) {\r\n            this._labelFont = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n    /**\r\n     * 表示按钮文本标签的边距。\r\n     * <p><b>格式：</b>\"上边距,右边距,下边距,左边距\"。</p>\r\n     */\r\n    get labelPadding(): string {\r\n        return this._labelPadding;\r\n    }\r\n\r\n    set labelPadding(value: string) {\r\n        if (this._labelPadding != value) {\r\n            this._labelPadding = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 布局方向。\r\n     * <p>默认值为\"horizontal\"。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"horizontal\"：表示水平布局。</li>\r\n     * <li>\"vertical\"：表示垂直布局。</li>\r\n     * </p>\r\n     */\r\n    get direction(): string {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction(value: string) {\r\n        this._direction = value;\r\n        this._setLabelChanged();\r\n    }\r\n\r\n    /**\r\n     * 项对象们之间的间隔（以像素为单位）。\r\n     */\r\n    get space(): number {\r\n        return this._space;\r\n    }\r\n\r\n    set space(value: number) {\r\n        this._space = value;\r\n        this._setLabelChanged();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 更改项对象的属性值。\r\n     */\r\n    protected changeLabels(): void {\r\n        this._labelChanged = false;\r\n        if (this._items) {\r\n            var left: number = 0\r\n            for (var i: number = 0, n: number = this._items.length; i < n; i++) {\r\n                var btn: Button = (<Button>this._items[i]);\r\n                this._skin && (btn.skin = this._skin);\r\n                this._labelColors && (btn.labelColors = this._labelColors);\r\n                this._labelSize != null && (btn.labelSize = this._labelSize);\r\n                this._labelStroke != null && (btn.labelStroke = this._labelStroke);\r\n                this._labelStrokeColor && (btn.labelStrokeColor = this._labelStrokeColor);\r\n                this._strokeColors && (btn.strokeColors = this._strokeColors);\r\n                this._labelBold && (btn.labelBold = this._labelBold);\r\n                this._labelPadding && (btn.labelPadding = this._labelPadding);\r\n                this._labelAlign && (btn.labelAlign = this._labelAlign);\r\n                this._stateNum != null && (btn.stateNum = this._stateNum);\r\n                this._labelFont && (btn.labelFont = this._labelFont);\r\n                if (this._direction === \"horizontal\") {\r\n                    btn.y = 0;\r\n                    btn.x = left;\r\n                    left += btn.width + this._space;\r\n                } else {\r\n                    btn.x = 0;\r\n                    btn.y = left;\r\n                    left += btn.height + this._space;\r\n                }\r\n            }\r\n        }\r\n        this._sizeChanged();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected commitMeasure(): void {\r\n        this.runCallLater(this.changeLabels);\r\n    }\r\n\r\n    /**\r\n     * 项对象们的存放数组。\r\n     */\r\n    get items(): ISelect[] {\r\n        return this._items;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置当前选择的项对象。\r\n     */\r\n    get selection(): ISelect {\r\n        return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;\r\n    }\r\n\r\n    set selection(value: ISelect) {\r\n        this.selectedIndex = this._items.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.selectedIndex = parseInt(value as string);\r\n        else if (value instanceof Array)\r\n            this.labels = ((<any[]>value)).join(\",\");\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**@private */\r\n    protected _setLabelChanged(): void {\r\n        if (!this._labelChanged) {\r\n            this._labelChanged = true;\r\n            this.callLater(this.changeLabels);\r\n        }\r\n    }\r\n}","import { UIGroup } from \"./UIGroup\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Radio } from \"./Radio\"\r\n\r\n/**\r\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>RadioGroup</code> 控件定义一组 <code>Radio</code> 控件，这些控件相互排斥；\r\n * 因此，用户每次只能选择一个 <code>Radio</code> 控件。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>RadioGroup</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Radio;\r\n *\t\timport laya.ui.RadioGroup;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class RadioGroup_Example\r\n *\t\t{\r\n *\t\t\tpublic function RadioGroup_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/radio.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar radioGroup:RadioGroup = new RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\r\n *\t\t\t\tradioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\r\n *\t\t\t\tradioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\r\n *\t\t\t\tradioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\r\n *\t\t\t\tradioGroup.space = 10;//设置 radioGroup 的项间隔距离。\r\n *\t\t\t\tradioGroup.selectHandler = new Handler(this, onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onSelect(index:int):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选择的单选按钮索引: index= \", index);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load([\"resource/ui/radio.png\"], laya.utils.Handler.create(this, onLoadComplete));\r\n * function onLoadComplete() {\r\n *     var radioGroup= new laya.ui.RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\r\n *     radioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\r\n *     radioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\r\n *     radioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\r\n *     radioGroup.space = 10;//设置 radioGroup 的项间隔距离。\r\n *     radioGroup.selectHandler = new laya.utils.Handler(this, onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\r\n *     Laya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\r\n * }\r\n * function onSelect(index) {\r\n *     console.log(\"当前选择的单选按钮索引: index= \", index);\r\n * }\r\n * @example\r\n * import Radio = laya.ui.Radio;\r\n * import RadioGroup = laya.ui.RadioGroup;\r\n * import Handler = laya.utils.Handler;\r\n * class RadioGroup_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/radio.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var radioGroup: RadioGroup = new RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\r\n *         radioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\r\n *         radioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\r\n *         radioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\r\n *         radioGroup.space = 10;//设置 radioGroup 的项间隔距离。\r\n *         radioGroup.selectHandler = new Handler(this, this.onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\r\n *         Laya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\r\n *     }\r\n *     private onSelect(index: number): void {\r\n *         console.log(\"当前选择的单选按钮索引: index= \", index);\r\n *     }\r\n * }\r\n */\r\nexport class RadioGroup extends UIGroup {\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    protected createItem(skin: string, label: string): Sprite {\r\n        let btn = new Radio();\r\n        btn._skinBaseUrl = this._skinBaseUrl;\r\n        if (skin)\r\n            btn.skin = skin;\r\n        btn.label = label;\r\n        return btn;\r\n    }\r\n}","import { Box } from \"./Box\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 自适应缩放容器，容器设置大小后，容器大小始终保持stage大小，子内容按照原始最小宽高比缩放\r\n */\r\nexport class ScaleBox extends Box {\r\n    private _oldW: number = 0;\r\n    private _oldH: number = 0;\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    onEnable(): void {\r\n        ILaya.stage.on(\"resize\", this, this.onResize);\r\n        this.onResize();\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    onDisable(): void {\r\n        ILaya.stage.off(\"resize\", this, this.onResize);\r\n    }\r\n\r\n    private onResize(): void {\r\n        if (this.width > 0 && this.height > 0) {\r\n            let stage = ILaya.stage;\r\n            let scale = Math.min(stage.width / this._oldW, stage.height / this._oldH);\r\n            super.width = stage.width;\r\n            super.height = stage.height;\r\n            this.scale(scale, scale);\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n        this._oldW = value;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set_height(value: number) {\r\n        super.set_height(value);\r\n        this._oldH = value;\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\"\r\nimport { Button } from \"./Button\"\r\nimport { Styles } from \"./Styles\";\r\nimport { UIGroup } from \"./UIGroup\"\r\n\r\n/**\r\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Tab</code> 组件用来定义选项卡按钮组。\t *\r\n * <p>属性：<code>selectedIndex</code> 的默认值为-1。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Tab</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Tab;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class Tab_Example\r\n *\t\t{\r\n *\t\t\tpublic function Tab_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/tab.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar tab:Tab = new Tab();//创建一个 Tab 类的实例对象 tab 。\r\n *\t\t\t\ttab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\r\n *\t\t\t\ttab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\r\n *\t\t\t\ttab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\r\n *\t\t\t\ttab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\r\n *\t\t\t\ttab.selectHandler = new Handler(this, onSelect);//设置 tab 的选择项发生改变时执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(tab);//将 tab 添到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onSelect(index:int):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选择的表情页索引: index= \", index);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load([\"resource/ui/tab.png\"], laya.utils.Handler.create(this, onLoadComplete));\r\n * function onLoadComplete() {\r\n *     var tab = new laya.ui.Tab();//创建一个 Tab 类的实例对象 tab 。\r\n *     tab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\r\n *     tab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\r\n *     tab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\r\n *     tab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\r\n *     tab.selectHandler = new laya.utils.Handler(this, onSelect);//设置 tab 的选择项发生改变时执行的处理器。\r\n *     Laya.stage.addChild(tab);//将 tab 添到显示列表。\r\n * }\r\n * function onSelect(index) {\r\n *     console.log(\"当前选择的标签页索引: index= \", index);\r\n * }\r\n * @example\r\n * import Tab = laya.ui.Tab;\r\n * import Handler = laya.utils.Handler;\r\n * class Tab_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/tab.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var tab: Tab = new Tab();//创建一个 Tab 类的实例对象 tab 。\r\n *         tab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\r\n *         tab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\r\n *         tab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\r\n *         tab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\r\n *         tab.selectHandler = new Handler(this, this.onSelect);//设置 tab 的选择项发生改变时执行的处理器。\r\n *         Laya.stage.addChild(tab);//将 tab 添到显示列表。\r\n *     }\r\n *     private onSelect(index: number): void {\r\n *         console.log(\"当前选择的表情页索引: index= \", index);\r\n *     }\r\n * }\r\n */\r\nexport class Tab extends UIGroup {\r\n    constructor() {\r\n        super();\r\n        this._stateNum = Styles.buttonStateNum;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected createItem(skin: string, label: string): Sprite {\r\n        let btn = new Button();\r\n        btn._skinBaseUrl = this._skinBaseUrl;\r\n        if (skin)\r\n            btn.skin = skin;\r\n        btn.label = label;\r\n        return btn;\r\n    }\r\n}","import { Label } from \"./Label\";\r\nimport { Input } from \"../display/Input\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { AutoBitmap } from \"./AutoBitmap\"\r\nimport { Styles } from \"./Styles\"\r\nimport { UIUtils } from \"./UIUtils\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { URL } from \"../net/URL\";\r\n\r\n/**\r\n * 输入文本后调度。\r\n * @eventType Event.INPUT\r\n */\r\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 在输入框内敲回车键后调度。\r\n * @eventType Event.ENTER\r\n */\r\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当获得输入焦点后调度。\r\n * @eventType Event.FOCUS\r\n */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当失去输入焦点后调度。\r\n * @eventType Event.BLUR\r\n */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>TextInput</code> 类用于创建显示对象以显示和输入文本。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>TextInput</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.display.Stage;\r\n *\t\timport laya.ui.TextInput;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class TextInput_Example\r\n *\t\t{\r\n *\t\t\tpublic function TextInput_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/input.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar textInput:TextInput = new TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\r\n *\t\t\t\ttextInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\r\n *\t\t\t\ttextInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\r\n *\t\t\t\ttextInput.color = \"#008fff\";//设置 textInput 的文本颜色。\r\n *\t\t\t\ttextInput.font = \"Arial\";//设置 textInput 的文本字体。\r\n *\t\t\t\ttextInput.bold = true;//设置 textInput 的文本显示为粗体。\r\n *\t\t\t\ttextInput.fontSize = 30;//设置 textInput 的字体大小。\r\n *\t\t\t\ttextInput.wordWrap = true;//设置 textInput 的文本自动换行。\r\n *\t\t\t\ttextInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\r\n *\t\t\t\ttextInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\r\n *\t\t\t\ttextInput.width = 300;//设置 textInput 的宽度。\r\n *\t\t\t\ttextInput.height = 200;//设置 textInput 的高度。\r\n *\t\t\t\tLaya.stage.addChild(textInput);//将 textInput 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load([\"resource/ui/input.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     var textInput = new laya.ui.TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\r\n *     textInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\r\n *     textInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\r\n *     textInput.color = \"#008fff\";//设置 textInput 的文本颜色。\r\n *     textInput.font = \"Arial\";//设置 textInput 的文本字体。\r\n *     textInput.bold = true;//设置 textInput 的文本显示为粗体。\r\n *     textInput.fontSize = 30;//设置 textInput 的字体大小。\r\n *     textInput.wordWrap = true;//设置 textInput 的文本自动换行。\r\n *     textInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\r\n *     textInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\r\n *     textInput.width = 300;//设置 textInput 的宽度。\r\n *     textInput.height = 200;//设置 textInput 的高度。\r\n *     Laya.stage.addChild(textInput);//将 textInput 添加到显示列表。\r\n * }\r\n * @example\r\n * import Stage = laya.display.Stage;\r\n * import TextInput = laya.ui.TextInput;\r\n * import Handler = laya.utils.Handler;\r\n * class TextInput_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/input.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var textInput: TextInput = new TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\r\n *         textInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\r\n *         textInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\r\n *         textInput.color = \"#008fff\";//设置 textInput 的文本颜色。\r\n *         textInput.font = \"Arial\";//设置 textInput 的文本字体。\r\n *         textInput.bold = true;//设置 textInput 的文本显示为粗体。\r\n *         textInput.fontSize = 30;//设置 textInput 的字体大小。\r\n *         textInput.wordWrap = true;//设置 textInput 的文本自动换行。\r\n *         textInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\r\n *         textInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\r\n *         textInput.width = 300;//设置 textInput 的宽度。\r\n *         textInput.height = 200;//设置 textInput 的高度。\r\n *         Laya.stage.addChild(textInput);//将 textInput 添加到显示列表。\r\n *     }\r\n * }\r\n */\r\nexport class TextInput extends Label {\r\n    /** @private */\r\n    protected _skin: string;\r\n\r\n    declare _graphics: AutoBitmap;\r\n    declare _tf: Input;\r\n\r\n    /**\r\n     * 创建一个新的 <code>TextInput</code> 类实例。\r\n     * @param text 文本内容。\r\n     */\r\n    constructor(text?: string) {\r\n        super();\r\n        if (text != null)\r\n            this.text = text;\r\n        this.skin = this.skin;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected preinitialize(): void {\r\n        this.mouseEnabled = true;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override \r\n    */\r\n    protected createChildren(): void {\r\n        this.setGraphics(new AutoBitmap(), true);\r\n\r\n        this._tf = new Input();\r\n        this._tf.hideFlags = HideFlags.HideAndDontSave;\r\n        this._tf.padding = Styles.inputLabelPadding;\r\n        this._tf._onPostLayout = () => this._onPostLayout();\r\n        this._tf.on(Event.INPUT, () => this.event(Event.INPUT));\r\n        this._tf.on(Event.ENTER, () => this.event(Event.ENTER));\r\n        this._tf.on(Event.BLUR, () => this.event(Event.BLUR));\r\n        this._tf.on(Event.FOCUS, () => this.event(Event.FOCUS));\r\n        this.addChild(this._tf);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected initialize(): void {\r\n        this.width = 128;\r\n        this.height = 22;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            let source = Loader.getRes(url);\r\n            if (source) {\r\n                this._skinLoaded(source);\r\n                return Promise.resolve();\r\n            }\r\n            else\r\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded(tex));\r\n        }\r\n        else {\r\n            this._skinLoaded(null);\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(source: any): void {\r\n        this._graphics.source = source;\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的背景图（ <code>AutoBitmap</code> ）实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this._graphics && this._graphics.sizeGrid ? this._graphics.sizeGrid.join(\",\") : null;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        if (value)\r\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n        else\r\n            this._graphics.sizeGrid = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._graphics && (this._graphics.width = value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._graphics && (this._graphics.height = value);\r\n    }\r\n\r\n    /**\r\n     * <p>指示当前是否是文本域。</p>\r\n     * 值为true表示当前是文本域，否则不是文本域。\r\n     */\r\n    get multiline(): boolean {\r\n        return this._tf.multiline;\r\n    }\r\n\r\n    set multiline(value: boolean) {\r\n        this._tf.multiline = value;\r\n    }\r\n\r\n    /**\r\n     * 设置可编辑状态。\r\n     */\r\n    set editable(value: boolean) {\r\n        this._tf.editable = value;\r\n    }\r\n\r\n    get editable(): boolean {\r\n        return this._tf.editable;\r\n    }\r\n\r\n    /**选中输入框内的文本。*/\r\n    select(): void {\r\n        this._tf.select();\r\n    }\r\n\r\n    /**限制输入的字符。*/\r\n    get restrict(): string {\r\n        return this._tf.restrict;\r\n    }\r\n\r\n    set restrict(pattern: string) {\r\n        this._tf.restrict = pattern;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#prompt\r\n     */\r\n    get prompt(): string {\r\n        return this._tf.prompt;\r\n    }\r\n\r\n    set prompt(value: string) {\r\n        this._tf.prompt = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#promptColor\r\n     */\r\n    get promptColor(): string {\r\n        return this._tf.promptColor;\r\n    }\r\n\r\n    set promptColor(value: string) {\r\n        this._tf.promptColor = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#maxChars\r\n     */\r\n    get maxChars(): number {\r\n        return this._tf.maxChars;\r\n    }\r\n\r\n    set maxChars(value: number) {\r\n        this._tf.maxChars = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#focus\r\n     */\r\n    get focus(): boolean {\r\n        return this._tf.focus;\r\n    }\r\n\r\n    set focus(value: boolean) {\r\n        this._tf.focus = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#type\r\n     */\r\n    get type(): string {\r\n        return this._tf.type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._tf.type = value;\r\n    }\r\n\r\n    setSelection(startIndex: number, endIndex: number): void {\r\n        this._tf.setSelection(startIndex, endIndex);\r\n    }\r\n}","import { TextInput } from \"./TextInput\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { HScrollBar } from \"./HScrollBar\";\r\nimport { ScrollType, Styles } from \"./Styles\";\r\nimport { Event } from \"../events/Event\"\r\nimport { HideFlags } from \"../Const\";\r\n\r\n/**\r\n * <code>TextArea</code> 类用于创建显示对象以显示和输入文本。\r\n * @example <caption>以下示例代码，创建了一个 <code>TextArea</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.TextArea;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class TextArea_Example\r\n *\t\t{\r\n *\t\t\tpublic function TextArea_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/input.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar textArea:TextArea = new TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\r\n *\t\t\t\ttextArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\r\n *\t\t\t\ttextArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\r\n *\t\t\t\ttextArea.color = \"#008fff\";//设置 textArea 的文本颜色。\r\n *\t\t\t\ttextArea.font = \"Arial\";//设置 textArea 的字体。\r\n *\t\t\t\ttextArea.bold = true;//设置 textArea 的文本显示为粗体。\r\n *\t\t\t\ttextArea.fontSize = 20;//设置 textArea 的文本字体大小。\r\n *\t\t\t\ttextArea.wordWrap = true;//设置 textArea 的文本自动换行。\r\n *\t\t\t\ttextArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\r\n *\t\t\t\ttextArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\r\n *\t\t\t\ttextArea.width = 300;//设置 textArea 的宽度。\r\n *\t\t\t\ttextArea.height = 200;//设置 textArea 的高度。\r\n *\t\t\t\tLaya.stage.addChild(textArea);//将 textArea 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load([\"resource/ui/input.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     var textArea = new laya.ui.TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\r\n *     textArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\r\n *     textArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\r\n *     textArea.color = \"#008fff\";//设置 textArea 的文本颜色。\r\n *     textArea.font = \"Arial\";//设置 textArea 的字体。\r\n *     textArea.bold = true;//设置 textArea 的文本显示为粗体。\r\n *     textArea.fontSize = 20;//设置 textArea 的文本字体大小。\r\n *     textArea.wordWrap = true;//设置 textArea 的文本自动换行。\r\n *     textArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\r\n *     textArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\r\n *     textArea.width = 300;//设置 textArea 的宽度。\r\n *     textArea.height = 200;//设置 textArea 的高度。\r\n *     Laya.stage.addChild(textArea);//将 textArea 添加到显示列表。\r\n * }\r\n * @example\r\n * import TextArea = laya.ui.TextArea;\r\n * import Handler = laya.utils.Handler;\r\n * class TextArea_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/input.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n\t\r\n *     private onLoadComplete(): void {\r\n *         var textArea: TextArea = new TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\r\n *         textArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\r\n *         textArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\r\n *         textArea.color = \"#008fff\";//设置 textArea 的文本颜色。\r\n *         textArea.font = \"Arial\";//设置 textArea 的字体。\r\n *         textArea.bold = true;//设置 textArea 的文本显示为粗体。\r\n *         textArea.fontSize = 20;//设置 textArea 的文本字体大小。\r\n *         textArea.wordWrap = true;//设置 textArea 的文本自动换行。\r\n *         textArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\r\n *         textArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\r\n *         textArea.width = 300;//设置 textArea 的宽度。\r\n *         textArea.height = 200;//设置 textArea 的高度。\r\n *         Laya.stage.addChild(textArea);//将 textArea 添加到显示列表。\r\n *     }\r\n * }\r\n */\r\nexport class TextArea extends TextInput {\r\n    protected _scrollType: ScrollType = 0;\r\n    protected _vScrollBarSkin: string;\r\n    protected _hScrollBarSkin: string;\r\n    /**@private */\r\n    protected _vScrollBar: VScrollBar;\r\n    /**@private */\r\n    protected _hScrollBar: HScrollBar;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>TextArea</code> 示例。</p>\r\n     * @param text 文本内容字符串。\r\n     */\r\n    constructor(text?: string) {\r\n        super(text);\r\n    }\r\n\r\n    protected _onPostLayout(): void {\r\n        super._onPostLayout();\r\n        this.callLater(this.changeScroll);\r\n    }\r\n    /**\r\n     * \r\n     * @param destroyChild \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._vScrollBar && this._vScrollBar.destroy();\r\n        this._hScrollBar && this._hScrollBar.destroy();\r\n        this._vScrollBar = null;\r\n        this._hScrollBar = null;\r\n        super.destroy(destroyChild);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected initialize(): void {\r\n        this.width = 180;\r\n        this.height = 150;\r\n        this._tf.wordWrap = true;\r\n        this.multiline = true;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this.callLater(this.changeScroll);\r\n    }\r\n    /**\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this.callLater(this.changeScroll);\r\n    }\r\n\r\n    get scrollType() {\r\n        return this._scrollType;\r\n    }\r\n\r\n    set scrollType(value: ScrollType) {\r\n        this._scrollType = value;\r\n\r\n        if (this._scrollType == ScrollType.None) {\r\n            if (this._hScrollBar) {\r\n                this._hScrollBar.destroy();\r\n                this._hScrollBar = null;\r\n            }\r\n            if (this._vScrollBar) {\r\n                this._vScrollBar.destroy();\r\n                this._vScrollBar = null;\r\n            }\r\n        }\r\n        else if (this._scrollType == ScrollType.Horizontal) {\r\n            if (this._vScrollBar) {\r\n                this._vScrollBar.destroy();\r\n                this._vScrollBar = null;\r\n            }\r\n\r\n            if (this._hScrollBar)\r\n                this._hScrollBar.skin = this._hScrollBarSkin;\r\n            else\r\n                this.createHScrollBar();\r\n        }\r\n        else if (this._scrollType == ScrollType.Vertical) {\r\n            if (this._hScrollBar) {\r\n                this._hScrollBar.destroy();\r\n                this._hScrollBar = null;\r\n            }\r\n\r\n            if (this._vScrollBar)\r\n                this._vScrollBar.skin = this._vScrollBarSkin;\r\n            else\r\n                this.createVScrollBar();\r\n        }\r\n        else { //both\r\n            if (this._hScrollBar)\r\n                this._hScrollBar.skin = this._hScrollBarSkin;\r\n            else\r\n                this.createHScrollBar();\r\n            if (this._vScrollBar)\r\n                this._vScrollBar.skin = this._vScrollBarSkin;\r\n            else\r\n                this.createVScrollBar();\r\n        }\r\n    }\r\n\r\n    private createHScrollBar() {\r\n        this._hScrollBar = new HScrollBar();\r\n        this._hScrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n        this._hScrollBar._skinBaseUrl = this._skinBaseUrl;\r\n        this._hScrollBar.skin = this._hScrollBarSkin;\r\n        this.addChild(this._hScrollBar);\r\n        this._hScrollBar.on(Event.CHANGE, this, this.onHBarChanged);\r\n        this._hScrollBar.on(Event.LOADED, this, this.changeScroll);\r\n        this._hScrollBar.mouseWheelEnable = false;\r\n        this._hScrollBar.touchScrollEnable = false;\r\n        this._hScrollBar.target = this._tf;\r\n        this.callLater(this.changeScroll);\r\n    }\r\n\r\n    private createVScrollBar() {\r\n        this._vScrollBar = new VScrollBar();\r\n        this._vScrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n        this._vScrollBar._skinBaseUrl = this._skinBaseUrl;\r\n        this._vScrollBar.skin = this._vScrollBarSkin;\r\n        this.addChild(this._vScrollBar);\r\n        this._vScrollBar.on(Event.CHANGE, this, this.onVBarChanged);\r\n        this._vScrollBar.on(Event.LOADED, this, this.changeScroll);\r\n        this._vScrollBar.touchScrollEnable = false;\r\n        this._vScrollBar.target = this._tf;\r\n        this.callLater(this.changeScroll);\r\n    }\r\n\r\n    /**\r\n     * 垂直方向滚动条皮肤。\r\n     */\r\n    get vScrollBarSkin(): string {\r\n        return this._vScrollBarSkin;\r\n    }\r\n\r\n    set vScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._vScrollBarSkin != value) {\r\n            this._vScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Vertical;\r\n            else if (this._scrollType == ScrollType.Horizontal)\r\n                this.scrollType = ScrollType.Both;\r\n            else\r\n                this.scrollType = this._scrollType;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 水平方向滚动条皮肤。\r\n     */\r\n    get hScrollBarSkin(): string {\r\n        return this._hScrollBarSkin;\r\n    }\r\n\r\n    set hScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._hScrollBarSkin != value) {\r\n            this._hScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Horizontal;\r\n            else if (this._scrollType == ScrollType.Vertical)\r\n                this.scrollType = ScrollType.Both;\r\n            this.scrollType = this._scrollType;\r\n        }\r\n    }\r\n\r\n    protected onVBarChanged(e: Event): void {\r\n        if (this._tf.scrollY != this._vScrollBar.value) {\r\n            this._tf.scrollY = this._vScrollBar.value;\r\n        }\r\n    }\r\n\r\n    protected onHBarChanged(e: Event): void {\r\n        if (this._tf.scrollX != this._hScrollBar.value) {\r\n            this._tf.scrollX = this._hScrollBar.value;\r\n        }\r\n    }\r\n\r\n    /**垂直滚动条实体*/\r\n    get vScrollBar(): VScrollBar {\r\n        return this._vScrollBar;\r\n    }\r\n\r\n    /**水平滚动条实体*/\r\n    get hScrollBar(): HScrollBar {\r\n        return this._hScrollBar;\r\n    }\r\n\r\n    /**垂直滚动最大值*/\r\n    get maxScrollY(): number {\r\n        return this._tf.maxScrollY;\r\n    }\r\n\r\n    /**垂直滚动值*/\r\n    get scrollY(): number {\r\n        return this._tf.scrollY;\r\n    }\r\n\r\n    /**水平滚动最大值*/\r\n    get maxScrollX(): number {\r\n        return this._tf.maxScrollX;\r\n    }\r\n\r\n    /**水平滚动值*/\r\n    get scrollX(): number {\r\n        return this._tf.scrollX;\r\n    }\r\n\r\n    private changeScroll(): void {\r\n        let vShow = this._vScrollBar && this._tf.maxScrollY > 0;\r\n        let hShow = this._hScrollBar && this._tf.maxScrollX > 0;\r\n        let padding = this._tf.padding;\r\n        let showWidth = vShow ? this._width - this._vScrollBar.width - padding[2] : this._width;\r\n        let showHeight = hShow ? this._height - this._hScrollBar.height - padding[3] : this._height;\r\n\r\n        this._tf.size(showWidth, showHeight);\r\n\r\n        if (this._vScrollBar) {\r\n            this._vScrollBar.x = this._width - this._vScrollBar.width - padding[2];\r\n            this._vScrollBar.y = padding[1];\r\n            this._vScrollBar.height = this._height - (hShow ? this._hScrollBar.height : 0) - padding[1] - padding[3];\r\n            this._vScrollBar.scrollSize = 1;\r\n            this._vScrollBar.thumbPercent = showHeight / Math.max(this._tf.textHeight, showHeight);\r\n            this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY);\r\n            this._vScrollBar.visible = vShow;\r\n        }\r\n        if (this._hScrollBar) {\r\n            this._hScrollBar.x = padding[0];\r\n            this._hScrollBar.y = this._height - this._hScrollBar.height - padding[3];\r\n            this._hScrollBar.width = this._width - (vShow ? this._vScrollBar.width : 0) - padding[0] - padding[2];\r\n            this._hScrollBar.scrollSize = Math.max(showWidth * 0.033, 1);\r\n            this._hScrollBar.thumbPercent = showWidth / Math.max(this._tf.textWidth, showWidth);\r\n            this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX);\r\n            this._hScrollBar.visible = hShow;\r\n        }\r\n    }\r\n\r\n    /**滚动到某个位置*/\r\n    scrollTo(y: number): void {\r\n        this.commitMeasure();\r\n        this._tf.scrollY = y;\r\n    }\r\n}","import { Graphics } from \"../display/Graphics\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Text } from \"../display/Text\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { UIEvent } from \"./UIEvent\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**鼠标提示管理类*/\r\nexport class TipManager extends UIComponent {\r\n    static offsetX: number = 10;\r\n    static offsetY: number = 15;\r\n    static tipTextColor: string = \"#ffffff\";\r\n    static tipBackColor: string = \"#111111\";\r\n    static tipDelay: number = 200;\r\n    private _tipBox: UIComponent;\r\n    private _tipText: Text;\r\n    private _defaultTipHandler: Function;\r\n\r\n    constructor() {\r\n        super();\r\n        this._tipBox = new UIComponent();\r\n        this._tipBox.addChild(this._tipText = new Text());\r\n        this._tipText.x = this._tipText.y = 5;\r\n        this._tipText.color = TipManager.tipTextColor;\r\n        this._defaultTipHandler = this._showDefaultTip;\r\n        ILaya.stage.on(UIEvent.SHOW_TIP, this, this._onStageShowTip);\r\n        ILaya.stage.on(UIEvent.HIDE_TIP, this, this._onStageHideTip);\r\n        this.zOrder = 1100\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _onStageHideTip(e: any): void {\r\n        ILaya.timer.clear(this, this._showTip);\r\n        this.closeAll();\r\n        this.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _onStageShowTip(data: any): void {\r\n        ILaya.timer.once(TipManager.tipDelay, this, this._showTip, [data], true);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _showTip(tip: any): void {\r\n        if (typeof (tip) == 'string') {\r\n            var text: string = String(tip);\r\n            if (Boolean(text)) {\r\n                this._defaultTipHandler(text);\r\n            }\r\n        } else if (tip instanceof Handler) {\r\n            ((<Handler>tip)).run();\r\n        } else if (tip instanceof Function) {\r\n            tip.apply();\r\n        }\r\n        if (true) {\r\n            ILaya.stage.on(Event.MOUSE_MOVE, this, this._onStageMouseMove);\r\n            ILaya.stage.on(Event.MOUSE_DOWN, this, this._onStageMouseDown);\r\n        }\r\n\r\n        this._onStageMouseMove(null);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _onStageMouseDown(e: Event): void {\r\n        this.closeAll();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _onStageMouseMove(e: Event): void {\r\n        this._showToStage(this, TipManager.offsetX, TipManager.offsetY);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _showToStage(dis: Sprite, offX: number = 0, offY: number = 0): void {\r\n        var rec: Rectangle = dis.getBounds();\r\n        dis.x = ILaya.stage.mouseX + offX;\r\n        dis.y = ILaya.stage.mouseY + offY;\r\n        if (dis._x + rec.width > ILaya.stage.width) {\r\n            dis.x -= rec.width + offX;\r\n        }\r\n        if (dis._y + rec.height > ILaya.stage.height) {\r\n            dis.y -= rec.height + offY;\r\n        }\r\n    }\r\n\r\n    /**关闭所有鼠标提示*/\r\n    closeAll(): void {\r\n        ILaya.timer.clear(this, this._showTip);\r\n        ILaya.stage.off(Event.MOUSE_MOVE, this, this._onStageMouseMove);\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this._onStageMouseDown);\r\n        this.removeChildren();\r\n    }\r\n\r\n    /**\r\n     * 显示显示对象类型的tip\r\n     */\r\n    showDislayTip(tip: Sprite): void {\r\n        this.addChild(tip);\r\n        this._showToStage(this);\r\n        ILaya.stage.addChild(this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _showDefaultTip(text: string): void {\r\n        this._tipText.text = text;\r\n        var g: Graphics = this._tipBox.graphics;\r\n        g.clear(true);\r\n        g.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, TipManager.tipBackColor);\r\n        this.addChild(this._tipBox);\r\n        this._showToStage(this);\r\n        ILaya.stage.addChild(this);\r\n    }\r\n\r\n    /**默认鼠标提示函数*/\r\n    get defaultTipHandler(): Function {\r\n        return this._defaultTipHandler;\r\n    }\r\n\r\n    set defaultTipHandler(value: Function) {\r\n        this._defaultTipHandler = value;\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { List } from \"./List\";\r\nimport { ScrollBar } from \"./ScrollBar\";\r\nimport { Clip } from \"./Clip\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**@private */\r\ninterface ITreeDataSource {\r\n    x: number;\r\n    hasChild: boolean;\r\n    isOpen: boolean;\r\n    isDirectory: boolean;\r\n}\r\n\r\n/**\r\n * 实例的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 节点打开关闭时触发。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Tree</code> 控件使用户可以查看排列为可扩展树的层次结构数据。\r\n *\r\n * @example\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Tree;\r\n *\t\timport laya.utils.Browser;\r\n *\t\timport laya.utils.Handler;\r\n\t\r\n *\t\tpublic class Tree_Example\r\n *\t\t{\r\n\t\r\n *\t\t\tpublic function Tree_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder.png\", \"resource/ui/clip_tree_arrow.png\"], Handler.create(this, onLoadComplete));\r\n *\t\t\t}\r\n\t\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar xmlString:String;//创建一个xml字符串，用于存储树结构数据。\r\n *\t\t\t\txmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\r\n *\t\t\t\tvar domParser:* = new Browser.window.DOMParser();//创建一个DOMParser实例domParser。\r\n *\t\t\t\tvar xml:* = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\r\n\t\r\n *\t\t\t\tvar tree:Tree = new Tree();//创建一个 Tree 类的实例对象 tree 。\r\n *\t\t\t\ttree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\r\n *\t\t\t\ttree.itemRender = Item;//设置 tree 的项渲染器。\r\n *\t\t\t\ttree.xml = xml;//设置 tree 的树结构数据。\r\n *\t\t\t\ttree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\r\n *\t\t\t\ttree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\r\n *\t\t\t\ttree.width = 200;//设置 tree 的宽度。\r\n *\t\t\t\ttree.height = 100;//设置 tree 的高度。\r\n *\t\t\t\tLaya.stage.addChild(tree);//将 tree 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n\t\r\n * import laya.ui.Box;\r\n * import laya.ui.Clip;\r\n * import laya.ui.Label;\r\n *\tclass Item extends Box\r\n *\t{\r\n *\t\tpublic function Item()\r\n *\t\t{\r\n *\t\t\tthis.name = \"render\";\r\n *\t\t\tthis.right = 0;\r\n *\t\t\tthis.left = 0;\r\n\t\r\n *\t\t\tvar selectBox:Clip = new Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\r\n *\t\t\tselectBox.name = \"selectBox\";\r\n *\t\t\tselectBox.height = 24;\r\n *\t\t\tselectBox.x = 13;\r\n *\t\t\tselectBox.y = 0;\r\n *\t\t\tselectBox.left = 12;\r\n *\t\t\taddChild(selectBox);\r\n\t\r\n *\t\t\tvar folder:Clip = new Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\r\n *\t\t\tfolder.name = \"folder\";\r\n *\t\t\tfolder.x = 14;\r\n *\t\t\tfolder.y = 4;\r\n *\t\t\taddChild(folder);\r\n\t\r\n *\t\t\tvar label:Label = new Label(\"treeItem\");\r\n *\t\t\tlabel.name = \"label\";\r\n *\t\t\tlabel.color = \"#ffff00\";\r\n *\t\t\tlabel.width = 150;\r\n *\t\t\tlabel.height = 22;\r\n *\t\t\tlabel.x = 33;\r\n *\t\t\tlabel.y = 1;\r\n *\t\t\tlabel.left = 33;\r\n *\t\t\tlabel.right = 0;\r\n *\t\t\taddChild(label);\r\n\t\r\n *\t\t\tvar arrow:Clip = new Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\r\n *\t\t\tarrow.name = \"arrow\";\r\n *\t\t\tarrow.x = 0;\r\n *\t\t\tarrow.y = 5;\r\n *\t\t\taddChild(arrow);\r\n *\t\t}\r\n *\t }\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder.png\", \"resource/ui/clip_tree_arrow.png\"];\r\n * Laya.loader.load(res, new laya.utils.Handler(this, onLoadComplete));\r\n * function onLoadComplete() {\r\n *     var xmlString;//创建一个xml字符串，用于存储树结构数据。\r\n *     xmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\r\n *     var domParser = new laya.utils.Browser.window.DOMParser();//创建一个DOMParser实例domParser。\r\n *     var xml = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\r\n\t\r\n *     var tree = new laya.ui.Tree();//创建一个 Tree 类的实例对象 tree 。\r\n *     tree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\r\n *     tree.itemRender = mypackage.treeExample.Item;//设置 tree 的项渲染器。\r\n *     tree.xml = xml;//设置 tree 的树结构数据。\r\n *     tree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\r\n *     tree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\r\n *     tree.width = 200;//设置 tree 的宽度。\r\n *     tree.height = 100;//设置 tree 的高度。\r\n *     Laya.stage.addChild(tree);//将 tree 添加到显示列表。\r\n * }\r\n * (function (_super) {\r\n *     function Item() {\r\n *         Item.__super.call(this);//初始化父类。\r\n *         this.right = 0;\r\n *         this.left = 0;\r\n\t\r\n *         var selectBox = new laya.ui.Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\r\n *         selectBox.name = \"selectBox\";//设置 selectBox 的name 为“selectBox”时，将被识别为树结构的项的背景。2帧：悬停时背景、选中时背景。\r\n *         selectBox.height = 24;\r\n *         selectBox.x = 13;\r\n *         selectBox.y = 0;\r\n *         selectBox.left = 12;\r\n *         this.addChild(selectBox);//需要使用this.访问父类的属性或方法。\r\n\t\r\n *         var folder = new laya.ui.Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\r\n *         folder.name = \"folder\";//设置 folder 的name 为“folder”时，将被识别为树结构的文件夹开启状态图表。2帧：折叠状态、打开状态。\r\n *         folder.x = 14;\r\n *         folder.y = 4;\r\n *         this.addChild(folder);\r\n\t\r\n *         var label = new laya.ui.Label(\"treeItem\");\r\n *         label.name = \"label\";//设置 label 的name 为“label”时，此值将用于树结构数据赋值。\r\n *         label.color = \"#ffff00\";\r\n *         label.width = 150;\r\n *         label.height = 22;\r\n *         label.x = 33;\r\n *         label.y = 1;\r\n *         label.left = 33;\r\n *         label.right = 0;\r\n *         this.addChild(label);\r\n\t\r\n *         var arrow = new laya.ui.Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\r\n *         arrow.name = \"arrow\";//设置 arrow 的name 为“arrow”时，将被识别为树结构的文件夹开启状态图表。2帧：折叠状态、打开状态。\r\n *         arrow.x = 0;\r\n *         arrow.y = 5;\r\n *         this.addChild(arrow);\r\n *     };\r\n *     Laya.class(Item,\"mypackage.treeExample.Item\",_super);//注册类 Item 。\r\n * })(laya.ui.Box);\r\n * @example\r\n * import Tree = laya.ui.Tree;\r\n * import Browser = laya.utils.Browser;\r\n * import Handler = laya.utils.Handler;\r\n * class Tree_Example {\r\n\t\r\n *     constructor() {\r\n *         Laya.init(640, 800);\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder * . * png\", \"resource/ui/clip_tree_arrow.png\"], Handler.create(this, this.onLoadComplete));\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var xmlString: String;//创建一个xml字符串，用于存储树结构数据。\r\n *         xmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc  * label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\r\n *         var domParser: any = new Browser.window.DOMParser();//创建一个DOMParser实例domParser。\r\n *         var xml: any = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\r\n\t\r\n *         var tree: Tree = new Tree();//创建一个 Tree 类的实例对象 tree 。\r\n *         tree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\r\n *         tree.itemRender = Item;//设置 tree 的项渲染器。\r\n *         tree.xml = xml;//设置 tree 的树结构数据。\r\n *         tree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\r\n *         tree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\r\n *         tree.width = 200;//设置 tree 的宽度。\r\n *         tree.height = 100;//设置 tree 的高度。\r\n *         Laya.stage.addChild(tree);//将 tree 添加到显示列表。\r\n *     }\r\n * }\r\n * import Box = laya.ui.Box;\r\n * import Clip = laya.ui.Clip;\r\n * import Label = laya.ui.Label;\r\n * class Item extends Box {\r\n *     constructor() {\r\n *         super();\r\n *         this.name = \"render\";\r\n *         this.right = 0;\r\n *         this.left = 0;\r\n *         var selectBox: Clip = new Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\r\n *         selectBox.name = \"selectBox\";\r\n *         selectBox.height = 24;\r\n *         selectBox.x = 13;\r\n *         selectBox.y = 0;\r\n *         selectBox.left = 12;\r\n *         this.addChild(selectBox);\r\n\t\r\n *         var folder: Clip = new Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\r\n *         folder.name = \"folder\";\r\n *         folder.x = 14;\r\n *         folder.y = 4;\r\n *         this.addChild(folder);\r\n\t\r\n *         var label: Label = new Label(\"treeItem\");\r\n *         label.name = \"label\";\r\n *         label.color = \"#ffff00\";\r\n *         label.width = 150;\r\n *         label.height = 22;\r\n *         label.x = 33;\r\n *         label.y = 1;\r\n *         label.left = 33;\r\n *         label.right = 0;\r\n *         this.addChild(label);\r\n\t\r\n *         var arrow: Clip = new Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\r\n *         arrow.name = \"arrow\";\r\n *         arrow.x = 0;\r\n *         arrow.y = 5;\r\n *         this.addChild(arrow);\r\n *     }\r\n * }\r\n */\r\nexport class Tree extends Box {\r\n    /**@private */\r\n    protected _list: List;\r\n    /**@private */\r\n    protected _source: any[];\r\n    /**@private */\r\n    protected _renderHandler: Handler;\r\n    /**@private */\r\n    protected _spaceLeft: number = 10;\r\n    /**@private */\r\n    protected _spaceBottom: number = 0;\r\n    /**@private */\r\n    protected _keepStatus: boolean = true;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Tree</code> 类实例。\r\n     * <p>在 <code>Tree</code> 构造函数中设置属性width、height的值都为200。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.width = this.height = 200;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._list && this._list.destroy(destroyChild);\r\n        this._list = null;\r\n        this._source = null;\r\n        this._renderHandler = null;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this._list = new List();\r\n        this._list.hideFlags = HideFlags.HideAndDontSave;\r\n        this._list.left = 0;\r\n        this._list.right = 0;\r\n        this._list.top = 0;\r\n        this._list.bottom = 0;\r\n        this._list._skinBaseUrl = this._skinBaseUrl;\r\n        this.addChild(this._list);\r\n        this._list.renderHandler = Handler.create(this, this.renderItem, null, false);\r\n        this._list.repeatX = 1;\r\n        this._list.on(Event.CHANGE, this, this.onListChange);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 此对象包含的<code>List</code>实例的<code>Event.CHANGE</code>事件侦听处理函数。\r\n     */\r\n    protected onListChange(e: Event = null): void {\r\n        this.event(Event.CHANGE);\r\n    }\r\n\r\n    /**\r\n     * 数据源发生变化后，是否保持之前打开状态，默认为true。\r\n     * <p><b>取值：</b>\r\n     * <li>true：保持之前打开状态。</li>\r\n     * <li>false：不保持之前打开状态。</li>\r\n     * </p>\r\n     */\r\n    get keepStatus(): boolean {\r\n        return this._keepStatus;\r\n    }\r\n\r\n    set keepStatus(value: boolean) {\r\n        this._keepStatus = value;\r\n    }\r\n\r\n    /**\r\n     * 列表数据源，只包含当前可视节点数据。\r\n     */\r\n    get array(): any[] {\r\n        return this._list.array;\r\n    }\r\n\r\n    set array(value: any[]) {\r\n        if (this._keepStatus && this._list.array && value) {\r\n            this.parseOpenStatus(this._list.array, value);\r\n        }\r\n        this._source = value;\r\n        this._list.array = this.getArray();\r\n    }\r\n\r\n    /**\r\n     * 数据源，全部节点数据。\r\n     */\r\n    get source(): any[] {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * 此对象包含的<code>List</code>实例对象。\r\n     */\r\n    get list(): List {\r\n        return this._list;\r\n    }\r\n\r\n    /**\r\n     * 此对象包含的<code>List</code>实例的单元格渲染器。\r\n     * <p><b>取值：</b>\r\n     * <ol>\r\n     * <li>单元格类对象。</li>\r\n     * <li> UI 的 JSON 描述。</li>\r\n     * </ol></p>\r\n     * @implements\r\n     */\r\n    get itemRender(): any {\r\n        return this._list.itemRender;\r\n    }\r\n\r\n    set itemRender(value: any) {\r\n        this._list.itemRender = value;\r\n    }\r\n\r\n    /**\r\n     * 滚动条皮肤。\r\n     */\r\n    get scrollBarSkin(): string {\r\n        return this._list.vScrollBarSkin;\r\n    }\r\n\r\n    set scrollBarSkin(value: string) {\r\n        this._list.vScrollBarSkin = value;\r\n    }\r\n\r\n    /**滚动条*/\r\n    get scrollBar(): ScrollBar {\r\n        return this._list.scrollBar;\r\n    }\r\n\r\n    /**\r\n     * 单元格鼠标事件处理器。\r\n     * <p>默认返回参数（e:Event,index:int）。</p>\r\n     */\r\n    get mouseHandler(): Handler {\r\n        return this._list.mouseHandler;\r\n    }\r\n\r\n    set mouseHandler(value: Handler) {\r\n        this._list.mouseHandler = value;\r\n    }\r\n\r\n    /**\r\n     * <code>Tree</code> 实例的渲染处理器。\r\n     */\r\n    get renderHandler(): Handler {\r\n        return this._renderHandler;\r\n    }\r\n\r\n    set renderHandler(value: Handler) {\r\n        this._renderHandler = value;\r\n    }\r\n\r\n    /**\r\n     * 左侧缩进距离（以像素为单位）。\r\n     */\r\n    get spaceLeft(): number {\r\n        return this._spaceLeft;\r\n    }\r\n\r\n    set spaceLeft(value: number) {\r\n        this._spaceLeft = value;\r\n    }\r\n\r\n    /**\r\n     * 每一项之间的间隔距离（以像素为单位）。\r\n     */\r\n    get spaceBottom(): number {\r\n        return this._list.spaceY;\r\n    }\r\n\r\n    set spaceBottom(value: number) {\r\n        this._list.spaceY = value;\r\n    }\r\n\r\n    /**\r\n     * 表示当前选择的项索引。\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._list.selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        this._list.selectedIndex = value;\r\n    }\r\n\r\n    /**\r\n     * 当前选中的项对象的数据源。\r\n     */\r\n    get selectedItem(): any {\r\n        return this._list.selectedItem;\r\n    }\r\n\r\n    set selectedItem(value: any) {\r\n        this._list.selectedItem = value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取数据源集合。\r\n     */\r\n    protected getArray(): any[] {\r\n        var arr: any[] = [];\r\n        for (let key in this._source) {//TODO TS\r\n            let item = this._source[key];\r\n            if (this.getParentOpenStatus(item)) {\r\n                item.x = this._spaceLeft * this.getDepth(item);\r\n                arr.push(item);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取项对象的深度。\r\n     */\r\n    protected getDepth(item: any, num: number = 0): number {\r\n        if (item.nodeParent == null) return num;\r\n        else return this.getDepth(item.nodeParent, num + 1);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取项对象的上一级的打开状态。\r\n     */\r\n    protected getParentOpenStatus(item: any): boolean {\r\n        var parent: any = item.nodeParent;\r\n        if (parent == null) {\r\n            return true;\r\n        } else {\r\n            if (parent.isOpen) {\r\n                if (parent.nodeParent != null) return this.getParentOpenStatus(parent);\r\n                else return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 渲染一个项对象。\r\n     * @param cell 一个项对象。\r\n     * @param index 项的索引。\r\n     */\r\n    protected renderItem(cell: Box, index: number): void {\r\n        var item: ITreeDataSource = cell.dataSource;\r\n        if (item) {\r\n            cell.left = item.x;\r\n            var arrow = cell.getChildByName(\"arrow\") as Clip;\r\n            if (arrow) {\r\n                if (item.hasChild) {\r\n                    arrow.visible = true;\r\n                    arrow.index = item.isOpen ? 1 : 0;\r\n                    (<any>arrow).__cellIndex = index;\r\n                    arrow.off(Event.CLICK, this, this.onArrowClick);\r\n                    arrow.on(Event.CLICK, this, this.onArrowClick);\r\n                } else {\r\n                    arrow.visible = false;\r\n                }\r\n            }\r\n            var folder = cell.getChildByName(\"folder\") as Clip;\r\n            if (folder) {\r\n                if (folder.clipY == 2) {\r\n                    folder.index = item.isDirectory ? 0 : 1;\r\n                } else {\r\n                    folder.index = item.isDirectory ? item.isOpen ? 1 : 0 : 2;\r\n                }\r\n            }\r\n            this._renderHandler && this._renderHandler.runWith([cell, index]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private onArrowClick(e: Event): void {\r\n        var arrow = e.currentTarget;\r\n        var index = arrow.__cellIndex;\r\n        this._list.array[index].isOpen = !this._list.array[index].isOpen;\r\n        this.event(Event.OPEN);\r\n        this._list.array = this.getArray();\r\n    }\r\n\r\n    /**\r\n     * 设置指定项索引的项对象的打开状态。\r\n     * @param index 项索引。\r\n     * @param isOpen 是否处于打开状态。\r\n     */\r\n    setItemState(index: number, isOpen: boolean): void {\r\n        if (!this._list.array[index]) return;\r\n        this._list.array[index].isOpen = isOpen;\r\n        this._list.array = this.getArray();\r\n    }\r\n\r\n    /**\r\n     * 刷新项列表。\r\n     */\r\n    fresh(): void {\r\n        this._list.array = this.getArray();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        //if (value is XmlDom) xml = value as XmlDom;\r\n        super.set_dataSource(value);\r\n    }\r\n\r\n    /**\r\n     *  xml结构的数据源。\r\n     */\r\n    set xml(value: XML) {\r\n        var arr: any[] = [];\r\n        this.parseXml(value, arr, null, true);\r\n\r\n        this.array = arr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 解析并处理XML类型的数据源。\r\n     */\r\n    protected parseXml(xml: XML, source: any[], nodeParent: any, isRoot: boolean): void {\r\n        var obj: any;\r\n        var list = xml.elements();\r\n        var childCount = list.length;\r\n        if (!isRoot) {\r\n            obj = {};\r\n            var list2 = xml.attributes;\r\n            for (let key in list2) {\r\n                var value = list2[key];\r\n                obj[key] = value == \"true\" ? true : value == \"false\" ? false : value;\r\n            }\r\n            obj.nodeParent = nodeParent;\r\n            if (childCount > 0) obj.isDirectory = true;\r\n            obj.hasChild = childCount > 0;\r\n            source.push(obj);\r\n        }\r\n        for (var i = 0; i < childCount; i++) {\r\n            var node = list[i];\r\n            this.parseXml(node, source, obj, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 处理数据项的打开状态。\r\n     */\r\n    protected parseOpenStatus(oldSource: any[], newSource: any[]): void {\r\n        for (var i = 0, n = newSource.length; i < n; i++) {\r\n            var newItem = newSource[i];\r\n            if (newItem.isDirectory) {\r\n                for (var j = 0, m = oldSource.length; j < m; j++) {\r\n                    var oldItem = oldSource[j];\r\n                    if (oldItem.isDirectory && this.isSameParent(oldItem, newItem) && newItem.label == oldItem.label) {\r\n                        newItem.isOpen = oldItem.isOpen;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 判断两个项对象在树结构中的父节点是否相同。\r\n     * @param item1 项对象。\r\n     * @param item2 项对象。\r\n     * @return 如果父节点相同值为true，否则值为false。\r\n     */\r\n    protected isSameParent(item1: any, item2: any): boolean {\r\n        if (item1.nodeParent == null && item2.nodeParent == null) return true;\r\n        else if (item1.nodeParent == null || item2.nodeParent == null) return false\r\n        else {\r\n            if (item1.nodeParent.label == item2.nodeParent.label) return this.isSameParent(item1.nodeParent, item2.nodeParent);\r\n            else return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示选择的树节点项的<code>path</code>属性值。\r\n     */\r\n    get selectedPath(): string {\r\n        if (this._list.selectedItem) {\r\n            return this._list.selectedItem.path;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 更新项列表，显示指定键名的数据项。\r\n     * @param\tkey 键名。\r\n     */\r\n    filter(key: string): void {\r\n        if (Boolean(key)) {\r\n            var result: any[] = [];\r\n            this.getFilterSource(this._source, result, key);\r\n            this._list.array = result;\r\n        } else {\r\n            this._list.array = this.getArray();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取数据源中指定键名的值。\r\n     */\r\n    private getFilterSource(array: any[], result: any[], key: string): void {\r\n        key = key.toLocaleLowerCase();\r\n        for (let item of array) {\r\n            if (!item.isDirectory && String(item.label).toLowerCase().indexOf(key) > -1) {\r\n                item.x = 0;\r\n                result.push(item);\r\n            }\r\n            if (item.child && item.child.length > 0) {\r\n                this.getFilterSource(item.child, result, key);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { LayoutBox } from \"./LayoutBox\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n     * <code>VBox</code> 是一个垂直布局容器类。\r\n     */\r\nexport class VBox extends LayoutBox {\r\n    /**\r\n     * 无对齐。\r\n     */\r\n    static NONE: string = \"none\";\r\n    /**\r\n     * 左对齐。\r\n     */\r\n    static LEFT: string = \"left\";\r\n    /**\r\n     * 居中对齐。\r\n     */\r\n    static CENTER: string = \"center\";\r\n    /**\r\n     * 右对齐。\r\n     */\r\n    static RIGHT: string = \"right\";\r\n\r\n    /** 兼容以前的changeItems逻辑，是否在发生变动时，使用 sortItem 排序所有item */\r\n    public isSortItem: boolean = false;\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this.callLater(this.changeItems);\r\n    }\r\n\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n    */\r\n    protected changeItems(): void {\r\n        this._itemChanged = false;\r\n        let items: any[] = [];\r\n        let maxWidth = 0;\r\n\r\n        for (let i = 0, n = this.numChildren; i < n; i++) {\r\n            let item = (<UIComponent>this.getChildAt(i));\r\n            if (item) {\r\n                items.push(item);\r\n                maxWidth = this._isWidthSet ? this._width : Math.max(maxWidth, item.width * item.scaleX);\r\n            }\r\n        }\r\n        if (this.isSortItem) {\r\n            this.sortItem(items);\r\n        }\r\n        let top = 0;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            let item = items[i];\r\n            item.y = top;\r\n            top += item.height * item.scaleY + this._space;\r\n            if (this._align == VBox.LEFT) {\r\n                item.x = 0;\r\n            } else if (this._align == VBox.CENTER) {\r\n                item.x = (maxWidth - item.width * item.scaleX) * 0.5;\r\n            } else if (this._align == VBox.RIGHT) {\r\n                item.x = maxWidth - item.width * item.scaleX;\r\n            }\r\n        }\r\n        this._sizeChanged();\r\n    }\r\n}","/**\r\n * Morn UI Version 3.0 http://www.mornui.com/\r\n * Feedback yung http://weibo.com/newyung\r\n */\r\nimport { Node } from \"../display/Node\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Box } from \"./Box\"\r\nimport { Handler } from \"../utils/Handler\"\r\n\r\n/**\r\n * <code>ViewStack</code> 类用于视图堆栈类，用于视图的显示等设置处理。\r\n */\r\nexport class ViewStack extends Box {\r\n    /**@private */\r\n    protected _items: any[];\r\n    /**@private */\r\n    protected _setIndexHandler: Handler = Handler.create(this, this.setIndex, null, false);\r\n    /**@private */\r\n    protected _selectedIndex: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._items = [];\r\n    }\r\n\r\n    /**\r\n     * 批量设置视图对象。\r\n     * @param views 视图对象数组。\r\n     */\r\n    setItems(views: any[]): void {\r\n        this.removeChildren();\r\n        var index: number = 0;\r\n        for (var i: number = 0, n: number = views.length; i < n; i++) {\r\n            var item: Node = views[i];\r\n            if (item) {\r\n                item.name = \"item\" + index;\r\n                this.addChild(item);\r\n                index++;\r\n            }\r\n        }\r\n        this.initItems();\r\n    }\r\n\r\n    /**\r\n     * 添加视图。\r\n     * 添加视图对象，并设置此视图对象的<code>name</code> 属性。\r\n     * @param view 需要添加的视图对象。\r\n     */\r\n    addItem(view: Node): void {\r\n        view.name = \"item\" + this._items.length;\r\n        this.addChild(view);\r\n        this.initItems();\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n        this.initItems();\r\n    }\r\n\r\n    /**@internal */\r\n    _afterInited(): void {\r\n        this.initItems();\r\n    }\r\n\r\n    /**\r\n     * 初始化视图对象集合。\r\n     */\r\n    initItems(): void {\r\n        this._items.length = 0;\r\n        for (var i: number = 0; i < 10000; i++) {\r\n            var item: Sprite = (<Sprite>this.getChildByName(\"item\" + i));\r\n            if (item == null) {\r\n                break;\r\n            }\r\n            this._items.push(item);\r\n            item.visible = (i == this._selectedIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示当前视图索引。\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        if (this._selectedIndex != value) {\r\n            this.setSelect(this._selectedIndex, false);\r\n            this._selectedIndex = value;\r\n            this.setSelect(this._selectedIndex, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过对象的索引设置项对象的 <code>selected</code> 属性值。\r\n     * @param index 需要设置的对象的索引。\r\n     * @param selected 表示对象的选中状态。\r\n     */\r\n    protected setSelect(index: number, selected: boolean): void {\r\n        if (this._items && index > -1 && index < this._items.length) {\r\n            this._items[index].visible = selected;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取或设置当前选择的项对象。\r\n     */\r\n    get selection(): Node {\r\n        return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;\r\n    }\r\n\r\n    set selection(value: Node) {\r\n        this.selectedIndex = this._items.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     *  索引设置处理器。\r\n     * <p>默认回调参数：index:int</p>\r\n     */\r\n    get setIndexHandler(): Handler {\r\n        return this._setIndexHandler;\r\n    }\r\n\r\n    set setIndexHandler(value: Handler) {\r\n        this._setIndexHandler = value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置属性<code>selectedIndex</code>的值。\r\n     * @param index 选中项索引值。\r\n     */\r\n    protected setIndex(index: number): void {\r\n        this.selectedIndex = index;\r\n    }\r\n\r\n    /**\r\n     * 视图集合数组。\r\n     */\r\n    get items(): any[] {\r\n        return this._items;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string') {\r\n            this.selectedIndex = parseInt(value as string);\r\n        } else {\r\n            for (var prop in this._dataSource) {\r\n                if (prop in this) {\r\n                    (this as any)[prop] = this._dataSource[prop];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Slider } from \"./Slider\";\r\n\r\n/**\r\n * 使用 <code>VSlider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\r\n * <p> <code>VSlider</code> 控件采用垂直方向。滑块轨道从下往上扩展，而标签位于轨道的左右两侧。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>VSlider</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.HSlider;\r\n *\t\timport laya.ui.VSlider;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class VSlider_Example\r\n *\t\t{\r\n *\t\t\tprivate var vSlider:VSlider;\r\n *\t\t\tpublic function VSlider_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvSlider = new VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\r\n *\t\t\t\tvSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\r\n *\t\t\t\tvSlider.min = 0;//设置 vSlider 最低位置值。\r\n *\t\t\t\tvSlider.max = 10;//设置 vSlider 最高位置值。\r\n *\t\t\t\tvSlider.value = 2;//设置 vSlider 当前位置值。\r\n *\t\t\t\tvSlider.tick = 1;//设置 vSlider 刻度值。\r\n *\t\t\t\tvSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\r\n *\t\t\t\tvSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\r\n *\t\t\t\tvSlider.changeHandler = new Handler(this, onChange);//设置 vSlider 位置变化处理器。\r\n *\t\t\t\tLaya.stage.addChild(vSlider);//把 vSlider 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"滑块的位置： value=\" + value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var vSlider;\r\n * Laya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     vSlider = new laya.ui.VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\r\n *     vSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\r\n *     vSlider.min = 0;//设置 vSlider 最低位置值。\r\n *     vSlider.max = 10;//设置 vSlider 最高位置值。\r\n *     vSlider.value = 2;//设置 vSlider 当前位置值。\r\n *     vSlider.tick = 1;//设置 vSlider 刻度值。\r\n *     vSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\r\n *     vSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\r\n *     vSlider.changeHandler = new laya.utils.Handler(this, onChange);//设置 vSlider 位置变化处理器。\r\n *     Laya.stage.addChild(vSlider);//把 vSlider 添加到显示列表。\r\n * }\r\n * function onChange(value) {\r\n *     console.log(\"滑块的位置： value=\" + value);\r\n * }\r\n * @example\r\n * import HSlider = laya.ui.HSlider;\r\n * import VSlider = laya.ui.VSlider;\r\n * import Handler = laya.utils.Handler;\r\n * class VSlider_Example {\r\n *     private vSlider: VSlider;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.vSlider = new VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\r\n *         this.vSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\r\n *         this.vSlider.min = 0;//设置 vSlider 最低位置值。\r\n *         this.vSlider.max = 10;//设置 vSlider 最高位置值。\r\n *         this.vSlider.value = 2;//设置 vSlider 当前位置值。\r\n *         this.vSlider.tick = 1;//设置 vSlider 刻度值。\r\n *         this.vSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\r\n *         this.vSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\r\n *         this.vSlider.changeHandler = new Handler(this, this.onChange);//设置 vSlider 位置变化处理器。\r\n *         Laya.stage.addChild(this.vSlider);//把 vSlider 添加到显示列表。\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"滑块的位置： value=\" + value);\r\n *     }\r\n * }\r\n * @see laya.ui.Slider\r\n */\r\nexport class VSlider extends Slider {\r\n\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Stage } from \"../display/Stage\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * 微信开放数据展示组件，直接实例本组件，即可根据组件宽高，位置，以最优的方式显示开放域数据\r\n */\r\nexport class OpenDataContextView extends UIComponent {\r\n    private _fps: number = 30;\r\n\r\n    constructor() {\r\n        super();\r\n        this._width = this._height = 200;\r\n        let tex: Texture = new Texture(new Texture2D(this._width, this._height, TextureFormat.R8G8B8A8, false, false, true));\r\n        tex.bitmap.lock = true;\r\n        this.texture = tex;\r\n    }\r\n\r\n    get fps() {\r\n        return this._fps;\r\n    }\r\n\r\n    set fps(value: number) {\r\n        if (this._fps != value) {\r\n            this._fps = value;\r\n            if (LayaEnv.isPlaying && this.activeInHierarchy\r\n                && (window as any).wx && (window as any).sharedCanvas) {\r\n                ILaya.timer.clear(this, this._onLoop);\r\n                ILaya.timer.loop(1000 / value, this, this._onLoop);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _onActive(): void {\r\n        if (!LayaEnv.isPlaying)\r\n            return;\r\n\r\n        if ((window as any).wx && (window as any).sharedCanvas)\r\n            ILaya.timer.loop(1000 / this._fps, this, this._onLoop);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _onInActive(): void {\r\n        if (!LayaEnv.isPlaying)\r\n            return;\r\n\r\n        this.postMsg({ type: \"close\" });\r\n        ILaya.timer.clear(this, this._onLoop);\r\n    }\r\n\r\n    private _onLoop(): void {\r\n        let tex = this.texture;\r\n        let canvas: HTMLCanvasElement = (window as any).sharedCanvas;\r\n        if (tex.width != canvas.width || tex.height != canvas.height) {\r\n            tex.bitmap.destroy();\r\n            tex.bitmap = new Texture2D(canvas.width, canvas.height, TextureFormat.R8G8B8A8, false, false, true, true);\r\n            tex.bitmap.lock = true;\r\n        }\r\n        (<Texture2D>tex.bitmap).setImageData(canvas, true, false);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if ((window as any).sharedCanvas) (window as any).sharedCanvas.width = value;\r\n        this.callLater(this.updateViewPort);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if ((window as any).sharedCanvas) (window as any).sharedCanvas.height = value;\r\n        this.callLater(this.updateViewPort);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set x(value: number) {\r\n        super.x = value;\r\n        this.callLater(this.updateViewPort);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get x() {\r\n        return super.x;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set y(value: number) {\r\n        super.y = value;\r\n        this.callLater(this.updateViewPort);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get y() {\r\n        return super.y;\r\n    }\r\n\r\n    private updateViewPort(): void {\r\n        let stage: Stage = ILaya.stage;\r\n        let sx = stage._canvasTransform.getScaleX() * this.globalScaleX * stage.transform.getScaleX();\r\n        let sy = stage._canvasTransform.getScaleY() * this.globalScaleY * stage.transform.getScaleY();\r\n\r\n        this.postMsg({\r\n            type: \"updateViewPort\",\r\n            box: {\r\n                x: this.x * sx,\r\n                y: this.y * sy,\r\n                width: this.width * sx,\r\n                height: this.height * sy,\r\n            }\r\n        });\r\n    }\r\n\r\n    /**向开放数据域发送消息*/\r\n    postMsg(msg: any): void {\r\n        if ((window as any).wx && (window as any).wx.getOpenDataContext) {\r\n            var openDataContext: any = (window as any).wx.getOpenDataContext();\r\n            openDataContext.postMessage(msg);\r\n        }\r\n    }\r\n}","\r\nimport { Laya } from \"../../Laya\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { CheckBox } from \"../ui/CheckBox\";\r\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"../utils/IStatUI\";\r\nimport { Stat } from \"../utils/Stat\";\r\n\r\nexport class StatUI implements IStatUI {\r\n    private _txt: Text;\r\n    private _sp: Sprite;\r\n    private _view: Array<StatUIParams>;\r\n    private _toggleView: Array<StatToggleUIParams>;\r\n    private _toggleSprite: Sprite;\r\n    private _checkBoxArray: Array<CheckBox>;\r\n    private _show = false;\r\n    private _showToggle = false;\r\n\r\n    /**\r\n     * @override\r\n     * 显示性能统计信息。\r\n     * @param\tx X轴显示位置。\r\n     * @param\ty Y轴显示位置。\r\n     */\r\n    show(x?: number, y?: number, views?: Array<StatUIParams>): void {\r\n        x = x || 0;\r\n        y = y || 0;\r\n        views = views || Stat.AllShow;\r\n\r\n        this._view = views;\r\n        this._show = true;\r\n\r\n        if (!this._sp)\r\n            this.createUI();\r\n        this._sp.pos(x, y);\r\n    }\r\n\r\n    showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>) {\r\n        x = x || 0;\r\n        y = y || 0;\r\n        views = views || Stat.AllToggle;\r\n\r\n        this._toggleView = views;\r\n        this._showToggle = true;\r\n\r\n        if (!this._toggleSprite)\r\n            this.createToggleUI();\r\n\r\n        Laya.stage.addChild(this._toggleSprite);\r\n        this._toggleSprite.pos(x, y);\r\n    }\r\n\r\n    /**\r\n    * @override\r\n    * 隐藏性能统计信息。\r\n    */\r\n    hide(): void {\r\n        this._show = false;\r\n        this._showToggle = false;\r\n        if (this._toggleSprite)\r\n            this._toggleSprite.removeSelf();\r\n    }\r\n\r\n    update(): void {\r\n        if (this._show) {\r\n            strArray.length = 0;\r\n            for (let i = 0; i < this._view.length; i++) {\r\n                let item: StatUIParams = this._view[i];\r\n                let isAverage: boolean = item.mode == \"average\";\r\n\r\n                let value: any = (Stat as any)[item.value];\r\n                (item.units == \"M\") && (value = Math.floor(value / (1024 * 1024) * 100) / 100);\r\n                (item.units == \"K\") && (value = Math.floor(value / (1024) * 100) / 100);\r\n\r\n                if (isAverage) {\r\n                    value /= Stat._count;\r\n                    value = Math.floor(value);\r\n                }\r\n\r\n                (item.units == \"M\") && (value += \"M\");\r\n                (item.units == \"K\") && (value += \"K\");\r\n\r\n                strArray.push(value);\r\n            }\r\n            this._txt.text = strArray.join(\"\\n\");\r\n        }\r\n\r\n        if (this._showToggle) {\r\n            for (let i = 0; i < this._toggleView.length; i++) {\r\n                let one = this._toggleView[i];\r\n                (Stat as any)[one.value] = this._checkBoxArray[i].selected;\r\n            }\r\n        }\r\n    }\r\n\r\n    private createUI(): void {\r\n        let sp: Sprite = this._sp = new Sprite();\r\n        sp.scale(Math.max(Laya.stage.clientScaleX, 1), Math.max(Laya.stage.clientScaleY, 1));\r\n        Laya.stage.on(Event.RESIZE, this, () => {\r\n            this._sp.scale(Math.max(Laya.stage.clientScaleX, 1), Math.max(Laya.stage.clientScaleY, 1));\r\n        });\r\n\r\n        let leftText = new Text();\r\n        leftText.pos(5, 5);\r\n        leftText.color = \"#ffffff\";\r\n        leftText.fontSize = fontSize;\r\n        sp.addChild(leftText);\r\n\r\n        strArray.length = 0;\r\n        for (let one of this._view)\r\n            strArray.push(one.title);\r\n        leftText.text = strArray.join(\"\\n\");\r\n\r\n        this._txt = new Text();\r\n        this._txt.pos(leftText.textWidth + 10, 5);\r\n        this._txt.color = \"#ffffff\";\r\n        this._txt.fontSize = fontSize;\r\n        sp.addChild(this._txt);\r\n\r\n        sp.size(leftText.textWidth + 100, leftText.textHeight + 10);\r\n        sp.graphics.clear();\r\n        sp.graphics.alpha(0.5);\r\n        sp.graphics.drawRect(0, 0, sp.width, sp.height, \"#999999\");\r\n        sp.graphics.alpha(2);\r\n    }\r\n\r\n    private createToggleUI(): void {\r\n        if (!checkBoxTex) {\r\n            let pixels = new Uint8Array(9);\r\n            pixels[0] = 255;\r\n            pixels[1] = 255;\r\n            pixels[2] = 255;\r\n            pixels[3] = 255;\r\n            pixels[4] = 255;\r\n            pixels[5] = 128;\r\n            pixels[6] = 128;\r\n            pixels[7] = 128;\r\n            pixels[8] = 0;\r\n            checkBoxTex = new Texture2D(1, 3, TextureFormat.R8G8B8, false, false);\r\n            checkBoxTex.setPixelsData(pixels, false, false);\r\n            checkBoxTex.lock = true;//锁住资源防止被资源管理释放\r\n            checkBoxTex.name = \"StatUICheckBox\";\r\n            Loader.cacheRes(checkBoxTex.name, checkBoxTex, Loader.TEXTURE2D);\r\n        }\r\n\r\n        let sp = this._toggleSprite = new Sprite();\r\n        sp.zOrder = 1000000;\r\n        let leftText = new Text();\r\n        leftText.pos(5, 5);\r\n        leftText.color = \"#ffffff\";\r\n        leftText.fontSize = fontSize;\r\n        sp.addChild(leftText);\r\n\r\n        leftText.text = Text._testWord;\r\n        let h = leftText.textHeight + leftText.leading;\r\n\r\n        strArray.length = 0;\r\n        for (let one of this._toggleView)\r\n            strArray.push(one.title);\r\n        leftText.text = strArray.join(\"\\n\");\r\n\r\n        let toggles = new Sprite();\r\n        toggles.pos(leftText.textWidth + 15, 5);\r\n        sp.addChild(toggles);\r\n\r\n        this._checkBoxArray = [];\r\n        for (let i = 0; i < this._toggleView.length; i++) {\r\n            let one = this._toggleView[i];\r\n\r\n            let cb = new CheckBox(checkBoxTex.name);\r\n            cb.selected = (Stat as any)[one.value];\r\n            cb.scale(12, 12);\r\n            cb.pos(0, i * h + 2);\r\n            cb.size(12, 12);\r\n            toggles.addChild(cb);\r\n            this._checkBoxArray.push(cb);\r\n        }\r\n\r\n        sp.size(leftText.textWidth + 40, leftText.textHeight + 10);\r\n        sp.graphics.clear();\r\n        sp.graphics.alpha(0.5);\r\n        sp.graphics.drawRect(0, 0, sp.width, sp.height, \"#999999\");\r\n        sp.graphics.alpha(2);\r\n    }\r\n\r\n    render(ctx: any, x: number, y: number) {\r\n        this._show && this._sp && this._sp.render(ctx, 0, 0);\r\n    }\r\n}\r\n\r\nconst fontSize: number = 16;\r\nconst strArray: Array<string> = [];\r\nvar checkBoxTex: Texture2D;","import { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { AutoBitmap } from \"./AutoBitmap\";\r\nimport { Box } from \"./Box\";\r\nimport { Button } from \"./Button\";\r\nimport { CheckBox } from \"./CheckBox\";\r\nimport { Clip } from \"./Clip\";\r\nimport { ColorPicker } from \"./ColorPicker\";\r\nimport { ComboBox } from \"./ComboBox\";\r\nimport { Dialog } from \"./Dialog\";\r\nimport { DialogManager } from \"./DialogManager\";\r\nimport { FontClip } from \"./FontClip\";\r\nimport { HBox } from \"./HBox\";\r\nimport { HScrollBar } from \"./HScrollBar\";\r\nimport { HSlider } from \"./HSlider\";\r\nimport { Image } from \"./Image\";\r\nimport { Label } from \"./Label\";\r\nimport { LayoutBox } from \"./LayoutBox\";\r\nimport { List } from \"./List\";\r\nimport { Panel } from \"./Panel\";\r\nimport { ProgressBar } from \"./ProgressBar\";\r\nimport { Radio } from \"./Radio\";\r\nimport { RadioGroup } from \"./RadioGroup\";\r\nimport { ScaleBox } from \"./ScaleBox\";\r\nimport { ScrollBar } from \"./ScrollBar\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TextArea } from \"./TextArea\";\r\nimport { TextInput } from \"./TextInput\";\r\nimport { TipManager } from \"./TipManager\";\r\nimport { Tree } from \"./Tree\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { UIGroup } from \"./UIGroup\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { VBox } from \"./VBox\";\r\nimport { View } from \"./View\";\r\nimport { ViewStack } from \"./ViewStack\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { VSlider } from \"./VSlider\";\r\nimport { OpenDataContextView } from \"./OpenDataContextView\";\r\nimport { StatUI } from \"./StatUI\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nlet c = ClassUtils.regClass;\r\nc(\"AutoBitmap\", AutoBitmap);\r\nc(\"Box\", Box);\r\nc(\"Button\", Button);\r\nc(\"CheckBox\", CheckBox);\r\nc(\"Clip\", Clip);\r\nc(\"ColorPicker\", ColorPicker);\r\nc(\"ComboBox\", ComboBox);\r\nc(\"Dialog\", Dialog);\r\nc(\"DialogManager\", DialogManager);\r\nc(\"FontClip\", FontClip);\r\nc(\"HBox\", HBox);\r\nc(\"HScrollBar\", HScrollBar);\r\nc(\"HSlider\", HSlider);\r\nc(\"Image\", Image);\r\nc(\"Label\", Label);\r\nc(\"LayoutBox\", LayoutBox);\r\nc(\"List\", List);\r\nc(\"Panel\", Panel);\r\nc(\"ProgressBar\", ProgressBar);\r\nc(\"Radio\", Radio);\r\nc(\"RadioGroup\", RadioGroup);\r\nc(\"ScaleBox\", ScaleBox);\r\nc(\"ScrollBar\", ScrollBar);\r\nc(\"Slider\", Slider);\r\nc(\"Tab\", Tab);\r\nc(\"TextArea\", TextArea);\r\nc(\"TextInput\", TextInput);\r\nc(\"TipManager\", TipManager);\r\nc(\"Tree\", Tree);\r\nc(\"UIGroup\", UIGroup);\r\nc(\"UIUtils\", UIUtils);\r\nc(\"VBox\", VBox);\r\nc(\"View\", View);\r\nc(\"ViewStack\", ViewStack);\r\nc(\"VScrollBar\", VScrollBar);\r\nc(\"VSlider\", VSlider);\r\nc(\"UIComponent\", UIComponent);\r\n\r\nc(\"OpenDataContextView\", OpenDataContextView);\r\nc(\"StatUI\", StatUI);"],"mappings":"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"}