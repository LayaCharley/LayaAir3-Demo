import { Node } from "laya/display/Node";
import { Sprite } from "laya/display/Sprite";
import { Point } from "laya/maths/Point";
export declare class DisControlTool {
    constructor();
    private static tempP;
    static getObjectsUnderPoint(sprite: Sprite, x: number, y: number, rst?: any[], filterFun?: Function): any[];
    static getObjectsUnderGlobalPoint(sprite: Sprite, filterFun?: Function): any[];
    static findFirstObjectsUnderGlobalPoint(): Sprite;
    static visibleAndEnableObjFun(tar: Sprite): boolean;
    static visibleObjFun(tar: Sprite): boolean;
    static getMousePoint(sprite: Sprite): Point;
    static isChildE(parent: Node, child: Node): boolean;
    static isInTree(pNode: Node, child: Node): boolean;
    static setTop(tar: Node): void;
    static clearItemRelativeInfo(item: any): void;
    static swap(tarA: Node, tarB: Node): void;
    static insertToTarParent(tarA: Node, tars: any[], after?: boolean): void;
    static insertToParent(parent: Node, tars: any[], index?: number): void;
    static transParent(tar: Sprite, newParent: Sprite): void;
    static transPoint(nowParent: Sprite, tarParent: Sprite, point: Point): Point;
    static removeItems(itemList: any[]): void;
    static addItems(itemList: any[], parent: Node): void;
    static getAllChild(tar: Node): any[];
    static upDis(child: Node): void;
    static downDis(child: Node): void;
    static setResizeAbleEx(node: Sprite): void;
    static setResizeAble(node: Sprite): void;
    static resizeHandler: Function;
    static setDragingItem(dragBar: Sprite, tar: Sprite): void;
    static dragingHandler(tar: Sprite): void;
    static dragingEnd(tar: Sprite): void;
    static showToStage(dis: Sprite, offX?: number, offY?: number): void;
    static intFyDisPos(dis: Sprite): void;
    static showOnly(disList: any[], showItem: Sprite): void;
    static showOnlyByIndex(disList: any[], index: number): void;
    static addOnly(disList: any[], showItem: Sprite, parent: Sprite): void;
    static addOnlyByIndex(disList: any[], index: number, parent: Sprite): void;
}
