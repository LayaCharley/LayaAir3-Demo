import { ConstraintComponent } from "./ConstraintComponent";
import { Vector3 } from "../../../maths/Vector3";
export declare class ConfigurableConstraint extends ConstraintComponent {
    static CONFIG_MOTION_TYPE_LOCKED: number;
    static CONFIG_MOTION_TYPE_LIMITED: number;
    static CONFIG_MOTION_TYPE_FREE: number;
    constructor();
    get axis(): Vector3;
    get secondaryAxis(): Vector3;
    set maxAngularLimit(value: Vector3);
    set minAngularLimit(value: Vector3);
    get maxAngularLimit(): Vector3;
    get minAngularLimit(): Vector3;
    set maxLinearLimit(value: Vector3);
    set minLinearLimit(value: Vector3);
    get maxLinearLimit(): Vector3;
    get minLinearLimit(): Vector3;
    set XMotion(value: number);
    get XMotion(): number;
    set YMotion(value: number);
    get YMotion(): number;
    set ZMotion(value: number);
    get ZMotion(): number;
    set angularXMotion(value: number);
    get angularXMotion(): number;
    set angularYMotion(value: number);
    get angularYMotion(): number;
    set angularZMotion(value: number);
    get angularZMotion(): number;
    set linearLimitSpring(value: Vector3);
    get linearLimitSpring(): Vector3;
    set angularLimitSpring(value: Vector3);
    get angularLimitSpring(): Vector3;
    set linearBounce(value: Vector3);
    get linearBounce(): Vector3;
    set angularBounce(value: Vector3);
    get angularBounce(): Vector3;
    set linearDamp(value: Vector3);
    get linearDamp(): Vector3;
    set angularDamp(value: Vector3);
    get angularDamp(): Vector3;
    set anchor(value: Vector3);
    get anchor(): Vector3;
    set connectAnchor(value: Vector3);
    get connectAnchor(): Vector3;
    setAxis(axis: Vector3, secondaryAxis: Vector3): void;
    _initAllConstraintInfo(): void;
    protected _onEnable(): void;
    protected _onDisable(): void;
}
