import { Component } from "../../../components/Component";
import { AnimatorControllerLayer } from "./AnimatorControllerLayer";
import { AnimatorPlayState } from "./AnimatorPlayState";
import { AnimatorState } from "./AnimatorState";
import { AnimatorController } from "./AnimatorController";
import { AnimatorUpdateMode } from "../../../components/AnimatorUpdateMode";
export declare type AnimatorParams = {
    [key: number]: number | boolean;
};
export declare class Animator extends Component {
    static CULLINGMODE_ALWAYSANIMATE: number;
    static CULLINGMODE_CULLCOMPLETELY: number;
    cullingMode: number;
    _controller: AnimatorController;
    set controller(val: AnimatorController);
    get controller(): AnimatorController;
    get speed(): number;
    set speed(value: number);
    set updateMode(value: AnimatorUpdateMode);
    set lowUpdateDelty(value: number);
    get controllerLayerCount(): number;
    set animatorParams(values: AnimatorParams);
    get animatorParams(): AnimatorParams;
    set sleep(value: boolean);
    get sleep(): boolean;
    constructor();
    private _applyTransition;
    private _applyVec2;
    private _applyVec3;
    private _applyVec4;
    private _applyColor;
    private _setClipDatasToNode;
    protected _onEnable(): void;
    protected _onDestroy(): void;
    private _applyUpdateMode;
    getDefaultState(layerIndex?: number): AnimatorState;
    addState(state: AnimatorState, layerIndex?: number): void;
    removeState(state: AnimatorState, layerIndex?: number): void;
    addControllerLayer(controllderLayer: AnimatorControllerLayer): void;
    getControllerLayer(layerInex?: number): AnimatorControllerLayer;
    play(name?: string | null, layerIndex?: number, normalizedTime?: number): void;
    crossFade(name: string, transitionDuration: number, layerIndex?: number, normalizedTime?: number): void;
    setParamsTrigger(name: number): void;
    setParamsTrigger(name: string): void;
    setParamsNumber(name: number, value: number): void;
    setParamsNumber(name: string, value: number): void;
    setParamsBool(name: number, value: boolean): void;
    setParamsBool(name: string, value: boolean): void;
    getParamsvalue(name: number): number | boolean;
    getParamsvalue(name: string): number | boolean;
    getCurrentAnimatorPlayState(layerInex?: number): AnimatorPlayState;
}
