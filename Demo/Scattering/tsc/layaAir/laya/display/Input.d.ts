import { Text } from "./Text";
export declare class Input extends Text {
    static TYPE_TEXT: string;
    static TYPE_PASSWORD: string;
    static TYPE_EMAIL: string;
    static TYPE_URL: string;
    static TYPE_NUMBER: string;
    static TYPE_RANGE: string;
    static TYPE_DATE: string;
    static TYPE_MONTH: string;
    static TYPE_WEEK: string;
    static TYPE_TIME: string;
    static TYPE_DATE_TIME: string;
    static TYPE_DATE_TIME_LOCAL: string;
    static TYPE_SEARCH: string;
    protected static input: HTMLInputElement;
    protected static area: HTMLTextAreaElement;
    protected static inputElement: HTMLInputElement | HTMLTextAreaElement;
    protected static inputContainer: HTMLDivElement;
    protected static confirmButton: any;
    protected static promptStyleDOM: any;
    protected _focus: boolean;
    protected _multiline: boolean;
    protected _editable: boolean;
    protected _restrict: string;
    protected _restrictPattern: any;
    protected _maxChars: number;
    private _type;
    static IOS_IFRAME: boolean;
    static isAppUseNewInput: boolean;
    constructor();
    private static _popupInputMethod;
    private static _createInputElement;
    private static _initInput;
    private static _processInputting;
    private static _stopEvent;
    setSelection(startIndex: number, endIndex: number): void;
    get multiline(): boolean;
    set multiline(value: boolean);
    get nativeInput(): HTMLInputElement | HTMLTextAreaElement;
    private _onUnDisplay;
    private _onMouseDown;
    private _syncInputTransform;
    select(): void;
    get focus(): boolean;
    set focus(value: boolean);
    private _setInputMethod;
    private _focusIn;
    private _setPromptColor;
    private _focusOut;
    private _onKeyDown;
    miniGameTxt(value: string): void;
    set text(value: string);
    get text(): string;
    set_color(value: string): void;
    set bgColor(value: string);
    get bgColor(): string;
    get restrict(): string;
    set restrict(value: string);
    set editable(value: boolean);
    get editable(): boolean;
    get maxChars(): number;
    set maxChars(value: number);
    get prompt(): string;
    set prompt(value: string);
    get promptColor(): string;
    set promptColor(value: string);
    get type(): string;
    set type(value: string);
}
