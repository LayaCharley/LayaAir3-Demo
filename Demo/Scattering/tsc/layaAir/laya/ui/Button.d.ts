import { UIComponent } from "./UIComponent";
import { ISelect } from "./ISelect";
import { Text } from "../display/Text";
import { Event } from "../events/Event";
import { AutoBitmap } from "./AutoBitmap";
import { Handler } from "../utils/Handler";
export declare class Button extends UIComponent implements ISelect {
    toggle: boolean;
    protected _text: Text;
    protected _labelColors: string[];
    protected _strokeColors: string[];
    protected _state: number;
    protected _selected: boolean;
    protected _skin: string;
    protected _autoSize: boolean;
    protected _stateNum: number;
    protected _clickHandler: Handler;
    protected _stateChanged: boolean;
    _graphics: AutoBitmap;
    constructor(skin?: string, label?: string);
    destroy(destroyChild?: boolean): void;
    protected createChildren(): void;
    protected createText(): void;
    protected initialize(): void;
    protected onMouse(e: Event): void;
    get skin(): string;
    set skin(value: string);
    _setSkin(url: string): Promise<void>;
    protected _skinLoaded(tex: any): void;
    get stateNum(): number;
    set stateNum(value: number);
    protected changeClips(): void;
    protected measureWidth(): number;
    protected measureHeight(): number;
    get label(): string;
    set label(value: string);
    get selected(): boolean;
    set selected(value: boolean);
    protected get state(): number;
    protected set state(value: number);
    protected changeState(): void;
    get labelColors(): string;
    set labelColors(value: string);
    get strokeColors(): string;
    set strokeColors(value: string);
    get labelPadding(): string;
    set labelPadding(value: string);
    get labelSize(): number;
    set labelSize(value: number);
    get labelStroke(): number;
    set labelStroke(value: number);
    get labelStrokeColor(): string;
    set labelStrokeColor(value: string);
    get labelBold(): boolean;
    set labelBold(value: boolean);
    get labelFont(): string;
    set labelFont(value: string);
    get labelAlign(): string;
    set labelAlign(value: string);
    get labelVAlign(): string;
    set labelVAlign(value: string);
    get clickHandler(): Handler;
    set clickHandler(value: Handler);
    get text(): Text;
    set text(value: Text);
    get sizeGrid(): string;
    set sizeGrid(value: string);
    _setWidth(value: number): void;
    _setHeight(value: number): void;
    set_dataSource(value: any): void;
    get iconOffset(): string;
    set iconOffset(value: string);
    protected _setStateChanged(): void;
}
