import { UIComponent } from "./UIComponent";
import { Label } from "./Label";
import { Image } from "./Image";
import { Button } from "./Button";
import { Event } from "../events/Event";
import { Point } from "../maths/Point";
import { Handler } from "../utils/Handler";
export declare class Slider extends UIComponent {
    static label: Label;
    changeHandler: Handler;
    isVertical: boolean;
    showLabel: boolean;
    protected _allowClickBack: boolean;
    protected _max: number;
    protected _min: number;
    protected _tick: number;
    protected _value: number;
    protected _skin: string;
    protected _bg: Image;
    protected _progress: Image;
    protected _bar: Button;
    protected _tx: number;
    protected _ty: number;
    protected _maxMove: number;
    protected _globalSacle: Point;
    constructor(skin?: string);
    destroy(destroyChild?: boolean): void;
    protected createChildren(): void;
    protected initialize(): void;
    protected onBarMouseDown(e: Event): void;
    protected showValueText(): void;
    protected hideValueText(): void;
    private mouseUp;
    private mouseMove;
    protected sendChangeEvent(type?: string): void;
    get skin(): string;
    set skin(value: string);
    _setSkin(url: string): Promise<void>;
    protected _skinLoaded(): void;
    protected setBarPoint(): void;
    protected measureWidth(): number;
    protected measureHeight(): number;
    protected _sizeChanged(): void;
    get sizeGrid(): string;
    set sizeGrid(value: string);
    setSlider(min: number, max: number, value: number): void;
    get tick(): number;
    set tick(value: number);
    changeValue(): void;
    get max(): number;
    set max(value: number);
    get min(): number;
    set min(value: number);
    get value(): number;
    set value(num: number);
    get allowClickBack(): boolean;
    set allowClickBack(value: boolean);
    protected onBgMouseDown(e: Event): void;
    set_dataSource(value: any): void;
    get bar(): Button;
}
