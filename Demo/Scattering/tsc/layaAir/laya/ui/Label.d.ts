import { Text } from "../display/Text";
import { UIComponent } from "./UIComponent";
export declare type LabelFitContent = "no" | "yes" | "height";
export declare class Label extends UIComponent {
    protected _tf: Text;
    protected _fitContent: LabelFitContent;
    constructor(text?: string);
    protected createChildren(): void;
    protected _onPostLayout(): void;
    get text(): string;
    set text(value: string);
    get wordWrap(): boolean;
    set wordWrap(value: boolean);
    get color(): string;
    set color(value: string);
    get font(): string;
    set font(value: string);
    get align(): string;
    set align(value: string);
    get valign(): string;
    set valign(value: string);
    get bold(): boolean;
    set bold(value: boolean);
    get italic(): boolean;
    set italic(value: boolean);
    get leading(): number;
    set leading(value: number);
    get fontSize(): number;
    set fontSize(value: number);
    get padding(): string;
    set padding(value: string);
    get bgColor(): string;
    set bgColor(value: string);
    get borderColor(): string;
    set borderColor(value: string);
    get stroke(): number;
    set stroke(value: number);
    get strokeColor(): string;
    set strokeColor(value: string);
    get html(): boolean;
    set html(value: boolean);
    get ubb(): boolean;
    set ubb(value: boolean);
    get maxWidth(): number;
    set maxWidth(value: number);
    get fitContent(): LabelFitContent;
    set fitContent(value: LabelFitContent);
    get textField(): Text;
    protected measureWidth(): number;
    protected measureHeight(): number;
    get_width(): number;
    set_width(value: number): void;
    _setWidth(value: number): void;
    get_height(): number;
    set_height(value: number): void;
    _setHeight(value: number): void;
    set_dataSource(value: any): void;
    get overflow(): string;
    set overflow(value: string);
    get underline(): boolean;
    set underline(value: boolean);
    get underlineColor(): string;
    set underlineColor(value: string);
    get ignoreLang(): boolean;
    set ignoreLang(value: boolean);
    get templateVars(): Record<string, any>;
    set templateVars(value: Record<string, any> | boolean);
    setVar(name: string, value: any): Label;
}
