import { UIComponent } from "./UIComponent";
import { Button } from "./Button";
import { List } from "./List";
import { ScrollType } from "./Styles";
import { VScrollBar } from "./VScrollBar";
import { Event } from "../events/Event";
import { Handler } from "../utils/Handler";
export declare class ComboBox extends UIComponent {
    protected _visibleNum: number;
    protected _button: Button;
    protected _list: List;
    protected _isOpen: boolean;
    protected _itemColors: string[];
    protected _itemPadding: number[];
    protected _itemSize: number;
    protected _labels: string[];
    protected _defaultLabel: string;
    protected _selectedIndex: number;
    protected _selectHandler: Handler;
    protected _itemHeight: number;
    protected _listHeight: number;
    protected _listChanged: boolean;
    protected _itemChanged: boolean;
    protected _scrollBarSkin: string;
    protected _scrollType: ScrollType;
    protected _isCustomList: boolean;
    itemRender: any;
    constructor(skin?: string, labels?: string);
    destroy(destroyChild?: boolean): void;
    protected createChildren(): void;
    private _createList;
    private _setListEvent;
    private onListDown;
    private onScrollBarDown;
    private onButtonMouseDown;
    get skin(): string;
    set skin(value: string);
    protected measureWidth(): number;
    protected measureHeight(): number;
    protected changeList(): void;
    protected onlistItemMouse(e: Event, index: number): void;
    private switchTo;
    protected changeOpen(): void;
    _setWidth(value: number): void;
    get itemPadding(): string;
    set itemPadding(value: string);
    _setHeight(value: number): void;
    get labels(): string;
    set labels(value: string);
    protected changeItem(): void;
    get selectedIndex(): number;
    set selectedIndex(value: number);
    private changeSelected;
    get defaultLabel(): string;
    set defaultLabel(value: string);
    get selectHandler(): Handler;
    set selectHandler(value: Handler);
    get selectedLabel(): string;
    set selectedLabel(value: string);
    get visibleNum(): number;
    set visibleNum(value: number);
    get itemHeight(): number;
    set itemHeight(value: number);
    get itemColors(): string;
    set itemColors(value: string);
    get itemSize(): number;
    set itemSize(value: number);
    get isOpen(): boolean;
    set isOpen(value: boolean);
    private _onStageMouseWheel;
    protected removeList(e: Event): void;
    get scrollType(): ScrollType;
    set scrollType(value: ScrollType);
    get scrollBarSkin(): string;
    set scrollBarSkin(value: string);
    get sizeGrid(): string;
    set sizeGrid(value: string);
    get scrollBar(): VScrollBar;
    get button(): Button;
    get list(): List;
    set list(value: List);
    set_dataSource(value: any): void;
    get labelColors(): string;
    set labelColors(value: string);
    get labelPadding(): string;
    set labelPadding(value: string);
    get labelSize(): number;
    set labelSize(value: number);
    get labelBold(): boolean;
    set labelBold(value: boolean);
    get labelFont(): string;
    set labelFont(value: string);
    get stateNum(): number;
    set stateNum(value: number);
}
