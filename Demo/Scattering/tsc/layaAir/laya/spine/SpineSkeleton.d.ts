import { Sprite } from "../display/Sprite";
import { SpineSkeletonRenderer } from "./SpineSkeletonRenderer";
import { SpineTemplet } from "./SpineTemplet";
export declare class SpineSkeleton extends Sprite {
    static readonly STOPPED: number;
    static readonly PAUSED: number;
    static readonly PLAYING: number;
    protected _source: string;
    protected _templet: SpineTemplet;
    protected _timeKeeper: spine.TimeKeeper;
    protected _skeleton: spine.Skeleton;
    protected _state: spine.AnimationState;
    protected _stateData: spine.AnimationStateData;
    protected _currentPlayTime: number;
    protected _renerer: SpineSkeletonRenderer;
    private _playbackRate;
    private trackIndex;
    private _skinName;
    private _animationName;
    private _loop;
    constructor();
    get source(): string;
    set source(value: string);
    get skinName(): string;
    set skinName(value: string);
    get animationName(): string;
    set animationName(value: string);
    get loop(): boolean;
    set loop(value: boolean);
    get templet(): SpineTemplet;
    set templet(value: SpineTemplet);
    set currentTime(value: number);
    get playState(): number;
    protected init(templet: SpineTemplet): void;
    play(nameOrIndex: any, loop: boolean, force?: boolean, start?: number, end?: number, freshSkin?: boolean, playAudio?: boolean): void;
    private _update;
    getAnimNum(): number;
    getAniNameByIndex(index: number): string;
    getSlotByName(slotName: string): spine.Slot;
    playbackRate(value: number): void;
    showSkinByName(name: string): void;
    showSkinByIndex(skinIndex: number): void;
    stop(): void;
    paused(): void;
    resume(): void;
    private reset;
    destroy(destroyChild?: boolean): void;
    addAnimation(nameOrIndex: any, loop?: boolean, delay?: number): void;
    setMix(fromNameOrIndex: any, toNameOrIndex: any, duration: number): void;
    getBoneByName(boneName: string): spine.Bone;
    getSkeleton(): spine.Skeleton;
    setSlotAttachment(slotName: string, attachmentName: string): void;
}
