import { FilterMode } from "../RenderEngine/RenderEnum/FilterMode";
import { TextureCompareMode } from "../RenderEngine/RenderEnum/TextureCompareMode";
import { TextureDimension } from "../RenderEngine/RenderEnum/TextureDimension";
import { TextureFormat } from "../RenderEngine/RenderEnum/TextureFormat";
import { WrapMode } from "../RenderEngine/RenderEnum/WrapMode";
import { Resource } from "./Resource";
export declare class BaseTexture extends Resource {
    protected _width: number;
    protected _height: number;
    get width(): number;
    set width(width: number);
    get height(): number;
    set height(height: number);
    protected _dimension: TextureDimension;
    get dimension(): TextureDimension;
    protected _format: TextureFormat;
    get format(): TextureFormat;
    get mipmap(): boolean;
    get mipmapCount(): number;
    get anisoLevel(): number;
    set anisoLevel(value: number);
    get filterMode(): FilterMode;
    set filterMode(value: FilterMode);
    get wrapModeU(): WrapMode;
    set wrapModeU(value: WrapMode);
    get wrapModeV(): WrapMode;
    set wrapModeV(value: WrapMode);
    get wrapModeW(): WrapMode;
    set wrapModeW(value: WrapMode);
    get compareMode(): TextureCompareMode;
    set compareMode(value: TextureCompareMode);
    get gammaCorrection(): number;
    set baseMipmapLevel(value: number);
    get baseMipmapLevel(): number;
    set maxMipmapLevel(value: number);
    get maxMipmapLevel(): number;
    get gammaSpace(): boolean;
    constructor(width: number, height: number, format: number);
    gpuCompressFormat(): boolean;
    get defaultTexture(): BaseTexture;
    protected _disposeResource(): void;
}
