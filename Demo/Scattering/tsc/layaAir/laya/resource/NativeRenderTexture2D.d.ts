import { BaseTexture } from "./BaseTexture";
import { InternalRenderTarget } from "../RenderEngine/RenderInterface/InternalRenderTarget";
import { IRenderTarget } from "../RenderEngine/RenderInterface/IRenderTarget";
export declare class NativeRenderTexture2D extends BaseTexture implements IRenderTarget {
    private static _currentActive;
    private static _clearColor;
    private _lastRT;
    private _lastWidth;
    private _lastHeight;
    private static rtStack;
    static defuv: any[];
    static flipyuv: any[];
    static get currentActive(): NativeRenderTexture2D;
    private _depthStencilFormat;
    private _colorFormat;
    get depthStencilFormat(): number;
    get defaultTexture(): BaseTexture;
    getIsReady(): boolean;
    get sourceWidth(): number;
    get sourceHeight(): number;
    get offsetX(): number;
    get offsetY(): number;
    depthStencilTexture: BaseTexture;
    _renderTarget: InternalRenderTarget;
    _isCameraTarget: boolean;
    private _nativeObj;
    constructor(width: number, height: number, format?: number, depthStencilFormat?: number, create?: boolean);
    get isCube(): boolean;
    get samples(): number;
    get generateMipmap(): boolean;
    _start(): void;
    _end(): void;
    _create(): void;
    static pushRT(): void;
    static popRT(): void;
    start(): void;
    end(): void;
    restore(): void;
    clear(r?: number, g?: number, b?: number, a?: number): void;
    getData(x: number, y: number, width: number, height: number): ArrayBufferView;
    recycle(): void;
}
