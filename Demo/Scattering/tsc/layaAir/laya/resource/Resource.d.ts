import { EventDispatcher } from "../events/EventDispatcher";
export declare class Resource extends EventDispatcher {
    static _idResourcesMap: any;
    private static _cpuMemory;
    private static _gpuMemory;
    static DEBUG: boolean;
    static get cpuMemory(): number;
    static get gpuMemory(): number;
    static destroyUnusedResources(): void;
    private static _destroyUnusedResources;
    private _cpuMemory;
    private _gpuMemory;
    _id: number;
    protected _destroyed?: boolean;
    protected _referenceCount: number;
    protected _obsolute: boolean;
    lock?: boolean;
    name?: string;
    url: string;
    uuid: string;
    destroyedImmediately: boolean;
    get id(): number;
    get cpuMemory(): number;
    get gpuMemory(): number;
    get destroyed(): boolean;
    get obsolute(): boolean;
    set obsolute(value: boolean);
    get referenceCount(): number;
    protected constructor(managed?: boolean);
    _setCPUMemory(value: number): void;
    _setGPUMemory(value: number): void;
    _setCreateURL(url: string, uuid?: string): void;
    isCreateFromURL(url: string): boolean;
    _addReference(count?: number): void;
    _removeReference(count?: number): void;
    _clearReference(): void;
    protected _recoverResource(): void;
    protected _disposeResource(): void;
    protected _activeResource(): void;
    destroy(): void;
}
